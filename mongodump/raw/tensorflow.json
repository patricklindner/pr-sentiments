{"_id":1261122053,"title":"r2.12 cherry-pick: [INTEL oneDNN][Bug Fix] Add index-validity check for min-max tensors for quantized oneDNN ops and related tests #59581","body":"[INTEL oneDNN][Bug Fix] Add index-validity check for min-max tensors for quantized oneDNN ops and related tests #59581","created_at":"2023-03-02T21:46:30Z","closed_at":"2023-03-02T22:11:17Z","merged_at":"2023-03-02T22:11:17Z","user_id":104534215,"sentiment":{"polarity":-0.375,"subjectivity":0.7}}
{"_id":1260923980,"title":"r2.12 cherry-pick: dfe7acf2207 \"Add tag filters to exclude tests tagged no_oss_py3x\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/dfe7acf2207708d831ceb1acb6d16b7b096d8383","created_at":"2023-03-02T18:59:45Z","closed_at":"2023-03-02T19:26:19Z","merged_at":"2023-03-02T19:26:19Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1260759300,"title":"[Linaro:ARM_CI] Fix for patchelf permission denied","body":"Ensure the so files are writable by the use of chmod","created_at":"2023-03-02T16:45:06Z","closed_at":"2023-03-02T21:42:08Z","merged_at":"2023-03-02T21:42:08Z","user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1260699790,"title":"[Linaro:ARM_CI] Fix permissions problems on installing Python pkgs","body":"Ensure build user can install and uninstall Python packages not using --user as that would not be seen by TensorFlow build","created_at":"2023-03-02T16:06:47Z","closed_at":"2023-03-02T22:34:50Z","merged_at":"2023-03-02T22:34:50Z","user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1260691489,"title":"r2.12 cherry-pick: 1d02e910b9e \"[Linaro:ARM_CI] Revert adding install of tensorflow-io\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/1d02e910b9e483e64da2323eae2e1b047edfbd82","created_at":"2023-03-02T16:01:07Z","closed_at":"2023-03-02T19:25:42Z","merged_at":"2023-03-02T19:25:42Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1260672497,"title":"r2.12 cherry-pick: 2b0a8a210a1 \"[Linaro:ARM_CI] Fix use of updated protobuf\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/2b0a8a210a1e14719f17ec62cbbc5b5ef9cf8a10","created_at":"2023-03-02T15:47:45Z","closed_at":"2023-03-02T19:24:32Z","merged_at":"2023-03-02T19:24:32Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1260244722,"title":"[Linaro:ARM_CI] Fix bad interpreter from update_version.py","body":"update_version.py expects there to be a valid Python interpreter that can be used as /usr/bin/python so ensure that this path exists as a link to a valid binary","created_at":"2023-03-02T10:49:07Z","closed_at":"2023-03-03T01:51:41Z","merged_at":"2023-03-03T01:51:41Z","user_id":10442001,"sentiment":{"polarity":-0.6999999999999998,"subjectivity":0.6666666666666666}}
{"_id":1260202229,"title":"NOT_FOR_MERGE Test build","body":"Just a means to test possible fixes","created_at":"2023-03-02T10:16:17Z","closed_at":"2023-03-02T17:04:03Z","merged_at":null,"user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1259729483,"title":"r2.12 cherry-pick: 78766dfd121 \"[Linaro:ARM_CI] Use the provided group name for chown\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/78766dfd121914f7f75b384f7a234e2012c979d0","created_at":"2023-03-02T02:08:43Z","closed_at":"2023-03-02T14:34:26Z","merged_at":"2023-03-02T14:34:25Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1259631672,"title":"[Linaro:ARM_CI] Use the provided group name for chown","body":"Do not assume that the group name in use will be the same as the username so explicitly refer to the provided build user group for setting the group on chown rather than assume it will be the same as the username.","created_at":"2023-03-01T23:56:36Z","closed_at":"2023-03-02T01:45:57Z","merged_at":"2023-03-02T01:45:57Z","user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1259479776,"title":"Update version numbers for TensorFlow 2.12.0-rc1","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 12 -> 12\nPatch: 0 -> 0\n\nNo lingering old version strings \"2.12.0-rc0\" found in source directory \n\"tensorflow/\". Good.\nWARNING: Below are potentially instances of lingering old version string \n\"2.12.0rc0\" in source directory \"tensorflow/\" that are not updated by this \nscript. Please check them manually!\ntensorflow/tools/pip_package/setup.py:130:2.12.0rc0\ntensorflow/tools/pip_package/setup.py:132:2.12.0rc0\n```","created_at":"2023-03-01T21:45:09Z","closed_at":"2023-03-01T23:03:47Z","merged_at":"2023-03-01T23:03:47Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1259465725,"title":"r2.12 cherry-pick: 45d39e3879d \"[Linaro:ARM_CI] Switch to using Docker container with Dual ABI\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/45d39e3879d8304b0c7962e0b3ef7ded6e6ad581","created_at":"2023-03-01T21:29:57Z","closed_at":"2023-03-02T02:03:21Z","merged_at":"2023-03-02T02:03:20Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1257976426,"title":"r2.12 cherry-pick: Merge pull request https://github.com/tensorflow/tensorflow/pull/59581 from Intel-tensorflow:security_fix_quantiz","body":"[xla:gpu] Serialize autotuning on GPU devices\r\nMerge pull request https://github.com/tensorflow/tensorflow/pull/59581 from Intel-tensorflow:security_fix_quantiz\r\n","created_at":"2023-03-01T00:29:07Z","closed_at":"2023-03-01T19:14:08Z","merged_at":"2023-03-01T19:14:08Z","user_id":104534215,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1257923947,"title":"r2.12 cherry-pick: 0ff9614d8a5 \"Update curl to 7.88.0\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/0ff9614","created_at":"2023-02-28T23:11:16Z","closed_at":"2023-03-01T01:23:45Z","merged_at":"2023-03-01T01:23:45Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1257913336,"title":"r2.12 cherry-pick: c7c3dbe\"Prevent integer overflow in tensor byte size computation\".","body":"Prevent integer overflow in tensor byte size computation. https://github.com/tensorflow/tensorflow/commit/c7c3dbe1ca35cbffe0749181734131875863cd82.","created_at":"2023-02-28T22:59:54Z","closed_at":"2023-02-28T23:54:08Z","merged_at":null,"user_id":104534215,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1257751839,"title":"r2.12 cherry-pick: 30bf24f83ee \"Fix bug where AAR file wasn't including headers from lite/core/c/\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/30bf24f","created_at":"2023-02-28T20:29:06Z","closed_at":"2023-03-01T01:24:17Z","merged_at":"2023-03-01T01:24:17Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1257732111,"title":"r2.12 cherry-pick: f6db67b1f54 \"Fix segmentation fault when running with VLOG level >= 1. Ensure `options.graph` isn't null before dereferencing it.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/f6db67b","created_at":"2023-02-28T20:12:57Z","closed_at":"2023-03-01T01:24:42Z","merged_at":"2023-03-01T01:24:41Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1257696098,"title":"r2.12 cherry-pick: 478ea54bcf3 \"Replace assert with eigen_assert.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/478ea54","created_at":"2023-02-28T19:44:03Z","closed_at":"2023-03-01T01:24:59Z","merged_at":"2023-03-01T01:24:59Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1256203436,"title":"Add new string ops fuzzers and remove old ones","body":"Adds new string ops fuzzers using the FuzzTest fuzzer-style, and removes the existing fuzzers for string split operations.\r\n\r\nThe current string split fuzzer are not hitting the logic of the string split operations, because the first argument they pass to the operation is set to be a string rather than a vector of strings. Consequently, the fuzzers are running into some blockers early in the code hindering the fuzzers in exploring the actual logic they target: https://storage.googleapis.com/oss-fuzz-coverage/tensorflow/reports/20230225/linux/proc/self/cwd/tensorflow/core/kernels/string_split_op.cc.html#L177","created_at":"2023-02-27T21:54:54Z","closed_at":"2023-03-01T19:58:25Z","merged_at":"2023-03-01T19:58:25Z","user_id":657617,"sentiment":{"polarity":0.11818181818181817,"subjectivity":0.32727272727272727}}
{"_id":1255330291,"title":"[Linaro:ARM_CI] Switch to using Docker container with Dual ABI","body":"Use the Docker container with the toolset built with CXX11 Dual ABI enabled in it for AARCH64 builds to bring them into line with other CPU architectures.","created_at":"2023-02-27T11:46:04Z","closed_at":"2023-03-01T21:15:15Z","merged_at":"2023-03-01T21:15:15Z","user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1255296143,"title":"Update android audio classifier demo URL","body":null,"created_at":"2023-02-27T11:18:02Z","closed_at":"2023-03-01T09:54:55Z","merged_at":null,"user_id":30619249,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1255149034,"title":"Cache the result of cuModuleGetFunction","body":"This function has measurable overhead due to locks inside the GPU driver. Caching the result was observed to improve perf by up to 15% in some models.\r\n\r\nNote that we believe TF used to cache the value, so this is considered to be a regression fix.\r\n\r\ncc @nluehr @pjannaty ","created_at":"2023-02-27T09:36:40Z","closed_at":"2023-03-01T15:29:48Z","merged_at":"2023-03-01T15:29:48Z","user_id":3979096,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1254472260,"title":"Create LSTMBlockcell","body":null,"created_at":"2023-02-26T12:12:54Z","closed_at":"2023-02-26T15:32:04Z","merged_at":null,"user_id":76612327,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1254469380,"title":"Create LSTMBlockcell","body":null,"created_at":"2023-02-26T12:02:45Z","closed_at":"2023-02-26T15:31:12Z","merged_at":null,"user_id":76612327,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1254196056,"title":"add end-to-end fuzzer","body":"This fuzzer loads an arbitrary model and runs a simple inference on it. This fuzzer will be picked up and run by OSS-Fuzz.","created_at":"2023-02-25T12:05:12Z","closed_at":"2023-03-02T18:30:34Z","merged_at":"2023-03-02T18:30:34Z","user_id":657617,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1254025384,"title":"Bias Fusion for FP8 GEMMs in XLA","body":"Enables the fusion of the addition of a matrix bias for FP8 GEMMs.","created_at":"2023-02-25T01:52:20Z","closed_at":"2023-02-28T22:40:58Z","merged_at":"2023-02-28T22:40:58Z","user_id":80296164,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1253994866,"title":"Update the issue template for security vulnerability issue reports","body":"To encourage users to file security related issue using [Google Bug Hunters reporting form](https://g.co/vulnz).","created_at":"2023-02-25T00:51:18Z","closed_at":"2023-02-27T19:02:08Z","merged_at":"2023-02-27T19:02:08Z","user_id":42785357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1253759366,"title":"[tosa] improved legalization for leaky_relu","body":"using max/min instead of select\r\n\r\nSigned-off-by: Tai Ly [tai.ly@arm.com](mailto:tai.ly@arm.com)\r\nChange-Id: I6e3929873ea2b1f12fe635b4e953c14ed5bdf526","created_at":"2023-02-24T19:37:49Z","closed_at":"2023-02-24T19:42:27Z","merged_at":null,"user_id":6504206,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1252795624,"title":"Update devel.requirements.txt","body":"Changed protobuf ~= 3.20.1 to protobuf >= 3.20.3  since https://github.com/tensorflow/tensorflow/blob/20e0beaeebc1bd96c8eca40bed0e7b0d065d8e0b/tensorflow/tools/pip_package/setup.py#L100 has protobuf >= 3.20.3 in it and both versions should match.  This fixes https://github.com/tensorflow/tensorflow/issues/59774","created_at":"2023-02-24T07:59:46Z","closed_at":"2023-03-02T19:20:58Z","merged_at":"2023-03-02T19:20:58Z","user_id":98147397,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1252583556,"title":"New fp8 matmul pattern","body":"This PR extends currently supported patterns, \r\nmatmul <- bitcast <- multiply and matmul <- multiply to\r\n\r\nmatmul <- bitcast <- copy <- bitcast <- multiply\r\nmatmul <- bitcast <- copy <- multiply\r\nmatmul <- bitcast <- copy <- reshape <- multiply\r\nmatmul <- copy <- bitcast <- multiply","created_at":"2023-02-24T04:20:20Z","closed_at":"2023-02-24T04:29:11Z","merged_at":null,"user_id":25590028,"sentiment":{"polarity":0.13636363636363635,"subjectivity":0.45454545454545453}}
{"_id":1251840931,"title":"Tf.math.cumsum","body":"At present as per documentation of `tf.math.cumsum` for the argument `input(x)` the supported type is `Tensor`. But it also accepts python list,tuple and numpy arrays also which have registered Tensor conversion function.Even in the code of `tf.math.cumsum` it converts the` input(x)` to a tensor explicitly.\r\n\r\nAlso for the argument `axis` the supported type is `Tensor of int32`.But it accepts also `Python integer` with range `[-rank(x), rank(x))`.\r\n\r\nPlease refer to attached [gist](https://colab.research.google.com/gist/SuryanarayanaY/4a44261fadc8e2a137a99df4e429133c/tf-math-cumsum.ipynb) for the testing on same.\r\n","created_at":"2023-02-23T15:04:09Z","closed_at":"2023-02-23T17:41:48Z","merged_at":null,"user_id":116063290,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1251537890,"title":"fork practice ","body":"@meshmmanuel","created_at":"2023-02-23T11:31:08Z","closed_at":"2023-02-23T15:29:13Z","merged_at":null,"user_id":124670296,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1251425932,"title":"[Linaro:ARM_CI] Skip failing test until it can be resolved","body":"//tensorflow/python/kernel_tests/nn_ops:pooling_ops_test is a known fail","created_at":"2023-02-23T10:09:51Z","closed_at":"2023-02-24T01:36:06Z","merged_at":"2023-02-24T01:36:06Z","user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1250037850,"title":"Fix tensor_or_memref build error without math.h","body":"https://github.com/tensorflow/tensorflow/pull/59536#issuecomment-1439039311\r\n\r\nSince pevious PR has been rolled back, this one adopted reviewer's feedback to fix Mac build error.\r\n\r\nThanks @reedwm for the feedback and suggestion!","created_at":"2023-02-22T12:06:44Z","closed_at":"2023-02-23T19:37:48Z","merged_at":null,"user_id":913790,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1249449995,"title":"VLOG Warnings for FP8 Custom Calls","body":"Creates VLOG warnings when a GEMM directly or indirectly operating on FP8 operands is not pattern matched and rewritten into an FP8 Custom Call.","created_at":"2023-02-22T01:40:50Z","closed_at":"2023-02-27T06:51:44Z","merged_at":"2023-02-27T06:51:44Z","user_id":80296164,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1249264551,"title":"Test5","body":null,"created_at":"2023-02-21T21:07:54Z","closed_at":"2023-02-21T21:08:54Z","merged_at":null,"user_id":108954591,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1249050868,"title":"r2.12 cherry-pick: b016eb2a4a9 \"Add upper bound to `wrapt`.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/b016eb2a4a9d9d95cfa9809ca4af937c8caeee38","created_at":"2023-02-21T17:29:06Z","closed_at":"2023-02-22T17:11:44Z","merged_at":"2023-02-22T17:11:44Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1249015934,"title":"Fix the endianness issue in `//tensorflow/python/framework:tensor_util_test` on s390x","body":"Test case `//tensorflow/python/framework:tensor_util_test` failed on s390x (big-endian arch) because in `testHalf()` function the `tensor_content` data which is used for comparison with the tensor proto string is hard-coded in little-endian format.\r\n\r\nThis PR followed the existing pattern in `testFloatMutateArray()` function to add an endianness check in `testHalf()` function and choose the corresponding `tensor_content` data which is in consistent with the platform endianness.\r\n\r\nThe above mentioned test case will pass on both little-endian and big-endian systems after applying the code change.","created_at":"2023-02-21T16:59:41Z","closed_at":"2023-03-02T11:30:00Z","merged_at":"2023-03-02T11:30:00Z","user_id":78156688,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1248609701,"title":"Fix dtype in code comment in constants_test.cc","body":"The dtype to be changed to F16 from F8 at line number 85 as the function converts F16 to F32.  Merging this closes the issue #59748","created_at":"2023-02-21T11:58:18Z","closed_at":"2023-02-27T09:18:13Z","merged_at":"2023-02-27T09:18:13Z","user_id":118897289,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1248600648,"title":"adding index.html","body":null,"created_at":"2023-02-21T11:51:38Z","closed_at":"2023-02-26T00:22:03Z","merged_at":null,"user_id":104270684,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1248506479,"title":"Update image_ops_impl.convert_image_dtype.py","body":"Images that are represented using floating point values are expected to have values in the range [0,1) for the function `convert_image_dtype()`.  But this is not scaled when the case `image `argument is of `float ` and `dtype` argument is `int` arises.  Hence modified the code to bring the input values within [0,1). This also shall fix the issue #58749 .","created_at":"2023-02-21T10:34:59Z","closed_at":"2023-02-24T16:19:00Z","merged_at":null,"user_id":116063290,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1248433573,"title":"Added a new file","body":null,"created_at":"2023-02-21T09:40:06Z","closed_at":"2023-02-22T08:14:18Z","merged_at":null,"user_id":122517646,"sentiment":{"polarity":0.13636363636363635,"subjectivity":0.45454545454545453}}
{"_id":1247658689,"title":"Update audio_classification.ipynb","body":"Corrected Typographical Error","created_at":"2023-02-20T17:56:02Z","closed_at":"2023-02-21T10:40:01Z","merged_at":null,"user_id":81853910,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1247411830,"title":"Add OSSRank Badge","body":"Tensorflow is a top 1% project on OSSRank, and this badge shows Tensorflow's current rank in the world of open source. I hope you accept the PR, love the project :)\r\n","created_at":"2023-02-20T14:32:55Z","closed_at":"2023-02-22T17:51:04Z","merged_at":"2023-02-22T17:51:04Z","user_id":4283,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1246717449,"title":"[C API][Fix] add recursively handling for AddN variant","body":"When the input of AddN is nested variant(eg, nested TensorList), for current implementation, `TF_AddNVariant` will leave a variant tensor for `binary_add_func` used by vendor extension, which cannot be handled in extension as variant class is opaque for extension. So recursively handling for variant is needed, and `TF_ZerosLikeVariant` did same work, code [link](https://github.com/tensorflow/tensorflow/blob/e35b2853331f3caed7612f2ae0596fd2fe1353f3/tensorflow/c/kernels_experimental.cc#L529) for `TF_ZerosLikeVariant`.","created_at":"2023-02-20T05:52:03Z","closed_at":"2023-02-21T12:48:17Z","merged_at":null,"user_id":52769182,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1246436157,"title":"Update README.md","body":null,"created_at":"2023-02-19T21:38:29Z","closed_at":"2023-02-21T02:43:50Z","merged_at":null,"user_id":107362507,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1244423159,"title":"[NVIDIA XLA] Add SMs 87-90 to llvm gpu backend supported_versions","body":"These are now [supported by llvm](https://github.com/llvm/llvm-project/commit/9a01cca66036087e4da37c221a4b911818910524).","created_at":"2023-02-16T23:07:50Z","closed_at":"2023-02-17T19:36:23Z","merged_at":"2023-02-17T19:36:23Z","user_id":1873655,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1244261811,"title":"[NVIDIA TF] Drop support for CUDA 9.x and earlier","body":"Simplify conditional compilation by assuming CUDA >= 10.0.","created_at":"2023-02-16T20:24:24Z","closed_at":"2023-02-28T14:58:53Z","merged_at":"2023-02-28T14:58:53Z","user_id":1873655,"sentiment":{"polarity":0.0,"subjectivity":0.5}}
{"_id":1244167786,"title":"r2.12 cherry-pick: 1da3e1e7209 \"Update CUDA PyPI tag.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/1da3e1e7209e488b84a75f8e57df584c0f44efe8","created_at":"2023-02-16T18:56:00Z","closed_at":"2023-02-16T20:00:10Z","merged_at":"2023-02-16T20:00:10Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1242915783,"title":"Add checking on the quantized limits for tosa.clamp","body":"The original request: https://github.com/tensorflow/tensorflow/pull/58288#discussion_r1013360726\r\n\r\nThis is the 1st patch for review. I will cleanup everything else after the 1st round of review. \r\n\r\nJerry ","created_at":"2023-02-16T00:18:06Z","closed_at":"2023-02-24T23:24:47Z","merged_at":"2023-02-24T23:24:47Z","user_id":24451859,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1242805948,"title":"[TF-TRT]  reviewers test PR","body":"[TF-TRT]  reviewers test base on title. DO NOT MERGE(Test change only)","created_at":"2023-02-15T22:28:51Z","closed_at":"2023-02-15T22:29:00Z","merged_at":null,"user_id":73069040,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1242718076,"title":"Fix GRUCellBlockOp message for invalid rank of x","body":"The validation checks that `x` is a matrix, so rank must be 2. ff45913 fixed the crash in https://github.com/tensorflow/tensorflow/issues/58261 but left this typo in an exception message.\r\n\r\nFixes https://github.com/tensorflow/tensorflow/issues/58261\r\n\r\n@mihaimaruseac ","created_at":"2023-02-15T21:08:35Z","closed_at":"2023-02-16T19:25:16Z","merged_at":"2023-02-16T19:25:16Z","user_id":30487349,"sentiment":{"polarity":-0.8,"subjectivity":0.9}}
{"_id":1242610205,"title":"[TF:TRT]  Sample change","body":"[TF:TRT] Test changes for the title issue assignment from google-ml-buttler bot.","created_at":"2023-02-15T19:44:12Z","closed_at":"2023-02-15T19:44:52Z","merged_at":null,"user_id":73069040,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1242148499,"title":"Update curl to 7.88.0","body":"This PR update curl to 7.88.0 for fixing the following vuls in previous 7.87.0:\r\n\r\nCVE-2023-23916: HTTP multi-header compression denial of service\t2023-02-15\t7.57.0-7.87.0\r\nCVE-2023-23915: HSTS amnesia with --parallel\t2023-02-15\t7.77.0-7.87.0\r\nCVE-2023-23914: HSTS ignored on multiple requests\t2023-02-15\t7.77.0-7.87.0\r\n\r\nReference: https://curl.se/docs/security.html","created_at":"2023-02-15T14:09:36Z","closed_at":"2023-02-16T00:18:08Z","merged_at":"2023-02-16T00:18:08Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1241724219,"title":"features/add-example","body":"@tensorflow\r\n@meshmmanuel","created_at":"2023-02-15T08:45:56Z","closed_at":"2023-02-16T04:47:29Z","merged_at":null,"user_id":124673376,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1241326944,"title":"Fix broken relnotes.","body":"There should be only one level 1 heading (`#` / `<h1>`) in each release section and the rest should be L2 (`##`/`<h2>`) but when the stub got created at the last release time it got created badly and review was nonexistent so we see the breakage ~3 months after","created_at":"2023-02-14T23:49:12Z","closed_at":"2023-02-15T15:52:45Z","merged_at":"2023-02-15T15:52:45Z","user_id":323199,"sentiment":{"polarity":-0.4,"subjectivity":0.4}}
{"_id":1241262962,"title":"Povtesting","body":null,"created_at":"2023-02-14T22:30:59Z","closed_at":"2023-02-14T22:31:29Z","merged_at":null,"user_id":108954591,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1241192710,"title":"Feature/add examples","body":"For me to get to the stage i read about the article and try to understand about clone a forked repository before i make changes from the example, now commit and push it on my github account.\r\nkudos to you on this learning @opencv @meshmmanuel","created_at":"2023-02-14T21:17:24Z","closed_at":"2023-02-16T05:21:45Z","merged_at":null,"user_id":114763097,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1241096809,"title":"[tf-trt] Test PR","body":"This is TEST PR to check the PR reviewers based on the [TF-TRT] [TFTRT] [TF:TRT] tags in the title, all case insensitive.","created_at":"2023-02-14T19:52:06Z","closed_at":"2023-02-14T19:52:14Z","merged_at":null,"user_id":73069040,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1240921013,"title":"Update Release.MD file","body":"Moving `tf.SavedModel` to Major Features and Improvements.","created_at":"2023-02-14T17:13:49Z","closed_at":"2023-02-15T15:50:25Z","merged_at":"2023-02-15T15:50:25Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1240289934,"title":"[Linaro:Neon] For Neon nr must be 4","body":"Ensure the expected value of nr is set for Neon optimised code\r\n\r\nFixes #59680 ","created_at":"2023-02-14T09:43:15Z","closed_at":"2023-02-20T18:46:11Z","merged_at":"2023-02-20T18:46:11Z","user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1239918334,"title":"Fix debug build failure in math_approximation.cc due to 'isnan' was not declared","body":"Hi all,\r\n\r\nThe debug build failed.\r\n```\r\ntensorflow/compiler/xla/mlir/math/transforms/math_approximation.cc: In function 'mlir::Value xla::{anonymous}::ClampWithNormals(mlir::ImplicitLocOpBuilder&, const llvm::SmallVector<long int, 2>&, mlir::Value, float, float)':\r\ntensorflow/compiler/xla/mlir/math/transforms/math_approximation.cc:131:11: error: 'isnan' was not declared in this scope; did you mean 'std::isnan'?\r\n  131 |   assert(!isnan(lower_bound));\r\n      |           ^~~~~\r\nIn file included from external/llvm-project/llvm/include/llvm/Support/MathExtras.h:20,\r\n                 from external/llvm-project/llvm/include/llvm/Support/Alignment.h:24,\r\n                 from external/llvm-project/llvm/include/llvm/Support/Allocator.h:21,\r\n                 from external/llvm-project/mlir/include/mlir/Support/TypeID.h:21,\r\n                 from external/llvm-project/mlir/include/mlir/IR/MLIRContext.h:13,\r\n                 from external/llvm-project/mlir/include/mlir/IR/DialectRegistry.h:16,\r\n                 from external/llvm-project/mlir/include/mlir/IR/Dialect.h:16,\r\n                 from external/llvm-project/mlir/include/mlir/Dialect/Arith/IR/Arith.h:12,\r\n                 from tensorflow/compiler/xla/mlir/math/transforms/math_approximation.cc:20:\r\n/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/cmath:632:5: note: 'std::isnan' declared here\r\n  632 |     isnan(_Tp __x)\r\n      |     ^~~~~\r\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\r\n```\r\n\r\nLet's fix it.\r\n\r\nThanks.\r\nBest regards,\r\nJie","created_at":"2023-02-14T02:56:56Z","closed_at":"2023-02-15T11:14:13Z","merged_at":"2023-02-15T11:14:13Z","user_id":19923746,"sentiment":{"polarity":-0.22083333333333335,"subjectivity":0.3375}}
{"_id":1239671287,"title":"[NVIDIA TF] Enable GPU BF16 Relu unconditionally","body":"Registers bf16 relu gpu kernels even when mlir generated kernels are enabled. cc @reedwm \r\n\r\nWe can revert this when MLIR generated bf16 is available in the future. FYI @kushanam ","created_at":"2023-02-13T21:49:29Z","closed_at":"2023-02-14T16:06:34Z","merged_at":"2023-02-14T16:06:34Z","user_id":12981474,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1239232005,"title":"Bump NCCL version to v2.16.5, which is the latest release.","body":null,"created_at":"2023-02-13T15:57:46Z","closed_at":"2023-02-14T16:57:20Z","merged_at":"2023-02-14T16:57:19Z","user_id":348932,"sentiment":{"polarity":0.5,"subjectivity":0.9}}
{"_id":1239149682,"title":"[Linaro:ARM_CI] Use IS_NIGHTLY to determine which tensorboard to install","body":"Only install tb-nightly on nightly builds otherwise tensorboard, this keeps the build and the test consistent using the same package","created_at":"2023-02-13T15:06:50Z","closed_at":"2023-02-13T20:47:39Z","merged_at":"2023-02-13T20:47:39Z","user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1238683901,"title":"[Linaro:ARM_CI] Add tag filters to exclude tests tagged no_oss_py3x","body":"Currently there is only 1 relevant test which is tagged no_oss_py38 but it segfaults with Python 3.8 so should be excluded\r\n\r\nFixes #59643 ","created_at":"2023-02-13T09:49:07Z","closed_at":"2023-02-13T20:50:36Z","merged_at":"2023-02-13T20:50:36Z","user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1238252975,"title":"Fix record_input bug when file_parallelism is less than 0","body":"This PR tries to fix #59123 where file_parallelism <0 will\r\ncause a crash in record_input.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2023-02-13T01:59:17Z","closed_at":"2023-02-14T04:24:10Z","merged_at":"2023-02-14T04:24:10Z","user_id":6932348,"sentiment":{"polarity":-0.16666666666666666,"subjectivity":0.06666666666666667}}
{"_id":1238125874,"title":"Fix crash in ragged_cross where the ragged tensor input is invalid","body":"This PR tries to address the issue raised in #59114 where ragged_cross will crash when input is invalid.\r\n    \r\nThis PR fixes #59114.\r\n    \r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2023-02-12T18:09:25Z","closed_at":"2023-02-14T05:38:56Z","merged_at":"2023-02-14T05:38:56Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1238100516,"title":"Softmax fix in Mixed Precision","body":"## Contributors:\r\n* Gaetano Signorelli (https://github.com/gaetano-signorelli)\r\n* Daniele Sirocchi (https://github.com/dsr-lab)\r\n\r\n## Description\r\nWe found a possible bug in the implementation of the *Softmax* activation.\r\nIn particular, we noticed learning issues when we trained a model with Mixed Precision (https://www.tensorflow.org/guide/mixed_precision) coupled with MultiHeadAttention (https://www.tensorflow.org/api_docs/python/tf/keras/layers/MultiHeadAttention).\r\n\r\nThe potential problem is located in the following lines of code (see line 338 in module *advanced_activations.py*):\r\n\r\n```\r\nadder = (1.0 - math_ops.cast(mask, inputs.dtype)) * (\r\n          _large_compatible_negative(inputs.dtype))\r\n\r\n...\r\n\r\ninputs += adder\r\n```\r\n\r\nSpecifically, the method **_large_compatible_negative** returns a value that is **too negatively large** when the data type is float16 (i.e., the mixed precision is enabled), and it causes **overflows** when the *adder* variable is combined with the *inputs*. Therefore, our model was unable to learn during the training procedure.\r\n\r\nOur fix consisted in moving this value away from the overflow edge, scaling it, but without changing the role of the **_large_compatible_negative** method, namely to return a big negative value to mask some parts of the inputs.\r\nAfter this fix, our model trained smoothly, and it was eventually able to learn how to solve our task.\r\n","created_at":"2023-02-12T16:37:04Z","closed_at":"2023-02-15T06:35:38Z","merged_at":null,"user_id":43779403,"sentiment":{"polarity":0.0,"subjectivity":0.25}}
{"_id":1238099603,"title":"Fix MapPeek crash when key is not a scaler","body":"This PR tries to address the issue raised in #58271 where MapPeek\r\nwill crash when key is not a scaler.\r\n\r\nThis PR fixes #58271.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2023-02-12T16:33:00Z","closed_at":"2023-02-17T17:49:46Z","merged_at":"2023-02-17T17:49:46Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":1.0}}
{"_id":1237902325,"title":"Update libpng to 1.6.39","body":"This PR updates libpng to latest 1.6.39 from previous 1.6.38.\r\n\r\nSee below for some issues fixed in 1.6.39:\r\nhttps://github.com/glennrp/libpng/blob/libpng16/CHANGES#L6112-L6122\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2023-02-12T01:04:04Z","closed_at":"2023-02-13T20:15:54Z","merged_at":"2023-02-13T20:15:54Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1237374419,"title":"Update tensorboard tb-nightly dependency, as a follow-up to the 2.12.…","body":"…0 release.\r\n\r\nThe tb-nightly 2.13.0.a* pypi package is now available","created_at":"2023-02-10T23:03:25Z","closed_at":"2023-02-10T23:09:19Z","merged_at":null,"user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1237241581,"title":"[NVIDIA TF] Pass '-m*' options through nvcc to host compiler","body":"Flags -m32 and -m64 are still intercepted and passed to nvcc. Other -m options are appended to the list of flags that nvcc passes through to the host compiler.\r\n\r\nThis is useful for allowing machine-dependent options (such as -march or -mtune) to be applied in compilation units handled by nvcc.","created_at":"2023-02-10T20:46:05Z","closed_at":"2023-03-01T16:05:38Z","merged_at":"2023-03-01T16:05:38Z","user_id":1873655,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1237188777,"title":"r2.12 cherry-pick: 455b00cba42 \"#tf-data Fix memory_cleanup_test\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/455b00c","created_at":"2023-02-10T19:55:17Z","closed_at":"2023-02-10T20:36:31Z","merged_at":"2023-02-10T20:36:31Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1236888063,"title":"[Linaro:ARM_CI] Fix use of updated protobuf","body":"Remove the code to force protobuf < 4 now that protobuf 4 is supported","created_at":"2023-02-10T15:34:16Z","closed_at":"2023-02-10T19:22:14Z","merged_at":"2023-02-10T19:22:14Z","user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1236678598,"title":"[Linaro:ARM_CI] Prevent use of protobuf 4 on python 3.8","body":"protobuf 4 can lead to segmentation faults on Python 3.8 so prevent that from happening by using protobuf 3 but only for Python 3.8\r\n\r\nFixes #59643 ","created_at":"2023-02-10T13:13:55Z","closed_at":"2023-02-14T09:15:56Z","merged_at":null,"user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1236508896,"title":"[Linaro:ARM_CI] Revert adding install of tensorflow-io","body":"Do not install tensorflow-io as an extra package, it is not needed and can cause additional problems and failed to achieve the original intent as it attempted to fix a problem that was actually in the building of the tensorflow-io-gcs-filesystem package for AARCH64","created_at":"2023-02-10T11:02:11Z","closed_at":"2023-02-13T21:03:58Z","merged_at":"2023-02-13T21:03:58Z","user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1236230217,"title":"[DO NOT REVIEW] Introduce multiple streams execution in TensorFlow.","body":"Multiple Stream TensorFlow is developed based on the official [TensorFlow 2.2](https://github.com/tensorflow/tensorflow/tree/r2.2). It leverages the features of modern GPUs to accelerate deep learning training and inference. This Multi-Stream implementation has successfully helped several customers migrate their TF models to the GPU and go online.\r\n\r\nFor more details please visit [README_MultiStream.md](https://github.com/buptzyb/tensorflow/blob/r2.2_multistream/README_MultiStream.md).","created_at":"2023-02-10T07:40:24Z","closed_at":"2023-02-13T23:50:22Z","merged_at":null,"user_id":38978109,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1236020355,"title":"[XLA] Add parser and codegen for more CPU architectures","body":"This PR adds parser and codegen for PowerPC and SystemZ to execution engine in XLA runtime.\r\n\r\nI saw the following error w/o this PR when I ran Jax on s390x\r\n```\r\n$ python tests/core_test.py \r\nTraceback (most recent call last):\r\n  File \"/home/ishizaki/Jax/jax/tests/core_test.py\", line 26, in <module>\r\n    import jax\r\n  File \"/home/ishizaki/Jax/jax/jax/__init__.py\", line 35, in <module>\r\n    from jax import config as _config_module\r\n  File \"/home/ishizaki/Jax/jax/jax/config.py\", line 17, in <module>\r\n    from jax._src.config import config  # noqa: F401\r\n  File \"/home/ishizaki/Jax/jax/jax/_src/config.py\", line 28, in <module>\r\n    from jax._src import lib\r\n  File \"/home/ishizaki/Jax/jax/jax/_src/lib/__init__.py\", line 87, in <module>\r\n    import jaxlib.xla_client as xla_client\r\n  File \"/home/ishizaki/Jax/.venv/lib/python3.10/site-packages/jaxlib/xla_client.py\", line 26, in <module>\r\n    from . import xla_extension as _xla\r\nImportError: /home/ishizaki/Jax/.venv/lib/python3.10/site-packages/jaxlib/xla_extension.so: undefined symbol: LLVMInitializeSystemZAsmParser\r\n```","created_at":"2023-02-10T03:23:23Z","closed_at":"2023-02-15T11:28:53Z","merged_at":"2023-02-15T11:28:53Z","user_id":1315079,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":1235642151,"title":"[oneDNN]Fix to close the file before exiting load_weights()","body":"The method 'load_weights()' which loads all layer weights, either from a TensorFlow or an HDF5 weight file, kept the file open due to which the next action of saving the checkpoints was failing on windows server 2019. The code change will now make sure that the weight files are closed before exiting the 'load_weights()' method.\r\nThe solution fixes https://github.com/tensorflow/tensorflow/issues/58740","created_at":"2023-02-09T19:49:43Z","closed_at":"2023-02-10T08:08:10Z","merged_at":null,"user_id":83710963,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1234539939,"title":"Fix debug build failure in SnapshotStreamWriter::SnapshotStreamWriter","body":"Hi all,\r\n\r\nThe debug build is broken with the following error msg.\r\n\r\n```\r\n# Execution platform: @local_execution_config_platform//:platform\r\nIn file included from ./tensorflow/tsl/platform/logging.h:26,\r\n                 from ./tensorflow/tsl/platform/errors.h:26,\r\n                 from ./tensorflow/tsl/platform/statusor.h:72,\r\n                 from ./tensorflow/core/data/service/snapshot/path_utils.h:22,\r\n                 from ./tensorflow/core/data/service/snapshot/snapshot_stream_writer.h:25,\r\n                 from tensorflow/core/data/service/snapshot/snapshot_stream_writer.cc:15:\r\n./tensorflow/tsl/platform/default/logging.h: In instantiation of 'void tsl::internal::MakeCheckOpValueString(std::ostream*, const T&) [with T = std::unique_ptr<tensorflow::data::TaskIterator>; std::ostream = std::basic_ostream<char>]':\r\n./tensorflow/tsl/platform/default/logging.h:372:25:   required from 'std::string* tsl::internal::MakeCheckOpString(const T1&, const T2&, const char*) [with T1 = std::unique_ptr<tensorflow::data::TaskIterator>; T2 = std::nullptr_t; std::string = std::basic_string<char>]'\r\n./tensorflow/tsl/platform/default/logging.h:416:1:   required from 'std::string* tsl::internal::Check_NEImpl(const T1&, const T2&, const char*) [with T1 = std::unique_ptr<tensorflow::data::TaskIterator>; T2 = std::nullptr_t; std::string = std::basic_string<char>]'\r\ntensorflow/core/data/service/snapshot/snapshot_stream_writer.cc:67:3:   required from here\r\n./tensorflow/tsl/platform/default/logging.h:313:9: error: no match for 'operator<<' (operand types are 'std::ostream' {aka 'std::basic_ostream<char>'} and 'const std::unique_ptr<tensorflow::data::TaskIterator>')\r\n  313 |   (*os) << v;\r\n      |   ~~~~~~^~~~\r\n./tensorflow/tsl/platform/default/logging.h:313:9: note: candidate: 'operator<<(int, int)' (built-in)\r\n./tensorflow/tsl/platform/default/logging.h:313:9: note:   no known conversion for argument 2 from 'const std::unique_ptr<tensorflow::data::TaskIterator>' to 'int'\r\n```\r\n\r\nLet's fix it.\r\n\r\nThanks.\r\nBest regards,\r\nJie","created_at":"2023-02-09T04:59:31Z","closed_at":"2023-02-13T19:31:28Z","merged_at":"2023-02-13T19:31:28Z","user_id":19923746,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":1234461140,"title":"Clean up in tpu kernels","body":"One lined some control statements and tried to reduce some logic and brackets/indentation to help readability","created_at":"2023-02-09T03:03:47Z","closed_at":"2023-02-13T20:26:05Z","merged_at":"2023-02-13T20:26:05Z","user_id":8650931,"sentiment":{"polarity":0.3666666666666667,"subjectivity":0.7000000000000001}}
{"_id":1234358173,"title":"Revert \"Disable broken test in TF 2.12.0 Release builds.\"","body":"Reverts tensorflow/tensorflow#59596","created_at":"2023-02-09T00:52:50Z","closed_at":"2023-02-09T04:37:41Z","merged_at":"2023-02-09T04:37:41Z","user_id":323199,"sentiment":{"polarity":-0.4,"subjectivity":0.4}}
{"_id":1234244970,"title":"[NVIDIA TF] Throw error only for non-empty function definitions.","body":"During Function Serialization and Deserialization with Saved Models there can be Node ops with type `func` with default values that have no associated name. In such cases, we shouldn't look for undefined empty strings in Function Library. This is a trivial change and helps with how Saved Models are loaded. ","created_at":"2023-02-08T22:49:52Z","closed_at":"2023-02-23T19:37:50Z","merged_at":null,"user_id":33809857,"sentiment":{"polarity":0.0,"subjectivity":1.0}}
{"_id":1234111576,"title":"Update tensorboard 2.12.0 dependency","body":"Re : Updating Tensorboard's protobuf\r\n\r\nUpdating the TB 2.12.0 dependency  in r2.12 release branch from TF side.","created_at":"2023-02-08T20:22:27Z","closed_at":"2023-02-09T23:40:55Z","merged_at":"2023-02-09T23:40:55Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1234092578,"title":"ReLU Epilogue Fusion for FP8 GEMMs in XLA","body":"Enables the epilogue fusion of ReLU activations for FP8 GEMMs.","created_at":"2023-02-08T20:04:08Z","closed_at":"2023-02-23T19:37:49Z","merged_at":null,"user_id":80296164,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1234083187,"title":"Update tensorboard 2.12.0 dependency","body":"Re : Updating Tensorboard's protobuf\r\n\r\nUpdating the TB 2.12.0 dependency from TF side. ","created_at":"2023-02-08T19:54:49Z","closed_at":"2023-02-09T22:47:36Z","merged_at":null,"user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1234000821,"title":"r2.12 cherry-pick: 46cdedf47c1 \"Include TSL proto files in the pip package\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/46cdedf47c1f547d3c4ff9e3f63c12b7e7ec5a22","created_at":"2023-02-08T18:50:05Z","closed_at":"2023-02-14T00:49:27Z","merged_at":"2023-02-14T00:49:27Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1233479401,"title":"[ROCm] fix gpu_conv_algorithm_picker on ROCm build","body":"This new added PR https://github.com/tensorflow/tensorflow/commit/9b616058967513340d882623c489b25398849373 has broken ROCm build and it is for CUDA only, as ROCm implementation has not used redzone. \r\n\r\nThis PR fixes it.\r\n\r\n@cheshire Thanks in advance! ","created_at":"2023-02-08T12:32:53Z","closed_at":"2023-02-09T12:00:36Z","merged_at":null,"user_id":913790,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1233342753,"title":"serializing/deserializing layers in TensorFlow.","body":"The code is a script for populating and serializing/deserializing layers in TensorFlow. Some improvements that can be made to the code include:\r\n\r\nGrouping related imports: Instead of having all the imports at the top of the script, they can be grouped and separated based on the module they belong to. This will make the script more organized and easier to maintain.\r\n\r\nImproving readability: Some parts of the script can be simplified and made more readable by using meaningful variable names, breaking down complex statements into multiple lines, and using descriptive comments.\r\n\r\nMaking use of the custom_objects argument in deserialize: The custom_objects argument can be utilized to allow for custom layers to be deserialized in addition to the built-in layers.\r\n\r\nHere is an example of the improved code:\r\n\r\n\r\nimport threading\r\n\r\nfrom tensorflow import tf2\r\nfrom tensorflow.keras import backend as K\r\nfrom tensorflow.keras.engine import base_layer, input_layer from tensorflow.keras.layers import advanced_activations from tensorflow.keras.layers import convolutional, convolutional_recurrent, pooling from tensorflow.keras.layers import core, dense_attention, embeddings, merge from tensorflow.keras.layers import recurrent, recurrent_v2 from tensorflow.keras.layers import rnn_cell_wrapper_v2 from tensorflow.keras.models import Functional, Model, Sequential from tensorflow.keras.utils import generic_utils, tf_inspect from tensorflow.keras.utils.generic_utils import deserialize_keras_object from tensorflow.keras.utils.tf_export import keras_export\r\n\r\n# Constants to store the layer modules and built-in objects V1_MODULES = (base_layer, input_layer, advanced_activations, convolutional,\r\n              convolutional_recurrent, core, dense_attention, embeddings,\r\n              merge, pooling, recurrent)\r\nV2_MODULES = (rnn_cell_wrapper_v2, recurrent_v2)\r\nBUILT_IN_OBJECTS = {\r\n    'Input': input_layer.Input,\r\n    'InputSpec': input_layer.InputSpec,\r\n    'Functional': Functional,\r\n    'Model': Model,\r\n    'Sequential': Sequential\r\n}\r\n\r\n# Thread-local variable to store the populated deserializable objects LOCAL = threading.local()\r\n\r\ndef populate_deserializable_objects():\r\n    \"\"\"Populate the deserializable objects with the built-in layers and functions.\"\"\"\r\n    global LOCAL\r\n    if not hasattr(LOCAL, 'ALL_OBJECTS'):\r\n        LOCAL.ALL_OBJECTS = {}\r\n        LOCAL.GENERATED_WITH_V2 = None\r\n\r\n    if LOCAL.ALL_OBJECTS and LOCAL.GENERATED_WITH_V2 == tf2.enabled():\r\n        # Deserializable objects already generated for the proper TF version\r\n        return\r\n\r\n    LOCAL.ALL_OBJECTS = BUILT_IN_OBJECTS.copy()\r\n    LOCAL.GENERATED_WITH_V2 = tf2.enabled()","created_at":"2023-02-08T10:40:09Z","closed_at":"2023-02-08T14:58:33Z","merged_at":null,"user_id":67184718,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1233294164,"title":"[tosa] Legalize tfl.real and tfl.imag","body":"TOSA has no notion of complex datatypes, it represents a single complex input tensor using two floating point input tensors corresponding to the \"real\" and \"imag\" parts of the complex input. To maintain the correct mapping of these tensors during the legalization from TFL to TOSA, a complex tensor of shape [x, ..., y] is converted to a single floating point tensor of shape [x, ..., y, 2] where each resulting pair of values can be used to represent a complex value. This ensures a 1:1 mapping between TFL and TOSA input/output tensors.\r\n\r\nThis commit intends to demonstrate the legalization of operations with a complex input by legalizing tfl.real and tfl.imag ops. In doing so, the infrastructure for legalizing and removing complex types from the resulting TOSA graph is provided. During the legalization \"unrealized_conversion_cast\" operations are interted to account for the difference in representation of complex tensors in TFL and TOSA. These casts are later fully removed by the \"strip-complex-types\" pass. Later commits will show legalization of operations with a complex output.\r\n\r\nLegalization of tfl.real and tfl.imag is completed by slicing the relevant dimension of the complex input tensor, given shape [x, ..., y, 2], and then reshaping the result.\r\n\r\nSigned-off-by: Luke Hutton <luke.hutton@arm.com>","created_at":"2023-02-08T10:03:37Z","closed_at":"2023-03-01T15:00:31Z","merged_at":"2023-03-01T15:00:31Z","user_id":35535092,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1232420220,"title":"[NVIDIA TF] Add CollectiveAllToAllV2 op","body":"Adds `CollectiveAllToAllV2` op. This op is similar to `CollectiveAllToAllV3` but uses tensor inputs for the collective parameters instead of a resource.\r\n\r\nIn a future PR, I will add a `DTensorAllToAll` op which will be lowered to this `CollectiveAllToAllV2` op.\r\n\r\ncc @rainwoodman @bfontain ","created_at":"2023-02-07T18:21:41Z","closed_at":"2023-02-14T18:28:06Z","merged_at":"2023-02-14T18:28:06Z","user_id":12981474,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1232394177,"title":"Disable broken test in TF 2.12.0 Release builds.","body":"\r\nb/268210520","created_at":"2023-02-07T17:57:49Z","closed_at":"2023-02-07T21:30:42Z","merged_at":"2023-02-07T21:30:42Z","user_id":106367904,"sentiment":{"polarity":-0.4,"subjectivity":0.4}}
{"_id":1231608912,"title":"stale-pr.yaml","body":"I've added the workflow to replace 'stale-master' probot. It will add 'stalled' label to inactive PRs if contains 'stat:awaiting response' label in case of further inactivity it will close the PR with proper comment.","created_at":"2023-02-07T08:36:59Z","closed_at":"2023-02-28T22:39:14Z","merged_at":null,"user_id":124146945,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1231267298,"title":"r2.11 cherry-pick: 2648c81f05f \"Check min-max values to be scalars.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/2648c81f05f4d15e2aa48412686b5aab6507e94e","created_at":"2023-02-07T00:56:35Z","closed_at":"2023-02-07T02:07:40Z","merged_at":"2023-02-07T02:07:39Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1231256890,"title":"Copy input tensor in a RandomShuffleOp to output directly when its nu…","body":"…mber of elements is less than or equal to 1.\r\n\r\nThis fixes the crash in TFXLA MLIR bridge when the input tensor has a rank of 0. This also makes its behavoir more consistent with TF core kernel.\r\n\r\nPiperOrigin-RevId: 504983211","created_at":"2023-02-07T00:37:12Z","closed_at":"2023-02-09T00:52:39Z","merged_at":"2023-02-09T00:52:39Z","user_id":15825877,"sentiment":{"polarity":0.1,"subjectivity":0.4}}
{"_id":1231229095,"title":"Fix conjugate transpose for 0/1D complex tensor","body":null,"created_at":"2023-02-06T23:55:06Z","closed_at":"2023-02-09T00:52:19Z","merged_at":"2023-02-09T00:52:19Z","user_id":15825877,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":1231201433,"title":"r2.11 cherry-pick: 6965f231b8b \"Replace ptrdiff_t with int64_t.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/6965f231b8b1ab37f604fcb00816d79c0cb11302","created_at":"2023-02-06T23:14:35Z","closed_at":"2023-02-07T00:07:48Z","merged_at":"2023-02-07T00:07:48Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1231196426,"title":"Update tensorflow/core/kernels/image/decode_image_op.cc","body":null,"created_at":"2023-02-06T23:09:38Z","closed_at":"2023-02-07T00:09:16Z","merged_at":"2023-02-07T00:09:16Z","user_id":15825877,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1231176811,"title":"r2.11 cherry-pick: 728113a3be6 \"[Tensorflow] Fix security vulnerability with TensorListSplitOp\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/728113a3be690facad6ce436660a0bc1858017fa","created_at":"2023-02-06T22:45:31Z","closed_at":"2023-02-06T23:32:20Z","merged_at":"2023-02-06T23:32:19Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1231059753,"title":"[INTEL oneDNN][Bug Fix] Add index-validity  check for min-max tensors for quantized oneDNN ops and related tests","body":"This is a follow-up PR of the merged PR \r\n\r\nhttps://github.com/tensorflow/tensorflow/pull/59437\r\n\r\nfor all oneDNN quantization ops:\r\n\r\nThe PR adds boundary (rank) check for min-max tensors of all oneDNN quantized ops, which will prevent NPE (null-pointer exception).\r\n  With the added check, index access to an element can happen only after the \"index\" passes the validity check.","created_at":"2023-02-06T21:02:06Z","closed_at":"2023-02-21T21:53:43Z","merged_at":"2023-02-21T21:53:43Z","user_id":29215195,"sentiment":{"polarity":0.0,"subjectivity":0.4}}
{"_id":1231034702,"title":"Runner tests","body":"Testing some runner options","created_at":"2023-02-06T20:46:00Z","closed_at":"2023-02-06T20:46:26Z","merged_at":null,"user_id":30155094,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1230565371,"title":"[ARM:TFMOT] Add ARM as trusted partner for TF-MOT PRs","body":null,"created_at":"2023-02-06T14:53:56Z","closed_at":"2023-02-07T13:54:38Z","merged_at":"2023-02-07T13:54:38Z","user_id":13143846,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1230015172,"title":"Update legalization of tf/tfl pad to the spec","body":"Argument `padding` and `pad_const` are operands in the implementation, but in TOSA spec they are attributes.\r\n\r\nChange-Id: I63046235597a2d0a6cc89c5178658b251862bd8b","created_at":"2023-02-06T08:00:57Z","closed_at":"2023-02-23T21:15:32Z","merged_at":null,"user_id":78814694,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1229487342,"title":"R2.2","body":"test, please ignore it","created_at":"2023-02-05T15:33:31Z","closed_at":"2023-02-05T15:33:57Z","merged_at":null,"user_id":50092094,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1229033178,"title":"Small refactoring in the tensorflow/python/keras/layers area","body":"Noticed a few things I thought were improvements while going through and learning... or trying to! Most of the changes wound up being indents.","created_at":"2023-02-04T09:28:32Z","closed_at":"2023-02-06T11:59:37Z","merged_at":null,"user_id":8650931,"sentiment":{"polarity":-0.25,"subjectivity":0.4}}
{"_id":1228914354,"title":"Fix release notes","body":"#59564 review missed these issues","created_at":"2023-02-04T02:17:56Z","closed_at":"2023-02-04T02:25:10Z","merged_at":"2023-02-04T02:25:10Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1228908577,"title":"Update version numbers for TensorFlow 2.12.0-rc0","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 12 -> 12\nPatch: 0 -> 0\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.12.0\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/tools/tf_sig_build_dockerfiles/devel.requirements.txt:32:2.12.0\ntensorflow/tools/tf_sig_build_dockerfiles/devel.requirements.txt:33:2.12.0\ntensorflow/tools/tf_sig_build_dockerfiles/devel.requirements.txt:34:2.12.0\ntensorflow/tools/ci_build/release/requirements_mac.txt:4:2.12.0\ntensorflow/tools/ci_build/release/requirements_common.txt:28:2.12.0\ntensorflow/tools/ci_build/release/requirements_common.txt:29:2.12.0\ntensorflow/tools/ci_build/release/requirements_common.txt:30:2.12.0\ntensorflow/tools/pip_package/setup.py:50:2.12.0\ntensorflow/tools/pip_package/setup.py:127:2.12.0\ntensorflow/tools/pip_package/setup.py:128:2.12.0\ntensorflow/tools/pip_package/setup.py:130:2.12.0\ntensorflow/tools/pip_package/redundant_tf_nightly_gpu/setup.cfg:17:2.12.0\ntensorflow/tools/pip_package/redundant_tensorflow_gpu/setup.cfg:17:2.12.0\ntensorflow/lite/tools/versioning/runtime_version.cc:183:2.12.0\ntensorflow/lite/tools/versioning/runtime_version.cc:191:2.12.0\ntensorflow/lite/tools/versioning/runtime_version.cc:315:2.12.0\ntensorflow/lite/tools/versioning/runtime_version.cc:355:2.12.0\ntensorflow/lite/tools/versioning/runtime_version.cc:360:2.12.0\ntensorflow/lite/tools/versioning/runtime_version.cc:397:2.12.0\ntensorflow/lite/core/c/c_api.h:115:2.12.0\ntensorflow/tensorflow.bzl:73:2.12.0\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.12.0\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/tools/tf_sig_build_dockerfiles/devel.requirements.txt:32:2.12.0\ntensorflow/tools/tf_sig_build_dockerfiles/devel.requirements.txt:33:2.12.0\ntensorflow/tools/tf_sig_build_dockerfiles/devel.requirements.txt:34:2.12.0\ntensorflow/tools/ci_build/release/requirements_mac.txt:4:2.12.0\ntensorflow/tools/ci_build/release/requirements_common.txt:28:2.12.0\ntensorflow/tools/ci_build/release/requirements_common.txt:29:2.12.0\ntensorflow/tools/ci_build/release/requirements_common.txt:30:2.12.0\ntensorflow/tools/pip_package/setup.py:50:2.12.0\ntensorflow/tools/pip_package/setup.py:127:2.12.0\ntensorflow/tools/pip_package/setup.py:128:2.12.0\ntensorflow/tools/pip_package/setup.py:130:2.12.0\ntensorflow/tools/pip_package/redundant_tf_nightly_gpu/setup.cfg:17:2.12.0\ntensorflow/tools/pip_package/redundant_tensorflow_gpu/setup.cfg:17:2.12.0\ntensorflow/lite/tools/versioning/runtime_version.cc:183:2.12.0\ntensorflow/lite/tools/versioning/runtime_version.cc:191:2.12.0\ntensorflow/lite/tools/versioning/runtime_version.cc:315:2.12.0\ntensorflow/lite/tools/versioning/runtime_version.cc:355:2.12.0\ntensorflow/lite/tools/versioning/runtime_version.cc:360:2.12.0\ntensorflow/lite/tools/versioning/runtime_version.cc:397:2.12.0\ntensorflow/lite/core/c/c_api.h:115:2.12.0\ntensorflow/tensorflow.bzl:73:2.12.0\n```","created_at":"2023-02-04T02:00:57Z","closed_at":"2023-02-04T02:13:18Z","merged_at":"2023-02-04T02:13:18Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1228890744,"title":"Update release notes for TensorFlow 2.12.0","body":"This PR is intentionally incomplete. One of the Release Owners for 2.12.0\nneeds to fill in the internal release notes for this version before the PR gets\nsubmitted. Click on the :pencil2: icon in the header for `RELEASE.md` under\n\"Files Changed\" above.","created_at":"2023-02-04T01:08:41Z","closed_at":"2023-02-04T01:55:03Z","merged_at":"2023-02-04T01:55:03Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1228829809,"title":"Update setup.py on TF release branch with released version of Estimat…","body":"…or and Keras\r\n\r\nUpdate setup.py on TF release branch with released version of Estimator and Keras (#change-est-ver)","created_at":"2023-02-03T23:32:07Z","closed_at":"2023-02-03T23:37:45Z","merged_at":"2023-02-03T23:37:44Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1228822645,"title":"Update the RBE images to the latest container versions","body":"This PR was created by a GitHub Actions workflow to update all the SIG Build-based RBE containers to the most recent containers. See:\n\n- https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/toolchains/remote_config/configs.bzl\n- https://github.com/tensorflow/tensorflow/blob/master/.github/workflows/update-rbe.yml","created_at":"2023-02-03T23:17:31Z","closed_at":"2023-02-06T19:58:03Z","merged_at":"2023-02-06T19:58:03Z","user_id":16359713,"sentiment":{"polarity":0.5,"subjectivity":0.9}}
{"_id":1228738560,"title":"Cherrypicks","body":"Cherrypicks","created_at":"2023-02-03T21:49:30Z","closed_at":"2023-02-04T00:05:33Z","merged_at":"2023-02-04T00:05:33Z","user_id":4316856,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1228687783,"title":"r2.11 cherry-pick: d80293c5b5e \"Fix memory corruption vulnerability in reverse_sequence_op.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/d80293c5b5e403f52df28395a146a75dd3054bb8","created_at":"2023-02-03T21:11:10Z","closed_at":"2023-02-04T00:08:48Z","merged_at":"2023-02-04T00:08:48Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1228681995,"title":"r2.11 cherry-pick: ba8ae540f2f \"Fixes crashes due to buzz input for ApproxTopK\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/ba8ae540f2f18eca795e4cc20bfdf7276aa50bf4","created_at":"2023-02-03T21:07:47Z","closed_at":"2023-02-04T00:08:39Z","merged_at":"2023-02-04T00:08:39Z","user_id":16359713,"sentiment":{"polarity":-0.125,"subjectivity":0.375}}
{"_id":1228680840,"title":"r2.11 cherry-pick: 980b22536ab \"Fixes shape inference of LookupTableImportV2 to handle scalar values.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/980b22536abcbbe1b4a5642fc940af33d8c19b69","created_at":"2023-02-03T21:06:55Z","closed_at":"2023-02-04T00:08:30Z","merged_at":"2023-02-04T00:08:30Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1228663784,"title":"r2.11 cherry-pick: da66bc6d5ff \"Check for unexpected scalars in the shape argument to ParallelConcat.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/da66bc6d5ff466aee084f9e7397980a24890cd15","created_at":"2023-02-03T20:54:40Z","closed_at":"2023-02-04T00:08:22Z","merged_at":"2023-02-04T00:08:22Z","user_id":16359713,"sentiment":{"polarity":0.1,"subjectivity":1.0}}
{"_id":1228656281,"title":"r2.11 cherry-pick: 08b8e18643d \"Fix security vulnerability in EditDistance op shape function.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/08b8e18643d6dcde00890733b270ff8d9960c56c","created_at":"2023-02-03T20:49:01Z","closed_at":"2023-02-04T00:09:02Z","merged_at":"2023-02-04T00:09:02Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1228652866,"title":"r2.11 cherry-pick: 8ae76cf085f \"[Tensorflow] Fix security vulnerability with DenseBincountOp\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/8ae76cf085f4be26295d2ecf2081e759e04b8acf","created_at":"2023-02-03T20:46:25Z","closed_at":"2023-02-04T00:08:03Z","merged_at":"2023-02-04T00:08:03Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1228648937,"title":"r2.11 cherry-pick: 239139d2ae6 \"Fixing null pointer read in TensorArrayConcat when the step container is missing.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/239139d2ae6a81ae9ba499ad78b56d9b2931538a","created_at":"2023-02-03T20:43:12Z","closed_at":"2023-02-04T00:07:54Z","merged_at":"2023-02-04T00:07:54Z","user_id":16359713,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":1228646125,"title":"r2.11 cherry-pick: 62efa487713 \"[TFG] Fix index out of bound issue in TFG shape inference pass.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/62efa487713692ef22b055f19d622f4ab6d2ab7e","created_at":"2023-02-03T20:41:12Z","closed_at":"2023-02-04T00:07:46Z","merged_at":"2023-02-04T00:07:46Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1228642244,"title":"r2.11 cherry-pick: e3c92d19265 \"Fix histogram overflow vulnerability.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/e3c92d192659e140d13e1c6665894a7a045a1bf4","created_at":"2023-02-03T20:37:08Z","closed_at":"2023-02-04T00:09:11Z","merged_at":"2023-02-04T00:09:11Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1228632868,"title":"r2.11 cherry-pick: ee004b18b97 \"Add out of bounds array check to dynamic_stitch_op.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/ee004b18b976eeb5a758020af8880236cd707d05","created_at":"2023-02-03T20:26:15Z","closed_at":"2023-02-04T00:07:29Z","merged_at":"2023-02-04T00:07:29Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1228630826,"title":"r2.11 cherry-pick: 8dc723fcdd1 \"Fix integer overflow for multiframe gifs.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/8dc723fcdd1a6127d6c970bd2ecb18b019a1a58d","created_at":"2023-02-03T20:24:18Z","closed_at":"2023-02-04T00:07:21Z","merged_at":"2023-02-04T00:07:21Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1228629097,"title":"r2.11 cherry-pick: 34f8368c535 \"Check filter_input_channel > 0 in conv kernel.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/34f8368c535253f5c9cb3a303297743b62442aaa","created_at":"2023-02-03T20:22:16Z","closed_at":"2023-02-04T00:09:19Z","merged_at":"2023-02-04T00:09:19Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1228626110,"title":"r2.11 cherry-pick: 6d423b8bcc9 \"Quick fix for a vuln in printing empty tensors.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/6d423b8bcc9aa9f5554dc988c1c16d038b508df1","created_at":"2023-02-03T20:19:02Z","closed_at":"2023-02-04T00:07:05Z","merged_at":"2023-02-04T00:07:05Z","user_id":16359713,"sentiment":{"polarity":0.11666666666666667,"subjectivity":0.5}}
{"_id":1228624321,"title":"r2.11 cherry-pick: ee50d1e00f8 \"Fix security vulnerability with FractionalMax(AVG)Pool with illegal pooling_ratio\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/ee50d1e00f81f62a4517453f721c634bbb478307","created_at":"2023-02-03T20:17:29Z","closed_at":"2023-02-04T00:09:28Z","merged_at":"2023-02-04T00:09:28Z","user_id":16359713,"sentiment":{"polarity":-0.5,"subjectivity":0.5}}
{"_id":1228616918,"title":"r2.11 cherry-pick: 0bf8d115393 \"Fix sparse tensor to CSR batch index OOB error.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/0bf8d1153937a88740772f930577e123a39e1d5e","created_at":"2023-02-03T20:10:06Z","closed_at":"2023-02-04T00:06:47Z","merged_at":"2023-02-04T00:06:47Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1228615345,"title":"r2.11 cherry-pick: e4d8b988581 \"Add overflow test for num_results*dim to sobol_sample op\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/e4d8b9885813f1b93386cf2a7500e6e3f706973a","created_at":"2023-02-03T20:08:20Z","closed_at":"2023-02-04T00:09:42Z","merged_at":"2023-02-04T00:09:42Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1228611814,"title":"r2.11 cherry-pick: 7b174a0f2e4 \"Fix asan issue with QuantizeAndDequantizeV2/V3/V4/V4Grad shape inference functions.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/7b174a0f2e40ff3f3aa957aecddfd5aaae35eccb","created_at":"2023-02-03T20:04:34Z","closed_at":"2023-02-04T00:06:13Z","merged_at":"2023-02-04T00:06:13Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1228610630,"title":"r2.11 cherry-pick: 948fe6369a5 \"Fix nn.conv3d_transpose security vulnerability with illegal input shape\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/948fe6369a5711d4b4568ea9bbf6015c6dfb77e2","created_at":"2023-02-03T20:03:23Z","closed_at":"2023-02-04T00:06:28Z","merged_at":"2023-02-04T00:06:28Z","user_id":16359713,"sentiment":{"polarity":-0.5,"subjectivity":0.5}}
{"_id":1228609644,"title":"r2.11 cherry-pick: ddaac2bdd09 \"Add inputs check for AvgPoolGrad\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/ddaac2bdd099bec5d7923dea45276a7558217e5b","created_at":"2023-02-03T20:02:34Z","closed_at":"2023-02-04T00:05:57Z","merged_at":"2023-02-04T00:05:57Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1228020220,"title":"[BUG FIX] Fix tensor_or_memref.h build error","body":"We found the build error on tensor_or_memref as the following, this PR has fixed it.\r\n\r\n```\r\nopt/bin/tensorflow/compiler/xla/mlir_hlo/_virtual_includes/mlir_interpreter_framework/tools/mlir_interpreter/framework/tensor_or_memref.h:243:29: error: 'isnan' was not declared in this scope; did you mean 'std::isnan'?\r\n  243 |         bool thisnan = isnan(at(indices));\r\n      |                        ~~~~~^~~~~~~~~~~~~\r\n      |                        std::isnan\r\nIn file included from /usr/include/c++/9/complex:44,\r\n                 from bazel-out/k8-opt/bin/tensorflow/compiler/xla/mlir_hlo/_virtual_includes/mlir_interpreter_framework/tools/mlir_interpreter/framework/interpreter_value.h:19,\r\n                 from tensorflow/compiler/xla/mlir_hlo/tools/mlir_interpreter/framework/tests/interpreter_value_test.cc:16:\r\n/usr/include/c++/9/cmath:632:5: note: 'std::isnan' declared here\r\n  632 |     isnan(_Tp __x)\r\n      |     ^~~~~\r\n\r\n\r\nopt/bin/tensorflow/compiler/xla/mlir_hlo/_virtual_includes/mlir_interpreter_framework/tools/mlir_interpreter/framework/interpreter_value.h:108:31:   required from here\r\nbazel-out/k8-opt/bin/tensorflow/compiler/xla/mlir_hlo/_virtual_includes/mlir_interpreter_framework/tools/mlir_interpreter/framework/tensor_or_memref.h:243:29: error: 'isnan' was not declared in this scope; did you mean 'std::isnan'?\r\n  243 |         bool thisnan = isnan(at(indices));\r\n      |                        ~~~~~^~~~~~~~~~~~~\r\n      |                        std::isnan\r\nIn file included from /usr/include/c++/9/complex:44,\r\n                 from bazel-out/k8-opt/bin/tensorflow/compiler/xla/mlir_hlo/_virtual_includes/mlir_interpreter_framework/tools/mlir_interpreter/framework/interpreter_value.h:19,\r\n                 from tensorflow/compiler/xla/mlir_hlo/tools/mlir_interpreter/framework/tests/interpreter_value_test.cc:16:\r\n/usr/include/c++/9/cmath:632:5: note: 'std::isnan' declared here\r\n  632 |     isnan(_Tp __x)\r\n      |     ^~~~~\r\nIn file included from bazel-out/k8-opt/bin/tensorflow/compiler/xla/mlir_hlo/_virtual_includes/mlir_interpreter_framework/tools/mlir_interpreter/framework/interpreter_value.h:34,\r\n                 from tensorflow/compiler/xla/mlir_hlo/tools/mlir_interpreter/framework/tests/interpreter_value_test.cc:16:\r\nbazel-out/k8-opt/bin/tensorflow/compiler/xla/mlir_hlo/_virtual_includes/mlir_interpreter_framework/tools/mlir_interpreter/framework/tensor_or_memref.h:244:30: error: 'isnan' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]\r\n  244 |         bool othernan = isnan(other.at(indices));\r\n\r\n```","created_at":"2023-02-03T11:41:49Z","closed_at":"2023-02-16T18:09:16Z","merged_at":"2023-02-16T18:09:16Z","user_id":913790,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1227584359,"title":"[XLA] Support big-endian in numpy-style type descriptor","body":"This PR supports [big-endian byte order](https://numpy.org/doc/stable/reference/arrays.dtypes.html#specifying-and-constructing-data-types) in numpy-style type descriptor. This order is determined by the order of a machine to build xla library.","created_at":"2023-02-03T04:56:05Z","closed_at":"2023-02-03T16:36:29Z","merged_at":"2023-02-03T16:36:29Z","user_id":1315079,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1226202561,"title":"Update hsplit in np_array_ops.py","body":"[numpy docs](https://numpy.org/doc/stable/reference/generated/numpy.hsplit.html): \r\n> hsplit is equivalent to split with axis=1, the array is always split along the second axis except for 1-D arrays, where it is split at axis=0.\r\n\r\nAs there is no testVsplit or testHsplit in `np_array_ops_test.py`, this fix doesn't need any test modification (and prob why the bug exists)","created_at":"2023-02-02T09:08:25Z","closed_at":"2023-02-27T22:32:32Z","merged_at":"2023-02-27T22:32:32Z","user_id":57395545,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1225527247,"title":"[XLA] Cublaslt fp8 matmul restriction work-around","body":"As of 2/1/2023, cublasLt f8 matmul only support col major input(default to cublas). But calling from TF/XLA, input can be in all kinds of storage type. This PR aims to \"canonicalize\" fp8 matmuls by having lrs/rhs_contracting_dim={1,0} and adding necessary transposes to inputs. A reproducer of this bug restriction is located at [here](https://github.com/wenscarl/fp8_gemm_test/blob/main/fp8_gemm_backward_fail.py).\r\n\r\nA remaining restriction is the batch dimension still needs to be a leading dimension.","created_at":"2023-02-01T21:22:57Z","closed_at":"2023-02-27T13:28:13Z","merged_at":"2023-02-27T13:28:13Z","user_id":25590028,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1222979188,"title":"[C API][Fix] add recursively handling for AddN variant","body":"Exposed by [UT](https://github.com/intel-innersource/frameworks.ai.infrastructure.intel-extension-for-tensorflow.intel-extension-for-tensorflow/blob/8f6cdb576eceb57b84ecb14dd5055213ec6e12aa/test/tensorflow/python/kernel_tests/list_ops_test.py#L1251). When the input of AddN is nested variant(eg, nested TensorList), for current implementation, `TF_AddNVariant` will leave a variant tensor for `binary_add_func` used by vendor extension, which cannot be handled in extension as variant class is opaque for extension. So recursively handling for variant is needed, and `TF_ZerosLikeVariant` did same work, code [link](https://github.com/tensorflow/tensorflow/blob/e35b2853331f3caed7612f2ae0596fd2fe1353f3/tensorflow/c/kernels_experimental.cc#L529) for `TF_ZerosLikeVariant`.","created_at":"2023-01-31T09:29:53Z","closed_at":"2023-02-22T00:32:10Z","merged_at":null,"user_id":57359799,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1221670290,"title":"Fix missing symbols on S390x caused by jit_compiler","body":"Inside `jit_compiler.cc` the function `llvm::InitializeNativeTargetAsmParser` is called which uses an architecture-dependend define. Add SystemZAsmParser similar to #59326\r\n\r\nSee also https://github.com/llvm/llvm-project/issues/59590.","created_at":"2023-01-30T13:45:19Z","closed_at":"2023-01-31T20:40:12Z","merged_at":"2023-01-31T20:40:12Z","user_id":309017,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":1220160693,"title":"Revert \"r2.11 cherry-pick: 7a3d9601d6a \"Support forceBackend option in GPU Delegate Options.\"\"","body":"Reverts tensorflow/tensorflow#59480\r\n\r\nThis cherrypick is requested on to r2.12 but not onto r2.11. So reverting the cherrypick. ","created_at":"2023-01-28T06:09:24Z","closed_at":"2023-01-28T06:43:28Z","merged_at":"2023-01-28T06:43:28Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1220007007,"title":"r2.11 cherry-pick: 7a3d9601d6a \"Support forceBackend option in GPU Delegate Options.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/7a3d9601d6a90a1b524a5c1a28a4b0e9332a76f0","created_at":"2023-01-27T22:49:45Z","closed_at":"2023-01-27T23:08:02Z","merged_at":"2023-01-27T23:08:02Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1219980811,"title":"[tosa] fix strided_slice legalization","body":"by skipping stride=1 dimensions in the reshape layer and avoid unnecessary rank blowup in the reshaped tensors.\r\n\r\nChange-Id: I9b6f0220238d10d99125fef1f1db8ac58fabe71a\r\nSigned-off-by: Tai Ly <tai.ly@arm.com>","created_at":"2023-01-27T22:21:36Z","closed_at":"2023-03-01T21:41:06Z","merged_at":null,"user_id":6504206,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1219979103,"title":"Fix segfault caused by registering duplicate numpy float8 casts","body":"This is fixing the same bug as\r\nhttps://github.com/tensorflow/tensorflow/pull/59425 but in a different place.","created_at":"2023-01-27T22:18:37Z","closed_at":"2023-01-31T22:18:39Z","merged_at":"2023-01-31T22:18:39Z","user_id":88808,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1219769257,"title":"Fix input validation for GRU ops.","body":"PiperOrigin-RevId: 504645490","created_at":"2023-01-27T19:08:58Z","closed_at":"2023-01-27T19:25:50Z","merged_at":"2023-01-27T19:25:50Z","user_id":2538739,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1219673135,"title":"r2.11 cherry-pick: 1295ae4dbb5 \"[tf2xla] Validate that stride and window size are positive\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/1295ae4dbb52fe06b19733b0257e2340d7b63b8d","created_at":"2023-01-27T17:50:55Z","closed_at":"2023-01-27T17:55:47Z","merged_at":"2023-01-27T17:55:47Z","user_id":16359713,"sentiment":{"polarity":0.22727272727272727,"subjectivity":0.5454545454545454}}
{"_id":1217055911,"title":"Revert \"[aarch64] acl linking for mkl_aarch64_threadpool config\"","body":"Revert \"[aarch64] enable acl linking for cpu xla for mkl_aarch64_threadpool configuration\"\r\nReason: The config has not been well-tested yet.\r\n\r\nThis reverts commit 6bc78c3e5019385effdb2aab70cd4a088ece7e0a.","created_at":"2023-01-25T20:02:13Z","closed_at":"2023-01-25T20:54:26Z","merged_at":null,"user_id":38085909,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1216982683,"title":"[NVIDIA TF] NCCL implementation for all-to-all collective","body":"* Add NCCL implementation for all-to-all collective via NcclManager\r\n* Refactors `collective_nccl_test` to use the collective_test_util infrastructure. This fixes some occasional crashes with the tests and greatly simplfies the code\r\n\r\nThis PR is the first step to adding all-to-all GPU support in DTensor. cc @rainwoodman ","created_at":"2023-01-25T18:45:48Z","closed_at":"2023-02-02T02:54:53Z","merged_at":"2023-02-02T02:54:53Z","user_id":12981474,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1216894194,"title":"[Linaro:ARM_CI] Fix unit test numeric_utils_test fails to build","body":"The unit test //tensorflow/compiler/mlir/lite/quantization:numerical_utils_test fails to build for mkl_aarch64_threadpool since build_with_acl was enabled recently. Fix the libraries required.\r\nIntroduced by https://github.com/tensorflow/tensorflow/commit/6bc78c3e5019385effdb2aab70cd4a088ece7e0a","created_at":"2023-01-25T17:20:04Z","closed_at":"2023-01-26T15:05:47Z","merged_at":"2023-01-26T15:05:46Z","user_id":10442001,"sentiment":{"polarity":-0.5,"subjectivity":0.3}}
{"_id":1216271683,"title":"[Linaro:ARM_CI] Exclude tests that fail due to mismatch with tf-io","body":"These tests currently cannot run as the API to TensorFlow has been updated and does not match the current release of tensorflow-io","created_at":"2023-01-25T09:25:18Z","closed_at":"2023-01-29T07:20:52Z","merged_at":"2023-01-29T07:20:52Z","user_id":10442001,"sentiment":{"polarity":-0.3125,"subjectivity":0.33749999999999997}}
{"_id":1215840073,"title":"[oneDNN][Bug-fix] Add check for min-max tensors in quantized matmul OpKernel.","body":"This PR fixes NPE (null-pointer exception error) on tensors relevant to quantized matmul OpKernel. Particularly, when an element is accessed with an index, this PR first checks if such index is valid or not.","created_at":"2023-01-24T23:22:06Z","closed_at":"2023-01-26T05:50:43Z","merged_at":"2023-01-26T05:50:43Z","user_id":27521767,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1215693487,"title":"Add to_ordinal utility","body":"This PR will update the `RELEASE.md` for recently added feature `tf.keras.utils.to_ordinal` on Keras (keras-team/keras/pull/17419).","created_at":"2023-01-24T20:51:18Z","closed_at":"2023-01-26T22:34:28Z","merged_at":"2023-01-26T22:34:28Z","user_id":36858976,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1215649113,"title":"parallel_for control flow ops - change for_loop output to match pfor when run with 0 iters","body":"When run with zero iterations, tensorflow.python.ops.parallel_for.control_flow_ops.pfor returns a tensor with a shape of 0 in the first dimension (with the corresponding return shape in the others). However, running tensorflow.python.ops.parallel_for.control_flow_ops.for_loop on the same inputs with zero iterations would return `None`.\r\n\r\nThis manifests itself in issues such as #37795, where using experimental_use_pfor=True for computing Jacobians (with GradientTape) on inputs with dimension 0 would 'work', and return a tensor with shape 0, however running with experimental_use_pfor=False would throw a Type Error. \r\n\r\nThis PR changes the for_loop handling to return an object identical to that of pfor when run with zero iterations, rather than `None`.\r\n\r\n--\r\nResolves #37795.","created_at":"2023-01-24T20:07:15Z","closed_at":"2023-02-24T17:47:04Z","merged_at":"2023-02-24T17:47:04Z","user_id":62732661,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1214750983,"title":"[Linaro:ARM_CI] Limit the version of h5py that is allowed to prevent ftb","body":null,"created_at":"2023-01-24T09:04:38Z","closed_at":"2023-01-25T05:07:41Z","merged_at":"2023-01-25T05:07:41Z","user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1214720766,"title":"Simple change in readme","body":"Added a word in readme file to make more sense.","created_at":"2023-01-24T08:38:02Z","closed_at":"2023-01-24T10:35:00Z","merged_at":null,"user_id":77700954,"sentiment":{"polarity":0.0,"subjectivity":0.35714285714285715}}
{"_id":1214602919,"title":"Fix audio spectrogram FPE.","body":"Do input validation in shape function.\r\n\r\nPiperOrigin-RevId: 503481241","created_at":"2023-01-24T06:33:16Z","closed_at":"2023-01-24T21:26:06Z","merged_at":"2023-01-24T21:26:06Z","user_id":2538739,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1214600995,"title":"Add validation checks in sparse binary ops.","body":"Fixes a nullptr security vulnerability.\r\n\r\nPiperOrigin-RevId: 503501621","created_at":"2023-01-24T06:30:47Z","closed_at":"2023-01-24T21:29:46Z","merged_at":"2023-01-24T21:29:46Z","user_id":2538739,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1214362097,"title":"Fix segfault caused by registering duplicate numpy float8 to bfloat16 casts","body":"This was causing segfaults in JAX, since both the main jaxlib .so and the tpu_driver .so call RegisterNumpyBfloat16, which eventually tries to register this cast. This was causing segfaults with the current code due to a missing float8 type descriptor, since the type descriptor was populated and registered by the first library to call RegisterNumpyBfloat16, and then the second library would detect that the type was already registered by still try to access it from its own (unregistered) descriptor.\r\n\r\nThe fix is to not attempt the cast if a different library already registered the float8 type.\r\n\r\nI manually tested that this fixes the segfault.","created_at":"2023-01-24T01:32:36Z","closed_at":"2023-01-24T17:56:19Z","merged_at":"2023-01-24T17:56:19Z","user_id":88808,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1214054176,"title":"tflite-runtime wheels for Python 3.10","body":"Closes #56137 and #58264\r\n\r\nThis is a follow on PR to https://github.com/tensorflow/tensorflow/issues/56137#issuecomment-1397351028 that updates the Ubuntu to 20.04 supporting a Python 3.10 wheel while still retaining a minimum of glibc 2.31 runtime.\r\n\r\n~~This PR is using Option 2 from the comment, meaning that `/usr/include/python3` is now set explicitly in [build_pip_package_with_cmake.sh](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/lite/tools/pip_package/build_pip_package_with_cmake.sh).~~\r\n\r\nEdit (01/28/2023): This PR is using Option 1 from the comment given that the upstream issues with `/usr/include/python3` were resolved by deadsnakes.\r\n\r\nThe minimum Numpy versions was increased to `1.21.2` following [opencv-python](https://github.com/opencv/opencv-python/blob/4.x/setup.py) like [setup_with_binary.py](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/lite/tools/pip_package/setup_with_binary.py) suggested to do.","created_at":"2023-01-23T20:45:27Z","closed_at":"2023-02-03T18:18:18Z","merged_at":"2023-02-03T18:18:18Z","user_id":3933065,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1213234317,"title":"[mlir-hlo][cmake] Add dependencies missing for building shared libraries","body":"This commit adds CMake dependencies that are required for building the MLIR HLO library with -DBUILD_SHARED_LIBS and currently missing. I am doing this here https://github.com/iree-org/iree-llvm-sandbox/blob/b1c16a5/configure.py#L229 through IREE (https://github.com/iree-org/iree).\r\n\r\nThe reason why I believe the problems did not show up is because everybody including CI seem to use static linking and not all required symbols are required for linking static libraries -- they only need to be present when linking the final executable, where they presumable get linked in \"by chance\".\r\n\r\nI have only tested building this library through the [standalone copy repository](https://github.com/tensorflow/mlir-hlo) and as a dependency of IREE, not as a stand-alone project.","created_at":"2023-01-23T10:33:54Z","closed_at":"2023-01-23T18:23:10Z","merged_at":"2023-01-23T18:23:10Z","user_id":1036898,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":1212791781,"title":"[aarch64] enable acl linking for cpu xla for mkl_aarch64_threadpool config","body":"this option is already present for \"mkl_aarch64\" but missing from \"mkl_aarch64_threadpool\". ","created_at":"2023-01-23T00:41:37Z","closed_at":"2023-01-23T17:34:12Z","merged_at":"2023-01-23T17:34:12Z","user_id":87143774,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1212704257,"title":"reducing vulnerabilities ","body":"Buffer Overflow Affecting,OS Command Injection ,:[openssl](debian:10/openssl) package, versions <1.1.1d-0+deb10u7,\r\nOS Command Injection Affecting :[openssl](debian:10/openssl) package, versions <1.1.1n-0+deb10u2,\r\nBuffer Overflow Affecting ,Integer Overflow or Wraparound:[python3.7](debian:10/python3.7) package, versions <3.7.3-2+deb10u3\r\n","created_at":"2023-01-22T19:12:55Z","closed_at":"2023-02-17T19:41:15Z","merged_at":"2023-02-17T19:41:14Z","user_id":60829180,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1212267986,"title":"Added Comments and some indents","body":"I made some changes in line 94,138,139,166.","created_at":"2023-01-21T04:00:54Z","closed_at":"2023-01-23T10:29:26Z","merged_at":null,"user_id":97274900,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1212108948,"title":"Add validation checks in sparse binary ops.","body":"Fixes a nullptr security vulnerability.\r\n\r\nPiperOrigin-RevId: 503501621","created_at":"2023-01-20T21:59:18Z","closed_at":"2023-01-24T06:33:38Z","merged_at":null,"user_id":2538739,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1212106016,"title":"Add validation checks in sparse binary ops.","body":"Fixes a nullptr security vulnerability.\r\n\r\nPiperOrigin-RevId: 503501621","created_at":"2023-01-20T21:54:38Z","closed_at":"2023-01-24T06:34:20Z","merged_at":null,"user_id":2538739,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1212105443,"title":"Add validation checks in sparse binary ops.","body":"Fixes a nullptr security vulnerability.\r\n\r\nPiperOrigin-RevId: 503501621","created_at":"2023-01-20T21:53:45Z","closed_at":"2023-01-31T23:49:57Z","merged_at":null,"user_id":2538739,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1212090257,"title":"Fix audio spectrogram FPE.","body":"Do input validation in shape function.\r\n\r\nPiperOrigin-RevId: 503481241","created_at":"2023-01-20T21:35:26Z","closed_at":"2023-01-24T06:34:31Z","merged_at":null,"user_id":2538739,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1212089526,"title":"Fix audio spectrogram FPE.","body":"Do input validation in shape function.\r\n\r\nPiperOrigin-RevId: 503481241","created_at":"2023-01-20T21:34:18Z","closed_at":"2023-01-24T06:34:35Z","merged_at":null,"user_id":2538739,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1212087546,"title":"Fix audio spectrogram FPE.","body":"Do input validation in shape function.\r\n\r\nPiperOrigin-RevId: 503481241","created_at":"2023-01-20T21:31:39Z","closed_at":"2023-01-31T23:49:49Z","merged_at":null,"user_id":2538739,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1212086060,"title":"Cherrpick d0d4e779da0d0f56499c6fa5ba09f0a576cc6b14 on r2.10","body":null,"created_at":"2023-01-20T21:29:23Z","closed_at":"2023-01-20T21:29:58Z","merged_at":null,"user_id":2538739,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1211826502,"title":"[Pluggable Device] [MacOS] Disable list kernels for Pluggable devices.","body":"Disable list kernels for pluggable devices on MacOS\r\ncc @penpornk ","created_at":"2023-01-20T16:58:58Z","closed_at":"2023-01-24T11:50:21Z","merged_at":null,"user_id":453004,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1211780542,"title":"Fix missing symbols on PPC caused by jit_compiler","body":"Inside `jit_compiler.cc` the function `llvm::InitializeNativeTargetAsmParser` is called which on PPC calls `LLVMInitializePowerPCAsmParser` via an architecture-dependend define.\r\nHence the architecture-dependent AsmParser target is a dependency. So this is added here fixing errors when later using e.g. `_pywrap_tensorflow_internal.so` e.g. by importing tensorflow from Python.\r\n\r\nSee also https://github.com/llvm/llvm-project/issues/59590.","created_at":"2023-01-20T16:19:28Z","closed_at":"2023-01-24T08:16:53Z","merged_at":"2023-01-24T08:16:53Z","user_id":309017,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":1211263278,"title":"OptimizerV2: Allow deepcopy","body":"Closes #58973","created_at":"2023-01-20T09:18:36Z","closed_at":"2023-01-23T10:24:19Z","merged_at":null,"user_id":3832365,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1211163031,"title":"Test PR","body":null,"created_at":"2023-01-20T07:30:00Z","closed_at":"2023-01-20T07:30:29Z","merged_at":null,"user_id":73069040,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1210878877,"title":"[NVIDIA TF] Add bfloat16 to TF_CALL_GPU_NUMBER_TYPES macro","body":"This PR adds `bfloat16` registration to the `TF_CALL_GPU_NUMBER_TYPES` and `TF_CALL_GPU_ALL_TYPES` macros and removes the explicit bfloat16 registration for all ops using those.\r\n\r\nAll ops which use these macros already have bfloat16 support and unit tests from previous PRs, so this PR has no functional changes. \r\n\r\ncc @reedwm @cantonios Thanks again for all of your efforts reviewing the bfloat16 PRs!","created_at":"2023-01-19T23:15:35Z","closed_at":"2023-01-20T01:13:58Z","merged_at":"2023-01-20T01:13:58Z","user_id":12981474,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1210676418,"title":"Move MHLO transforms to own BUILD file & fix cmake","body":"Move so that we can avoid differences between CMake and bazel here (and\nlack of include dir that would allow using include directive).\n\nIteration of https://github.com/tensorflow/tensorflow/pull/59187\n","created_at":"2023-01-19T19:57:11Z","closed_at":"2023-01-24T17:10:18Z","merged_at":"2023-01-24T17:10:17Z","user_id":706766,"sentiment":{"polarity":0.6,"subjectivity":1.0}}
{"_id":1210619554,"title":"r2.11 cherry-pick: 760322a71ac \"[tfg] Fix out-of-bounds access due to mismatched integer type sizes in ValueMap::Manager::GetValueOrCreatePlaceholder\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/760322a71ac9033e122ef1f4b1c62813021e5938","created_at":"2023-01-19T19:13:50Z","closed_at":"2023-01-19T23:02:51Z","merged_at":"2023-01-19T23:02:51Z","user_id":16359713,"sentiment":{"polarity":-0.125,"subjectivity":0.375}}
{"_id":1210264403,"title":"[MacOS][Pluggable Device] Fixes for macos pluggable device.","body":"1. Disable the Eigen max align check as we use custom device memory\r\n   allocator in Metal plugin\r\n2. Disable list kernels on Pluggable devices as Device memory on MacOS\r\n   pluggable device doesn't allow us to index at a offset from the base\r\n   MTLBuufer location.\r\n3. Disable XLA compilation path as its not supported in pluggable\r\n   architecture\r\ncc. @penpornk , @learning-to-play , @nitins17","created_at":"2023-01-19T15:29:37Z","closed_at":"2023-01-24T10:34:48Z","merged_at":"2023-01-24T10:34:48Z","user_id":453004,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1209900211,"title":"[AMD-ZENDNN] Modifications to support eager op rewrite for AMD CPU Inference","body":"This pull request introduces support to re-write eager ops with ZenOps.\r\nAll these code changes are under AMD_ZENDNN flag which is enabled for linux builds only.\r\n\r\nAuthors:\r\nAakar Dwivedi ( aakar.dwivedi@amd.com )\r\nAvinash-Chandra Pandey ( avinash-chandra.pandey@amd.com )\r\nChandra Kumar Ramasamy ( chandrakumar.ramasamy@amd.com )\r\nSavan Anadani ( savan.anadani@amd.com )\r\n\r\nSigned-off-by: sanadani <savan.anadani@amd.com>","created_at":"2023-01-19T11:40:02Z","closed_at":"2023-01-24T14:05:07Z","merged_at":"2023-01-24T14:05:07Z","user_id":115523155,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1209766939,"title":"Warning about reshuffle_each_iteration=True","body":"`tf.data.Dataset.shuffle` has argument `reshuffle_each_iteration` which if set to True like  `tf.data.Dataset.shuffle (reshuffle_each_iteration=True)` which may lead to data leakage issue which is not desirable for model training. Please refer to attached [gist](https://colab.research.google.com/gist/gaikwadrahul8/b54a085807b105be1a91c4f8e6957590/-59279.ipynb ) demonstrating data leakage with this option. Hence a warning note should be mentioned to make the users aware of it.Please review it and do the needful.Thank you!","created_at":"2023-01-19T10:01:30Z","closed_at":"2023-01-30T18:13:54Z","merged_at":null,"user_id":115997457,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1209311621,"title":"[tosa] Legalize tfl.while_loop to tosa.while_loop and add its Lit test case","body":"Added the tfl.while_loop to TOSA legalization and lit test cases. \r\n\r\nImplementation inspired by the [TosaToSCF pass implementation](https://github.com/llvm/llvm-project/blob/main/mlir/lib/Conversion/TosaToSCF/TosaToSCF.cpp) by @rsuderman \r\n\r\nThe issue [tfl.while and tfl.if legalization to tosa](https://github.com/iree-org/iree/issues/9863) raised by @scottcantreid could also be fixed. \r\n\r\nSigned-off-by: Jerry Ge <jerry.ge@arm.com>","created_at":"2023-01-19T00:31:21Z","closed_at":"2023-01-19T19:15:16Z","merged_at":"2023-01-19T19:15:16Z","user_id":24451859,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1209308919,"title":"Batched FP8 GEMMs in XLA","body":"Enables batched FP8 GEMMs and adds support for the bitcasting of operands of FP8 GEMMs.","created_at":"2023-01-19T00:27:35Z","closed_at":"2023-01-23T08:53:14Z","merged_at":"2023-01-23T08:53:13Z","user_id":80296164,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1209289291,"title":"[oneDNN][tfg] NOT a PR - PDLL type expression test.","body":"@ChiaHungDuan  Could you please give me a favor getting around build error?\r\n\r\n**Reproducer:**\r\n`bazel build -c opt //tensorflow/core/transforms:tfg-transforms-opt`\r\n\r\n**Error:**\r\n```\r\ntensorflow/core/transforms/remapper/BUILD:14:18: TdGenerate tensorflow/core/transforms/remapper/pdll/MklPDLLPatterns.h.inc failed: (Segmentation fault): mlir-pdll failed: error executing command bazel-out/k8-opt-exec-50AE0418/bin/external/llvm-project/mlir/mlir-pdll '-x=cpp' tensorflow/core/transforms/remapper/pdll/mkl_patterns.pdll -I ./tensorflow/core/transforms/include -I ... (remaining 15 arguments skipped)\r\n<mlir_parser_buffer>:1:10: error: `!\"tf_type\"<\"control\">` type created with unregistered dialect. If this is intended, please call allowUnregisteredDialects() on the MLIRContext, or use -allow-unregistered-dialect with the MLIR opt tool used\r\n!tf_type.control\r\n         ^\r\nPLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace.\r\n```","created_at":"2023-01-19T00:01:33Z","closed_at":"2023-02-03T00:05:23Z","merged_at":null,"user_id":27521767,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1202002388,"title":"[oneDNN] Update oneDNN version to 2.7.3","body":null,"created_at":"2023-01-18T17:05:05Z","closed_at":"2023-01-20T08:51:57Z","merged_at":"2023-01-20T08:51:57Z","user_id":42224728,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1201601204,"title":"[oneDNN] Fix the collective_test python failure with tensorflow:devel container","body":"This PR fixes collective_combine_all_reduce_test_cpu and collective_test_cpu python tests, which fail when run in tensorflow:devel docker container, due to the older version of numpy.\r\nNumpy version used in container is 1.18.5, which shows above test failures. The tests are fixed by moving the dtype check after the result_dtensor is converted to numpy array from dtensor.","created_at":"2023-01-18T12:22:01Z","closed_at":"2023-01-18T22:21:56Z","merged_at":"2023-01-18T22:21:56Z","user_id":43043975,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":1201171655,"title":"Multiple Dynamic Pipelines","body":null,"created_at":"2023-01-18T05:16:40Z","closed_at":"2023-01-18T05:21:56Z","merged_at":null,"user_id":596029,"sentiment":{"polarity":0.0,"subjectivity":0.08333333333333333}}
{"_id":1200980589,"title":"Update rocblas import path","body":"Updated rocblas import path.\r\nFixes: https://github.com/tensorflow/tensorflow/issues/59073","created_at":"2023-01-17T23:49:04Z","closed_at":"2023-01-25T11:27:53Z","merged_at":"2023-01-25T11:27:53Z","user_id":73069040,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1200339642,"title":"Fix possible buffer underflow in hlo_parser","body":"Possible buffer underflow if `nest_level` becomes negative.\r\n\r\nThis PR is part of https://github.com/tensorflow/tensorflow/pull/57892\r\n\r\nBug was found by [Svace static analyzer](https://www.ispras.ru/en/technologies/svace/) (more [info](https://svace.pages.ispras.ru/svace-website/en/)).","created_at":"2023-01-17T14:15:35Z","closed_at":"2023-01-23T18:06:11Z","merged_at":"2023-01-23T18:06:11Z","user_id":13482580,"sentiment":{"polarity":0.0,"subjectivity":1.0}}
{"_id":1199931675,"title":"[oneDNN][AArch64] Updates oneDNN and Compute Library versions","body":"For AArch64 build with oneDNN+ACL (--config=mkl_aarch64 or mkl_aarch64_threadpool)\r\n- Updates oneDNN to v2.7.3 release\r\n- Updates Compute Library (ACL) to v22.11 release\r\n- Removes two patches to ACL which are no longer required -- tensorflow/third_party/compute_library/acl_depthwise_updateable_weights.patch -- tensorflow/third_party/compute_library/acl_fixup_SVE_merges.patch\r\n- Adds a new patch to fix minor issue in OpenMP build (addressed in next ACL release).\r\ntensorflow/third_party/compute_library/acl_openmp_fix.patch","created_at":"2023-01-17T08:42:51Z","closed_at":"2023-01-19T22:01:55Z","merged_at":"2023-01-19T22:01:55Z","user_id":32057673,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1198585083,"title":"Rewrite check in SubBuffer() constructor to satisfy ASAN checks","body":"Compare elements count instead of pointers to omit default ostream<<(signed char*) behaviour and fix undefined behaviour - pointer should point into the allocated memory or one element past it while in this check it may point far past allocated memory.\r\n\r\nFound during fuzz testing of Tensor::SubSlice() method, the original problem was fixed [here](https://github.com/tensorflow/tensorflow/pull/59266).","created_at":"2023-01-16T07:52:47Z","closed_at":"2023-02-14T18:20:23Z","merged_at":"2023-02-14T18:20:23Z","user_id":97965003,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1198569140,"title":"Correct index check for Tensor::SubSlice() method accordingly to documentation and SubBuffer() checks","body":"Found during fuzz testing Tensor::SubSlice() function - it allows to pass 'index' that is equal to dimension(0) size.\r\nInstead of failing on\r\n`CHECK_LE(index, dim0_size);  // Crash ok.` (line 1019)\r\nit fails here:\r\n`CHECK_LE(this->base<T>() + n, root_limit);` (line 964)\r\nline in the SubBuffer constructor for all types, except signed and unsigned char (where it triggers ASAN violation - this will be fixed separately).\r\n\r\nP.S. What should be done for tensor with dim_size(0) = 0? Before this change it allows operation for index == 0 and failed for others.\r\nWith this fix 'index' will be entirely ignored for this case. Is it the intended behaviour?","created_at":"2023-01-16T07:31:53Z","closed_at":"2023-02-14T18:20:25Z","merged_at":null,"user_id":97965003,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1197376280,"title":"Clean up CUDA and oneDNN warnings.","body":"This PR cleans up the CUDA/oneDNN warnings produced by Tensorflow when running on a machine without a GPU. \r\nPR includes the following changes\r\n1) More meaningful CUDA/oneDNN warnings .\r\n2) Dynamic library warnings are sent to VLOG instead of LOG\r\n3) Remove duplicate unused CPU instruction warning.\r\n\r\nBefore this change the following are the warnings produced by TF when running on a system without a GPU\r\n```\r\n2023-01-11 23:41:17.024611: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA\r\nTo enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.\r\n2023-01-11 23:41:17.149666: I tensorflow/core/util/port.cc:110] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.\r\n2023-01-11 23:41:17.152265: W tensorflow/tsl/platform/default/dso_loader.cc:66] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory\r\n2023-01-11 23:41:17.152281: I tensorflow/tsl/cuda/cudart_stub.cc:28] Ignore above cudart dlerror if you do not have a GPU set up on your machine.\r\n2023-01-11 23:41:17.930844: W tensorflow/tsl/platform/default/dso_loader.cc:66] Could not load dynamic library 'libnvinfer.so.8'; dlerror: libnvinfer.so.8: cannot open shared object file: No such file or directory\r\n2023-01-11 23:41:17.930912: W tensorflow/tsl/platform/default/dso_loader.cc:66] Could not load dynamic library 'libnvinfer_plugin.so.8'; dlerror: libnvinfer_plugin.so.8: cannot open shared object file: No such file or directory\r\n2023-01-11 23:41:17.930922: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.\r\n2023-01-11 23:41:18.679991: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA\r\nTo enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.\r\n2023-01-11 23:41:18.687595: W tensorflow/tsl/platform/default/dso_loader.cc:66] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory\r\n2023-01-11 23:41:18.687615: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)\r\n2023-01-11 23:41:18.687638: I tensorflow/compiler/xla/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (8f46f6c764cc): /proc/driver/nvidia/version does not exist\r\n```\r\nThe warnings with the changes in this PR\r\n```\r\n2023-01-12 18:05:36.130290: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.\r\nTo enable the following instructions: SSE3 SSE4.1 SSE4.2 AVX AVX2 AVX512F FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.\r\n2023-01-12 18:05:36.250998: I tensorflow/core/util/port.cc:110] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.\r\n2023-01-12 18:05:36.253648: I tensorflow/tsl/cuda/cudart_stub.cc:28] Could not find cuda drivers on your machine, GPU will not be used.\r\n2023-01-12 18:05:36.980643: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: TensorRT is not installed.\r\n```","created_at":"2023-01-13T23:39:21Z","closed_at":"2023-01-25T10:11:27Z","merged_at":"2023-01-25T10:11:27Z","user_id":25374808,"sentiment":{"polarity":0.3666666666666667,"subjectivity":0.7000000000000001}}
{"_id":1197007208,"title":"[oneDNN-aarch64] Update threadpool scheduler to make local thread act…","body":"…ivate and deactivate tp\r\n\r\nResolves segmentation fault in https://github.com/tensorflow/tensorflow/pull/58071/\r\n\r\nSigned-off-by: cfRod <crefeda.rodrigues@arm.com>","created_at":"2023-01-13T16:52:08Z","closed_at":"2023-01-18T21:30:28Z","merged_at":"2023-01-18T21:30:28Z","user_id":65665931,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1196398869,"title":"Update sqlite to sqlite-amalgamation-3400100","body":"This PR updates sqlite to the latest sqlite-amalgamation-3400100 for purpose of fixing vul mentioned in #59225.\r\n\r\nThis PR fixes #59225.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2023-01-13T08:59:35Z","closed_at":"2023-01-17T21:27:54Z","merged_at":"2023-01-17T21:27:54Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1196025722,"title":"Handle dict of metrics in distributed training","body":"When training with a model with a subclass `tf.keras.metrics.Metric` which which returns a dict, e.g.\r\n\r\n```\r\nclass CustomMetric(tf.keras.metrics.Metric):\r\n    def result(self):\r\n        return {\"good\", tf.convert_to_tensor([1.0]), \"bad\": tf.convert_to_tensor([0.0])}\r\n```\r\n\r\nI got an exception in `merge_fn_wrapper` when trying to call `array_ops.identity` on a `Dict[str, tf.Tensor]`. This fix allows me to do distributed training with the above metric.","created_at":"2023-01-13T00:10:43Z","closed_at":"2023-01-13T16:24:26Z","merged_at":null,"user_id":241317,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1195811852,"title":"[NVIDIA TF] Avoid cudaSetDevice to \"invisible\" GPU in CreateDevices","body":"CreateDevices caches and re-stores the current device with cudaGetDevice and cudaSetDevice. Before any CUDA devices have been initialized, cudaGetDevice returns a default value of zero. So, if device zero is not among the visible devices, the function will \"restore\" (call cudaSetDevice on) an ineligible GPU. This was previously harmless, but in some cases (e.g., CUDA 12 with CUDA lazy module laoding enabled) it can now result in a spurious CUDA context being created on device zero.\r\n\r\nThis PR fixes the problem by restoring the original device only if it is among the set of visible GPUs. Otherwise, the first listed visible GPU is set.","created_at":"2023-01-12T19:57:26Z","closed_at":"2023-01-19T06:43:29Z","merged_at":"2023-01-19T06:43:29Z","user_id":1873655,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1195722946,"title":"Update the RBE images to the latest container versions","body":"This PR was created by a GitHub Actions workflow to update all the SIG Build-based RBE containers to the most recent containers. See:\n\n- https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/toolchains/remote_config/configs.bzl\n- https://github.com/tensorflow/tensorflow/blob/master/.github/workflows/update-rbe.yml","created_at":"2023-01-12T18:24:37Z","closed_at":"2023-01-13T19:30:09Z","merged_at":"2023-01-13T19:30:09Z","user_id":16359713,"sentiment":{"polarity":0.5,"subjectivity":0.9}}
{"_id":1195604917,"title":"[Linaro:ARM_CI] Do not abort ARM_CD action for failure on Python 3.11","body":"Mark the Python 3.11 job with continue-on-error so that any failures seen there do not abort the other jobs.","created_at":"2023-01-12T16:42:20Z","closed_at":"2023-01-13T23:17:02Z","merged_at":"2023-01-13T23:17:02Z","user_id":10442001,"sentiment":{"polarity":-0.10833333333333335,"subjectivity":0.2}}
{"_id":1194743580,"title":"[oneDNN] fix matmul dest memory initialization","body":"matmul primitive destination memory was initialized with incorrect memory descriptor, here is a fix for potential issue.","created_at":"2023-01-12T04:21:18Z","closed_at":"2023-01-23T17:56:38Z","merged_at":"2023-01-23T17:56:38Z","user_id":89007109,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1194619520,"title":"[PJRT C API] fix bug for CApi Bypass path","body":"wrapped_ variable only works in c api bypass path(c wrapper path) since those struct(PJRT_Buffer, PJRT_Client, PJRT_Device) is only defined in the c api wrapper path but treated as opaque handle under real C API path.","created_at":"2023-01-12T01:04:52Z","closed_at":"2023-02-04T00:57:38Z","merged_at":"2023-02-04T00:57:38Z","user_id":6346853,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1194606372,"title":"Add the external delegate to the tflite c shared library","body":"This PR adds the [external delegate](https://github.com/tensorflow/tensorflow/tree/master/tensorflow/lite/delegates/external) cc_library to the tflite C api's `tflite_cc_shared_object` so it can be used from the `//tensorflow/lite/c:libtensorflowlite_c.so` shared object.\r\n\r\n~This does not appear to increase the binary size at all (using `wc -c` to check), so I assume it may already have been linked but not exposed.~ It is not included. I'm investigating why. I'd convert this PR to a draft, but I can't seem to do that.\r\n\r\nIf this doesn't seem like the right approach, I can instead add a new `tflite_cc_shared_object` target to `tensorflow/lite/delegates/external/BUILD` just for the external delegate.","created_at":"2023-01-12T00:45:13Z","closed_at":"2023-01-12T17:34:48Z","merged_at":null,"user_id":1474501,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":1194563408,"title":"Fix crash in stateless_random_binomial when shape type is int64","body":"This PR tries to address the issue raised in 59160 where stateless_random_binomial will crash when shape type is int64.\r\n\r\nThis PR fixes #59160.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2023-01-11T23:35:55Z","closed_at":"2023-01-18T21:54:08Z","merged_at":"2023-01-18T21:54:08Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1194274609,"title":"Fix leak in extract_stacktrace.","body":"These are strong references, so we need to unref them.\r\n Without the fix in Py3.11 op_test.GraphTest.testGarbageCollected fails.","created_at":"2023-01-11T19:18:27Z","closed_at":"2023-01-12T18:04:08Z","merged_at":"2023-01-12T18:04:08Z","user_id":138060,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1194144261,"title":"[ROCm] enable potrfBatched for ROCm","body":"We notice potrfBatched is not enable for ROCm even we already implemented it long time ago. So this PR is added it.\r\n\r\nThanks /cc @cheshire ","created_at":"2023-01-11T17:16:19Z","closed_at":"2023-01-17T19:49:07Z","merged_at":"2023-01-17T19:49:07Z","user_id":913790,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1194063660,"title":"keep colocated identity node in remove_training_nodes","body":"If we simply remove identity nodes, there will be an error \r\n\"Node 'xxx' expects to be colocated with unknown node 'xxx'(identity node)\".\r\n\r\nSo we keep identity nodes which are colocated with other nodes.","created_at":"2023-01-11T16:11:41Z","closed_at":"2023-01-13T20:22:36Z","merged_at":"2023-01-13T20:22:36Z","user_id":39154010,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1193878039,"title":"Fix docstring typo","body":null,"created_at":"2023-01-11T14:03:02Z","closed_at":"2023-01-19T19:21:47Z","merged_at":"2023-01-19T19:21:47Z","user_id":75068813,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1193613334,"title":"Update cloning target","body":"Update cloning target from tensorflow/tensorflow to tensorflow/tflite-micro.","created_at":"2023-01-11T10:41:33Z","closed_at":"2023-01-11T10:48:43Z","merged_at":null,"user_id":86464649,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1193586923,"title":"[Linaro:ARM_CI] Add Python 3.11 to test runs","body":null,"created_at":"2023-01-11T10:19:11Z","closed_at":"2023-01-11T20:12:10Z","merged_at":"2023-01-11T20:12:10Z","user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1192889080,"title":"[NVIDIA XLA] Generalize call target in UpcastingF16ToF32.","body":"Update gemm_rewrite_test case to account for use of cublaslt.\r\n\r\nCC @cheshire ","created_at":"2023-01-10T20:45:48Z","closed_at":"2023-01-13T20:08:29Z","merged_at":null,"user_id":1873655,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1192699151,"title":"[mhlo] fix build rules for the MhloPasses target","body":"The MhloPasses library, which contains code from\r\nsymbolic_shape_optimization.cc, refers to\r\n`ShapeComponentAnalysis::GetValueInfo()`, which is defined in\r\nshape_component_analysis.cc, which is a part of the MhloAnalysis target.\r\nHowever, the CMake rules for building MhloPasses do not add MhloAnalysis\r\nas a dependency, causing undefined reference errors in downstream\r\ntargets.\r\n\r\nAs an ancillary change, this patch also removes the MhloAnalysis\r\ndependency in the rule for building mlir-hlo-opt, since the now-fixed\r\ndependency in MhloPasses carries over to the mlir-hlo-opt target.","created_at":"2023-01-10T17:28:54Z","closed_at":"2023-01-31T14:34:53Z","merged_at":"2023-01-31T14:34:53Z","user_id":19678,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1192498154,"title":"[ROCm] fixed batch matmul in bf16","body":"Previous PR https://github.com/tensorflow/tensorflow/pull/58743 will cause a few batch mamul unit tests failed as the data casting incorrectly. This PR has fixed it. \r\n\r\nPlease have a check /cc @cheshire @akuegel Thanks in advance!","created_at":"2023-01-10T14:53:21Z","closed_at":"2023-01-12T19:32:57Z","merged_at":"2023-01-12T19:32:57Z","user_id":913790,"sentiment":{"polarity":0.1,"subjectivity":0.2}}
{"_id":1192082405,"title":"Make Aarch64 not a legacy platform","body":"This allows for MKL convolution primitives to always be cached on Aarch64.","created_at":"2023-01-10T09:38:34Z","closed_at":"2023-02-07T16:14:45Z","merged_at":"2023-02-07T16:14:45Z","user_id":49619252,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1191529094,"title":"Fix crash in BlockLSTM","body":"This PR tries to address the issue raised in 58175 in addressing the crash of BlockLSTM when invalid input is provided.\r\n\r\nThis PR fixes #58175.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2023-01-09T22:16:12Z","closed_at":"2023-01-20T16:46:33Z","merged_at":"2023-01-20T16:46:33Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1191327579,"title":"[NVIDIA TF] Enable BF16 Softsign, Softplus, and Relu ops","body":"Adds GPU bfloat16 support for these unary ops which use `TF_CALL_GPU_NUMBER_TYPES`:\r\n\r\n* Softsign\r\n* Softplus\r\n* Relu\r\n* Relu6\r\n* LeakyRelu\r\n* Elu\r\n* Selu","created_at":"2023-01-09T19:32:25Z","closed_at":"2023-01-10T14:50:54Z","merged_at":"2023-01-10T14:50:54Z","user_id":12981474,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1191253820,"title":"[NVIDIA TF] Enable BF16 Image and Resize ops","body":"Adds GPU bfloat16 support for:\r\n* ExtractImagePatches\r\n* ExtractVolumePatches\r\n* ResizeBilinear\r\n* ResizeNearestNeighbor\r\n\r\nThe resize ops already have bfloat16 unit tests in `python/ops/image_grad_test_base.py`.\r\n\r\n`CropAndResize` used the `TF_CALL_GPU_NUMBER_TYPES` macro, but we don't want to add BF16 kernels since the op itself doesn't allow it. Removed use of the macro to avoid issues when we add bf16 to the macro.","created_at":"2023-01-09T18:35:28Z","closed_at":"2023-01-12T18:04:08Z","merged_at":"2023-01-12T18:04:08Z","user_id":12981474,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1190984054,"title":"mhlo: fix build errors and warnings in tosa pipeline","body":"Prior to this patch, the MHLO tosa directory was skipped in the CMake\r\nbuilds, and some of the include directives pointed to incorrect header\r\nfiles.  This patch fixes the build rules and the header paths so that\r\nthe mhlo-tosa-opt binary can be built using CMake.","created_at":"2023-01-09T15:23:03Z","closed_at":"2023-01-25T15:24:32Z","merged_at":null,"user_id":19678,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1190148878,"title":"liV Elive Yestif","body":null,"created_at":"2023-01-09T03:43:32Z","closed_at":"2023-01-09T16:57:46Z","merged_at":null,"user_id":99760861,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1190083750,"title":"Fix stats bug in cuda_malloc_async allocator","body":"There was a race condition between calling `cuMemAllocFromPoolAsync` or `cuMemFreeAsync` and updating the corresponding stats. This caused inconsistent stats, and a failure of the `DCHECK` in `DeallocateRaw` in debug builds.\r\n\r\nThis PR moves the lock around the alloc/free calls as well as the stats update so that they remain consistent.\r\n\r\ncc @nluehr @pjannaty ","created_at":"2023-01-09T02:04:19Z","closed_at":"2023-01-12T21:29:45Z","merged_at":"2023-01-12T21:29:45Z","user_id":3979096,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1189623875,"title":"Update curl to 7.87.0","body":"This PR updates curl to 7.87.0 to fix the following vulnerabilities in previous 7.86.0 inside tensorflow:\r\n    \r\n- CVE-2022-43552: HTTP Proxy deny use-after-free   2022-12-21\r\n- CVE-2022-43551: Another HSTS bypass via IDN   2022-12-21\r\n    \r\nSee https://curl.se/docs/security.html\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2023-01-08T01:11:40Z","closed_at":"2023-01-11T00:13:30Z","merged_at":"2023-01-11T00:13:30Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1188953672,"title":"[MklEinsumop] reorder the weights into mkl primitive requested format","body":null,"created_at":"2023-01-07T05:39:32Z","closed_at":"2023-01-10T17:51:27Z","merged_at":"2023-01-10T17:51:26Z","user_id":87143774,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1188829042,"title":"[NVIDIA XLA:GPU] cuDNN fMHA support infrastructure","body":null,"created_at":"2023-01-07T00:31:58Z","closed_at":"2023-02-28T10:37:22Z","merged_at":null,"user_id":42984676,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1188821524,"title":"[NVIDIA XLA:GPU] Fused MHA rewriter","body":"cuDNN currently supports and the rewriter matches the following patterns for Multi-headed attention:\r\n1. BMM1 - BMM2\r\n2. BMM1 - Scale - Bias - Mask - Softmax - BMM2 \r\n3. BMM1 - Scale - Bias - Mask - Softmax - Dropout - BMM2\r\n4. BMM1 - Scale - Mask - Softmax - BMM2\r\n5. BMM1 - Scale - Mask - Softmax - Dropout - BMM2 \r\n6. BMM1 - Softmax - Dropout - BMM2 \r\n\r\nThis PR adds rewriter support for the first pattern. \r\nThe following pattern is matched here:\r\n`Output = BMM2(BMM1(Q,K), V)`\r\nThe other infrastructure piece is in https://github.com/tensorflow/tensorflow/pull/59154\r\n","created_at":"2023-01-07T00:16:30Z","closed_at":"2023-02-28T10:37:44Z","merged_at":null,"user_id":42984676,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1188802681,"title":"[NVIDIA TF] Enable BF16 Histogram","body":"Support gpu bfloat16 histogram op","created_at":"2023-01-06T23:40:41Z","closed_at":"2023-01-12T18:10:22Z","merged_at":"2023-01-12T18:10:22Z","user_id":12981474,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1188795434,"title":"[NVIDIA TF] Enable BF16 OneHot","body":"Adds gpu bfloat16 OneHot op.","created_at":"2023-01-06T23:29:55Z","closed_at":"2023-01-11T17:52:26Z","merged_at":"2023-01-11T17:52:26Z","user_id":12981474,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1188793862,"title":"[NVIDIA TF] Relax protobuf version requirement","body":"Relax protobuf python package requirement to allow 3.x versions above 3.20.\r\nThis brings the requirement into line with other packages such as tensorboard.","created_at":"2023-01-06T23:26:32Z","closed_at":"2023-01-23T16:03:23Z","merged_at":null,"user_id":1873655,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1188789308,"title":"[NVIDIA TF] Enable BF16 MatrixBandPart, MatrixDiagPart, MatrixSetDiag","body":"Adds gpu bfloat16 support for MatrixBandPart, MatrixDiagPart, MatrixSetDiag","created_at":"2023-01-06T23:17:34Z","closed_at":"2023-01-11T17:44:56Z","merged_at":"2023-01-11T17:44:56Z","user_id":12981474,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1188778750,"title":"[NVIDIA TF] Incrase default GPU HOST MEM LIMIT to 128GB","body":"The previous limit of 64GB was set some years ago when GPU memories were ~16GB.\r\nSome models will fail due to exhausting the 64GB limit when run on machines with multiple large-memory GPUs.\r\nHere we raise the limit to 128 GB, which seems to be sufficient for the cases we are familiar with.","created_at":"2023-01-06T23:00:28Z","closed_at":"2023-01-18T23:36:30Z","merged_at":"2023-01-18T23:36:30Z","user_id":1873655,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1188775917,"title":"[NVIDIA TF] Enable BF16 SparseReorder and SparseToDense","body":"Support gpu bfloat16 sparse ops which would be enabled by the `TF_CALL_GPU_NUMBER_TYPES` macro.","created_at":"2023-01-06T22:54:55Z","closed_at":"2023-01-11T17:48:54Z","merged_at":"2023-01-11T17:48:54Z","user_id":12981474,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1188769383,"title":"[NVIDIA XLA] TensorFloat32 related test fixes in xla","body":"This PR extends the tsl::enable_tensor_float_32_execution API to the cublas and cublaslt integration within XLA. It then uses that API to configure some gemm_rewrite_test and matmul_test cases to use float32 rather than TF32 since those tests' tolerances were developed assuming full precision.\r\n\r\nThis is a resubmission of PRs https://github.com/tensorflow/tensorflow/pull/58877 and https://github.com/tensorflow/tensorflow/pull/59111. The first of these was reverted due to an issue with status linking. This should be fixed in the present PR.\r\n\r\nAttention: @reedwm and @akuegel ","created_at":"2023-01-06T22:42:45Z","closed_at":"2023-01-13T20:09:22Z","merged_at":null,"user_id":1873655,"sentiment":{"polarity":0.0,"subjectivity":0.4}}
{"_id":1188762618,"title":"[NVIDIA TF] Enable BF16 EuclideanNorm","body":"Support gpu bfloat16 EuclideanNorm reduction.","created_at":"2023-01-06T22:35:20Z","closed_at":"2023-01-10T11:15:26Z","merged_at":"2023-01-10T11:15:26Z","user_id":12981474,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1188744272,"title":"[NVIDIA TF] Enable BF16 Roll op","body":"GPU bfloat16 support for Roll op.\r\n\r\ncc @cantonios @reedwm ","created_at":"2023-01-06T22:10:02Z","closed_at":"2023-01-09T21:29:48Z","merged_at":"2023-01-09T21:29:48Z","user_id":12981474,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1188735563,"title":"[NVIDIA TF] Enable BF16 DynamicPartition and DynamicStitch ops","body":"Add gpu bfloat16 support for DynamicPartition and DynamicStitch.\r\n\r\ncc @cantonios @reedwm ","created_at":"2023-01-06T22:00:26Z","closed_at":"2023-01-11T17:55:47Z","merged_at":"2023-01-11T17:55:46Z","user_id":12981474,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1188726779,"title":"[NVIDIA TF] Enable BF16 SegmentReduction ops","body":"Adds GPU bfloat16 support for all SegmentReduction ops.\r\n\r\ncc @cantonios @reedwm ","created_at":"2023-01-06T21:51:11Z","closed_at":"2023-01-19T19:08:44Z","merged_at":"2023-01-19T19:08:44Z","user_id":12981474,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1188704965,"title":"Corrects DNNL_VERSION_MINOR set in mkldnn_acl.BUILD","body":"PR https://github.com/tensorflow/tensorflow/pull/57842 neglected to update the oneDNN version in mkldnn_acl.BUILD to match the version set in workspace2.bzl","created_at":"2023-01-06T21:34:09Z","closed_at":"2023-01-11T04:45:05Z","merged_at":"2023-01-11T04:45:05Z","user_id":32057673,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1188701364,"title":"TensorFloat32 Test Fixes for TensorFlow core and python tests","body":"Configure tests to use float32 compute type as expected by the thresholds as currently calibrated.\r\n\r\nAttn: @reedwm ","created_at":"2023-01-06T21:28:53Z","closed_at":"2023-01-23T23:24:22Z","merged_at":"2023-01-23T23:24:22Z","user_id":1873655,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1188537214,"title":"Continuation of #58868","body":"See #58868","created_at":"2023-01-06T18:56:30Z","closed_at":"2023-01-12T18:19:29Z","merged_at":"2023-01-12T18:19:29Z","user_id":4316856,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1188456641,"title":"add fuzztest.bazelrc","body":null,"created_at":"2023-01-06T17:35:12Z","closed_at":"2023-01-06T17:41:36Z","merged_at":null,"user_id":4316856,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1188414984,"title":"[AMD-ZENDNN] Code changes to support TF-Plugin for AMD CPU Inference","body":"With this code change we introduce, Zen layout pass to re-write supported ops with ZenOps.\r\nAll code changes are under AMD_ZENDNN flag which is enabled for linux builds only.\r\n\r\nAuthors:\r\n  Aakar Dwivedi ( aakar.dwivedi@amd.com )\r\n  Aditya Chatterjee ( aditya.chatterjee@amd.com )\r\n  Arun Coimbatore Ramachandran ( aruncoimbatore.ramachandran@amd.com )\r\n  Avinash-Chandra Pandey ( avinash-chandra.pandey@amd.com )\r\n  Chandra Kumar Ramasamy ( chandrakumar.ramasamy@amd.com )\r\n  Savan Anadani ( savan.anadani@amd.com )\r\n\r\nSigned-off-by: Aakar Dwivedi <Aakar.Dwivedi@amd.com>","created_at":"2023-01-06T16:54:36Z","closed_at":"2023-01-24T08:15:02Z","merged_at":"2023-01-24T08:15:02Z","user_id":82587125,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1187391104,"title":"[ROCm] Enable roundeven LLVM op for AMDGPU.","body":"LLVM support for roundeven is now available for AMDGPU, so this functionality can now be enabled.\r\n\r\n/cc @cheshire ","created_at":"2023-01-06T01:47:09Z","closed_at":"2023-01-09T09:29:54Z","merged_at":"2023-01-09T09:29:54Z","user_id":70280935,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1187317564,"title":"Always flush after each log.","body":"Fixes #59115","created_at":"2023-01-06T00:08:06Z","closed_at":"2023-01-17T10:03:16Z","merged_at":"2023-01-17T10:03:16Z","user_id":6042948,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1186885197,"title":"[NVIDIA XLA] Use FP32 for xla matmul_test on Ampere+ GPUs","body":"Run tests with float32 precision as this is the precision their tolerances were calibrated for.","created_at":"2023-01-05T18:11:45Z","closed_at":"2023-01-05T19:40:54Z","merged_at":null,"user_id":1873655,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1186880868,"title":"[oneDNN] Increasing mkl mem alloc threshold","body":"This PR increases the threshold to use default allocator from 4K to 256K based on internal benchmarking.","created_at":"2023-01-05T18:08:42Z","closed_at":"2023-01-17T09:14:39Z","merged_at":"2023-01-17T09:14:39Z","user_id":39842562,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1186871471,"title":"[oneDNN] Increase MklCpuAllocator threshold","body":"This PR increases the threshold to use default allocator from 4K to 256K based on internal benchmarking.","created_at":"2023-01-05T18:01:30Z","closed_at":"2023-01-05T18:03:52Z","merged_at":null,"user_id":39842562,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1185598248,"title":"[NVIDIA TF] DTensor ReduceScatter GPU implementation via NCCL","body":"This PR allows DTensor to use [NCCL's reduce-scatter implementation](https://docs.nvidia.com/deeplearning/nccl/user-guide/docs/api/colls.html#c.ncclReduceScatter).\r\n\r\nChanges:\r\n* Added new TF op `CollectiveReduceScatterV2`, modeled after existing CollectiveV2 ops.\r\n* Added nccl backend implementation `NcclReduceScatterer` in `NcclManager` for `CollectiveReduceScatterV2`.\r\n* In DTensor's optimization passes, `LowerReduceScatterOp` will now lower `DTensorReduceScatter` to the new `CollectiveReduceScatterV2` for GPU targets.\r\n\r\nIn the future, we could add a CPU implementation for `CollectiveReduceScatterV2` and eliminate the decomposition to DTensorAllReduce+DTensorAllScatter in `LowerReduceScatterOp` .","created_at":"2023-01-04T23:53:25Z","closed_at":"2023-01-25T01:18:36Z","merged_at":"2023-01-25T01:18:36Z","user_id":12981474,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1185505957,"title":"[tosa] Legalize tfl.atan2 to tosa.table operation","body":"In a similar fashion to tfl.sin and tlf.cos legalization, a tosa.table provides an atan approximation. Additional logic is then used to determine the correct quadrant of the atan2 function.\r\n\r\nSigned-off-by: Luke Hutton <luke.hutton@arm.com>","created_at":"2023-01-04T22:12:37Z","closed_at":"2023-01-28T15:17:24Z","merged_at":"2023-01-28T15:17:23Z","user_id":35535092,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1185343206,"title":"[NVIDIA XLA] Add a new debug flag to turn off mlir pretty print form","body":"Introduce a debug flag \"xla_dump_enable_mlir_pretty_form\" to control pretty print form when dumping mlir. \r\nDisabling pretty form will make the dumped mlir parsable. LLVM states the pretty form is not parsable by any optimizer tool.\r\nWith pretty form:\r\n`func.func @main.3(%arg0: memref<4xi8> {lmhlo.params = 0 : index} \"Arg_0.1\"`\r\nThe string at the end is not parsable\r\nWith `xla_dump_enable_mlir_pretty_form=false`:\r\n`func.func @main.3(%arg0: memref<4xi8> {lmhlo.params = 0 : index} loc(\"Arg_0.1\")`","created_at":"2023-01-04T19:26:59Z","closed_at":"2023-01-13T09:02:38Z","merged_at":"2023-01-13T09:02:38Z","user_id":26332583,"sentiment":{"polarity":0.19318181818181818,"subjectivity":0.7272727272727273}}
{"_id":1185185328,"title":"Register 'MklEinsum' kernel for aarch64 platform","body":"MklEinsum is an MKL implementation for Einsum operator.\r\n","created_at":"2023-01-04T16:53:30Z","closed_at":"2023-01-05T19:42:47Z","merged_at":"2023-01-05T19:42:46Z","user_id":87143774,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1185157756,"title":"Fixedunigram assert","body":"Fixes: https://github.com/tensorflow/tensorflow/issues/59076","created_at":"2023-01-04T16:28:35Z","closed_at":"2023-01-05T19:48:42Z","merged_at":"2023-01-05T19:48:42Z","user_id":1710528,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1184301992,"title":"[MHLO] fold mhlo.clamp","body":"add folder of `mhlo.clamp`","created_at":"2023-01-04T04:57:09Z","closed_at":"2023-01-10T15:57:46Z","merged_at":"2023-01-10T15:57:46Z","user_id":29956693,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1182634752,"title":"[AMD-ZENDNN] Modifications to support ZenDNN mempool optimizations","body":"- ZenDNN mempool optimizations utilizes pre-allocated buffers with TF_Tensor.\r\n- Hence, amount of allocated TF_Tensor bytes can be greater than or equal to requested bytes by the Op execution.\r\n\r\nAuthors:\r\n  Aakar Dwivedi ( aakar.dwivedi@amd.com )\r\n  Avinash-Chandra Pandey ( avinash-chandra.pandey@amd.com )\r\n  Chandra Kumar Ramasamy ( chandrakumar.ramasamy@amd.com )\r\n  Savan Anadani ( savan.anadani@amd.com )\r\n\r\nSigned-off-by: Aakar Dwivedi <Aakar.Dwivedi@amd.com>","created_at":"2023-01-02T13:53:57Z","closed_at":"2023-01-07T01:04:52Z","merged_at":"2023-01-07T01:04:52Z","user_id":82587125,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1182200574,"title":"Cherrypick 760322a71ac9033e122ef1f4b1c62813021e5938 on r2.11","body":"Security fix","created_at":"2023-01-02T01:24:38Z","closed_at":"2023-01-19T22:49:29Z","merged_at":"2023-01-19T22:49:29Z","user_id":26277033,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1182200133,"title":"Cherrypick 760322a71ac9033e122ef1f4b1c62813021e5938 on r2.10","body":"Security fix","created_at":"2023-01-02T01:23:48Z","closed_at":"2023-01-19T17:49:19Z","merged_at":null,"user_id":26277033,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1182199659,"title":"Cherrypick 760322a71ac9033e122ef1f4b1c62813021e5938 on r2.9","body":"Security fix","created_at":"2023-01-02T01:22:59Z","closed_at":"2023-01-19T17:49:11Z","merged_at":null,"user_id":26277033,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1182197108,"title":"Cherrypick 760322a71ac9033e122ef1f4b1c62813021e5938 on r2.8","body":"Security fix","created_at":"2023-01-02T01:17:53Z","closed_at":"2023-01-19T17:48:58Z","merged_at":null,"user_id":26277033,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1181771708,"title":"[Docs] CONTRIBUTING.md: Fix incorrect description of the single component unit test","body":"Hi all,\r\n\r\nThe description of single component unit test of `softmax_op_test` is wrong in CONTRIBUTING.md.\r\n\r\nThis is because after the following patch, the test had been moved under `kernel_tests/nn_ops`.\r\n```\r\ncommit ab7c873202574b3cd549a93ccbfd881d659186ca\r\nAuthor: Rohan Jain <rohanj@google.com>\r\nDate:   Sun Oct 31 21:35:07 2021 -0700\r\n\r\n    Factoring out nn_ops tests into its own folder as per go/tf-ops-breakdown\r\n\r\n    PiperOrigin-RevId: 406745996\r\n    Change-Id: If331ccb474188dd8bb749843f1728ae0f23d5d8d\r\n\r\n```\r\n\r\nSo the test should be described as `tensorflow/python/kernel_tests/nn_ops:softmax_op_test`.\r\n\r\nThanks.\r\nBest regards,\r\nJie\r\n\r\n","created_at":"2023-01-01T10:54:21Z","closed_at":"2023-01-17T09:34:55Z","merged_at":"2023-01-17T09:34:55Z","user_id":19923746,"sentiment":{"polarity":-0.07142857142857142,"subjectivity":0.21428571428571427}}
{"_id":1180091784,"title":"Removing enable eager execution","body":"Removing enable eager execution . \r\n\r\nwith eager execution -Duration is  -0.017438432999995257, [gist_with_eager_execution](https://colab.research.google.com/gist/mohantym/3e26101ca0d047a85d3ab49d849ebcfa/jit_compile.ipynb#scrollTo=_a8GsNLVaLSQ)\r\n\r\nwithout eager execution - Duration is  -0.0063331670000081886 , [gist_without_eager_execution](https://colab.research.google.com/gist/mohantym/34ebe1a99061a7cd6494518a40da8670/jit_compile.ipynb#scrollTo=_a8GsNLVaLSQ)","created_at":"2022-12-29T09:33:21Z","closed_at":"2023-01-17T17:19:38Z","merged_at":"2023-01-17T17:19:38Z","user_id":86464649,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1179823757,"title":"Remove unused but set variable.","body":"This warning will trigger if clang's -Wunused-but-set-variable is enabled.","created_at":"2022-12-29T00:08:08Z","closed_at":"2022-12-30T03:52:18Z","merged_at":"2022-12-30T03:52:18Z","user_id":543755,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1179649745,"title":"Fix memory leaks in xla::CpuGpuFusionTest","body":"Leaks were detected by AddressSanitizer","created_at":"2022-12-28T18:27:54Z","closed_at":"2022-12-30T21:05:05Z","merged_at":"2022-12-30T21:05:05Z","user_id":98156533,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1179605605,"title":"Fix memory leaks in xla::HloProfileTest","body":"Leaks were detected by AddressSanitizer","created_at":"2022-12-28T17:22:54Z","closed_at":"2022-12-30T21:05:05Z","merged_at":"2022-12-30T21:05:05Z","user_id":98156533,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1179201020,"title":"Update GitHub Actions to avoid `set-output` deprecation","body":"Starting 1st June 2023 (planned) workflows, `::set-output name...::` syntax cannot be used. You can see the example warnings here: https://github.com/tensorflow/tensorflow/actions/runs/3752114734\r\n\r\nref. [GitHub Actions: Deprecating save-state and set-output commands | GitHub Changelog](https://github.blog/changelog/2022-10-11-github-actions-deprecating-save-state-and-set-output-commands/)\r\n\r\nThis PR fixes the issue by using the `GITHUB_OUTPUT` environment variable as instructed in the above article.\r\n","created_at":"2022-12-28T08:32:36Z","closed_at":"2022-12-28T16:53:04Z","merged_at":"2022-12-28T16:53:04Z","user_id":1425259,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1178949446,"title":"Use NHWC format for Conv with bfloat16 for NVIDIA GPU targets","body":"NHWC is the optimal format for cuDNN Conv with BFloat16 data types. Fix the heuristic to use this layout. I tested this with a unit test with just a conv layer and observed a 20% speedup with BFloat16 data type. \r\n","created_at":"2022-12-27T23:22:18Z","closed_at":"2023-01-24T10:50:45Z","merged_at":null,"user_id":114680953,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1178617488,"title":"Fixed wrong data in embedding_lookup op test","body":"tensor data has negative elements when TensorType set to be UINT8; modified negative elements to positive\r\n\r\nSigned-off-by: Feiyue.Chen","created_at":"2022-12-27T14:59:52Z","closed_at":"2022-12-30T03:44:14Z","merged_at":"2022-12-30T03:44:14Z","user_id":69809761,"sentiment":{"polarity":-0.2,"subjectivity":0.55}}
{"_id":1177753463,"title":"build: fix CMake rules for the MHLOTOSATransforms target","body":"A consumer of the MHLOTOSATransforms library (mhlo_tosa_opt.cc) calls\r\nthe `registerTosaPrepareMhloPassPass()` function, but this function is\r\nabsent from the MHLOTOSATransforms library since the source file\r\n(prepare_mhlo.cc) that contains the function is not included when\r\nbuilding the library target.\r\n\r\nAdditionally, prepare_mhlo.cc calls the\r\n`populateGeneralDotOpLoweringPatterns()` function, but the library\r\n(MhloPasses) that contains this function is not linked when compiling\r\nprepare_mhlo.cc.\r\n\r\nThis patch adds the necessary build rules to fix the above problems.","created_at":"2022-12-26T12:15:06Z","closed_at":"2022-12-30T22:32:16Z","merged_at":"2022-12-30T22:32:16Z","user_id":19678,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1177272040,"title":"Fix a check fail in GRUBlockCell","body":"Signed-off-by: Shogo Hida <shogo.hida@gmail.com>\r\n\r\nFixes #58261","created_at":"2022-12-25T15:07:44Z","closed_at":"2023-02-16T19:30:17Z","merged_at":null,"user_id":10365357,"sentiment":{"polarity":-0.5,"subjectivity":0.29999999999999993}}
{"_id":1174810136,"title":"[Linaro:ARM_CI] Drop Python 3.7 build as not supported","body":"ARM_CD is failing because it attempts to test TensorFlow on Python 3.7 but it fails to install as it now requires at least Python 3.8 so drop the Python 3.7 build and test.","created_at":"2022-12-22T09:49:55Z","closed_at":"2022-12-23T16:36:48Z","merged_at":"2022-12-23T16:36:48Z","user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1174458596,"title":"fix node connectivity in base_layer","body":"Add node connectivity setting when layer call outside Functional construction mode.","created_at":"2022-12-22T02:39:52Z","closed_at":"2022-12-22T12:15:00Z","merged_at":null,"user_id":52476578,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1174429472,"title":"[tflite] Add rank checking for MEAN, ADD, MUL, and DIV","body":"Preventing invalid some ops (MEAN, ADD, MUL, and DIV with tensors of ranks > 4)   from passing to NNAPI.\r\nThe MEAN, ADD, MUL, and DIV ops of NNAPI only support tensors of ranks <= 4.","created_at":"2022-12-22T01:52:31Z","closed_at":"2022-12-30T05:14:55Z","merged_at":"2022-12-30T05:14:55Z","user_id":3395998,"sentiment":{"polarity":-0.55625,"subjectivity":0.79375}}
{"_id":1174232069,"title":"[XLA:GPU] Add basic NVTX support to XLA Runtime","body":"This is a complement to https://github.com/tensorflow/tensorflow/pull/58675/ that did it on the old XLA Thunks executions.\r\nThis is complementary to https://github.com/openxla/xla/pull/439/ that changes the NVTX marker values to be the same as the #58675\r\n\r\n@ezhulenev ","created_at":"2022-12-21T21:05:51Z","closed_at":"2022-12-26T12:00:29Z","merged_at":"2022-12-26T12:00:29Z","user_id":180987,"sentiment":{"polarity":0.0,"subjectivity":0.125}}
{"_id":1174226851,"title":"[NVIDIA TF] Fix missing cuda headers in pip wheel","body":"We noticed that recently the cuda headers were not being included in the pip wheel, whereas previously they could be found at `/usr/local/lib/python3.8/dist-packages/tensorflow/include/third_party/gpus`. Many third party TensorFlow addons rely on these headers to build.\r\n\r\nI couldn't find out exactly when or why they stopped getting included in the wheel, but I was able to come up with these changes to fix the issue. If anyone has an idea of what could've happened or a better solution, I would be greatly interested.","created_at":"2022-12-21T21:00:03Z","closed_at":"2022-12-26T11:52:12Z","merged_at":"2022-12-26T11:52:12Z","user_id":12981474,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":1173927582,"title":"Removes unnecessary libgomp linkopt from oneDNN build on AArch64","body":null,"created_at":"2022-12-21T16:12:59Z","closed_at":"2023-01-03T17:13:30Z","merged_at":"2023-01-03T17:13:29Z","user_id":32057673,"sentiment":{"polarity":-0.4,"subjectivity":0.9}}
{"_id":1173454784,"title":"Fix memory leak in xla::SlowOperationAlarm","body":"Currently TSL threads (`tsl::Thread` and derived classes) can only be joined and it's done automatically in the destructor.\r\n\r\nThere's some threads that are essentially infinite loops (`xla::SlowOperationAlarm::AlarmLoop()` is an example), and as such these threads can't be joined (hence destructors for such thread objects can't be called)\r\n\r\nCurrent way of dealing with this is to forget about the pointer returned from `tsl::Env::Default()->StartThread` (as is done for `xla::SlowOperationAlarm::AlarmLoop()` thread) but this approach produces memory leaks that are detected by AddressSanitizer. At the moment at least 75 tests from `//tensorflow/compiler/xla/tests:` fail due to exactly that cause.\r\n\r\nThe proposed solution is to add possibility to detach threads, and to join the thread in the destructor only if it's not detached. This also supports the design idea that every thread created should be either joined or detached and should not be left dangled.","created_at":"2022-12-21T10:03:16Z","closed_at":"2022-12-28T09:59:26Z","merged_at":"2022-12-28T09:59:26Z","user_id":98156533,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1173069325,"title":"Update the RBE images to the latest container versions","body":"This PR was created by a GitHub Actions workflow to update all the SIG Build-based RBE containers to the most recent containers. See:\n\n- https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/toolchains/remote_config/configs.bzl\n- https://github.com/tensorflow/tensorflow/blob/master/.github/workflows/update-rbe.yml","created_at":"2022-12-21T02:02:33Z","closed_at":"2022-12-21T09:22:28Z","merged_at":"2022-12-21T09:22:28Z","user_id":16359713,"sentiment":{"polarity":0.5,"subjectivity":0.9}}
{"_id":1173027145,"title":"Update the RBE images to the latest container versions","body":"This PR was created by a GitHub Actions workflow to update all the SIG Build-based RBE containers to the most recent containers. See:\n\n- https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/toolchains/remote_config/configs.bzl\n- https://github.com/tensorflow/tensorflow/blob/master/.github/workflows/update-rbe.yml","created_at":"2022-12-21T00:55:27Z","closed_at":"2022-12-21T00:58:08Z","merged_at":null,"user_id":16359713,"sentiment":{"polarity":0.5,"subjectivity":0.9}}
{"_id":1172680161,"title":"Remove tf.contrib mentions.","body":"Removed tf.contrib mentions in TF1 doc strings to avoid confusion to the user.","created_at":"2022-12-20T19:34:09Z","closed_at":"2022-12-26T11:55:24Z","merged_at":"2022-12-26T11:55:23Z","user_id":73069040,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1172291925,"title":"[xla:gpu:runtime] Fix integer overflow in GetDeviceBufferPairs","body":"This fixes a 32-bit integer overflow in `collectives.cc:GetDeviceBufferPairs`.\r\nWhen buffers are very large, `int size` and `int element_count` might both overflow. \r\nUsing `int64_t` instead of `int` fixes this problem.","created_at":"2022-12-20T14:46:41Z","closed_at":"2022-12-23T19:40:40Z","merged_at":"2022-12-23T19:40:40Z","user_id":111377113,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1172016608,"title":"[tosa] Legalize tf.sin and tf.cos to tosa.table","body":"Moves the existing TFL legalization implementation to a common area so that the same legalization can be used for TF.\r\n\r\nSigned-off-by: Luke Hutton <luke.hutton@arm.com>","created_at":"2022-12-20T11:04:00Z","closed_at":"2023-01-18T00:26:52Z","merged_at":"2023-01-18T00:26:52Z","user_id":35535092,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1171553103,"title":"LHLO Translation Tests for GEMM Custom Calls","body":"Adds unit tests for the translation of GEMM Custom Calls from HLO to LHLO.","created_at":"2022-12-20T01:02:26Z","closed_at":"2022-12-23T16:36:48Z","merged_at":"2022-12-23T16:36:48Z","user_id":80296164,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1171544964,"title":"Re-fix nvidia; remove \"devel\" images","body":"Devel images are deprecated: use tensorflow/build instead.\n","created_at":"2022-12-20T00:43:45Z","closed_at":"2022-12-20T21:19:01Z","merged_at":"2022-12-20T21:19:01Z","user_id":32465472,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1170729989,"title":"[AMD-ZENDNN] Environment variable to enable AMD-ZENDNN plugin","body":"This pull request introduces the environment variable to enable AMD-ZENDNN Plugin\r\nAll code changes are under AMD_ZENDNN flag which is enabled for linux builds only.\r\n\r\nAuthors:\r\n    Aakar Dwivedi ( aakar.dwivedi@amd.com )\r\n    Chandra Kumar Ramasamy ( chandrakumar.ramasamy@amd.com )\r\n    Savan Anadani ( savan.anadani@amd.com )\r\n\r\nSigned-off-by: Aakar Dwivedi <Aakar.Dwivedi@amd.com>","created_at":"2022-12-19T13:03:27Z","closed_at":"2022-12-29T13:31:06Z","merged_at":"2022-12-29T13:31:06Z","user_id":82587125,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1169232629,"title":"Added rConcatenate method","body":"The rConcatenate is the other way round for Concatenate that merges but other before self.\r\n+ \r\nWas planning on adding \r\n`\r\n    self.batch_spec_data = input_dataset.element_spec[0].shape.rConcatenate(batch_size)\r\n`\r\nto  \"\\tensorflow\\python\\data\\ops\\dataset_ops.py\"\r\nbefore someone remove the BatchDataset Class :P","created_at":"2022-12-17T04:23:40Z","closed_at":"2022-12-27T22:38:13Z","merged_at":null,"user_id":82482064,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1169145451,"title":"Update BUILD","body":"Test change","created_at":"2022-12-17T01:08:09Z","closed_at":"2022-12-17T06:32:41Z","merged_at":null,"user_id":723624,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1169050346,"title":"Update BUILD","body":"Test tensorflow_federated visibility","created_at":"2022-12-16T22:44:34Z","closed_at":"2022-12-17T06:33:13Z","merged_at":null,"user_id":723624,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1168491765,"title":"Fix TIMEOUT issue in `label_image_test` on s390x","body":"Test case `//tensorflow/lite/examples/label_image:label_image_test` will time out on s390x (big-endian arch) because the image meta info (such as `header_size`) parsed from `img_bytes.data()` is in little-endian format, thus the value of loop control variables becomes incorrect on s390x.\r\n \r\nThis PR fixes this issue by invoking macro `TF_le32toh()` for these data to convert them to big-endian format when needed.\r\n\r\nThis PR won't cause any regressions on either little-endian platforms or big-endian platforms.\r\n\r\nSigned-off-by: Kun-Lu <kun.lu@ibm.com>","created_at":"2022-12-16T14:36:06Z","closed_at":"2022-12-30T03:48:55Z","merged_at":"2022-12-30T03:48:55Z","user_id":78156688,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1168479571,"title":"Fix the endianness issue in `prepare-composite-functions-tf.mlir.test` on s390x","body":"Test case `tensorflow/compiler/mlir/lite/tests:prepare-composite-functions-tf.mlir.test` fails on s390x (big-endian arch) because function `ConvertMaxUnpoolingFunc::CreateCustomOptions()` will fill the content of string `custom_option_buffer` with the cast `TfLitePoolParams` data which is in big-endian format, thus the CHECK step for the value of `custom_option` string in `MaxUnpooling2D` op will fail.\r\n \r\nOn the other hand, other `CreateXXXCustomOptions` functions in TensorFlow code base use `flexbuffers` which automatically stores data in little-endian format, such as the below `CreateTflFusableOpCustomOptions()` function: https://github.com/tensorflow/tensorflow/blob/15a6d0de4cb48150a7adb4984d593bdaa7b2c6c3/tensorflow/compiler/mlir/lite/transforms/prepare_composite_functions_tf.cc#L72-L99.\r\n \r\nThis PR fixes the test failure by byte swapping the content of string `custom_option_buffer` on big-endian platforms after it's filled to ensure it's always in little-endian format. The changes won't affect little-endian platforms.\r\n\r\nSigned-off-by: Kun-Lu <kun.lu@ibm.com>","created_at":"2022-12-16T14:27:32Z","closed_at":"2022-12-30T07:03:03Z","merged_at":"2022-12-30T07:03:03Z","user_id":78156688,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1168267429,"title":"Fix possible null dereference in xla_launch_util.cc","body":"Should check `stream` before dereference because it could be assigned nullptr at https://github.com/tensorflow/tensorflow/pull/57892\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/db79bb42a790dfa372a953757ee00fbb83a7137b/tensorflow/compiler/jit/xla_launch_util.cc#L490\r\n\r\nThis PR is part of https://github.com/tensorflow/tensorflow/pull/57892\r\n\r\nBug was found by [Svace static analyzer](https://www.ispras.ru/en/technologies/svace/) (more [info](https://svace.pages.ispras.ru/svace-website/en/)).","created_at":"2022-12-16T11:55:05Z","closed_at":"2022-12-27T09:07:57Z","merged_at":"2022-12-27T09:07:56Z","user_id":13482580,"sentiment":{"polarity":0.0,"subjectivity":1.0}}
{"_id":1168264658,"title":"Fix possible null dereference in hlo_legalize_to_hlo","body":"Call of `emitOpError()` does not interrupt control flow, so there should be return.\r\n\r\nThis PR is part of https://github.com/tensorflow/tensorflow/pull/57892\r\n\r\nBug was found by [Svace static analyzer](https://www.ispras.ru/en/technologies/svace/) (more [info](https://svace.pages.ispras.ru/svace-website/en/)).","created_at":"2022-12-16T11:52:37Z","closed_at":"2023-02-02T09:28:46Z","merged_at":"2023-02-02T09:28:46Z","user_id":13482580,"sentiment":{"polarity":0.0,"subjectivity":1.0}}
{"_id":1168256881,"title":"Fix copy-paste error in promote_resources_to_args","body":"Copy paste error `read_op` -> `write_op` with possible null dereference\r\n\r\nThis PR is part of https://github.com/tensorflow/tensorflow/pull/57892\r\n\r\nBug was found by [Svace static analyzer](https://www.ispras.ru/en/technologies/svace/) (more [info](https://svace.pages.ispras.ru/svace-website/en/)).","created_at":"2022-12-16T11:45:21Z","closed_at":"2022-12-30T01:24:10Z","merged_at":"2022-12-30T01:24:10Z","user_id":13482580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1168250963,"title":"Fix possible null dereference in hlo_module_util","body":"At hlo_module_util.cc:\r\nPossible null dereference of `execution_options`. Should be checked as in the line https://github.com/apach301/tensorflow/blob/356bc3788b40b2240244262758f7ca13dd73de64/tensorflow/compiler/xla/service/hlo_module_util.cc#L125\r\n\r\nThis PR is part of https://github.com/tensorflow/tensorflow/pull/57892\r\n\r\nBug was found by [Svace static analyzer](https://www.ispras.ru/en/technologies/svace/) (more [info](https://svace.pages.ispras.ru/svace-website/en/)).","created_at":"2022-12-16T11:41:49Z","closed_at":"2023-01-30T11:17:13Z","merged_at":"2023-01-30T11:17:13Z","user_id":13482580,"sentiment":{"polarity":0.0,"subjectivity":1.0}}
{"_id":1168235969,"title":"Fix null dereference in grpc_worker_service","body":"Call of `errors::Internal()` does not interrupt execution, so after line https://github.com/apach301/tensorflow/blob/e398ab7b776e015bd930fca7a7fc3c81864b224e/tensorflow/core/distributed_runtime/rpc/grpc_worker_service.cc#L652 `hook`  may be nullptr and is dereferenced.\r\n\r\nThis PR is part of https://github.com/tensorflow/tensorflow/pull/57892\r\n\r\nBug was found by [Svace static analyzer](https://www.ispras.ru/en/technologies/svace/) (more [info](https://svace.pages.ispras.ru/svace-website/en/)).","created_at":"2022-12-16T11:32:11Z","closed_at":"2023-02-23T21:42:33Z","merged_at":"2023-02-23T21:42:33Z","user_id":13482580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1168228942,"title":"Fix null dereference in quantization_utils","body":"Possible null dereference in emitError().\r\n\r\nThis PR is part of https://github.com/tensorflow/tensorflow/pull/57892\r\n\r\nBug was found by [Svace static analyzer](https://www.ispras.ru/en/technologies/svace/) (more [info](https://svace.pages.ispras.ru/svace-website/en/)).","created_at":"2022-12-16T11:24:38Z","closed_at":"2022-12-19T21:03:43Z","merged_at":"2022-12-19T21:03:43Z","user_id":13482580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1168215914,"title":"Fix copy-paste error with possible null dereference","body":"`output_names` -> `control_output_names`\r\n\r\nThis PR is part of https://github.com/tensorflow/tensorflow/pull/57892\r\n\r\nBug was found by [Svace static analyzer](https://www.ispras.ru/en/technologies/svace/) (more [info](https://svace.pages.ispras.ru/svace-website/en/)).","created_at":"2022-12-16T11:14:51Z","closed_at":"2022-12-26T11:52:13Z","merged_at":"2022-12-26T11:52:13Z","user_id":13482580,"sentiment":{"polarity":0.0,"subjectivity":1.0}}
{"_id":1168208988,"title":"Fix null dereference in optional_debug_tools","body":"Check `inputs` and `outputs` for null before dereference, because from previous line it seems that they could be `nullptr`\r\n\r\nThis PR is part of https://github.com/tensorflow/tensorflow/pull/57892\r\n\r\nBug was found by [Svace static analyzer](https://www.ispras.ru/en/technologies/svace/) (more [info](https://svace.pages.ispras.ru/svace-website/en/)).","created_at":"2022-12-16T11:09:31Z","closed_at":"2022-12-30T04:30:16Z","merged_at":"2022-12-30T04:30:15Z","user_id":13482580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1168203774,"title":"Add checkers before derefence in conv Prepare()","body":"Add security checks for `affine_quantization` and `affine_quantization->scale` before dereference, because there are checks at the similar code (https://github.com/apach301/tensorflow/blob/1e7fd2f447e37761b6f6c673de77d392b6d0650d/tensorflow/lite/kernels/conv.cc#L467)\r\n\r\nThis PR is part of https://github.com/tensorflow/tensorflow/pull/57892\r\n\r\nBug was found by [Svace static analyzer](https://www.ispras.ru/en/technologies/svace/) (more [info](https://svace.pages.ispras.ru/svace-website/en/)).","created_at":"2022-12-16T11:06:18Z","closed_at":"2022-12-30T05:19:47Z","merged_at":"2022-12-30T05:19:47Z","user_id":13482580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1168198801,"title":"Fix buffer overflow in summary_db_writer","body":"Variable `kMaxIdTier` is set to size of `kIdTiers[]` which is 3. At loop (https://github.com/apach301/tensorflow/blob/88f1d0042b3f495a2a721e806f0f03aca0022dd7/tensorflow/core/summary/summary_db_writer.cc#L183) `tier_` could become equal to `kMaxIdTier`, and then access to `kIdTiers[tier_]` occurs. At that moment `tier_` is 3, but max index of  `kIdTiers[]` is 2.\r\n\r\nThis PR is part of https://github.com/tensorflow/tensorflow/pull/57892\r\n\r\nBug was found by [Svace static analyzer](https://www.ispras.ru/en/technologies/svace/) (more [info](https://svace.pages.ispras.ru/svace-website/en/)).","created_at":"2022-12-16T11:02:26Z","closed_at":"2022-12-27T09:16:14Z","merged_at":"2022-12-27T09:16:14Z","user_id":13482580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1168186244,"title":"Handle error properly in NodeDefBuilder::Finalize","body":"Possible null dereference of `op_def_`. This case should be handled like in the if-statement higher.\r\nThis PR is part of https://github.com/tensorflow/tensorflow/pull/57892\r\nBug was found by [Svace static analyzer](https://www.ispras.ru/en/technologies/svace/) (more [info](https://svace.pages.ispras.ru/svace-website/en/)).","created_at":"2022-12-16T10:51:02Z","closed_at":"2022-12-19T15:10:49Z","merged_at":"2022-12-19T15:10:49Z","user_id":13482580,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":1168069887,"title":"Added Autoparallel optimizer in config.py","body":" Autoparallel optimizer available as one of the Graph Optimizer as per [documentation](https://www.tensorflow.org/guide/graph_optimization#available_graph_optimizers) but for `tf.config.optimizer.set_experimental_options` it is not listed in the Arg options.But as the per this [comment](https://discuss.tensorflow.org/t/enable-grapplers-autoparallel-pass/1084/2) it is already available but not documented\r\nHence made a PR as Doc Bug.\r\nFixes #49507","created_at":"2022-12-16T09:24:47Z","closed_at":"2023-02-09T17:56:43Z","merged_at":"2023-02-09T17:56:43Z","user_id":116063290,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1167531609,"title":"Fix up CUDA","body":"CUDA needs to be told exactly which driver version to install, and 520\nis the version that syncs up with our internal CI system.\n","created_at":"2022-12-15T23:30:26Z","closed_at":"2022-12-16T18:52:56Z","merged_at":"2022-12-16T18:52:56Z","user_id":32465472,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1166015528,"title":"[NVIDIA TF-TRT] Adding TF_TRT_OP_FAKELIST env var to allow TF-TRT segmentation experimentation","body":"This PR introduces the env var `TF_TRT_OP_FAKELIST=OpName1,OpName2,...`.\r\n\r\nThe motivation of this change is to allow to experiment with the impact on graph segmentation of adding converter X, Y or Z.\r\nThis API is not designed for users, but rather TF-TRT team to evaluate the importance / impact of the different fearture requests.\r\n\r\n It works by intercepting the call to `OpConverterRegistry::Impl::LookUp` and return the `FakeOp` converter in case the OpName matches any of the names passed in `TF_TRT_OP_FAKELIST`.\r\n \r\n This is expected to have zero impact on any of the current workflows.\r\n\r\nReplaces PR: #58144","created_at":"2022-12-14T23:29:13Z","closed_at":"2023-01-13T01:00:37Z","merged_at":"2023-01-13T01:00:37Z","user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1166007475,"title":"[NVIDIA TF-TRT] Adding TF_TRT_OP_FAKELIST env var to allow TF-TRT segmentation experimentation","body":"This PR introduces the env var `TF_TRT_OP_FAKELIST=OpName1,OpName2,...`.\r\n\r\nThe motivation of this change is to allow to experiment with the impact on graph segmentation of adding converter X, Y or Z.\r\nThis API is not designed for users, but rather TF-TRT team to evaluate the importance / impact of the different fearture requests.\r\n\r\n It works by intercepting the call to `OpConverterRegistry::Impl::LookUp` and return the `FakeOp` converter in case the OpName matches any of the names passed in `TF_TRT_OP_FAKELIST`.\r\n \r\n This is expected to have zero impact on any of the current workflows.\r\n\r\nReplaces PR: #58144","created_at":"2022-12-14T23:16:31Z","closed_at":"2022-12-14T23:28:47Z","merged_at":null,"user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1165986922,"title":"[TF-TRT] Fix AddN for const layer inputs in non implicit batch cases.","body":"This fixes a crash when AddN elementwise operation is executed with constant layer as input(s) to the AddN node. In this case the Const nodes are not recognized as tensors and in those cases the batch dimension is always removed. This causes a mismatch of input tensor sizes causing the crash/native segment fallback. Only when implicit batch mode is used, the batch dimension must be removed to match the other input tensor sizes. \r\n\r\n![image](https://user-images.githubusercontent.com/33809857/200448584-a416ce70-2f5f-488f-a708-bc8d3b80e8e2.png)\r\n\r\n\r\nReplacing PR: #58474  \r\n@DEKHTIARJonathan  Please review","created_at":"2022-12-14T22:57:50Z","closed_at":"2022-12-20T17:41:26Z","merged_at":"2022-12-20T17:41:26Z","user_id":33809857,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1165960085,"title":"Detect AVX512 on Windows","body":"Detect ISA for Windows\r\n\r\nIt was found that tf 2.10 on windows would not detect the AVX512, and only the AVX, AVX2, but when run with the same machine, using WSL(Windows subsystem Linux), the system would detect AVX512.\r\n\r\nFix:\r\nTo detect Intel Supported Architectures, previously windows code was not checking for AVX512. Now, both Windows and Linux share the same code and check for all architectures","created_at":"2022-12-14T22:24:53Z","closed_at":"2022-12-30T00:55:07Z","merged_at":"2022-12-30T00:55:06Z","user_id":83710963,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1165893754,"title":"[NVIDIA TF] Fix an issue of empty output tensor when using bf16","body":"While testing the conv+bf16, we noticed many tests would fail on the A100 GPUs with errors like `AssertionError: 1.0 not less than 0.003`. After some digging, it turns out that we should have passed the original address of the output tensor to the helper function where the address might be updated to point to a new allocated tensor. Instead, we mistakenly passed the address of a local cast tensor and this will leave the original output address unchanged no matter what.\r\n\r\nThis PR fixed this issue.\r\n\r\ncc. @nluehr @pjannaty \r\n\r\n","created_at":"2022-12-14T21:28:15Z","closed_at":"2022-12-15T05:25:19Z","merged_at":"2022-12-15T05:25:19Z","user_id":4001424,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":1165614865,"title":"[tosa] Fix wrong intermediate datatype for genericReduceOps","body":"A quick fix for the issue from here: #58714 \r\n\r\nSigned-off-by: Jerry Ge <jerry.ge@arm.com>","created_at":"2022-12-14T17:50:43Z","closed_at":"2022-12-30T22:22:04Z","merged_at":"2022-12-30T22:22:04Z","user_id":24451859,"sentiment":{"polarity":-0.5,"subjectivity":0.9}}
{"_id":1164965424,"title":"[ROCm] add xla rocm build","body":"https://github.com/tensorflow/tensorflow/commit/697518a10127b334aadd6528b7d60994ab0d9685\r\n\r\nCurrent xla build is cuda only and rocm is not enable. We would like to enable it.\r\n\r\n@cheshire @akuegel \r\n\r\nThanks","created_at":"2022-12-14T11:25:16Z","closed_at":"2022-12-14T12:58:35Z","merged_at":"2022-12-14T12:58:35Z","user_id":913790,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1164507646,"title":"define near use","body":"define `nodes` after `SingleThreadedLRN`","created_at":"2022-12-14T07:17:06Z","closed_at":"2022-12-15T17:52:31Z","merged_at":"2022-12-15T17:52:31Z","user_id":6374087,"sentiment":{"polarity":0.1,"subjectivity":0.4}}
{"_id":1164218073,"title":"build: tell CMake about dependency on MhloToArithmeticConversion","body":"Both legalize_mhlo_to_thlo.cc (i.e. the `MhloToThloConversion` library)\r\nand legalize_to_linalg.cc (i.e. the `MhloToLinalg` library) call \r\n`populateScalarHloToArithmeticConversionPatterns()` in\r\nhlo_legalize_to_arithmetic.cc (in the `MhloToArithmeticConversion`\r\nlibrary), but these dependencies were not expressed in the CMake rules,\r\ncausing build errors in downstream consumers of MHLO.  This patch\r\nupdates the build rules to make the dependencies explicit.","created_at":"2022-12-14T03:48:07Z","closed_at":"2022-12-16T11:06:23Z","merged_at":"2022-12-16T11:06:23Z","user_id":19678,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1163784429,"title":"Switch to skylib expand_template","body":"`template_rule ` and `expand_template` serve the same purpose. Both rules are used at different places.\r\nThis commit is part of an ongoing effort to remove all appearances of `template_rule`, since `expand_temple` from Skylib is unit tested and can also be used in other projects.","created_at":"2022-12-13T20:34:06Z","closed_at":"2022-12-29T22:34:51Z","merged_at":"2022-12-29T22:34:51Z","user_id":3775001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1163510032,"title":"[oneDNN] Bug-fix: Threadpool interface to LayerNorm.","body":"Existing LayerNorm OpKernel does not provide eigen threadpool interface to oneDNN stream. As a result, oneDNN primitive executes on single thread. This PR fixes the bug.","created_at":"2022-12-13T17:35:01Z","closed_at":"2022-12-28T18:40:48Z","merged_at":"2022-12-28T18:40:48Z","user_id":27521767,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1163388949,"title":"[NVIDIA XLA] Fix Xla gemm_rewrite_tests when running on TF32 capable hardware","body":"This PR extends the tsl::enable_tensor_float_32_execution API to the cublas and cublaslt integration within XLA. It then uses that API to configure various gemm_rewrite_tests to use float32 rather than TF32 since those tests' tolerances were developed assuming full precision.\r\n\r\nAttn: @reedwm @SandSnip3r ","created_at":"2022-12-13T16:46:58Z","closed_at":"2023-01-04T16:02:46Z","merged_at":"2023-01-04T16:02:46Z","user_id":1873655,"sentiment":{"polarity":0.2,"subjectivity":0.4}}
{"_id":1162561867,"title":"[NVIDIA XLA] add a new mode that hlo_parser can parse computations without module header.","body":"This PR add a new mode in hlo_parser that can parse a HloModule from sequence of computation text without module header, the computation annotated with `ENTRY` or the last computation if no `ENTRY` annotation will be used as the entry computation of the module.  Also, will force the module's input/output layout as entry computation's parameter and ROOT instruction layout. \r\n\r\nWith this updates, XLA tool `replay_computation` can just run a computation by just specifying the computation dump out.  It is useful/convient when we just want `replay_computation` to focus on the perf of a specific computation, or fused kernel (use fused computation as replay_computation input), so just need to copy the target computation HLO texts and run with `replay_computation`  \r\n\r\n","created_at":"2022-12-13T09:02:55Z","closed_at":"2023-01-13T09:15:34Z","merged_at":"2023-01-13T09:15:34Z","user_id":35983922,"sentiment":{"polarity":0.13636363636363635,"subjectivity":0.45454545454545453}}
{"_id":1162013411,"title":"bincount fuzzer","body":null,"created_at":"2022-12-13T01:45:44Z","closed_at":"2023-01-13T18:35:28Z","merged_at":"2023-01-13T18:35:28Z","user_id":96303370,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1161956945,"title":"[NVIDIA TF] Support building against CUDA 12.0","body":"This PR updates TensorFlow to build against CUDA 12.0. Most changes are minor with the exception of the replacing the csrGemmV2 APIs with SpGEMM, since the former was removed from cusparse 12.0.\r\n\r\nAttn: @hawkinsp ","created_at":"2022-12-13T00:48:44Z","closed_at":"2023-01-18T09:25:26Z","merged_at":"2023-01-18T09:25:26Z","user_id":1873655,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1161432551,"title":"[oneDNN] Bug-fix: Add epsilon and leakyrelu alpha attribute to fused batchmatmul.","body":"This PR adds epsilon and LeakyRelu alpha attributes to the fused batch-matmul op. It aligns with other fused contraction ops like, convolution and matmul.","created_at":"2022-12-12T18:40:13Z","closed_at":"2023-01-23T20:52:11Z","merged_at":"2023-01-23T20:52:11Z","user_id":27521767,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1161389438,"title":"[oneDNN] Bug fix: epsilon attribute in LayerNorm","body":"This PR fixes a bug with regard to missing epsilon attribute in the LayerNorm fused op. Without this fix, the kernel would produce incorrect results, if user sets epsilon value different than the default.","created_at":"2022-12-12T18:16:01Z","closed_at":"2022-12-14T19:14:50Z","merged_at":"2022-12-14T19:14:50Z","user_id":27521767,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1161335416,"title":"[oneDNN] pooling fix","body":"This PR fixes empty input/grad tensor for AvgpoolingGrad V1 (it is already fixed for v2), by providing an empty tensor allocation. We also align the o/p values with the eigen implementation. ","created_at":"2022-12-12T17:41:35Z","closed_at":"2023-01-18T21:38:24Z","merged_at":"2023-01-18T21:38:24Z","user_id":39842562,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1160135447,"title":"Migrate fuzzers to GFT","body":"Migrate fuzzers from libFuzzer to GFT","created_at":"2022-12-12T06:27:57Z","closed_at":"2023-01-23T19:47:06Z","merged_at":null,"user_id":96303370,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1159521642,"title":"Update compat.py","body":"Fixed the broken link of tf.compat.forward_compatible.","created_at":"2022-12-11T21:01:01Z","closed_at":"2022-12-21T18:37:17Z","merged_at":null,"user_id":111861663,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1158108079,"title":"Select a convolution algorithm that does not use tensor cores when tensor cores are disabled and autotuning is disabled.","body":"resolves #58846 ","created_at":"2022-12-10T20:59:47Z","closed_at":"2022-12-20T18:38:58Z","merged_at":"2022-12-20T18:38:58Z","user_id":17516388,"sentiment":{"polarity":-0.2,"subjectivity":0.3}}
{"_id":1156922014,"title":"Documentation: Fix broken Classify CIFAR-10 with XLA build","body":"- Upgrade TF to 2.11 (Colab uses 2.9.2)\r\n- Use the new Keras Optimizer API (TF 2.10+)\r\n  - This fixes the broken build on https://www.tensorflow.org/xla/tutorials/autoclustering_xla\r\n  - fyi Not recommending users to use keras.optimizers.legacy","created_at":"2022-12-10T00:38:54Z","closed_at":"2022-12-14T08:39:19Z","merged_at":"2022-12-14T08:39:19Z","user_id":19637339,"sentiment":{"polarity":-0.4,"subjectivity":0.4}}
{"_id":1156710532,"title":"[NVIDIA TF] Enable BF16 TensorArray scatter, split, unpack","body":"Support remaining GPU bfloat16 TensorArray ops","created_at":"2022-12-09T21:33:13Z","closed_at":"2022-12-22T14:38:18Z","merged_at":"2022-12-22T14:38:18Z","user_id":12981474,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1156681192,"title":"[NVIDIA XLA] Use 256x256 matmul to more robustly trigger TF32 in relevant tests.","body":"The 2x2 matmul used in the mlir_gemm_test would not result in TF32 evaluation on some Ampere-class GPUs (such as A16). Unfortunately, the cublas APIs do not guarantee that TF32 will be used in any particular case. Here we increase the dimension of the TF32-specific tests cases to 256x256, which empirically results in TF32 evaluation on all TF32-capable GPUs.","created_at":"2022-12-09T20:56:32Z","closed_at":"2022-12-14T12:24:04Z","merged_at":"2022-12-14T12:24:04Z","user_id":1873655,"sentiment":{"polarity":0.44999999999999996,"subjectivity":0.7}}
{"_id":1156675988,"title":"[NVIDIA TF] Enable BF16 for Dilation","body":"Support GPU bfloat16 for Dilation ops.","created_at":"2022-12-09T20:51:24Z","closed_at":"2022-12-23T23:35:42Z","merged_at":"2022-12-23T23:35:42Z","user_id":12981474,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1156571603,"title":"[NVIDIA TF] Enable BF16 ArgMax/ArgMin","body":"GPU bfloat16 support for ArgMax and ArgMin","created_at":"2022-12-09T19:26:18Z","closed_at":"2022-12-24T00:01:11Z","merged_at":"2022-12-24T00:01:11Z","user_id":12981474,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1156373986,"title":"[Linaro:ARM_CI] Enable running of tests tagged with oss_serial","body":"Some tests are tagged with oss_serial because they need to be run serially ie one after the other. This is to prevent any potential conflicts particularly over use of network ports.\r\n\r\nSee https://github.com/tensorflow/tensorflow/issues/46602","created_at":"2022-12-09T17:15:49Z","closed_at":"2022-12-30T00:58:00Z","merged_at":"2022-12-30T00:57:59Z","user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1155928388,"title":"Flip --incompatible_enforce_config_setting_visibility in .bazelrc to prevent regression","body":"Related: https://github.com/bazelbuild/bazel/issues/12932 and https://github.com/bazelbuild/bazel/issues/12933","created_at":"2022-12-09T11:51:12Z","closed_at":"2022-12-13T03:46:25Z","merged_at":"2022-12-13T03:46:25Z","user_id":4171702,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1154879021,"title":"[TOSA]Add wrapping of TFL CustomOp attributes to TOSA","body":"Uses the recently added implementation_attrs attribute to store the TFL custom_option field. Backends are free to use or ignore the attribute for custom operations that they support.","created_at":"2022-12-08T22:03:45Z","closed_at":"2022-12-26T12:04:20Z","merged_at":"2022-12-26T12:04:20Z","user_id":71658898,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1154357674,"title":"Fix for building failure due to lacking of io_bazel_rules_docker","body":"Fix for building failure due to lacking of io_bazel_rules_docker","created_at":"2022-12-08T15:47:21Z","closed_at":"2023-01-19T17:50:00Z","merged_at":null,"user_id":5104916,"sentiment":{"polarity":-0.22083333333333335,"subjectivity":0.3375}}
{"_id":1152192803,"title":"Update label_image.py","body":"if we're using TensorFlow 2.0, we should do the following changes too:\r\ntf.read_file() -----becomes-----> tf.io.read_file()\r\ntf.gfile.GFile(label_file) -----becomes-----> tf.io.gfile.GFile(label_file)\r\n","created_at":"2022-12-07T18:43:31Z","closed_at":"2022-12-07T21:38:20Z","merged_at":null,"user_id":49559464,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1151925633,"title":"Fix for building failure due to wrong icu sha256","body":"Build r1.13 from source, error logs as below\r\n\r\n```zsh\r\nERROR: Analysis of target '//tensorflow/tools/pip_package:build_pip_package' failed; build aborted: no such package '@icu//': java.io.IOException: Error downloading [https://mirror.bazel.build/github.com/unicode-org/icu/archive/release-62-1.tar.gz, https://github.com/unicode-org/icu/archive/release-62-1.tar.gz] to /data/qiaojunlong/.cache/bazel/_bazel_qiaojunlong/10608086353116d1a788ecfb9cbd8e25/external/icu/release-62-1.tar.gz: Checksum was 86b85fbf1b251d7a658de86ce5a0c8f34151027cc60b01e1b76f167379acf181 but wanted e15ffd84606323cbad5515bf9ecdf8061cc3bf80fb883b9e6aa162e485aa9761\r\nINFO: Elapsed time: 60.073s\r\nINFO: 0 processes.\r\nFAILED: Build did NOT complete successfully (229 packages loaded, 8097 targets configured)\r\n```\r\n\r\nChange hard-coded sha256 will fix this.","created_at":"2022-12-07T16:21:25Z","closed_at":"2022-12-07T17:29:36Z","merged_at":null,"user_id":5104916,"sentiment":{"polarity":-0.3138888888888889,"subjectivity":0.525}}
{"_id":1151913371,"title":"ROCm support for determinism","body":"This PR adds support for determinism","created_at":"2022-12-07T16:15:14Z","closed_at":"2023-01-11T09:15:37Z","merged_at":"2023-01-11T09:15:37Z","user_id":4212398,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1151528714,"title":"[ROCm] Fixed another warnings check on custom_call_test","body":"Based on https://github.com/tensorflow/tensorflow/pull/57801\r\n\r\nThe warnings checks for custom_call_test is missed on the last PR, so ROCm build will be failed (ROCm is enable the unused result warnings check now).\r\n\r\nPlease merge this one as well.\r\n\r\nThanks a lot!\r\n\r\n/c @cheshire  @akuegel ","created_at":"2022-12-07T13:04:08Z","closed_at":"2022-12-07T14:15:37Z","merged_at":"2022-12-07T14:15:36Z","user_id":913790,"sentiment":{"polarity":0.1,"subjectivity":0.2}}
{"_id":1150166633,"title":"Xla exception changes","body":"To add new error codes to be used in Status objects arising from XLA specific code. I would like to create new custom Python exceptions according to the new error codes being used. What additional changes do I need to do to achieve this?","created_at":"2022-12-06T23:02:34Z","closed_at":"2023-01-31T23:50:25Z","merged_at":null,"user_id":6442822,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1150132670,"title":"Xla exception changes","body":"These are preliminary experimental changes to use custom XLA error codes to use in the Status Objects coming only from XLA exceptions.","created_at":"2022-12-06T22:44:34Z","closed_at":"2022-12-06T22:58:43Z","merged_at":null,"user_id":6442822,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1149643436,"title":"Fix the endianness issue in lite/kernels:bucketize_test on s390x","body":"Test case `//tensorflow/lite/kernels:bucketize_test` fails on s390x due to the endianness issue. The cause is that the boundaries value of the `BucketizeOpModel` is in little-endian format after the model initialization, even on s390x (big-endian arch) machines.\r\n \r\nThis PR fixes this issue by byte swapping the boundaries value in `Init()` function when the host arch is big-endian. The code change will not cause any regressions.\r\n\r\nSigned-off-by: Kun-Lu <kun.lu@ibm.com>","created_at":"2022-12-06T18:32:27Z","closed_at":"2022-12-30T04:38:11Z","merged_at":"2022-12-30T04:38:11Z","user_id":78156688,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1149449598,"title":"[tosa] Add TFLite reduce all operation to TOSA","body":"Only this is missing in the group. The rest of reduction operations have been already implemented.","created_at":"2022-12-06T17:07:54Z","closed_at":"2023-02-23T22:24:41Z","merged_at":"2023-02-23T22:24:41Z","user_id":78814694,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1147881004,"title":"[NVIDIA TF] Enable BF16 Scan ops","body":"Adds GPU bfloat16 support for Cumprod and Cumsum. CumulativeLogsumexp is excluded because the op definition doesn't allow BF16 datatype.","created_at":"2022-12-06T01:52:27Z","closed_at":"2023-01-19T16:48:46Z","merged_at":"2023-01-19T16:48:46Z","user_id":12981474,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1147850980,"title":"Extend NVIDIA Trusted Partner config to include TF-TRT","body":"NVIDIA is an existing Trusted Partner. As part of the transition of TF-TRT to NVIDIA, this PR adds reviewers for TF-TRT changes:\r\n\r\nNVIDIA: @meena-at-work, @nluehr, @DEKHTIARJonathan, @pjannaty\r\nGoogle: @poulsbo","created_at":"2022-12-06T01:26:24Z","closed_at":"2022-12-06T19:52:24Z","merged_at":"2022-12-06T19:52:24Z","user_id":1046529,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1147751007,"title":"[NVIDIA TF] Enable BF16 Inplace ops","body":"Adds GPU bfloat16 support for InplaceAdd, InplaceSub, InplaceUpdate, DeepCopy, Empty, ParallelConcat.","created_at":"2022-12-06T00:31:58Z","closed_at":"2022-12-15T18:28:15Z","merged_at":"2022-12-15T18:28:15Z","user_id":12981474,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1147737130,"title":"[NVIDIA TF] Enable BF16 Einsum","body":"Support bfloat16 for Einsum op on GPU.\r\nBfloat16 is already tested here: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/kernel_tests/linalg/einsum_op_test.py#L153","created_at":"2022-12-06T00:20:05Z","closed_at":"2022-12-15T18:16:23Z","merged_at":"2022-12-15T18:16:23Z","user_id":12981474,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1147491573,"title":"[NVIDIA TF] Enable BF16 TopK","body":"Adds GPU bfloat16 support for TopK.","created_at":"2022-12-05T21:56:14Z","closed_at":"2022-12-22T09:47:07Z","merged_at":null,"user_id":12981474,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1147410586,"title":"[NVIDIA TF] Enable BF16 BatchToSpace, DepthToSpace ops","body":"Adds GPU bfloat16 support for BatchToSpace, SpaceToBatch, DepthToSpace, SpaceToDepth,","created_at":"2022-12-05T21:05:45Z","closed_at":"2022-12-27T19:41:06Z","merged_at":"2022-12-27T19:41:06Z","user_id":12981474,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1145853647,"title":"Fix bug in bi-directional RNN","body":"setup batchsize and timestamp according to the time major config\r\n\r\nSigned-off-by: xiang.zhang <xiang.zhang@verisilicon.com>","created_at":"2022-12-05T05:49:07Z","closed_at":"2022-12-30T06:03:41Z","merged_at":"2022-12-30T06:03:41Z","user_id":698804,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1143469474,"title":"Add dependency entries for package manages to parse","body":"Package managers like poetry are not inferring the correct dependencies for the collaborator builds as they differ from the default\r\n\r\nFixes #58602 ","created_at":"2022-12-02T16:26:21Z","closed_at":"2022-12-06T00:23:24Z","merged_at":"2022-12-06T00:23:23Z","user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1143360945,"title":"Fix `graphdef2mlir:const-values.pbtxt` test failure on s390x","body":"Test case `//tensorflow/compiler/mlir/tensorflow/tests/graphdef2mlir:const-values.pbtxt.test` fails on s390x (big-endian arch) due to the endianness issue. The root cause of the failure is that the `tensorflow::LoadProtoFromBuffer()` function loads the `GraphDef` object directly from a Buffer which is in little-endian format (imported from file `const-values.pbtxt`): https://github.com/tensorflow/tensorflow/blob/7769d928bbf0751cbbb6fe4490747f1b12a2a47b/tensorflow/compiler/mlir/tensorflow/translate/tf_mlir_translate.cc#L55-L56, hence the tensor data in the `GraphDef` object is in LE format and will cause error on BE platforms.\r\n \r\nThis PR refactored the code in `tensorflow/core/util/tensor_bundle/byte_swap.cc` and added a helper function `ByteSwapTensorContentInGraphDef()` to do the byte swapping in this case. This function would be called in `tensorflow/compiler/mlir/tensorflow/translate/tf_mlir_translate.cc` after the invocation of `tensorflow::LoadProtoFromBuffer()` on BE platforms.\r\n \r\nBesides fixing the above test failure, this PR can fix the following test failures from master branch on s390x as well and it won't cause any regressions on both s390x and other arches.\r\n```bash\r\n//tensorflow/compiler/mlir/lite/tests/end2end:fake_quant_per_channel.pbtxt.test\r\n//tensorflow/compiler/mlir/lite/tests/end2end:fake_quant_per_channel_4bit.pbtxt.test\r\n//tensorflow/compiler/mlir/lite/tests/end2end:fake_quant_without_identity.pbtxt.test\r\n//tensorflow/compiler/mlir/lite/tests/end2end:fake_quant_without_identity_4bit.pbtxt.test\r\n//tensorflow/python/distribute:cross_device_ops_test_2gpu\r\n``` \r\n\r\nSigned-off-by: Kun-Lu <kun.lu@ibm.com>","created_at":"2022-12-02T15:02:09Z","closed_at":"2023-01-27T20:17:52Z","merged_at":"2023-01-27T20:17:52Z","user_id":78156688,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":1143067126,"title":"[Linaro:XLA] fix fail to build graphviz_interactive","body":"There is a missing dependency causing link failures so add it\r\n\r\nFixes #58766 ","created_at":"2022-12-02T10:56:23Z","closed_at":"2022-12-06T11:37:51Z","merged_at":"2022-12-06T11:37:50Z","user_id":10442001,"sentiment":{"polarity":-0.5,"subjectivity":0.29999999999999993}}
{"_id":1142875729,"title":"[NVIDIA XLA] Add new pattern for horizontal fusing instructions whose output tensor has same output shape into kLoop fusion kernel. ","body":"This PR add another horizontal fusion choice which fuses operands with the same output shape into kLoop fused computation, which should be faster in most cases than current kInput fusion pattern.\r\n\r\nThe below Case1 is the newly added pattern, because the kernel generated from kLoop instruction is much more efficient.\r\n\r\nDetailed pattern are like:\r\n\r\n```\r\n// The following illustrates the mechanism of the horizontal fusion. Before\r\n// fusion, there are two trivial kernels in the illustrating example. One has\r\n// only a Mul op, while the other consists of only an Add op. Since they are\r\n// only consumed by the same (ROOT) tuple instruction, horizontal fusion is\r\n// triggered.\r\n//\r\n// i0 i1   i2 i3\r\n//  | |     | |\r\n//  v v     v v\r\n//  Mul     Add\r\n//   |       |\r\n//   v       v\r\n//  (ROOT) tuple\r\n//\r\n// We fuse into two possible pattern, depending on whether all the \r\n// fused operations have the same shape or not.\r\n//\r\n// case 1: if Mul and Add's output shape and type are the same, then we fuse them into \r\n// the below pattern:\r\n// i0 i1   i2 i3\r\n//  | |     | |\r\n//  v v     v v\r\n//  Mul     Add\r\n//   |       |\r\n//   v       v\r\n//  (ROOT) tuple\r\n// the fused kernel will be kLoop type, i.e, GPU code is emitted through\r\n// IrEmitterUnnested::EmitLoopFusion \r\n//\r\n// case 2: if Mul and Add's output shape are diffent, then we fuse them into \r\n// the below pattern that add extra indexing: \r\n// i0 i1   i2 i3       +++ (Slice) Input Fusion\r\n//  | |     | |          +\r\n//  v v     v v          +\r\n//  Mul     Add          +\r\n//   |       |           +\r\n//   v       v           +\r\n// Reshape0  Reshape1    +\r\n//   |       |           +\r\n//   v       v           +\r\n//  Concatenate          +\r\n//   |       |           +\r\n//   v       v           +\r\n//  Slice0  Slice1     +++\r\n//   |       |\r\n//   v       v\r\n// Reshape2  Reshape3\r\n//   |       |\r\n//   v       v\r\n//  (ROOT) tuple\r\n//\r\n// the fused kernel will be kInput type, and, the GPU code is emitted through \r\n// IrEmitterUnnested::EmitInputFusibleNonStridedSlices\r\n//\r\n// In theory, the pattern in case 1 could also be fused into the case2 target graph,\r\n// but we prefer to fuse into kLoop type, because the codegen for it does not have the\r\n// slicing range check cost introduced by case 2 pattern.\r\n// \r\n```","created_at":"2022-12-02T08:00:54Z","closed_at":"2023-02-01T08:47:59Z","merged_at":"2023-02-01T08:47:59Z","user_id":35983922,"sentiment":{"polarity":0.06818181818181818,"subjectivity":0.2897727272727273}}
{"_id":1142666201,"title":"Request to update issue #58739","body":"Request to update issue #58739, please jump to https://github.com/tensorflow/tensorflow/issues/58739 for details.","created_at":"2022-12-02T02:37:23Z","closed_at":"2022-12-02T03:11:48Z","merged_at":null,"user_id":87168018,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1142308888,"title":"Add alternative GPU HLO memory scheduler postprocessor algorithm and …","body":"…JSON dump output for HLO instruction sequences\r\n\r\nThis PR provides an alternative implementation of the HLO memory scheduler postprocessor, which is designed to allow better overlap of computation and communication.\r\nThe previously existing algorithm (named \"Eager Instruction\" herein to distinguish from the implementation added in this PR) remains the default postprocessor. The alternative algorithm (named \"Eager Cluster\") can be chosen via the following XLA flag:\r\n\r\n`XLA_FLAGS=--xla_gpu_mem_sched_postproc=SCHED_POSTPROC_EAGER_CLUSTER\r\n`\r\n\r\nThe attached slides provide some details on the alternative implementation.\r\n\r\n[XLA_Eager_Cluster_v0.3.pdf](https://github.com/tensorflow/tensorflow/files/10135528/XLA_Eager_Cluster_v0.3.pdf)\r\n\r\nThis PR also adds a JSON dump file for the scheduled instruction sequence when XLA dumping is enabled. (This might belong in a separate PR, as it is independent of the scheduler, but I thought it might be useful in comparing/evaluating the new scheduler.)\r\n\r\n@nouiz ","created_at":"2022-12-01T19:22:41Z","closed_at":"2022-12-21T16:43:56Z","merged_at":null,"user_id":25750904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1142196517,"title":"Updated C++ version and CMake cloning target in microcontroller guide","body":"Updated C++ version and cloning target in microcontroller guide.\r\nC++ 11 to 17\r\nCloning link for CMake Updated from Tensorflow to Tensorflow/tflite-micro ( maintained for micrcontrollers)","created_at":"2022-12-01T17:36:49Z","closed_at":"2022-12-30T00:43:44Z","merged_at":"2022-12-30T00:43:44Z","user_id":86464649,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1140848169,"title":"Fix the `XNNPACK` dep build issue on s390x CI","body":"Recent commit [49b8647](https://github.com/tensorflow/tensorflow/commit/49b8647cf4a20692c058a337ed71f4c0398c7fab) introduced the  `XNNPACK` dep to `tensorflow/lite/kernels/transpose.cc`. Since `XNNPACK` is not supported by s390x yet, it caused the master build on s390x CI (https://ibmz-ci.osuosl.org/job/TensorFlow_IBMZ_CI/) to fail.\r\n\r\nCommit [c8f169e](https://github.com/tensorflow/tensorflow/commit/c8f169e76c22d03b7a876ff35cde70321d0ca298) added a condition to `tensorflow/lite/core/c/BUILD` so that the dep `@XNNPACK//:xnnpack_for_tflite` won't be included when the flag `--define=tflite_with_xnnpack=false` is used in the build. However, since the macro identifier `TFLITE_KERNEL_USE_XNNPACK` will be defined whether this flag is used or not, the build still fails on s390x. Here is the error log:\r\n```bash\r\nError: /home/alfred/jenkins/workspace/TensorFlow_IBMZ_CI/tensorflow/tensorflow/lite/kernels/BUILD:745:11: Compiling tensorflow/lite/kernels/transpose.cc failed: (Exit 1): gcc failed: error executing command /usr/bin/gcc -U_FORTIFY_SOURCE -fstack-protector -Wall -Wunused-but-set-parameter -Wno-free-nonheap-object -fno-omit-frame-pointer -g0 -O2 '-D_FORTIFY_SOURCE=1' -DNDEBUG -ffunction-sections ... (remaining 110 arguments skipped)\r\ntensorflow/lite/kernels/transpose.cc:20:10: fatal error: xnnpack.h: No such file or directory\r\n   20 | #include \"xnnpack.h\"  // from @XNNPACK\r\n      |          ^~~~~~~~~~~\r\ncompilation terminated.\r\n```\r\n\r\nThis PR is to add a condition to the `tflite_kernel_use_xnnpack_optional` target so that identifier `TFLITE_KERNEL_USE_XNNPACK` won't be defined when flag `--define=tflite_with_xnnpack=false` is used. Thus the build on s390x will succeed.\r\n\r\nThe `bazel` command used to build the master branch on s390x CI is as follows:\r\n```bash\r\nbazel --host_jvm_args=\"-Xms1024m\" --host_jvm_args=\"-Xmx2048m\" build --define=tensorflow_mkldnn_contraction_kernel=0 --define tflite_with_xnnpack=false //tensorflow/tools/pip_package:build_pip_package\r\n```","created_at":"2022-11-30T20:38:20Z","closed_at":"2022-12-05T13:17:19Z","merged_at":null,"user_id":78156688,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1140262252,"title":"[ROCm] add bf16 matmul support","body":"NV enable BF16 Matmul OPs in https://github.com/tensorflow/tensorflow/pull/58159/ \r\n\r\nROCm also supports BF16 Matmul.\r\n\r\nPlease check  /cc @cheshire","created_at":"2022-11-30T12:07:15Z","closed_at":"2022-12-13T18:47:47Z","merged_at":"2022-12-13T18:47:47Z","user_id":913790,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1139677132,"title":"r2.10 cherry-pick: fix the build error for libtensorflow_cc.so","body":"Cherry-pick from commit da2606aaf152055dd1996f374dd541aa9bc4a479 to fix #57826.\r\nWithout this patch, `libtensorflow_cc.so.2.10.0` cannot be built.","created_at":"2022-11-29T23:58:22Z","closed_at":"2023-01-19T17:47:56Z","merged_at":null,"user_id":9496702,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1139652328,"title":"Remove completed TODO bugs.","body":"Removed completed TODO bugs to avoid confusion, which is marked as fixed internally.","created_at":"2022-11-29T23:22:22Z","closed_at":"2022-12-30T05:36:02Z","merged_at":"2022-12-30T05:36:02Z","user_id":73069040,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1139606463,"title":"[NVIDIA TF] Rollforward Dynamic Pywrap PR #55941","body":"This reverts the rollback commit 970c3b44ea8b0db78d92ada624f03aeacf2e4518.\r\n\r\n> This PR adds a new build configuration which is tentatively called dynamic_pywrap. When enabled, _pywrap_tensorflow_internal.so will no longer contain any implementation for TensorFlow and will instead dynamically depend on libtensorflow_cc.so to load those symbols. _pywrap_tensorflow_internal.so will now a lightweight binary only containing the python bindings and other code/APIs which depends on python.\r\n\r\nFixes #58287\r\ncc https://github.com/horovod/horovod/pull/3755","created_at":"2022-11-29T22:20:49Z","closed_at":"2022-12-08T00:51:11Z","merged_at":"2022-12-08T00:51:11Z","user_id":12981474,"sentiment":{"polarity":0.0,"subjectivity":0.16666666666666666}}
{"_id":1139546646,"title":"[NVIDIA TF] Enable BF16 Gather and Scatter ops","body":"Adds gpu bfloat16 support for Gather and Scatter ops, including `Nd` and `Resource` versions.","created_at":"2022-11-29T21:17:22Z","closed_at":"2022-12-01T19:55:00Z","merged_at":"2022-12-01T19:55:00Z","user_id":12981474,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1139060975,"title":"added restore-best-weights feature in reduce-lr-on-plateau callback","body":"Added RestoreBestWeights option to ReaduceLROnPlateau Keras callback.","created_at":"2022-11-29T14:29:49Z","closed_at":"2022-12-05T09:04:03Z","merged_at":null,"user_id":26626899,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1138744189,"title":"Replace many calls to eval() with self.evaluate()","body":"In order to get tests running in the eager mode we need to remove invalid function calls such as eval(). This change is simply a search and replacement for tests where this was safe. As a result, a few more tests now work in eager mode.","created_at":"2022-11-29T10:18:40Z","closed_at":"2023-01-04T10:45:07Z","merged_at":"2023-01-04T10:45:07Z","user_id":32433025,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":1138426500,"title":"Add SYSTEM_FARMHASH cmake config flag","body":"Since farmhash does not install a cmake package we need to search for the library and headers to use the provided version.","created_at":"2022-11-29T04:41:14Z","closed_at":"2022-12-30T06:59:41Z","merged_at":"2022-12-30T06:59:41Z","user_id":3298484,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1138164276,"title":"FP8 GEMMs in XLA","body":"Enables scaled GEMMs based on `F8E4M3FN` and `F8E5M2` [FP8 data types](https://arxiv.org/abs/2209.05433). The pattern described by steps 1 through 6 in [RFC #22](https://github.com/openxla/xla/discussions/22) is rewritten into a Custom Call of the form\r\n\r\n(A, B, a_scale, b_scale, d_scale) -> (D, d_amax),\r\n\r\nwhere A, B and D are FP8 matrices and a_scale, b_scale and d_scale are their respective scaling factors. The scalar d_amax gives the maximum of the absolute values in D before rescaling and casting to FP8 and can be used in the calculation of new scaling factors.","created_at":"2022-11-28T21:57:14Z","closed_at":"2022-12-16T09:04:47Z","merged_at":"2022-12-16T09:04:47Z","user_id":80296164,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1138082812,"title":"[NVIDIA TF]  Enable BF16 Softmax, SoftmaxCrossEntropyWithLogits","body":"Add gpu bfloat16 support and tests for Softmax, LogSoftmax, SparseSoftmaxCrossEntropyWithLogits, and SoftmaxCrossEntropyWithLogits","created_at":"2022-11-28T20:32:07Z","closed_at":"2022-11-29T19:14:23Z","merged_at":"2022-11-29T19:14:23Z","user_id":12981474,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1138068853,"title":"Add tensorflow io support","body":"Add tensorflow-io package to the pip-packages that gets picked in tensorflow docker images, to provide object storage support for tensorflow images out of the box as seen in [this](https://github.com/tensorflow/tensorflow/issues/58710) issue","created_at":"2022-11-28T20:17:34Z","closed_at":"2022-11-29T14:49:53Z","merged_at":null,"user_id":109769432,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1136712468,"title":"r2.11 cherry-pick: d8110a18d60 \"lite: update androidx annotation location for opensource\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/d8110a18d60fa88fbe918654ca6c2badb0aa7427","created_at":"2022-11-27T14:59:14Z","closed_at":"2022-11-30T19:05:05Z","merged_at":"2022-11-30T19:05:05Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1136607502,"title":"Creating an app_test.py test class ","body":"Noticed that app_test.py wasn't structured in a test class. Restructured app_test.py into a test class. ","created_at":"2022-11-27T05:08:07Z","closed_at":"2022-12-29T18:43:59Z","merged_at":null,"user_id":53805995,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1135796351,"title":"Update api_def_Angle.pbtxt","body":"The Example code shown in the api_def_Angle.pbtxt still using 1.x version code which will throw: AttributeError: module 'tensorflow' has no attribute 'angle' if used in 2.x.\r\nHence updating the example code suitable to 2.x version. Please also refer attached [gist](https://colab.research.google.com/gist/SuryanarayanaY/c57df5a25572e7daebea235c633ce593/tf-math-angle.ipynb) for details.","created_at":"2022-11-25T10:40:43Z","closed_at":"2022-12-21T19:38:45Z","merged_at":"2022-12-21T19:38:45Z","user_id":116063290,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1135346598,"title":"Fix FindFlatBuffers cmake file","body":"Capitalization needs to match for system cmake override to work:\r\nhttps://github.com/google/flatbuffers/blob/v22.11.23/CMake/FindFlatBuffers.cmake","created_at":"2022-11-24T21:32:32Z","closed_at":"2023-02-22T10:15:54Z","merged_at":"2023-02-22T10:15:54Z","user_id":3298484,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1135332418,"title":"[GPU] Add NVTX to XLA","body":"This is CUPTI and xprof compatible. So the NVTX marker are human readable, but also intended to be read by machine.\r\n\r\nDoesn't work with TF without XLA.\r\nHere is a screen shot:\r\n\r\n![image](https://user-images.githubusercontent.com/180987/204378057-4758fd95-b7e7-4e0d-8c8f-183eecffa562.png)\r\n\r\n\r\n\r\n@cliveverghese @trisolaran ","created_at":"2022-11-24T21:09:40Z","closed_at":"2022-12-16T10:11:52Z","merged_at":"2022-12-16T10:11:52Z","user_id":180987,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1135073192,"title":"Updated the deprecated API to new API","body":"Update the `tf.data.experimental.snapshot` (Deprecated)  to  `tf.data.Dataset.snapshot`( New) API","created_at":"2022-11-24T15:33:27Z","closed_at":"2022-12-28T19:00:56Z","merged_at":"2022-12-28T19:00:56Z","user_id":81610181,"sentiment":{"polarity":0.13636363636363635,"subjectivity":0.45454545454545453}}
{"_id":1134867926,"title":"Updated IOS guide","body":"Fixed broken link in IOS guide and replaced \r\n```\r\npod 'TensorFlowLiteSwift', '~> 2.10.0'\r\ninstead of \r\npod 'TensorFlowLiteSwift', '~> 2.0.0' \r\n```\r\n2.0.0 is pretty old. I thought of not recommending 2.0.0 version in first hand to users.","created_at":"2022-11-24T12:39:29Z","closed_at":"2022-11-25T11:29:19Z","merged_at":"2022-11-25T11:29:19Z","user_id":86464649,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1134335914,"title":"Adjusted README to account for Conda / Anaconda TensorFlow Install","body":"Adjusted README to account for Conda / Anaconda TensorFlow Install. Also provided an aside that highlights the fact that contemporary IDEs support TensorFlow install under-the-hood","created_at":"2022-11-24T03:04:16Z","closed_at":"2022-11-25T02:04:30Z","merged_at":null,"user_id":53805995,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1134027381,"title":"Rewrite error messages","body":"I had to reopen #58664","created_at":"2022-11-23T20:04:55Z","closed_at":"2023-02-28T12:36:52Z","merged_at":null,"user_id":118690585,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1134015672,"title":"Rewrite error message","body":"For the error ```Internal error: Unexpected failure when preparing tensor allocations```, I added a link to issue #40031 for easier troubleshooting.","created_at":"2022-11-23T19:55:08Z","closed_at":"2022-11-23T19:56:28Z","merged_at":null,"user_id":118690585,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1133626274,"title":"[XLA:GPU] Skip a test on Maxwell GPUs","body":"@cheshire \r\nI have no idea why it now fail on Maxwell. I think it was passing at some point.\r\nI won't investigate more. We should at least have the test not fail.\r\n\r\nHere is the full error on M60 GPUs:\r\n```\r\n[ RUN      ] ReductionVectorizationNoOptTest.MultiOutputStore\r\n2022-11-22 22:11:50.366285: I tensorflow/compiler/xla/service/platform_util.cc:72] platform Host present but no XLA compiler available: could not find registered compiler for platform Host -- was support for that platform linked in?\r\n2022-11-22 22:11:50.705024: E tensorflow/compiler/xla/tests/filecheck.cc:69] Tried to execute FileCheck at /root/.cache/bazel/_bazel_root/a8fc6d0749b4f3c43761726a36e8ec4c/execroot/org_tensorflow/bazel-out/k8-opt/bin/external/llvm-project/llvm/FileCheck\r\n2022-11-22 22:11:50.705137: E tensorflow/compiler/xla/tests/filecheck.cc:75] FileCheck stderr:\r\n/root/.cache/bazel/_bazel_root/a8fc6d0749b4f3c43761726a36e8ec4c/execroot/org_tensorflow/_tmp/643bbe9f24b329a1a66b648db94da196/tempfile-133765d5a6b8-9d969c41-31734-5ee1675728a04:2:8: error: CHECK: expected string not found in input\r\nCHECK: ld.global.nc.v2.f32\r\n       ^\r\n<stdin>:1:1: note: scanning from here\r\n//\r\n^\r\n<stdin>:46:2: note: possible intended match here\r\n ld.global.nc.f32 %f3, [%rd13];\r\n ^\r\n\r\nInput file: <stdin>\r\nCheck file: /root/.cache/bazel/_bazel_root/a8fc6d0749b4f3c43761726a36e8ec4c/execroot/org_tensorflow/_tmp/643bbe9f24b329a1a66b648db94da196/tempfile-133765d5a6b8-9d969c41-31734-5ee1675728a04\r\n\r\n-dump-input=help explains the following input dump.\r\n\r\nInput was:\r\n<<<<<<\r\n           1: // \r\ncheck:2'0     X~~ error: no match found\r\n           2: // Generated by LLVM NVPTX Back-End \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n           3: // \r\ncheck:2'0     ~~~\r\n           4:  \r\ncheck:2'0     ~\r\n           5: .version 6.0 \r\ncheck:2'0     ~~~~~~~~~~~~~\r\n           6: .target sm_52 \r\ncheck:2'0     ~~~~~~~~~~~~~~\r\n           7: .address_size 64 \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~\r\n           8:  \r\ncheck:2'0     ~\r\n           9:  // .globl fusion \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~\r\n          10: .shared .align 4 .b8 shared_cache[8]; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          11:  \r\ncheck:2'0     ~\r\n          12: .visible .entry fusion( \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~\r\n          13:  .param .u64 fusion_param_0, \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          14:  .param .u64 fusion_param_1, \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          15:  .param .u64 fusion_param_2, \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          16:  .param .u64 fusion_param_3, \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          17:  .param .u64 fusion_param_4 \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          18: ) \r\ncheck:2'0     ~~\r\n          19: .reqntid 64, 1, 1 \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~\r\n          20: { \r\ncheck:2'0     ~~\r\n          21:  .local .align 4 .b8 __local_depot0[4]; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          22:  .reg .b64 %SP; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~\r\n          23:  .reg .b64 %SPL; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~\r\n          24:  .reg .pred %p<5>; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~\r\n          25:  .reg .b16 %rs<6>; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~\r\n          26:  .reg .b32 %r<10>; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~\r\n          27:  .reg .f32 %f<88>; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~\r\n          28:  .reg .b64 %rd<30>; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~\r\n          29:  \r\ncheck:2'0     ~\r\n          30:  mov.u64 %SPL, __local_depot0; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          31:  cvta.local.u64 %SP, %SPL; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          32:  ld.param.u64 %rd3, [fusion_param_0]; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          33:  ld.param.u64 %rd5, [fusion_param_1]; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          34:  ld.param.u64 %rd6, [fusion_param_3]; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          35:  cvta.to.global.u64 %rd7, %rd6; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          36:  ld.param.u64 %rd8, [fusion_param_2]; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          37:  cvta.to.global.u64 %rd9, %rd8; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          38:  cvta.to.global.u64 %rd10, %rd5; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          39:  cvta.to.global.u64 %rd11, %rd3; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          40:  mov.u32 %r1, %tid.x; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~\r\n          41:  mov.u32 %r2, %ctaid.x; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~\r\n          42:  shl.b32 %r4, %r2, 10; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~\r\n          43:  or.b32 %r5, %r4, %r1; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~\r\n          44:  mul.wide.u32 %rd12, %r5, 4; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          45:  add.s64 %rd13, %rd11, %rd12; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          46:  ld.global.nc.f32 %f3, [%rd13]; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\ncheck:2'1      ?                               possible intended match\r\n          47:  mul.wide.u32 %rd14, %r2, 4; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          48:  add.s64 %rd15, %rd10, %rd14; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          49:  ld.global.nc.f32 %f4, [%rd15]; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          50:  mul.rn.f32 %f5, %f4, 0f3A800000; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          51:  sub.rn.f32 %f6, %f3, %f5; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          52:  mul.rn.f32 %f7, %f6, %f6; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          53:  add.rn.f32 %f8, %f7, 0f00000000; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          54:  add.s64 %rd16, %rd7, %rd12; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          55:  st.global.f32 [%rd16], %f5; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          56:  add.s64 %rd17, %rd9, %rd12; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          57:  st.global.f32 [%rd17], %f6; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          58:  ld.global.nc.f32 %f9, [%rd13+256]; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          59:  sub.rn.f32 %f10, %f9, %f5; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          60:  mul.rn.f32 %f11, %f10, %f10; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          61:  add.rn.f32 %f12, %f8, %f11; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          62:  st.global.f32 [%rd16+256], %f5; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          63:  st.global.f32 [%rd17+256], %f10; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          64:  ld.global.nc.f32 %f13, [%rd13+512]; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          65:  sub.rn.f32 %f14, %f13, %f5; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          66:  mul.rn.f32 %f15, %f14, %f14; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          67:  add.rn.f32 %f16, %f12, %f15; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          68:  st.global.f32 [%rd16+512], %f5; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          69:  st.global.f32 [%rd17+512], %f14; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          70:  ld.global.nc.f32 %f17, [%rd13+768]; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          71:  sub.rn.f32 %f18, %f17, %f5; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          72:  mul.rn.f32 %f19, %f18, %f18; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          73:  add.rn.f32 %f20, %f16, %f19; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          74:  st.global.f32 [%rd16+768], %f5; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          75:  st.global.f32 [%rd17+768], %f18; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          76:  ld.global.nc.f32 %f21, [%rd13+1024]; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          77:  sub.rn.f32 %f22, %f21, %f5; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          78:  mul.rn.f32 %f23, %f22, %f22; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          79:  add.rn.f32 %f24, %f20, %f23; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          80:  st.global.f32 [%rd16+1024], %f5; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          81:  st.global.f32 [%rd17+1024], %f22; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          82:  ld.global.nc.f32 %f25, [%rd13+1280]; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          83:  sub.rn.f32 %f26, %f25, %f5; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          84:  mul.rn.f32 %f27, %f26, %f26; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          85:  add.rn.f32 %f28, %f24, %f27; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          86:  st.global.f32 [%rd16+1280], %f5; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          87:  st.global.f32 [%rd17+1280], %f26; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          88:  ld.global.nc.f32 %f29, [%rd13+1536]; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          89:  sub.rn.f32 %f30, %f29, %f5; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          90:  mul.rn.f32 %f31, %f30, %f30; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          91:  add.rn.f32 %f32, %f28, %f31; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          92:  st.global.f32 [%rd16+1536], %f5; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          93:  st.global.f32 [%rd17+1536], %f30; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          94:  ld.global.nc.f32 %f33, [%rd13+1792]; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          95:  sub.rn.f32 %f34, %f33, %f5; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          96:  mul.rn.f32 %f35, %f34, %f34; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          97:  add.rn.f32 %f36, %f32, %f35; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          98:  st.global.f32 [%rd16+1792], %f5; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n          99:  st.global.f32 [%rd17+1792], %f34; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         100:  ld.global.nc.f32 %f37, [%rd13+2048]; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         101:  sub.rn.f32 %f38, %f37, %f5; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         102:  mul.rn.f32 %f39, %f38, %f38; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         103:  add.rn.f32 %f40, %f36, %f39; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         104:  st.global.f32 [%rd16+2048], %f5; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         105:  st.global.f32 [%rd17+2048], %f38; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         106:  ld.global.nc.f32 %f41, [%rd13+2304]; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         107:  sub.rn.f32 %f42, %f41, %f5; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         108:  mul.rn.f32 %f43, %f42, %f42; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         109:  add.rn.f32 %f44, %f40, %f43; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         110:  st.global.f32 [%rd16+2304], %f5; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         111:  st.global.f32 [%rd17+2304], %f42; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         112:  ld.global.nc.f32 %f45, [%rd13+2560]; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         113:  sub.rn.f32 %f46, %f45, %f5; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         114:  mul.rn.f32 %f47, %f46, %f46; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         115:  add.rn.f32 %f48, %f44, %f47; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         116:  st.global.f32 [%rd16+2560], %f5; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         117:  st.global.f32 [%rd17+2560], %f46; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         118:  ld.global.nc.f32 %f49, [%rd13+2816]; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         119:  sub.rn.f32 %f50, %f49, %f5; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         120:  mul.rn.f32 %f51, %f50, %f50; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         121:  add.rn.f32 %f52, %f48, %f51; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         122:  st.global.f32 [%rd16+2816], %f5; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         123:  st.global.f32 [%rd17+2816], %f50; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         124:  ld.global.nc.f32 %f53, [%rd13+3072]; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         125:  sub.rn.f32 %f54, %f53, %f5; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         126:  mul.rn.f32 %f55, %f54, %f54; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         127:  add.rn.f32 %f56, %f52, %f55; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         128:  st.global.f32 [%rd16+3072], %f5; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         129:  st.global.f32 [%rd17+3072], %f54; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         130:  ld.global.nc.f32 %f57, [%rd13+3328]; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         131:  sub.rn.f32 %f58, %f57, %f5; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         132:  mul.rn.f32 %f59, %f58, %f58; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         133:  add.rn.f32 %f60, %f56, %f59; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         134:  st.global.f32 [%rd16+3328], %f5; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         135:  st.global.f32 [%rd17+3328], %f58; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         136:  ld.global.nc.f32 %f61, [%rd13+3584]; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         137:  sub.rn.f32 %f62, %f61, %f5; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         138:  mul.rn.f32 %f63, %f62, %f62; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         139:  add.rn.f32 %f64, %f60, %f63; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         140:  st.global.f32 [%rd16+3584], %f5; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         141:  st.global.f32 [%rd17+3584], %f62; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         142:  ld.global.nc.f32 %f65, [%rd13+3840]; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         143:  sub.rn.f32 %f66, %f65, %f5; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         144:  mul.rn.f32 %f67, %f66, %f66; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         145:  add.rn.f32 %f68, %f64, %f67; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         146:  st.global.f32 [%rd16+3840], %f5; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         147:  st.global.f32 [%rd17+3840], %f66; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         148:  and.b32 %r3, %r1, 31; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~\r\n         149:  shfl.sync.down.b32 %f69, %f68, 16, 31, -1; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         150:  add.rn.f32 %f70, %f68, %f69; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         151:  shfl.sync.down.b32 %f71, %f70, 8, 31, -1; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         152:  add.rn.f32 %f72, %f70, %f71; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         153:  shfl.sync.down.b32 %f73, %f72, 4, 31, -1; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         154:  add.rn.f32 %f74, %f72, %f73; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         155:  shfl.sync.down.b32 %f75, %f74, 2, 31, -1; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         156:  add.rn.f32 %f76, %f74, %f75; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         157:  shfl.sync.down.b32 %f77, %f76, 1, 31, -1; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         158:  setp.eq.s32 %p1, %r3, 0; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         159:  mov.u64 %rd19, shared_cache; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         160:  @%p1 bra $L__BB0_3; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~\r\n         161:  bra.uni $L__BB0_1; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~\r\n         162: $L__BB0_3: \r\ncheck:2'0     ~~~~~~~~~~~\r\n         163:  shr.u32 %r6, %r1, 5; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~\r\n         164:  mul.wide.u32 %rd18, %r6, 4; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         165:  add.s64 %rd2, %rd19, %rd18; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         166:  add.rn.f32 %f1, %f76, %f77; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         167:  st.shared.f32 [%rd2], %f1; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         168: $L__BB0_1: \r\ncheck:2'0     ~~~~~~~~~~~\r\n         169:  bar.sync 0; \r\ncheck:2'0     ~~~~~~~~~~~~~\r\n         170:  setp.lt.u32 %p2, %r1, 32; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         171:  @%p2 bra $L__BB0_4; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~\r\n         172:  bra.uni $L__BB0_2; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~\r\n         173: $L__BB0_4: \r\ncheck:2'0     ~~~~~~~~~~~\r\n         174:  mul.wide.u32 %rd20, %r3, 4; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         175:  add.s64 %rd22, %rd19, %rd20; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         176:  cvta.shared.u64 %rd23, %rd22; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         177:  mov.u32 %r7, 0; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~\r\n         178:  st.u32 [%SP+0], %r7; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~\r\n         179:  setp.lt.u32 %p3, %r1, 2; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         180:  add.u64 %rd24, %SP, 0; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~\r\n         181:  selp.b64 %rd25, %rd23, %rd24, %p3; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         182:  ld.f32 %f78, [%rd25]; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~\r\n         183:  shfl.sync.down.b32 %f79, %f78, 16, 31, -1; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         184:  add.rn.f32 %f80, %f78, %f79; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         185:  shfl.sync.down.b32 %f81, %f80, 8, 31, -1; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         186:  add.rn.f32 %f82, %f80, %f81; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         187:  shfl.sync.down.b32 %f83, %f82, 4, 31, -1; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         188:  add.rn.f32 %f84, %f82, %f83; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         189:  shfl.sync.down.b32 %f85, %f84, 2, 31, -1; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         190:  add.rn.f32 %f86, %f84, %f85; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         191:  shfl.sync.down.b32 %f87, %f86, 1, 31, -1; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         192:  add.rn.f32 %f2, %f86, %f87; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         193:  st.f32 [%rd25], %f2; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~\r\n         194:  setp.ne.s32 %p4, %r1, 0; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         195:  @%p4 bra $L__BB0_2; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~\r\n         196:  ld.param.u64 %rd4, [fusion_param_4]; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         197:  cvta.to.global.u64 %rd1, %rd4; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         198:  cvt.u16.u32 %rs1, %r2; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~\r\n         199:  mul.hi.u16 %rs2, %rs1, -21845; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         200:  shr.u16 %rs3, %rs2, 8; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~\r\n         201:  mul.lo.s16 %rs4, %rs3, 384; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         202:  sub.s16 %rs5, %rs1, %rs4; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         203:  cvt.u32.u16 %r8, %rs3; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~\r\n         204:  mul.wide.u32 %rd26, %r8, 1536; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         205:  add.s64 %rd27, %rd1, %rd26; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         206:  cvt.u32.u16 %r9, %rs5; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~\r\n         207:  mul.wide.u32 %rd28, %r9, 4; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         208:  add.s64 %rd29, %rd27, %rd28; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         209:  st.global.f32 [%rd29], %f2; \r\ncheck:2'0     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n         210: $L__BB0_2: \r\ncheck:2'0     ~~~~~~~~~~~\r\n         211:  ret; \r\ncheck:2'0     ~~~~~~\r\n         212:  \r\ncheck:2'0     ~\r\n         213: } \r\ncheck:2'0     ~~\r\n>>>>>>\r\n\r\n2022-11-22 22:11:50.705200: E tensorflow/compiler/xla/tests/filecheck.cc:76] FileCheck input was:\r\n//\r\n// Generated by LLVM NVPTX Back-End\r\n//\r\n\r\n.version 6.0\r\n.target sm_52\r\n.address_size 64\r\n\r\n\t// .globl\tfusion\r\n.shared .align 4 .b8 shared_cache[8];\r\n\r\n.visible .entry fusion(\r\n\t.param .u64 fusion_param_0,\r\n\t.param .u64 fusion_param_1,\r\n\t.param .u64 fusion_param_2,\r\n\t.param .u64 fusion_param_3,\r\n\t.param .u64 fusion_param_4\r\n)\r\n.reqntid 64, 1, 1\r\n{\r\n\t.local .align 4 .b8 \t__local_depot0[4];\r\n\t.reg .b64 \t%SP;\r\n\t.reg .b64 \t%SPL;\r\n\t.reg .pred \t%p<5>;\r\n\t.reg .b16 \t%rs<6>;\r\n\t.reg .b32 \t%r<10>;\r\n\t.reg .f32 \t%f<88>;\r\n\t.reg .b64 \t%rd<30>;\r\n\r\n\tmov.u64 \t%SPL, __local_depot0;\r\n\tcvta.local.u64 \t%SP, %SPL;\r\n\tld.param.u64 \t%rd3, [fusion_param_0];\r\n\tld.param.u64 \t%rd5, [fusion_param_1];\r\n\tld.param.u64 \t%rd6, [fusion_param_3];\r\n\tcvta.to.global.u64 \t%rd7, %rd6;\r\n\tld.param.u64 \t%rd8, [fusion_param_2];\r\n\tcvta.to.global.u64 \t%rd9, %rd8;\r\n\tcvta.to.global.u64 \t%rd10, %rd5;\r\n\tcvta.to.global.u64 \t%rd11, %rd3;\r\n\tmov.u32 \t%r1, %tid.x;\r\n\tmov.u32 \t%r2, %ctaid.x;\r\n\tshl.b32 \t%r4, %r2, 10;\r\n\tor.b32  \t%r5, %r4, %r1;\r\n\tmul.wide.u32 \t%rd12, %r5, 4;\r\n\tadd.s64 \t%rd13, %rd11, %rd12;\r\n\tld.global.nc.f32 \t%f3, [%rd13];\r\n\tmul.wide.u32 \t%rd14, %r2, 4;\r\n\tadd.s64 \t%rd15, %rd10, %rd14;\r\n\tld.global.nc.f32 \t%f4, [%rd15];\r\n\tmul.rn.f32 \t%f5, %f4, 0f3A800000;\r\n\tsub.rn.f32 \t%f6, %f3, %f5;\r\n\tmul.rn.f32 \t%f7, %f6, %f6;\r\n\tadd.rn.f32 \t%f8, %f7, 0f00000000;\r\n\tadd.s64 \t%rd16, %rd7, %rd12;\r\n\tst.global.f32 \t[%rd16], %f5;\r\n\tadd.s64 \t%rd17, %rd9, %rd12;\r\n\tst.global.f32 \t[%rd17], %f6;\r\n\tld.global.nc.f32 \t%f9, [%rd13+256];\r\n\tsub.rn.f32 \t%f10, %f9, %f5;\r\n\tmul.rn.f32 \t%f11, %f10, %f10;\r\n\tadd.rn.f32 \t%f12, %f8, %f11;\r\n\tst.global.f32 \t[%rd16+256], %f5;\r\n\tst.global.f32 \t[%rd17+256], %f10;\r\n\tld.global.nc.f32 \t%f13, [%rd13+512];\r\n\tsub.rn.f32 \t%f14, %f13, %f5;\r\n\tmul.rn.f32 \t%f15, %f14, %f14;\r\n\tadd.rn.f32 \t%f16, %f12, %f15;\r\n\tst.global.f32 \t[%rd16+512], %f5;\r\n\tst.global.f32 \t[%rd17+512], %f14;\r\n\tld.global.nc.f32 \t%f17, [%rd13+768];\r\n\tsub.rn.f32 \t%f18, %f17, %f5;\r\n\tmul.rn.f32 \t%f19, %f18, %f18;\r\n\tadd.rn.f32 \t%f20, %f16, %f19;\r\n\tst.global.f32 \t[%rd16+768], %f5;\r\n\tst.global.f32 \t[%rd17+768], %f18;\r\n\tld.global.nc.f32 \t%f21, [%rd13+1024];\r\n\tsub.rn.f32 \t%f22, %f21, %f5;\r\n\tmul.rn.f32 \t%f23, %f22, %f22;\r\n\tadd.rn.f32 \t%f24, %f20, %f23;\r\n\tst.global.f32 \t[%rd16+1024], %f5;\r\n\tst.global.f32 \t[%rd17+1024], %f22;\r\n\tld.global.nc.f32 \t%f25, [%rd13+1280];\r\n\tsub.rn.f32 \t%f26, %f25, %f5;\r\n\tmul.rn.f32 \t%f27, %f26, %f26;\r\n\tadd.rn.f32 \t%f28, %f24, %f27;\r\n\tst.global.f32 \t[%rd16+1280], %f5;\r\n\tst.global.f32 \t[%rd17+1280], %f26;\r\n\tld.global.nc.f32 \t%f29, [%rd13+1536];\r\n\tsub.rn.f32 \t%f30, %f29, %f5;\r\n\tmul.rn.f32 \t%f31, %f30, %f30;\r\n\tadd.rn.f32 \t%f32, %f28, %f31;\r\n\tst.global.f32 \t[%rd16+1536], %f5;\r\n\tst.global.f32 \t[%rd17+1536], %f30;\r\n\tld.global.nc.f32 \t%f33, [%rd13+1792];\r\n\tsub.rn.f32 \t%f34, %f33, %f5;\r\n\tmul.rn.f32 \t%f35, %f34, %f34;\r\n\tadd.rn.f32 \t%f36, %f32, %f35;\r\n\tst.global.f32 \t[%rd16+1792], %f5;\r\n\tst.global.f32 \t[%rd17+1792], %f34;\r\n\tld.global.nc.f32 \t%f37, [%rd13+2048];\r\n\tsub.rn.f32 \t%f38, %f37, %f5;\r\n\tmul.rn.f32 \t%f39, %f38, %f38;\r\n\tadd.rn.f32 \t%f40, %f36, %f39;\r\n\tst.global.f32 \t[%rd16+2048], %f5;\r\n\tst.global.f32 \t[%rd17+2048], %f38;\r\n\tld.global.nc.f32 \t%f41, [%rd13+2304];\r\n\tsub.rn.f32 \t%f42, %f41, %f5;\r\n\tmul.rn.f32 \t%f43, %f42, %f42;\r\n\tadd.rn.f32 \t%f44, %f40, %f43;\r\n\tst.global.f32 \t[%rd16+2304], %f5;\r\n\tst.global.f32 \t[%rd17+2304], %f42;\r\n\tld.global.nc.f32 \t%f45, [%rd13+2560];\r\n\tsub.rn.f32 \t%f46, %f45, %f5;\r\n\tmul.rn.f32 \t%f47, %f46, %f46;\r\n\tadd.rn.f32 \t%f48, %f44, %f47;\r\n\tst.global.f32 \t[%rd16+2560], %f5;\r\n\tst.global.f32 \t[%rd17+2560], %f46;\r\n\tld.global.nc.f32 \t%f49, [%rd13+2816];\r\n\tsub.rn.f32 \t%f50, %f49, %f5;\r\n\tmul.rn.f32 \t%f51, %f50, %f50;\r\n\tadd.rn.f32 \t%f52, %f48, %f51;\r\n\tst.global.f32 \t[%rd16+2816], %f5;\r\n\tst.global.f32 \t[%rd17+2816], %f50;\r\n\tld.global.nc.f32 \t%f53, [%rd13+3072];\r\n\tsub.rn.f32 \t%f54, %f53, %f5;\r\n\tmul.rn.f32 \t%f55, %f54, %f54;\r\n\tadd.rn.f32 \t%f56, %f52, %f55;\r\n\tst.global.f32 \t[%rd16+3072], %f5;\r\n\tst.global.f32 \t[%rd17+3072], %f54;\r\n\tld.global.nc.f32 \t%f57, [%rd13+3328];\r\n\tsub.rn.f32 \t%f58, %f57, %f5;\r\n\tmul.rn.f32 \t%f59, %f58, %f58;\r\n\tadd.rn.f32 \t%f60, %f56, %f59;\r\n\tst.global.f32 \t[%rd16+3328], %f5;\r\n\tst.global.f32 \t[%rd17+3328], %f58;\r\n\tld.global.nc.f32 \t%f61, [%rd13+3584];\r\n\tsub.rn.f32 \t%f62, %f61, %f5;\r\n\tmul.rn.f32 \t%f63, %f62, %f62;\r\n\tadd.rn.f32 \t%f64, %f60, %f63;\r\n\tst.global.f32 \t[%rd16+3584], %f5;\r\n\tst.global.f32 \t[%rd17+3584], %f62;\r\n\tld.global.nc.f32 \t%f65, [%rd13+3840];\r\n\tsub.rn.f32 \t%f66, %f65, %f5;\r\n\tmul.rn.f32 \t%f67, %f66, %f66;\r\n\tadd.rn.f32 \t%f68, %f64, %f67;\r\n\tst.global.f32 \t[%rd16+3840], %f5;\r\n\tst.global.f32 \t[%rd17+3840], %f66;\r\n\tand.b32  \t%r3, %r1, 31;\r\n\tshfl.sync.down.b32\t%f69, %f68, 16, 31, -1;\r\n\tadd.rn.f32 \t%f70, %f68, %f69;\r\n\tshfl.sync.down.b32\t%f71, %f70, 8, 31, -1;\r\n\tadd.rn.f32 \t%f72, %f70, %f71;\r\n\tshfl.sync.down.b32\t%f73, %f72, 4, 31, -1;\r\n\tadd.rn.f32 \t%f74, %f72, %f73;\r\n\tshfl.sync.down.b32\t%f75, %f74, 2, 31, -1;\r\n\tadd.rn.f32 \t%f76, %f74, %f75;\r\n\tshfl.sync.down.b32\t%f77, %f76, 1, 31, -1;\r\n\tsetp.eq.s32 \t%p1, %r3, 0;\r\n\tmov.u64 \t%rd19, shared_cache;\r\n\t@%p1 bra \t$L__BB0_3;\r\n\tbra.uni \t$L__BB0_1;\r\n$L__BB0_3:\r\n\tshr.u32 \t%r6, %r1, 5;\r\n\tmul.wide.u32 \t%rd18, %r6, 4;\r\n\tadd.s64 \t%rd2, %rd19, %rd18;\r\n\tadd.rn.f32 \t%f1, %f76, %f77;\r\n\tst.shared.f32 \t[%rd2], %f1;\r\n$L__BB0_1:\r\n\tbar.sync \t0;\r\n\tsetp.lt.u32 \t%p2, %r1, 32;\r\n\t@%p2 bra \t$L__BB0_4;\r\n\tbra.uni \t$L__BB0_2;\r\n$L__BB0_4:\r\n\tmul.wide.u32 \t%rd20, %r3, 4;\r\n\tadd.s64 \t%rd22, %rd19, %rd20;\r\n\tcvta.shared.u64 \t%rd23, %rd22;\r\n\tmov.u32 \t%r7, 0;\r\n\tst.u32 \t[%SP+0], %r7;\r\n\tsetp.lt.u32 \t%p3, %r1, 2;\r\n\tadd.u64 \t%rd24, %SP, 0;\r\n\tselp.b64 \t%rd25, %rd23, %rd24, %p3;\r\n\tld.f32 \t%f78, [%rd25];\r\n\tshfl.sync.down.b32\t%f79, %f78, 16, 31, -1;\r\n\tadd.rn.f32 \t%f80, %f78, %f79;\r\n\tshfl.sync.down.b32\t%f81, %f80, 8, 31, -1;\r\n\tadd.rn.f32 \t%f82, %f80, %f81;\r\n\tshfl.sync.down.b32\t%f83, %f82, 4, 31, -1;\r\n\tadd.rn.f32 \t%f84, %f82, %f83;\r\n\tshfl.sync.down.b32\t%f85, %f84, 2, 31, -1;\r\n\tadd.rn.f32 \t%f86, %f84, %f85;\r\n\tshfl.sync.down.b32\t%f87, %f86, 1, 31, -1;\r\n\tadd.rn.f32 \t%f2, %f86, %f87;\r\n\tst.f32 \t[%rd25], %f2;\r\n\tsetp.ne.s32 \t%p4, %r1, 0;\r\n\t@%p4 bra \t$L__BB0_2;\r\n\tld.param.u64 \t%rd4, [fusion_param_4];\r\n\tcvta.to.global.u64 \t%rd1, %rd4;\r\n\tcvt.u16.u32 \t%rs1, %r2;\r\n\tmul.hi.u16 \t%rs2, %rs1, -21845;\r\n\tshr.u16 \t%rs3, %rs2, 8;\r\n\tmul.lo.s16 \t%rs4, %rs3, 384;\r\n\tsub.s16 \t%rs5, %rs1, %rs4;\r\n\tcvt.u32.u16 \t%r8, %rs3;\r\n\tmul.wide.u32 \t%rd26, %r8, 1536;\r\n\tadd.s64 \t%rd27, %rd1, %rd26;\r\n\tcvt.u32.u16 \t%r9, %rs5;\r\n\tmul.wide.u32 \t%rd28, %r9, 4;\r\n\tadd.s64 \t%rd29, %rd27, %rd28;\r\n\tst.global.f32 \t[%rd29], %f2;\r\n$L__BB0_2:\r\n\tret;\r\n\r\n}\r\n\r\ntensorflow/compiler/xla/service/gpu/tests/gpu_codegen_test.cc:57: Failure\r\nValue of: filecheck_result.value()\r\n  Actual: false\r\nExpected: true\r\n[  FAILED  ] ReductionVectorizationNoOptTest.MultiOutputStore (727 ms)\r\n```","created_at":"2022-11-23T14:43:08Z","closed_at":"2022-12-02T12:37:59Z","merged_at":"2022-12-02T12:37:59Z","user_id":180987,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1133322908,"title":"Implement shape inference for TF::ResourceGatherOp","body":"The tf-shape-inference pass is modified to infer the shape of the resource subtypes for function arguments based on ResurceGatherOp, ReadVariableOp, or AssignVariableOp when possible.","created_at":"2022-11-23T11:13:31Z","closed_at":"2022-11-25T11:50:32Z","merged_at":null,"user_id":111337181,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1132580440,"title":"[NVIDIA TF] Enable BF16 for AssignAddVariableOp/AssignSubVariableOp and DenseUpdate","body":"Add gpu bf16 for AssignAddVariableOp , AssignSubVariableOp, and DenseUpdate which they both depends on.\r\n\r\ncc @reedwm Btw, I am preparing to add float16 to the `TF_CALL_GPU_ALL_TYPES` macro.  As you can tell for a PR like this one it would've taken care all of the kernel definitions with minimal changes.\r\nIf you would prefer, I can open a large PR which updates the macro to enable BF16 across most of the remaining ops. Otherwise, I can just keep going one by one as I have been, and then add bf16 to the macro at the very end.","created_at":"2022-11-23T00:15:01Z","closed_at":"2022-12-16T15:50:37Z","merged_at":"2022-12-16T15:50:37Z","user_id":12981474,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1132424628,"title":"[NVIDIA TF] Enable BF16 Reverse/ReverseV2 and ReverseSequence","body":"Adds bfloat16 gpu support and tests for reverse operators","created_at":"2022-11-22T21:25:46Z","closed_at":"2022-12-16T11:23:43Z","merged_at":"2022-12-16T11:23:43Z","user_id":12981474,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1132052857,"title":"Make fuzztest fuzzer ready for OSS-Fuzz","body":"The goal here is to make the fuzztest fuzzers run in the OSS-Fuzz infrastructure. I'm starting with a single fuzzer to confirm it all works.\r\n\r\nI also updated the googletest dependency, will this have any negative impact?\r\n\r\nCross-referencing https://github.com/google/oss-fuzz/pull/8992 in the OSS-Fuzz repo.\r\n\r\nSigned-off-by: David Korczynski <david@adalogics.com>","created_at":"2022-11-22T16:10:10Z","closed_at":"2023-02-17T17:52:30Z","merged_at":null,"user_id":657617,"sentiment":{"polarity":0.2,"subjectivity":0.5}}
{"_id":1130715296,"title":"[INTEL oneDNN] OneDNN Refactoring Part 1: Remove obsolete operations","body":"This PR removes obsolete oneDNN operations (oneDNN blocked format related) as well as MKL layout pass tests and conversion tests (test cases are all related to blocked format).\r\n\r\nResults:\r\n   1. 12 source files are deleted\r\n   2. 8 source files are update (bazel files, tests)\r\n   3. Total 8843 lines of code are cleaned away!","created_at":"2022-11-21T22:35:25Z","closed_at":"2023-01-24T19:08:28Z","merged_at":null,"user_id":29215195,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1130687765,"title":"Add another code example in Leaky_RELU docstring","body":null,"created_at":"2022-11-21T22:09:56Z","closed_at":"2022-11-23T09:14:12Z","merged_at":null,"user_id":118690585,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1130603959,"title":"Change per-process mem to use total memory as base","body":"This is to address [this issue](https://github.com/google/jax/issues/4310).\r\nInstead of using free_memory to calculate the amount of memory to assign to the process, we need to use total_memory to be consistent with tf core.\r\nDoc is also updated to reflect it.\r\nThis needs to be included in the release doc too.","created_at":"2022-11-21T20:58:44Z","closed_at":"2022-11-28T12:35:19Z","merged_at":"2022-11-28T12:35:19Z","user_id":26332583,"sentiment":{"polarity":-0.4,"subjectivity":0.875}}
{"_id":1130525304,"title":"Exception handling","body":null,"created_at":"2022-11-21T19:40:05Z","closed_at":"2022-12-06T22:18:41Z","merged_at":null,"user_id":6442822,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1129895174,"title":"[ROCm] Fixed gpu_kernel_tiling_test on RowReductionCorrectShmemUsage","body":"Due to LLVM IR's changes, this test is broken and it needs to change accoridingly on ROCm side.\r\n\r\nThanks   /cc @cheshire ","created_at":"2022-11-21T11:20:11Z","closed_at":"2022-11-28T12:03:11Z","merged_at":"2022-11-28T12:03:11Z","user_id":913790,"sentiment":{"polarity":0.1,"subjectivity":0.2}}
{"_id":1129313078,"title":"[XLA] Expose channel_id and use_global_device_ids of AllToAll in xla builder","body":"Similar to AllReduce and AllGather, AllToAll also supports `channel_id` and `use_global_device_ids`, but these options are not exposed to the python API.\r\nThis PR exposes these options to the python API of XlaBuilder, following the same logic as AllReduce.\r\n","created_at":"2022-11-21T00:36:18Z","closed_at":"2022-12-17T23:43:21Z","merged_at":null,"user_id":15100009,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1129307364,"title":"[FIX] Fix integer overflow in XLA nccl thunks (cont.)","body":"Change `int` to `int64_t` to prevent integer overflow in XLA NCCL thunks.\r\n\r\nThis PR is the same as #57616. I am sorry that I didn't fix all of them in the first PR. Now I checked all types of `element_count` and confirmed all of them are fixed.","created_at":"2022-11-21T00:19:21Z","closed_at":"2022-11-28T12:08:25Z","merged_at":"2022-11-28T12:08:25Z","user_id":15100009,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1126776820,"title":"[NVIDIA TF] Enable BF16 L2Loss","body":"GPU support for bfloat16 L2Loss op.","created_at":"2022-11-18T00:23:19Z","closed_at":"2022-11-18T09:05:26Z","merged_at":"2022-11-18T09:05:26Z","user_id":12981474,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1125656365,"title":"Fixed some typos in embedding_ops.py","body":"Fixed some typos in embedding_ops.py.","created_at":"2022-11-17T08:54:58Z","closed_at":"2022-11-17T12:21:58Z","merged_at":null,"user_id":86464649,"sentiment":{"polarity":0.1,"subjectivity":0.2}}
{"_id":1124531854,"title":"Move plugin rule to the XLA directory","body":"Moves the dependency of `//tensorflow/compiler/xla/pjrt:pjrt_plugin_device_client` from `//tensorflow/compiler/plugin` to `//tensorflow/compiler/xla/pjrt/plugin`.\r\n\r\nThe old plugin folder is retained to avoid breaking anyone using that rule for unrelated reasons, but it no longer connects to the xla_client.\r\n\r\n@joker-eph @skye @penpornk ","created_at":"2022-11-16T13:54:48Z","closed_at":"2022-11-16T21:23:13Z","merged_at":"2022-11-16T21:23:13Z","user_id":60800749,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1123637240,"title":"Broken tests is causing release builds failures - TF 2.11.0","body":"# TODO(b/259319686) : Disable the test","created_at":"2022-11-16T01:16:16Z","closed_at":"2022-11-16T01:17:12Z","merged_at":"2022-11-16T01:17:12Z","user_id":106367904,"sentiment":{"polarity":-0.4,"subjectivity":0.4}}
{"_id":1123626937,"title":"Support writing non conversion report to more filesystems","body":"This PR allows tf trt non conversion report to save in all filesystems supported by tensorflow. This is especially useful when user has a use case to convert a remotely saved model.\r\n\r\nRegarding unit test: I didn't find corresponding unit test for this function in `segment_test.cc`. For this kind of functionality maybe an integration test is more suitable? Please let me know and I could work on that.","created_at":"2022-11-16T01:02:38Z","closed_at":"2023-03-02T20:55:10Z","merged_at":"2023-03-02T20:55:09Z","user_id":3444368,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":1123545304,"title":"Update all_to_all.cc","body":null,"created_at":"2022-11-15T23:32:04Z","closed_at":"2022-11-16T04:31:19Z","merged_at":null,"user_id":99087793,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1123539579,"title":"Update all_to_all.cc","body":null,"created_at":"2022-11-15T23:27:47Z","closed_at":"2022-11-16T04:31:23Z","merged_at":null,"user_id":99087793,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1123416073,"title":"Add c_api.cc under tensorflow/lite/c/","body":"Added c_api.cc file from tensorflow/tensorflow/lite/core/c/c_api.cc under tensorflow/lite/c/ to fix the cmake c build issue.\r\nFixes: #58550","created_at":"2022-11-15T21:19:41Z","closed_at":"2022-11-15T21:41:56Z","merged_at":null,"user_id":73069040,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1123163520,"title":"Migration to clang","body":"Draft PR to run tests. This will not be merged until we have ensured that the Clang does not break anything.","created_at":"2022-11-15T16:59:48Z","closed_at":"2022-12-22T15:21:34Z","merged_at":null,"user_id":14946926,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1122377860,"title":"TfLite: adds generate-pc.sh","body":"This change adds the generate-pc.sh file for generating the\ntensorflowlite.pc that can be used by pkg-config.\nThis is useful for the platforms that depend on libtensorflowlite.so\ninstead of the libtensorflow.so.","created_at":"2022-11-15T05:46:11Z","closed_at":"2022-12-19T03:33:09Z","merged_at":"2022-12-19T03:33:09Z","user_id":34463491,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1122211734,"title":"Update py_func.cc","body":"Fixing - Status::OK();","created_at":"2022-11-15T01:24:55Z","closed_at":"2022-11-15T01:26:05Z","merged_at":null,"user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1122209825,"title":"Update py_func.cc - 2.9.3","body":"Fixing the broken builds - Status::OK(); ","created_at":"2022-11-15T01:21:18Z","closed_at":"2022-11-15T01:23:24Z","merged_at":"2022-11-15T01:23:24Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1122200196,"title":"Broken build - 2.8.4 Patch release","body":"Status::OK(); - Fixing the syntax error","created_at":"2022-11-15T01:05:50Z","closed_at":"2022-11-15T01:07:25Z","merged_at":"2022-11-15T01:07:25Z","user_id":106367904,"sentiment":{"polarity":-0.4,"subjectivity":0.4}}
{"_id":1122164039,"title":"Update version numbers for TensorFlow 2.11.0","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 11 -> 11\nPatch: 0 -> 0\n\nNo lingering old version strings \"2.11.0-rc2\" found in source directory \n\"tensorflow/\". Good.\nNo lingering old version strings \"2.11.0rc2\" found in source directory \n\"tensorflow/\". Good.\n```","created_at":"2022-11-15T00:14:07Z","closed_at":"2022-11-15T00:46:22Z","merged_at":"2022-11-15T00:46:21Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1122162693,"title":"Update version numbers for TensorFlow 2.10.1","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 10 -> 10\nPatch: 0 -> 1\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.10.0\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\nBinary file tensorflow/cc/saved_model/testdata/bert2/saved_model.pb matches\nBinary file tensorflow/cc/saved_model/testdata/bert1/saved_model.pb matches\ntensorflow/lite/tools/versioning/runtime_version.cc:327:2.10.0\ntensorflow/lite/tools/versioning/runtime_version.cc:383:2.10.0\ntensorflow/lite/tools/versioning/runtime_version.cc:384:2.10.0\ntensorflow/lite/tools/versioning/runtime_version.cc:385:2.10.0\ntensorflow/lite/tools/versioning/runtime_version.cc:386:2.10.0\ntensorflow/workspace2.bzl:654:2.10.0\ntensorflow/workspace2.bzl:654:2.10.0\ntensorflow/workspace2.bzl:655:2.10.0\ntensorflow/workspace2.bzl:655:2.10.0\ntensorflow/tools/pip_package/setup.py:123:2.10.0\ntensorflow/tools/pip_package/setup.py:124:2.10.0\ntensorflow/tools/pip_package/setup.py:125:2.10.0\ntensorflow/tools/pip_package/setup.py:126:2.10.0\ntensorflow/tools/ci_build/release/requirements_common.txt:27:2.10.0\ntensorflow/tools/ci_build/release/requirements_common.txt:29:2.10.0\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.10.0\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\nBinary file tensorflow/cc/saved_model/testdata/bert2/saved_model.pb matches\nBinary file tensorflow/cc/saved_model/testdata/bert1/saved_model.pb matches\ntensorflow/lite/tools/versioning/runtime_version.cc:327:2.10.0\ntensorflow/lite/tools/versioning/runtime_version.cc:383:2.10.0\ntensorflow/lite/tools/versioning/runtime_version.cc:384:2.10.0\ntensorflow/lite/tools/versioning/runtime_version.cc:385:2.10.0\ntensorflow/lite/tools/versioning/runtime_version.cc:386:2.10.0\ntensorflow/workspace2.bzl:654:2.10.0\ntensorflow/workspace2.bzl:654:2.10.0\ntensorflow/workspace2.bzl:655:2.10.0\ntensorflow/workspace2.bzl:655:2.10.0\ntensorflow/tools/pip_package/setup.py:123:2.10.0\ntensorflow/tools/pip_package/setup.py:124:2.10.0\ntensorflow/tools/pip_package/setup.py:125:2.10.0\ntensorflow/tools/pip_package/setup.py:126:2.10.0\ntensorflow/tools/ci_build/release/requirements_common.txt:27:2.10.0\ntensorflow/tools/ci_build/release/requirements_common.txt:29:2.10.0\n```","created_at":"2022-11-15T00:12:21Z","closed_at":"2022-11-15T00:46:00Z","merged_at":"2022-11-15T00:46:00Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1122162429,"title":"Update version numbers for TensorFlow 2.9.3","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 9 -> 9\nPatch: 2 -> 3\n\nNo lingering old version strings \"2.9.2\" found in source directory \n\"tensorflow/\". Good.\nNo lingering old version strings \"2.9.2\" found in source directory \n\"tensorflow/\". Good.\n```","created_at":"2022-11-15T00:11:58Z","closed_at":"2022-11-15T00:45:41Z","merged_at":"2022-11-15T00:45:41Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1122151348,"title":"Update version numbers for TensorFlow 2.8.4","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 8 -> 8\nPatch: 3 -> 4\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.8.3\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/workspace2.bzl:596:2.8.3\ntensorflow/workspace2.bzl:597:2.8.3\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.8.3\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/workspace2.bzl:596:2.8.3\ntensorflow/workspace2.bzl:597:2.8.3\n```","created_at":"2022-11-14T23:56:31Z","closed_at":"2022-11-14T23:58:39Z","merged_at":"2022-11-14T23:58:39Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1122148724,"title":"Update RELEASE.md to add security","body":null,"created_at":"2022-11-14T23:52:03Z","closed_at":"2022-11-14T23:57:07Z","merged_at":"2022-11-14T23:57:07Z","user_id":15825877,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1122145539,"title":"Update security notes with details about giflib vuln","body":null,"created_at":"2022-11-14T23:46:14Z","closed_at":"2022-11-14T23:55:16Z","merged_at":null,"user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1122103512,"title":"Replace CHECK with returning an InternalError on failing to create py…","body":"…thon tuple\r\n\r\nReturns InternalError if a non UTF-8 string is passed in as token, instead of crashing.\r\n\r\nPiperOrigin-RevId: 478123498","created_at":"2022-11-14T22:55:47Z","closed_at":"2022-11-14T22:59:22Z","merged_at":"2022-11-14T22:59:22Z","user_id":15825877,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1122097113,"title":"Replace CHECK with returning an InternalError on failing to create py…","body":"…thon tuple\r\n\r\nReturns InternalError if a non UTF-8 string is passed in as token, instead of crashing.\r\n\r\nPiperOrigin-RevId: 478123498","created_at":"2022-11-14T22:47:11Z","closed_at":"2022-11-14T22:59:19Z","merged_at":"2022-11-14T22:59:19Z","user_id":15825877,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1122087145,"title":"r2.8 cherry-pick: 7b174a0f2e4 \"Fix asan issue with QuantizeAndDequantizeV2/V3/V4/V4Grad shape inference functions.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/7b174a0f2e40ff3f3aa957aecddfd5aaae35eccb","created_at":"2022-11-14T22:35:38Z","closed_at":"2022-11-14T22:42:26Z","merged_at":"2022-11-14T22:42:26Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1122086843,"title":"r2.10 cherry-pick: f856d02e532 \"Fix missing sparse matrix crash.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/f856d02e5322821aad155dad9b3acab1e9f5d693","created_at":"2022-11-14T22:35:15Z","closed_at":"2022-11-14T22:42:09Z","merged_at":"2022-11-14T22:42:09Z","user_id":16359713,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":1122086775,"title":"r2.8 cherry-pick: 216525144ee \"Fix security vulnerability with FractionalMax(AVG)Pool with illegal pooling_ratio\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/216525144ee7c910296f5b05d214ca1327c9ce48","created_at":"2022-11-14T22:35:10Z","closed_at":"2022-11-14T22:41:51Z","merged_at":"2022-11-14T22:41:51Z","user_id":16359713,"sentiment":{"polarity":-0.5,"subjectivity":0.5}}
{"_id":1122086739,"title":"r2.10 cherry-pick: 7b174a0f2e4 \"Fix asan issue with QuantizeAndDequantizeV2/V3/V4/V4Grad shape inference functions.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/7b174a0f2e40ff3f3aa957aecddfd5aaae35eccb","created_at":"2022-11-14T22:35:07Z","closed_at":"2022-11-14T22:41:32Z","merged_at":"2022-11-14T22:41:32Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1122086707,"title":"r2.9 cherry-pick: 7b174a0f2e4 \"Fix asan issue with QuantizeAndDequantizeV2/V3/V4/V4Grad shape inference functions.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/7b174a0f2e40ff3f3aa957aecddfd5aaae35eccb","created_at":"2022-11-14T22:35:06Z","closed_at":"2022-11-14T22:41:13Z","merged_at":"2022-11-14T22:41:13Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1122086534,"title":"r2.10 cherry-pick: 216525144ee \"Fix security vulnerability with FractionalMax(AVG)Pool with illegal pooling_ratio\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/216525144ee7c910296f5b05d214ca1327c9ce48","created_at":"2022-11-14T22:34:51Z","closed_at":"2022-11-14T22:40:56Z","merged_at":"2022-11-14T22:40:56Z","user_id":16359713,"sentiment":{"polarity":-0.5,"subjectivity":0.5}}
{"_id":1122086493,"title":"r2.9 cherry-pick: 216525144ee \"Fix security vulnerability with FractionalMax(AVG)Pool with illegal pooling_ratio\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/216525144ee7c910296f5b05d214ca1327c9ce48","created_at":"2022-11-14T22:34:48Z","closed_at":"2022-11-14T22:40:39Z","merged_at":"2022-11-14T22:40:39Z","user_id":16359713,"sentiment":{"polarity":-0.5,"subjectivity":0.5}}
{"_id":1122086032,"title":"r2.8 cherry-pick: f856d02e532 \"Fix missing sparse matrix crash.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/f856d02e5322821aad155dad9b3acab1e9f5d693","created_at":"2022-11-14T22:34:20Z","closed_at":"2022-11-14T22:40:19Z","merged_at":"2022-11-14T22:40:19Z","user_id":16359713,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":1122085957,"title":"r2.9 cherry-pick: f856d02e532 \"Fix missing sparse matrix crash.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/f856d02e5322821aad155dad9b3acab1e9f5d693","created_at":"2022-11-14T22:34:14Z","closed_at":"2022-11-14T22:40:02Z","merged_at":"2022-11-14T22:40:02Z","user_id":16359713,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":1122085864,"title":"r2.10 cherry-pick: af4a6a3c8b9 \"Fix empty input crash for SparseFillEmptyRowsGrad.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/af4a6a3c8b95022c351edae94560acc61253a1b8","created_at":"2022-11-14T22:34:06Z","closed_at":"2022-11-14T22:39:46Z","merged_at":"2022-11-14T22:39:46Z","user_id":16359713,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":1122085802,"title":"r2.10 cherry-pick: 9f03a9d3baf \"Replace CHECK with returning an InternalError on failing to create python tuple\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/9f03a9d3bafe902c1e6beb105b2f24172f238645","created_at":"2022-11-14T22:34:01Z","closed_at":"2022-11-14T22:39:31Z","merged_at":"2022-11-14T22:39:31Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1122085672,"title":"r2.8 cherry-pick: 8310bf8dd18 \"Fix crash caused by large broadcasting error. There was an int32 overflow.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/8310bf8dd188ff780e7fc53245058215a05bdbe5","created_at":"2022-11-14T22:33:51Z","closed_at":"2022-11-14T22:39:03Z","merged_at":"2022-11-14T22:39:03Z","user_id":16359713,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.42857142857142855}}
{"_id":1122085316,"title":"r2.8 cherry-pick: af4a6a3c8b9 \"Fix empty input crash for SparseFillEmptyRowsGrad.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/af4a6a3c8b95022c351edae94560acc61253a1b8","created_at":"2022-11-14T22:33:21Z","closed_at":"2022-11-14T22:38:49Z","merged_at":"2022-11-14T22:38:49Z","user_id":16359713,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":1122085077,"title":"r2.10 cherry-pick: 8310bf8dd18 \"Fix crash caused by large broadcasting error. There was an int32 overflow.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/8310bf8dd188ff780e7fc53245058215a05bdbe5","created_at":"2022-11-14T22:33:01Z","closed_at":"2022-11-14T22:38:46Z","merged_at":"2022-11-14T22:38:46Z","user_id":16359713,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.42857142857142855}}
{"_id":1122084991,"title":"r2.9 cherry-pick: 8310bf8dd18 \"Fix crash caused by large broadcasting error. There was an int32 overflow.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/8310bf8dd188ff780e7fc53245058215a05bdbe5","created_at":"2022-11-14T22:32:54Z","closed_at":"2022-11-14T22:38:08Z","merged_at":"2022-11-14T22:38:08Z","user_id":16359713,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.42857142857142855}}
{"_id":1122084942,"title":"r2.9 cherry-pick: af4a6a3c8b9 \"Fix empty input crash for SparseFillEmptyRowsGrad.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/af4a6a3c8b95022c351edae94560acc61253a1b8","created_at":"2022-11-14T22:32:50Z","closed_at":"2022-11-14T22:37:49Z","merged_at":"2022-11-14T22:37:49Z","user_id":16359713,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":1121976732,"title":"[NVIDIA TF] Enable BF16 pooling ops","body":"Adds bfloat16 support for all GPU pooling ops. When using cudnn, cast to float if ampere or greater hardware is not available.\r\n\r\nRequires https://github.com/tensorflow/tensorflow/pull/57674 for NHWCToNCHW functors.\r\n\r\ncc @kaixih @nluehr @kushanam @reedwm ","created_at":"2022-11-14T21:05:03Z","closed_at":"2022-11-30T15:40:57Z","merged_at":"2022-11-30T15:40:56Z","user_id":12981474,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1121936582,"title":"Updates setup.py version to 2.10.1","body":null,"created_at":"2022-11-14T20:27:25Z","closed_at":"2022-11-14T20:36:02Z","merged_at":null,"user_id":66660475,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1121698001,"title":"Update broken link","body":"Update the broken link for `Sutskever et al., 2013` in `gradient_descent.py`","created_at":"2022-11-14T17:09:44Z","closed_at":"2022-12-02T12:19:43Z","merged_at":null,"user_id":81610181,"sentiment":{"polarity":-0.4,"subjectivity":0.4}}
{"_id":1121293604,"title":"Updates Keras dep version in setup.py","body":null,"created_at":"2022-11-14T12:32:38Z","closed_at":"2022-11-14T18:30:08Z","merged_at":"2022-11-14T18:30:08Z","user_id":66660475,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1119822902,"title":"Update estimator version in TF-core release branch - 2.11.0","body":"Update setup.py file after estimator final release for 2.11.0","created_at":"2022-11-12T06:34:54Z","closed_at":"2022-11-12T15:54:55Z","merged_at":"2022-11-12T15:54:55Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1119475773,"title":"[tosa] Extend legalization for tfl.prelu to support the quantized type.","body":null,"created_at":"2022-11-11T19:15:57Z","closed_at":"2023-02-23T23:32:59Z","merged_at":"2023-02-23T23:32:58Z","user_id":78814694,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1118603175,"title":"Broken test failing the release builds - TF 2.9.3","body":"Disabling the testCloseAndReopen - b/258503209","created_at":"2022-11-11T04:15:39Z","closed_at":"2022-11-11T04:18:39Z","merged_at":"2022-11-11T04:18:39Z","user_id":106367904,"sentiment":{"polarity":-0.4,"subjectivity":0.4}}
{"_id":1118296754,"title":"r2.9 cherry-pick: oneDNN 2.6.3 Fix","body":"Upgrading into oneDNN 2.6.3 for security fix","created_at":"2022-11-10T21:00:18Z","closed_at":"2022-11-11T23:31:36Z","merged_at":"2022-11-11T23:31:36Z","user_id":65728957,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1118241243,"title":"Broken test failing the release builds - TF 2.8.4","body":"//bazel_pip/tensorflow/python/kernel_tests/array_ops:concat_op_test - b/258503209 //bazel_pip/tensorflow/python/kernel_tests/array_ops:slice_op_test   //bazel_pip/tensorflow/python/kernel_tests/array_ops:split_op_test","created_at":"2022-11-10T20:07:29Z","closed_at":"2022-11-10T20:09:49Z","merged_at":"2022-11-10T20:09:49Z","user_id":106367904,"sentiment":{"polarity":-0.4,"subjectivity":0.4}}
{"_id":1118188230,"title":"Clarify potential loss of precision in tf.cast to tf.float64 or tf.complex128","body":"Closes #57779. ","created_at":"2022-11-10T19:18:54Z","closed_at":"2022-11-14T19:03:54Z","merged_at":"2022-11-14T19:03:53Z","user_id":1410981,"sentiment":{"polarity":0.0,"subjectivity":1.0}}
{"_id":1118077978,"title":"[oneDNN] UT failure fix: //tensorflow/python/kernel_tests/nn_ops:pooling_ops_3d_test_cpu","body":"With oneDNN enabled //tensorflow/python/kernel_tests/nn_ops:pooling_ops_3d_test_cpu got triggered, a sanity check of empty tensor on avgpool3d_grad is needed. This PR will resolve //tensorflow/python/kernel_tests/nn_ops:pooling_ops_3d_test_cpu test failure ","created_at":"2022-11-10T17:41:19Z","closed_at":"2022-11-26T05:57:18Z","merged_at":"2022-11-26T05:57:18Z","user_id":65728957,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":1118058165,"title":"Broken test failing the release builds - TF 2.9.3","body":"//bazel_pip/tensorflow/python/data/kernel_tests:map_test  - b/258503209","created_at":"2022-11-10T17:25:32Z","closed_at":"2022-11-10T17:32:40Z","merged_at":"2022-11-10T17:32:40Z","user_id":106367904,"sentiment":{"polarity":-0.4,"subjectivity":0.4}}
{"_id":1117830358,"title":"Added missing super.init for SubModule","body":"Added missing super.init for SubModule.","created_at":"2022-11-10T14:45:39Z","closed_at":"2022-11-10T15:00:07Z","merged_at":null,"user_id":86464649,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":1117531438,"title":"[TFLite] Remove deprecated gen_lut function","body":"Hi\r\n\r\nDuring the LUT refactoring in https://github.com/tensorflow/tensorflow/pull/54390 `gen_lut` was marked as deprecated but temporarily kept to keep backward compatibility with TFLite Micro. Its usage has now been replaced in TFLM by https://github.com/tensorflow/tflite-micro/pull/1523 and it can be safely removed from TFL codebase to avoid any potential confusion.\r\n\r\nThibaut","created_at":"2022-11-10T11:11:21Z","closed_at":"2023-01-30T16:47:36Z","merged_at":"2023-01-30T16:47:36Z","user_id":21028116,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1117514860,"title":"[TFLite] Add support for passing extra parameters to the LUTPopulate transform function","body":"Hello,\r\n\r\n`LUTPopulate` currently takes a `float (*transform)(float)` function pointer to generate the values of the LUT. This commit provides some overloads to allow passing extra parameters to the transform function through a type-erased `void*` in the form of a `float (*transform)(float, const void*)` function pointer. A `void*` is used instead of `std::function` to keep compatibility with TFLite Micro.\r\n\r\nIt can then be used as follows for example:\r\n```c++\r\nLUTPopulate<int16_t>(\r\n    input_scale, input_zp, output_scale, output_zp,\r\n    [](float value, const void* extra_params) {\r\n        if (value <= 0.0f) {\r\n            const float output_scale =\r\n                *static_cast<const float*>(extra_params);\r\n            return std::numeric_limits<int16>::max() * output_scale;\r\n        }\r\n        return 1.0f / std::sqrt(value);\r\n    },\r\n    static_cast<const void*>(&output_scale), lut_int16);\r\n```\r\n\r\nThis extra flexibility is useful for PRs like https://github.com/tensorflow/tensorflow/pull/51785 and other PRs we would like to raise that use the `LUTPopulate` function.\r\n\r\nThibaut","created_at":"2022-11-10T10:59:38Z","closed_at":"2023-02-02T10:28:02Z","merged_at":"2023-02-02T10:28:02Z","user_id":21028116,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":1117159272,"title":"Broken test failing the release builds - TF 2.8.4","body":"//bazel_pip/tensorflow/python/kernel_tests/nn_ops:conv2d_backprop_filter_grad_test_cpu - b/258503209","created_at":"2022-11-10T05:31:41Z","closed_at":"2022-11-10T11:02:10Z","merged_at":"2022-11-10T11:02:10Z","user_id":106367904,"sentiment":{"polarity":-0.4,"subjectivity":0.4}}
{"_id":1116989740,"title":"Pattern Matching of XLA Single User Intermediates","body":"Extends the functionality of `Match` to optionally require all prescribed intermediates in a given pattern to have one user.","created_at":"2022-11-10T01:46:37Z","closed_at":"2022-12-06T08:19:25Z","merged_at":"2022-12-06T08:19:25Z","user_id":80296164,"sentiment":{"polarity":-0.07142857142857142,"subjectivity":0.21428571428571427}}
{"_id":1116823818,"title":"[NVIDIA TF] Enable BF16 FusedBatchNorm","body":"Adds bfloat16 support for FusedBatchNorm ops using cudnn. Will fall back to FP32 if ampere hardware or greater is not available\r\n\r\nRequires https://github.com/tensorflow/tensorflow/pull/57674 for NHWCToNCHW functors.","created_at":"2022-11-09T23:17:25Z","closed_at":"2022-11-18T17:07:30Z","merged_at":"2022-11-18T17:07:30Z","user_id":12981474,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1116820734,"title":"r2.11 cherry-pick: eec6d52fd5d \"Update tensorboard dependency for 2.11.0 release.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/eec6d52fd5dce9ce849adea077d00ea35b492dff","created_at":"2022-11-09T23:15:20Z","closed_at":"2022-11-10T00:27:50Z","merged_at":"2022-11-10T00:27:50Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1116798479,"title":"Broken test failing the release builds - TF 2.8.4","body":"//bazel_pip/tensorflow/python/kernel_tests/array_ops:pad_op_test - b/258503209","created_at":"2022-11-09T22:54:16Z","closed_at":"2022-11-10T00:13:51Z","merged_at":"2022-11-10T00:13:51Z","user_id":106367904,"sentiment":{"polarity":-0.4,"subjectivity":0.4}}
{"_id":1116792362,"title":"Vinila21 patch 7","body":null,"created_at":"2022-11-09T22:49:30Z","closed_at":"2022-11-09T22:54:40Z","merged_at":null,"user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1116768416,"title":"Broken test failing the release builds - TF 2.9.3","body":"//tensorflow/python/platform:stacktrace_handler_test  - b/258503209","created_at":"2022-11-09T22:30:16Z","closed_at":"2022-11-10T00:12:40Z","merged_at":"2022-11-10T00:12:40Z","user_id":106367904,"sentiment":{"polarity":-0.4,"subjectivity":0.4}}
{"_id":1116761466,"title":"Broken test failing the release builds - TF 2.9.3","body":"//tensorflow/python/data/kernel_tests:snapshot_test  - b/258503209","created_at":"2022-11-09T22:24:58Z","closed_at":"2022-11-10T00:12:14Z","merged_at":"2022-11-10T00:12:14Z","user_id":106367904,"sentiment":{"polarity":-0.4,"subjectivity":0.4}}
{"_id":1116757356,"title":"Propagate EIGEN_NEON_GEBP_NR define","body":"Fixes https://github.com/tensorflow/tensorflow/issues/58481#issuecomment-1309444045\r\n\r\nNot fixed by https://github.com/tensorflow/tensorflow/commit/888dd68c774ba5d48dbb5181077ee454936822ed","created_at":"2022-11-09T22:22:11Z","closed_at":"2022-12-30T06:55:21Z","merged_at":"2022-12-30T06:55:21Z","user_id":1710528,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1116755135,"title":"Broken test failing the release builds - TF 2.9.3","body":"//bazel_pip/tensorflow/python/data/experimental/kernel_tests:group_by_reducer_test - b/258503209","created_at":"2022-11-09T22:20:54Z","closed_at":"2022-11-10T00:11:50Z","merged_at":"2022-11-10T00:11:50Z","user_id":106367904,"sentiment":{"polarity":-0.4,"subjectivity":0.4}}
{"_id":1116713429,"title":"Broken test failing the release builds - TF 2.9.3","body":"//bazel_pip/tensorflow/python/kernel_tests/array_ops:array_ops_test - b/258503209","created_at":"2022-11-09T21:50:50Z","closed_at":"2022-11-10T00:11:26Z","merged_at":"2022-11-10T00:11:26Z","user_id":106367904,"sentiment":{"polarity":-0.4,"subjectivity":0.4}}
{"_id":1116702417,"title":"Broken test failing the release builds - TF 2.9.3","body":"//bazel_pip/tensorflow/python/kernel_tests/sparse_ops:sparse_xent_op_d9m_test_cpu - b/258503209","created_at":"2022-11-09T21:38:36Z","closed_at":"2022-11-10T00:09:47Z","merged_at":"2022-11-10T00:09:47Z","user_id":106367904,"sentiment":{"polarity":-0.4,"subjectivity":0.4}}
{"_id":1116698471,"title":"Broken test failing the release builds - TF 2.9.3","body":"//bazel_pip/tensorflow/python/kernel_tests/nn_ops:conv2d_backprop_filter_grad_test_cpu - b/258503209","created_at":"2022-11-09T21:35:54Z","closed_at":"2022-11-10T00:07:59Z","merged_at":"2022-11-10T00:07:59Z","user_id":106367904,"sentiment":{"polarity":-0.4,"subjectivity":0.4}}
{"_id":1116599029,"title":"[XLA:GPU] Add back the profiling information","body":"This commit removed the profiling information for some thunks including fused thunks with reduction:\r\n```\r\ncommit 9ac28f43e180e0db65bf7872fcd828680e3d2e92\r\nAuthor: George Karpenkov <cheshire@google.com>\r\nDate:   Wed Oct 26 06:05:31 2022 -0700\r\n```\r\n\r\nInstead of converting many call of ThunkInfo(op) to GetThunkInfo(op), I changed the API to be simpler. So less chance of breaking this in the future.\r\n\r\nThis has the side effect that initializer now have profiling information. I consider this a good thing.\r\n\r\n@cheshire ","created_at":"2022-11-09T19:53:03Z","closed_at":"2022-11-11T13:29:35Z","merged_at":"2022-11-11T13:29:35Z","user_id":180987,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1116223552,"title":"Fix quantization_utils_test failure on BE machines","body":"This PR is to fix the test failure in `//tensorflow/lite/tools/optimize:quantization_utils_test` on s390x (BE machines).\r\n\r\nThe original testing code uses hard-coded LE data for comparison in https://github.com/tensorflow/tensorflow/blob/cafa207a67f63f65b7246992f900370a2c5f1797/tensorflow/lite/tools/optimize/quantization_utils_test.cc#L823-L824  and https://github.com/tensorflow/tensorflow/blob/cafa207a67f63f65b7246992f900370a2c5f1797/tensorflow/lite/tools/optimize/quantization_utils_test.cc#L876-L877 , so the test will fail on BE machines.\r\n \r\nThis PR changes to use the actual HEX values for comparison and will make the test pass on both LE and BE machines.\r\n\r\nSigned-off-by: Kun-Lu <kun.lu@ibm.com>","created_at":"2022-11-09T14:48:51Z","closed_at":"2022-12-30T05:09:59Z","merged_at":"2022-12-30T05:09:59Z","user_id":78156688,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":1115546998,"title":"Bug Fixed in tf.custom_gradient API Document","body":"tf.custom_gradient documentation have the below code snippet from line nos.63 to 65 which is throwing Runtime Error:tf.gradients is not supported when eager execution is enabled. Use tf.GradientTape instead.\r\n```\r\n x = tf.constant(100.)\r\n y = log1pexp(x)\r\n dy_dx = tf.gradients(y, x) # Will be NaN when evaluated.\r\n```\r\n\r\nThe above code snippet needs to be replaced with the one attached below to avoid the runtime error in 2.X versions. \r\n```\r\nwith tf.GradientTape() as tape:\r\n  tape.watch(x)\r\n  y=log1pexp(x)\r\ndy_dx = tape.gradient(y, x) # Will be NaN when evaluated.\r\n```\r\n\r\nPlease refer to the attached [gist](https://colab.research.google.com/gist/SuryanarayanaY/e692b30c318c42e86819bc153ab2ee77/tf_gradient.ipynb#scrollTo=YQoLZkmVgUok) below for same.","created_at":"2022-11-09T06:42:40Z","closed_at":"2022-12-28T19:22:35Z","merged_at":"2022-12-28T19:22:35Z","user_id":116063290,"sentiment":{"polarity":0.1,"subjectivity":0.2}}
{"_id":1115144165,"title":"Update release notes for TensorFlow 2.8.4","body":"This PR is intentionally incomplete. One of the Release Owners for 2.8.4\nneeds to fill in the internal release notes for this version before the PR gets\nsubmitted. Click on the :pencil2: icon in the header for `RELEASE.md` under\n\"Files Changed\" above.","created_at":"2022-11-08T22:52:27Z","closed_at":"2022-11-14T23:40:53Z","merged_at":"2022-11-14T23:40:53Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1115143762,"title":"Update release notes for TensorFlow 2.9.3","body":"This PR is intentionally incomplete. One of the Release Owners for 2.9.3\nneeds to fill in the internal release notes for this version before the PR gets\nsubmitted. Click on the :pencil2: icon in the header for `RELEASE.md` under\n\"Files Changed\" above.","created_at":"2022-11-08T22:51:56Z","closed_at":"2022-11-14T23:41:44Z","merged_at":"2022-11-14T23:41:44Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1114156299,"title":"[Linaro:ARM_CI] Add Linaro as trusted partner for ARM_CI PRs","body":"Also assign reviewers.","created_at":"2022-11-08T10:28:39Z","closed_at":"2022-11-08T15:22:44Z","merged_at":"2022-11-08T15:22:43Z","user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1113810114,"title":"Add missing link library for MhloDialect","body":"Code in `MhloDialect` uses `StablehloAssemblyFormat` and `StablehloTypeInference `, so they need to be linked against for shared library build to work. This was causing builds to fail for onnx-mlir when updating versions.\r\n\r\nExample of missing:\r\n- `hlo_ops.cc` (in `MhloDialect` target) uses `parseVariadicSameOperandsAndResultType` which is defined in `StablehloAssemblyFormat`.\r\n- `hlo_ops.cc` (in `MhloDialect` target) calls `verifyReducerShape` which is defined in `StablehloTypeInference`.","created_at":"2022-11-08T05:44:55Z","closed_at":"2022-11-25T19:31:55Z","merged_at":"2022-11-25T19:31:55Z","user_id":21292195,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":1113509677,"title":"Update release notes for TensorFlow 2.10.1","body":"This PR is intentionally incomplete. One of the Release Owners for 2.10.1\nneeds to fill in the internal release notes for this version before the PR gets\nsubmitted. Click on the :pencil2: icon in the header for `RELEASE.md` under\n\"Files Changed\" above.","created_at":"2022-11-08T00:15:38Z","closed_at":"2022-11-14T23:59:09Z","merged_at":"2022-11-14T23:59:09Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1113290651,"title":"[TF-TRT] Fix AddN in non-implicit batch cases for const nodes.","body":"This fixes a crash when AddN elementwise operation is executed with constant layer as input(s) to the AddN node. In this case the Const nodes are not recognized as tensors and in those cases the batch dimension is always removed. This causes a mismatch of input tensor sizes causing the crash/native segment fallback. Only when implicit batch mode is used, the batch dimension must be removed to match the other input tensor sizes. \r\n\r\n![image](https://user-images.githubusercontent.com/33809857/200448584-a416ce70-2f5f-488f-a708-bc8d3b80e8e2.png)\r\n","created_at":"2022-11-07T20:43:02Z","closed_at":"2022-12-14T22:55:44Z","merged_at":null,"user_id":33809857,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1113177869,"title":"Ct cache fix","body":"Fixes https://github.com/tensorflow/tensorflow/issues/58472 by increasing the element size used to calculate the size of cache needed by the test.","created_at":"2022-11-07T18:57:45Z","closed_at":"2022-11-10T18:04:06Z","merged_at":null,"user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1112864209,"title":"NFC: Code simplification","body":"Simplify some XLA tests.\r\n\r\n@cheshire ","created_at":"2022-11-07T14:33:24Z","closed_at":"2022-11-08T20:34:46Z","merged_at":"2022-11-08T20:34:45Z","user_id":180987,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1112584183,"title":"Scrub skip list for ARM_CI action","body":"Remove tests that pass and add newly failing pooling_ops_3d_test","created_at":"2022-11-07T10:48:36Z","closed_at":"2022-11-09T15:13:49Z","merged_at":"2022-11-09T15:13:48Z","user_id":10442001,"sentiment":{"polarity":0.1,"subjectivity":0.1}}
{"_id":1111472881,"title":"Updated continue_statements.py in PEP8 format","body":"Updated continue_statements.py in PEP8 format (4 spaces from the start of the declaration of functions). Refactored in one go through Pycharm editor.","created_at":"2022-11-05T04:54:14Z","closed_at":"2022-11-07T04:20:43Z","merged_at":null,"user_id":86464649,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1111421127,"title":"r2.10 cherry-pick: oneDNN 2.6.3 Fix","body":"Upgrading into oneDNN 2.6.3 for security fix","created_at":"2022-11-05T01:02:42Z","closed_at":"2022-11-10T20:28:32Z","merged_at":"2022-11-10T20:28:32Z","user_id":65728957,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1111412871,"title":"Upgrading oneDNN 2.6.3 into r2.10 branch for security fix","body":"Upgrading oneDNN 2.6.3 into r2.10 branch for security fix","created_at":"2022-11-05T00:25:45Z","closed_at":"2022-11-05T00:29:05Z","merged_at":null,"user_id":65728957,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1111028195,"title":"r.2.11 Remove Werror=switch for release","body":"Remove the promotion of the switch warning to error for the r2.11 release.  \r\n\r\nDue to the regression found in https://github.com/tensorflow/tensorflow/issues/58419, remove the change to the bazelrc file while code fixes are investigated on main branch.\r\n","created_at":"2022-11-04T16:01:21Z","closed_at":"2022-11-04T16:09:06Z","merged_at":"2022-11-04T16:09:06Z","user_id":30155094,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1110207010,"title":"[Windows] fix long path issues in unit tests","body":"With this PR those tests pass which were otherwise failing due to long path issue in Windows","created_at":"2022-11-03T23:15:27Z","closed_at":"2022-11-07T10:36:10Z","merged_at":"2022-11-07T10:36:10Z","user_id":57962524,"sentiment":{"polarity":-0.05,"subjectivity":0.4}}
{"_id":1110150479,"title":"[TFTRT] Add device info to nodes in graphdef before building TRT engine","body":"TFTRT invokes the layout optimizer to force the NCHW layout before building TRT engines, as TensorRT prefers the NCHW layout.\r\n\r\nChanges to the layout optimizer in commit 612a531c9bc now require every node in the graph to store device informatio.\r\n\r\nThis patch adds device info to every node in the segment being converted to a TRT engine.\r\n\r\nCC: @bixia1 @pjannaty @DEKHTIARJonathan @tfeher @kaixih ","created_at":"2022-11-03T21:44:36Z","closed_at":"2023-02-09T18:53:03Z","merged_at":"2023-02-09T18:53:03Z","user_id":80416898,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1110116650,"title":"[NVIDIA TF] Enable BF16 Pad ops","body":"Adds GPU BF16 kernel and tests for Pad, MirrorPad ops.","created_at":"2022-11-03T21:03:30Z","closed_at":"2022-11-15T20:56:50Z","merged_at":"2022-11-15T20:56:50Z","user_id":12981474,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1110065497,"title":"[NVIDIA TF] Enable BF16 AddN op","body":"Adds GPU BF16 kernel and tests for AddN op.\r\n\r\nThe test currently passes but issues the following warning because there is no GPU BF16 `Mul` kernel. The warning should go away when `Mul` is added back. @reedwm do you know why https://github.com/tensorflow/tensorflow/commit/8c3ec1f6ef83d557aaffe77efafbd48187a04302 was reverted?\r\n\r\n```\r\n2022-11-03 19:51:06.774860: W tensorflow/core/grappler/utils/graph_view.cc:836] No registered 'Mul' OpKernel for GPU devices compatible with node {{node ArithmeticOptimizer/SimplifyAggregation_Mul_AddN_62}}\r\n         (OpKernel was found, but attributes didn't match) Requested Attributes: T=DT_BFLOAT16, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"\r\n```","created_at":"2022-11-03T20:03:51Z","closed_at":"2022-11-03T22:30:34Z","merged_at":null,"user_id":12981474,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1109474129,"title":"Doc Negative Sysfs numa node","body":"Add a point to the Linux kernel documentation (with the override workaround) when SysFS NUMA node is negative.\r\n\r\nFixes: https://github.com/tensorflow/tensorflow/issues/58428\r\nand https://github.com/tensorflow/tensorflow/issues/56456","created_at":"2022-11-03T11:47:04Z","closed_at":"2022-11-04T18:48:53Z","merged_at":"2022-11-04T18:48:53Z","user_id":1710528,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":1109016953,"title":"Replace legacy Java client instructions by deprecation notice","body":"Deprecating this old version of the Java client.\r\n\r\nPlease see issue https://github.com/tensorflow/tensorflow/issues/58424 for more details.","created_at":"2022-11-03T02:08:35Z","closed_at":"2022-11-04T16:16:16Z","merged_at":"2022-11-04T16:16:16Z","user_id":10109534,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1109011065,"title":"Replace legacy Java client instructions by deprecation notice","body":"Deprecating this old version of the Java client.","created_at":"2022-11-03T01:57:56Z","closed_at":"2022-11-03T02:03:17Z","merged_at":null,"user_id":10109534,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1109003962,"title":"Update TF r2.11 RELEASE.md","body":null,"created_at":"2022-11-03T01:43:03Z","closed_at":"2022-11-03T03:33:54Z","merged_at":"2022-11-03T03:33:54Z","user_id":19637339,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1108930140,"title":"Adding approach to fix the issue with tf.tile call","body":"this PR is trying to solve the issue listed here : https://github.com/tensorflow/tensorflow/issues/58002","created_at":"2022-11-02T23:17:32Z","closed_at":"2023-01-17T16:56:43Z","merged_at":null,"user_id":54408770,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1108854178,"title":".","body":"Fix some grammar error in comments of [tensorflow/tensorflow.bzl](https://github.com/tensorflow/tensorflow/compare/master...Hip-po:tensorflow:master#diff-7e9b6c00ccad2c40e6d73561087f76a8ac70fc1e5af326849953a52ade696113) (ln 1659) and [tensorflow/tools/ci_build/pylintrc](https://github.com/tensorflow/tensorflow/compare/master...Hip-po:tensorflow:master#diff-f8f90f4d55bd318eb7e944907728798b1cff18129b68e80818302cd07892f270) (ln 30).","created_at":"2022-11-02T21:39:03Z","closed_at":"2022-11-03T09:01:09Z","merged_at":null,"user_id":91091565,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1108764383,"title":"Update saturate_cast args","body":"Updated saturate_cast args to list the supported dtypes.\r\nFixes: https://github.com/tensorflow/tensorflow/issues/58053","created_at":"2022-11-02T20:03:35Z","closed_at":"2022-11-09T16:26:07Z","merged_at":null,"user_id":73069040,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1108709539,"title":"Enhance readability of the contribution unit testing points.","body":"The highlights for the contribution guides need to be improved by outlining the points in an appropriate manner.","created_at":"2022-11-02T19:13:47Z","closed_at":"2022-11-24T23:08:47Z","merged_at":"2022-11-24T23:08:47Z","user_id":101401469,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1108657008,"title":"[NVIDIA TF] Enable BF16 BiasAdd","body":"Adds GPU BF16 kernel and tests for BiasAdd op.\r\n\r\nUses @kaixih's `GpuAtomicAdd` from https://github.com/tensorflow/tensorflow/pull/57674","created_at":"2022-11-02T18:26:10Z","closed_at":"2022-11-22T22:15:16Z","merged_at":"2022-11-22T22:15:16Z","user_id":12981474,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1108635708,"title":"Enable h-loop-fusion when control flow in the graph. ","body":"This is a follow up from https://github.com/tensorflow/tensorflow/pull/57087\r\nWhen using multi-GPU, control flow end up being added in the graph. So the optimization wasn't used in that case.\r\nThis PR make that optimization work when there is control flow in the graph.\r\nBut it ignore nodes that hare any control flow marker (being the predecessor or the successor).\r\n\r\n@cheshire @akuegel ","created_at":"2022-11-02T18:07:09Z","closed_at":"2022-11-04T22:55:35Z","merged_at":"2022-11-04T22:55:35Z","user_id":180987,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1107322373,"title":"xyz","body":"abc","created_at":"2022-11-01T20:53:56Z","closed_at":"2022-11-01T20:54:55Z","merged_at":null,"user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1107156730,"title":"Update version numbers for TensorFlow 2.11.0-rc2","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 11 -> 11\nPatch: 0 -> 0\n\nNo lingering old version strings \"2.11.0-rc1\" found in source directory \n\"tensorflow/\". Good.\nWARNING: Below are potentially instances of lingering old version string \n\"2.11.0rc1\" in source directory \"tensorflow/\" that are not updated by this \nscript. Please check them manually!\ntensorflow/tools/pip_package/setup.py:125:2.11.0rc1\n```","created_at":"2022-11-01T18:38:46Z","closed_at":"2022-11-01T18:55:59Z","merged_at":"2022-11-01T18:55:59Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1106730159,"title":"update math_ops.py docstring","body":"description in `b_is_sparse` should be \"assume most values in `b` are zero\" instead of `a`.","created_at":"2022-11-01T13:19:27Z","closed_at":"2022-11-28T17:36:05Z","merged_at":"2022-11-28T17:36:05Z","user_id":23552703,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1106686898,"title":"Make ARM_CI trigger on kokoro:force-run label","body":null,"created_at":"2022-11-01T12:46:02Z","closed_at":"2022-11-03T06:28:42Z","merged_at":"2022-11-03T06:28:42Z","user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1106595719,"title":"Enhance readability of points","body":"instead of having the highlights on the some line, we can have them separated on different lines to enhance readability of the user.","created_at":"2022-11-01T11:16:09Z","closed_at":"2022-11-01T11:17:20Z","merged_at":null,"user_id":115114474,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1106590361,"title":"Enhance readability of points","body":"instead of having the highlights on the some line, we can have them separated on different lines to enhance readability of the user.","created_at":"2022-11-01T11:11:27Z","closed_at":"2022-11-01T11:14:49Z","merged_at":null,"user_id":115114474,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1106322403,"title":"[DO NOT SUBMIT] Duplicating #57628 to test","body":"Arm CI somehow wouldn't retrigger from #57628's page.","created_at":"2022-11-01T06:36:29Z","closed_at":"2022-11-01T10:59:37Z","merged_at":null,"user_id":38085909,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1105997080,"title":"[onednn][tfg][remapper] Add FusedBatchNormEx fusion","body":"This PR addresses : \r\n1) FusedBatchnormEx fusion in TFGGrappler : Remapper.\r\n\r\n    FusedBatchNorm[$is_training] + ... -> _FusedBatchNormEx[$is_training]\r\n      (a) FusedBatchNorm + Activation\r\n      (b) FusedBatchNorm + SideInput + Activation\r\n    only supported activation is Relu\r\n\r\n2) Fix FusedConv2D attributes to align with latest changes in FusedConv2D kernel","created_at":"2022-10-31T22:24:45Z","closed_at":"2023-02-15T17:52:17Z","merged_at":"2023-02-15T17:52:17Z","user_id":43043975,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1105770350,"title":"OP_REQUIRES for dtype check in AssignAddVariableOp","body":"Fixes https://github.com/tensorflow/tensorflow/issues/58318","created_at":"2022-10-31T18:46:47Z","closed_at":"2023-01-03T17:13:31Z","merged_at":"2023-01-03T17:13:31Z","user_id":1710528,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1105766784,"title":"[NVIDIA TF] Bfloat16 support for Reshape, Split, Transpose, Slice, StridedSlice, Concat, Tile","body":"Add GPU bfloat16 implementations and tests for:\r\n* StridedSlice\r\n* Tile\r\n\r\nThe following ops already had GPU bfloat16 kernels, but no tests. Added tests for:\r\n* Concat\r\n* Reshape\r\n* Slice\r\n* Split\r\n* Transpose\r\n\r\ncc @reedwm ","created_at":"2022-10-31T18:43:36Z","closed_at":"2022-11-03T00:08:25Z","merged_at":"2022-11-03T00:08:25Z","user_id":12981474,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1105693309,"title":"Fixes function_type test Py 3.7 compatibility","body":null,"created_at":"2022-10-31T17:42:33Z","closed_at":"2022-10-31T17:49:02Z","merged_at":"2022-10-31T17:49:02Z","user_id":66660475,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1105692482,"title":"Allow for prefetch of elements on high CPU core count machines","body":"Fixes https://github.com/tensorflow/tensorflow/issues/58387","created_at":"2022-10-31T17:41:47Z","closed_at":"2022-11-03T06:40:12Z","merged_at":"2022-11-03T06:40:11Z","user_id":10442001,"sentiment":{"polarity":0.16,"subjectivity":0.5399999999999999}}
{"_id":1105623021,"title":"r2.11 cherry-pick: 216525144ee \"Fix security vulnerability with FractionalMax(AVG)Pool with illegal pooling_ratio\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/216525144ee7c910296f5b05d214ca1327c9ce48","created_at":"2022-10-31T16:46:19Z","closed_at":"2022-10-31T18:41:45Z","merged_at":"2022-10-31T18:41:45Z","user_id":16359713,"sentiment":{"polarity":-0.5,"subjectivity":0.5}}
{"_id":1105620920,"title":"r2.11 cherry-pick: ed3ba5632a8 \"Show warning for Windows GPU build\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/ed3ba5632a85f0dc3524873ccfc560d417a474af","created_at":"2022-10-31T16:44:27Z","closed_at":"2022-10-31T18:42:33Z","merged_at":"2022-10-31T18:42:33Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1105599212,"title":"Fixing typo error on calibrator.py","body":"Fixing typo error **arugment** to **argument**\r\n\r\nFixes #58383","created_at":"2022-10-31T16:26:35Z","closed_at":"2023-01-27T16:54:01Z","merged_at":null,"user_id":81610181,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1105266294,"title":"Fix aarch64 build.","body":"This PR fixes the ```aarch64``` builds.\r\n\r\n* It simply patches ```absl``` to avoid ```neon``` related inclusions over ```nvcc```.\r\n* With this PR all ```{x86_64,aarch64} x {fc37,fc38}``` builds are fine: https://copr.fedorainfracloud.org/coprs/rezso/ML/build/4996828\r\n\r\nCc  @mihaimaruseac \r\n\r\n---\r\n\r\nThe error message:\r\n```\r\n{...}\r\n-nvcc_options=ftz=true\r\n-c tensorflow/core/kernels/parameterized_truncated_normal_op_gpu.cu.cc \r\n{...}\r\n/usr/lib64/gcc/aarch64-redhat-linux/11.2.1/include/arm_neon.h(38): \r\n  error: identifier \"__Int8x8_t\" is undefined\r\n/usr/lib64/gcc/aarch64-redhat-linux/11.2.1/include/arm_neon.h(39): \r\n  error: identifier \"__Int16x4_t\" is undefined\r\n\r\n```\r\nTools used:\r\n```\r\n$ rpm -q cuda-nvcc-11-8\r\ncuda-nvcc-11-8-11.8.89-1.x86_64\r\n$ rpm -q cuda-gcc\r\ncuda-gcc-11.2.1-2.fc37.x86_64\r\n$ rpm -q gcc\r\ngcc-12.2.1-2.fc38.x86_64\r\n$ rpm -q python3\r\npython3-3.11.0-1.fc38.x86_64\r\n$ rpm -q bazel5\r\nbazel5-5.3.2-1.fc38.x86_64\r\n```\r\n\r\n\r\nThanks,\r\n~Cristian.","created_at":"2022-10-31T12:15:31Z","closed_at":"2022-11-02T12:59:55Z","merged_at":"2022-11-02T12:59:55Z","user_id":3974360,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1104522300,"title":"Migrates _pywrap_tf_optimizer to cc_shared_library.","body":"Adds _pywrap_tensorflow_internal and libtensorflow_framework using dynamic_deps and removes duplicated statically linked targets.","created_at":"2022-10-30T16:43:11Z","closed_at":"2022-11-27T19:37:49Z","merged_at":null,"user_id":66660475,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1104266603,"title":"Make GCS filesystem/metadata lookup retries configurable","body":"PiperOrigin-RevId: 483432073","created_at":"2022-10-30T04:41:18Z","closed_at":"2022-11-01T22:13:01Z","merged_at":"2022-11-01T22:13:01Z","user_id":38229354,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1104262410,"title":"Make GCS filesystem/metadata lookup retries configurable","body":"PiperOrigin-RevId: 483432073","created_at":"2022-10-30T04:24:34Z","closed_at":"2022-11-01T22:13:04Z","merged_at":"2022-11-01T22:13:04Z","user_id":38229354,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1103931104,"title":"fix the bug #58364","body":null,"created_at":"2022-10-29T10:56:27Z","closed_at":"2022-10-30T15:36:12Z","merged_at":null,"user_id":38425379,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1103924630,"title":"fix the bug #58364","body":null,"created_at":"2022-10-29T10:33:08Z","closed_at":"2022-10-29T10:56:06Z","merged_at":null,"user_id":38425379,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1103886882,"title":"Migrates pywrap_saved_model to cc_shared_library.","body":"Adding libtensorflow_framework and pywrap_tensorflow_internal using cc_shared_library dynamic_deps to pywrap_saved_model.","created_at":"2022-10-29T08:44:44Z","closed_at":"2022-11-20T02:16:36Z","merged_at":null,"user_id":66660475,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1103854026,"title":"Updated broken link","body":"Updated the broken link for Sutskever et al., 2013 in documentation.","created_at":"2022-10-29T06:39:09Z","closed_at":"2022-12-29T11:34:14Z","merged_at":null,"user_id":81610181,"sentiment":{"polarity":-0.4,"subjectivity":0.4}}
{"_id":1103757281,"title":"bfloat16 GEMM + Bias + ReLU Epilogue Fusion in XLA","body":"Adds XLA support for the epilogue fusion of GEMM + Bias + ReLU in bfloat16.","created_at":"2022-10-29T01:09:15Z","closed_at":"2023-01-10T14:50:57Z","merged_at":"2023-01-10T14:50:57Z","user_id":80296164,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1103696511,"title":"Fix security vulnerability with FractionalMax(AVG)Pool with illegal p…","body":"Fix security vulnerability with FractionalMax(AVG)Pool with illegal pooling_ratio\r\n\r\nPiperOrigin-RevId: 483486453","created_at":"2022-10-28T22:51:06Z","closed_at":"2022-11-01T21:22:22Z","merged_at":null,"user_id":106367904,"sentiment":{"polarity":-0.5,"subjectivity":0.5}}
{"_id":1103489911,"title":"Fix unigram assert","body":"Fixes https://github.com/tensorflow/tensorflow/issues/46898","created_at":"2022-10-28T19:03:44Z","closed_at":"2023-01-03T17:13:32Z","merged_at":"2023-01-03T17:13:31Z","user_id":1710528,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1103424981,"title":"[ISSUE TEMPLATE] Suggest to users to report TF nightly reproducibility","body":"Suggest to the user to reproduce the ISSUE with TF nightly.","created_at":"2022-10-28T18:17:15Z","closed_at":"2022-12-29T22:24:48Z","merged_at":"2022-12-29T22:24:48Z","user_id":1710528,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1103373274,"title":"[Intel oneDNN] Show warning for Windows GPU build","body":"Starting in TF 2.11, CUDA build is not supported in Windows. See reported issue https://github.com/tensorflow/tensorflow/issues/58323 and https://github.com/tensorflow/tensorflow/blob/v2.11.0-rc1/RELEASE.md#major-features-and-improvements","created_at":"2022-10-28T17:38:29Z","closed_at":"2022-10-30T08:23:03Z","merged_at":"2022-10-30T08:23:03Z","user_id":57962524,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1102607589,"title":"Make GCS filesystem/metadata lookup retries configurable","body":"PiperOrigin-RevId: 483432073","created_at":"2022-10-28T04:59:10Z","closed_at":"2022-10-29T23:37:38Z","merged_at":"2022-10-29T23:37:38Z","user_id":38229354,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1101919932,"title":"Support python 3.11 changes.","body":"This PR adds support for building tensorflow with python >= 3.11\r\n\r\nThe proposed PR did not drop or touch any backward functionality.\r\nTensorflow builds fully with this patch, mentioning here the [#58032](https://github.com/tensorflow/tensorflow/issues/58032) issue tracker.\r\nGuided from here: https://docs.python.org/3.11/whatsnew/3.11.html#pyframeobject-3-11-hiding\r\n\r\ncc @mihaimaruseac \r\n\r\n----\r\n\r\n```\r\n{...}\r\n# Execution platform: @local_execution_config_platform//:platform\r\nTarget //tensorflow/tools/pip_package:build_pip_package up-to-date:\r\n  bazel-bin/tensorflow/tools/pip_package/build_pip_package\r\nINFO: Elapsed time: 10.954s, Critical Path: 6.60s\r\nINFO: 8 processes: 5 internal, 3 local.\r\nINFO: Build completed successfully, 8 total actions\r\n\r\n$ rpm -q python3\r\npython3-3.11.0-1.fc38.x86_64\r\n```\r\nOnly build tests are done, no functionality tests yet.\r\n\r\n\r\nThanks,\r\n~Cristian.\r\n\r\n---\r\n\r\nUpdate:\r\nFor complete description,  this PR was using external protobuf, internal [**might need bump**](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/workspace2.bzl#L451-L461) for py3_11.\r\n```\r\n$ readelf -a libtensorflow_framework.so.2 | grep NEED | grep protobuf\r\n 0x0000000000000001 (NEEDED)             Shared library: [libprotobuf.so.30]\r\n$ rpm -q protobuf\r\nprotobuf-3.19.4-6.fc38.x86_64\r\n```\r\n\r\nThe full build flow having some **external_libs** cand be found here:\r\n* https://copr-dist-git.fedorainfracloud.org/cgit/rezso/ML/tensorflow.git/tree/tensorflow.spec?id=31634968da08bd1e875190801df11d0c27d50511#n224\r\n\r\n","created_at":"2022-10-27T16:03:23Z","closed_at":"2022-10-31T09:10:56Z","merged_at":"2022-10-31T09:10:56Z","user_id":3974360,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1101910864,"title":"[ROCm] xla_gpu_enable_cublaslst and matrix_ops_simple_test is cuda only","body":"This new merged PR (https://github.com/tensorflow/tensorflow/pull/56761) only for cuda gpu so far. We hope it be more generical.\r\n\r\n@cheshire\r\n","created_at":"2022-10-27T15:55:26Z","closed_at":"2022-12-14T13:02:16Z","merged_at":"2022-12-14T13:02:15Z","user_id":913790,"sentiment":{"polarity":0.0,"subjectivity":1.0}}
{"_id":1101893721,"title":"r2.11 cherry-pick: [oneDNN] Fix linalg and mkl_fused_ops tests in aarch64","body":"Original PR: https://github.com/tensorflow/tensorflow/pull/58320\r\nOriginal commit: https://github.com/tensorflow/tensorflow/commit/cdc27d9c484938797d839fad301071b0487de9d8\r\nPiper: 484009636","created_at":"2022-10-27T15:41:09Z","closed_at":"2022-10-28T12:39:05Z","merged_at":"2022-10-28T12:39:05Z","user_id":16359713,"sentiment":{"polarity":-0.75,"subjectivity":1.0}}
{"_id":1101829628,"title":"[oneDNN] Update AMP lists : add Sum and Square ops to Infer list","body":"Eigen kernel for Sum now has a specialization for bfloat16 where the accumulation is done in FP32. Thus, there is no precision loss. Hence moving it from Deny list to Infer list. It reduces Cast ops around these ops and improves perf by 2x for some models","created_at":"2022-10-27T15:00:10Z","closed_at":"2022-12-14T19:17:24Z","merged_at":"2022-12-14T19:17:24Z","user_id":114774508,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1101257275,"title":"Update curl to 7.86.0","body":"This PR upgrade curl to 7.86.0 as the previous 7.85.0 contains the following CVEs:\r\n\r\nCVE-2022-42916: HSTS bypass via IDN\r\nCVE-2022-42915: HTTP proxy double-free\r\nCVE-2022-35260: .netrc parser out-of-bounds access\r\nCVE-2022-32221: POST following PUT confusion\r\n\r\nSee https://curl.se/docs/security.html for details.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2022-10-27T07:02:13Z","closed_at":"2022-11-02T23:26:09Z","merged_at":"2022-11-02T23:26:09Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1101028690,"title":"Updated list of apis in ops_compatibility.md","body":"Updated list of apis in ops_compatibility.md with new api. New PR with reference to #58217.\r\nDepreciated api - tf.check_numerics\r\nNew Api- tf.debugging.check_numerics","created_at":"2022-10-27T00:53:08Z","closed_at":"2022-11-01T21:24:46Z","merged_at":"2022-11-01T21:24:46Z","user_id":86464649,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1100901096,"title":"[ROCm CI Dockerfile] Fix pip debian package name","body":"Try to Fix ROCm CI failure:\r\nhttp://ml-ci.amd.com:21096/blue/organizations/jenkins/tensorflow%2Fgithub-prs-upstream-master%2FAMD-ROCm-Community-CI-Build/detail/PR-58328/2/pipeline","created_at":"2022-10-26T21:39:53Z","closed_at":"2022-11-28T17:23:46Z","merged_at":"2022-11-28T17:23:46Z","user_id":1710528,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1100895551,"title":"Replace `template_rule` by Skylib `expand_template`","body":"Use `expand_template` from [Skylib](https://github.com/bazelbuild/bazel-skylib) instead of custom `template_rule` implementation (Skylib implementation is unit tested and is used already at some other places at TensorFlow - we need only one function to get the job done)","created_at":"2022-10-26T21:32:28Z","closed_at":"2023-02-01T17:23:47Z","merged_at":"2023-02-01T17:23:47Z","user_id":3775001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1100882433,"title":"Dataset concatenate -  replace AddDim with AddDimWithStatus","body":"Fixes: https://github.com/tensorflow/tensorflow/issues/58290","created_at":"2022-10-26T21:16:15Z","closed_at":"2022-11-08T16:13:28Z","merged_at":"2022-11-08T16:13:28Z","user_id":1710528,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1100580914,"title":"Fix OOB error when op input sizes do not match.","body":"In cases where op input sizes are specified as in\r\n```\r\nREGISTER_OP(\"DynamicStitch\")\r\n    .Input(\"indices: N * int32\")\r\n    .Input(\"data: N * T\")\r\n    .Output(\"merged: T\")\r\n    .Attr(\"N : int >= 1\")\r\n    .Attr(\"T : type\")\r\n    .SetShapeFn(DynamicStitchShapeFunction);\r\n```\r\nif differing number of inputs are provided (e.g. 3 for `indices` and 4 for `data`) we can get a crash in the executor when parsing the inputs, even before the kernel called.  Here we avoid this by checking the return code for the argument id and exit early.\r\n\r\nPiperOrigin-RevId: 478068540","created_at":"2022-10-26T16:49:04Z","closed_at":"2022-10-28T12:07:10Z","merged_at":null,"user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1100574835,"title":"[NVIDIA TF] Add GPU BF16 implementations for reduction ops","body":"GPU BF16 support for Sum, Mean, EuclideanNorm, Min, Max and Prod ops.","created_at":"2022-10-26T16:43:03Z","closed_at":"2022-11-02T17:43:10Z","merged_at":"2022-11-02T17:43:10Z","user_id":12981474,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1100573434,"title":"Fix OOB error when op input sizes do not match.","body":"In cases where op input sizes are specified as in\r\n```\r\nREGISTER_OP(\"DynamicStitch\")\r\n    .Input(\"indices: N * int32\")\r\n    .Input(\"data: N * T\")\r\n    .Output(\"merged: T\")\r\n    .Attr(\"N : int >= 1\")\r\n    .Attr(\"T : type\")\r\n    .SetShapeFn(DynamicStitchShapeFunction);\r\n```\r\nif differing number of inputs are provided (e.g. 3 for `indices` and 4 for `data`) we can get a crash in the executor when parsing the inputs, even before the kernel called.  Here we avoid this by checking the return code for the argument id and exit early.\r\n\r\nPiperOrigin-RevId: 478068540","created_at":"2022-10-26T16:41:40Z","closed_at":"2022-10-28T12:07:12Z","merged_at":null,"user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1100221904,"title":"[ROCm] Fixed the rocm all_runtime alias to point to the new XLA folder.","body":"This alias is not used ATM but it seems prudent to fix this for a possible future use.\r\n\r\n/cc @cheshire ","created_at":"2022-10-26T12:49:24Z","closed_at":"2022-11-03T10:56:49Z","merged_at":"2022-11-03T10:56:49Z","user_id":70280935,"sentiment":{"polarity":0.11818181818181818,"subjectivity":0.32727272727272727}}
{"_id":1100205934,"title":"Declare strides when ACL objects init and activation in ACL depthwise","body":"The following fixes are in PR:\r\n\r\n(1) Since when we are configuring ACL objects we know exactly what is expected formats for weights so we should set strides at that point and not leave it to ACL to estimate based on weights dimensions,\r\n\r\n(2) If depthwise convolution comes with post op that converts to ACL’s activation layer operation we were not executing that activation function because the convolution was not configured with it.","created_at":"2022-10-26T12:35:19Z","closed_at":"2022-10-26T17:39:55Z","merged_at":"2022-10-26T17:39:55Z","user_id":79916358,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1099456054,"title":"r2.8 cherry-pick: 77e710d7744 \"Upgrade sqlite to 3.39.4\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/77e710d7744be740d515b0318176e1925ff0bd25","created_at":"2022-10-25T20:59:39Z","closed_at":"2022-10-25T22:11:32Z","merged_at":"2022-10-25T22:11:32Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1099455827,"title":"r2.10 cherry-pick: 77e710d7744 \"Upgrade sqlite to 3.39.4\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/77e710d7744be740d515b0318176e1925ff0bd25","created_at":"2022-10-25T20:59:28Z","closed_at":"2022-10-25T22:11:35Z","merged_at":"2022-10-25T22:11:35Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1099455478,"title":"r2.9 cherry-pick: 77e710d7744 \"Upgrade sqlite to 3.39.4\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/77e710d7744be740d515b0318176e1925ff0bd25","created_at":"2022-10-25T20:59:14Z","closed_at":"2022-10-25T22:11:38Z","merged_at":"2022-10-25T22:11:38Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1099455412,"title":"r2.11 cherry-pick: 77e710d7744 \"Upgrade sqlite to 3.39.4\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/77e710d7744be740d515b0318176e1925ff0bd25","created_at":"2022-10-25T20:59:11Z","closed_at":"2022-10-25T22:11:41Z","merged_at":"2022-10-25T22:11:40Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1099257810,"title":"r2.11 cherry-pick: a40f9be4ded \"Fix strided slice bug where output is always writes at least one element.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/a40f9be4ded6433478b81331b31c9adf817b49b5","created_at":"2022-10-25T17:53:44Z","closed_at":"2022-10-25T22:12:48Z","merged_at":"2022-10-25T22:12:48Z","user_id":16359713,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":1099252079,"title":"Fix strided slice bug where output is always writes at least one elem…","body":"…ent.\r\n\r\na[1:1:1] should be empty, but one element is written.\r\n\r\nPiperOrigin-RevId: 482436216","created_at":"2022-10-25T17:48:05Z","closed_at":"2022-11-01T22:13:32Z","merged_at":"2022-11-01T22:13:32Z","user_id":15825877,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":1099248951,"title":"Revert \"Fix OOB error when op input sizes do not match.\"","body":"Reverts tensorflow/tensorflow#58059","created_at":"2022-10-25T17:45:03Z","closed_at":"2022-10-25T17:45:41Z","merged_at":"2022-10-25T17:45:41Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1099245912,"title":"Revert \"Fix OOB error when op input sizes do not match.\"","body":"Reverts tensorflow/tensorflow#58058","created_at":"2022-10-25T17:42:59Z","closed_at":"2022-10-25T17:43:39Z","merged_at":"2022-10-25T17:43:39Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1099234707,"title":"Revert \"Removed merge conflict marker\"","body":"Reverts tensorflow/tensorflow#58187","created_at":"2022-10-25T17:36:50Z","closed_at":"2022-10-25T17:42:04Z","merged_at":"2022-10-25T17:42:04Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1099222418,"title":"Resolving bad merge conflict in Cherry-pick","body":"https://github.com/tensorflow/tensorflow/pull/58059","created_at":"2022-10-25T17:25:52Z","closed_at":"2022-10-25T17:34:23Z","merged_at":null,"user_id":106367904,"sentiment":{"polarity":-0.6999999999999998,"subjectivity":0.6666666666666666}}
{"_id":1099209872,"title":"r2.9 cherry-pick: a40f9be4ded \"Fix strided slice bug where output is always writes at least one element.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/a40f9be4ded6433478b81331b31c9adf817b49b5","created_at":"2022-10-25T17:13:06Z","closed_at":"2022-10-25T22:12:43Z","merged_at":"2022-10-25T22:12:43Z","user_id":16359713,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":1099208802,"title":"r2.10 cherry-pick: a40f9be4ded \"Fix strided slice bug where output is always writes at least one element.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/a40f9be4ded6433478b81331b31c9adf817b49b5","created_at":"2022-10-25T17:12:02Z","closed_at":"2022-10-25T22:11:50Z","merged_at":"2022-10-25T22:11:50Z","user_id":16359713,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":1099096454,"title":"r2.11 cherry-pick: [oneDNN] Fix conv_ops_benchmark_test when oneDNN is on","body":"Original PR: https://github.com/tensorflow/tensorflow/pull/58216\r\nOriginal commit: https://github.com/tensorflow/tensorflow/commit/526fdac88a0b5c55a484090b401cfb805b2d7341","created_at":"2022-10-25T15:37:54Z","closed_at":"2022-10-25T22:11:54Z","merged_at":"2022-10-25T22:11:54Z","user_id":16359713,"sentiment":{"polarity":-0.75,"subjectivity":1.0}}
{"_id":1099073900,"title":"r2.11 cherry-pick: [oneDNN] Upgrade oneDNN to the latest version v2.7.1","body":"Original PR: https://github.com/tensorflow/tensorflow/pull/58269\r\nOriginal commit: https://github.com/tensorflow/tensorflow/commit/edc9daa34a18d5029b6ff66f0edc3c738bb87e8d","created_at":"2022-10-25T15:26:01Z","closed_at":"2022-10-25T22:11:58Z","merged_at":"2022-10-25T22:11:58Z","user_id":16359713,"sentiment":{"polarity":-0.125,"subjectivity":0.95}}
{"_id":1099066081,"title":"r2.11 cherry-pick: [oneDNN] Fix a bug in primitive cache key","body":"Original PR: https://github.com/tensorflow/tensorflow/pull/58149\r\nOriginal commit: https://github.com/tensorflow/tensorflow/commit/0de42bcd5a44ff9b484bd3a3d34f88e464a8182e","created_at":"2022-10-25T15:19:54Z","closed_at":"2022-10-25T22:12:02Z","merged_at":"2022-10-25T22:12:02Z","user_id":16359713,"sentiment":{"polarity":-0.375,"subjectivity":1.0}}
{"_id":1098156572,"title":"[tosa] [refactor] Remove DenseElementAttr with DenseArrayAttr","body":"Updated the usage of DenseElementAttr with DenseArrayAttr. \r\n\r\n### The following Op legalization has been updated: \r\n- TFRankOp, TFLRankOp\r\n- TFShapeOp, TFLShapeOp\r\n- TFFillOp, TFLFillOp\r\n\r\n### DenseArrayAttr reference: \r\n- https://discourse.llvm.org/t/rfc-introduce-a-new-dense-array-attribute/63279\r\n- https://github.com/llvm/llvm-project/commit/508eb41d82ca\r\n\r\nSigned-off-by: Jerry Ge <jerry.ge@arm.com>","created_at":"2022-10-24T23:16:16Z","closed_at":"2022-11-02T16:31:06Z","merged_at":"2022-11-02T16:31:06Z","user_id":24451859,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1098136368,"title":"[tosa] Add TFL.Relu0To1Op definition and Legalize to TOSA with Lit Test","body":"This is the follow-up patch to #58078 which was accidentally got merged but rolled back. Created this new PR to clean things up. \r\n\r\n- Added the TFL.Relu0To1Op dialect definition\r\n- Added the legalization code to Tosa\r\n- Added the Lit Test\r\n\r\nSigned-off-by: Jerry Ge <jerry.ge@arm.com>","created_at":"2022-10-24T22:55:45Z","closed_at":"2022-11-28T20:23:08Z","merged_at":"2022-11-28T20:23:08Z","user_id":24451859,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1097889102,"title":"Migrate/Extend Stale management to Github Action","body":"https://docs.github.com/en/actions/managing-issues-and-pull-requests/closing-inactive-issues\r\n\r\nWith this PR I propose to move the stale management to use the regular Github Action:\r\n-  to standardize and lower the barrier to the external contribution\r\n- to extend the stale management coverage\r\n\r\nAll days thresholds  were temp set to `-1` so that we could discuss the numbers here.\r\n\r\nComplete options list:\r\nhttps://github.com/marketplace/actions/close-stale-issues","created_at":"2022-10-24T19:16:13Z","closed_at":"2023-03-01T21:17:47Z","merged_at":"2023-03-01T21:17:46Z","user_id":1710528,"sentiment":{"polarity":-0.2,"subjectivity":0.30000000000000004}}
{"_id":1097874746,"title":"Disable rocBLAS atomics when asked","body":"For some reason, rocBLAS matrix ops (on AMD GPUs) are non-deterministic by default (as opposed to cuBLAS ones). Among other things, this causes covariance matrices to lose the positive semidefinite property.\r\n\r\nThis PR makes the rocBLAS backend opt-in to Tensorflow's determinism flag, restoring deterministic behavior.\r\n\r\nI used the following code to test on gfx90a (requires jax, transformers, torch):\r\n\r\n```\r\nimport jax.numpy as np\r\nimport jax\r\n#jax.config.update('jax_platform_name', 'cpu')\r\n\r\nfrom transformers import FlaxAutoModel, BertConfig\r\n\r\nmodel_name = 'mossaic-candle/regex-gb-2021'\r\nconfig = BertConfig.from_pretrained(model_name)\r\nconfig.attention_probs_dropout_prob = 0.0\r\nconfig.hidden_dropout_prob = 0.0\r\nm = FlaxAutoModel.from_pretrained(model_name, config=config, from_pt=True)\r\nm.params = m.to_fp32(m.params)\r\na = m(input_ids=np.array([[1],[0]]))['last_hidden_state']\r\nb = m(input_ids=np.array([[0],[1]]))['last_hidden_state']\r\nprint(a[0] == b[1])\r\n```\r\n\r\nIt should print an array with all elements equal to `True`  if the execution is deterministic. Execute with `TF_DETERMINISTIC_OPS=1` environment variable set.\r\n\r\n```\r\npip list | grep jax\r\njax                          0.3.23\r\njaxlib                       0.3.23\r\n```\r\n","created_at":"2022-10-24T19:02:30Z","closed_at":"2023-01-19T08:34:31Z","merged_at":"2023-01-19T08:34:31Z","user_id":1899768,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1097789343,"title":"[NVIDIA TF] Use new heuristics query from v0.7.3","body":"cuDNN frontend v0.7.3 has improved the `get_heuristics_list` so that it can correctly handle different modes and their fallbacks with different cuDNN versions. See more in https://github.com/NVIDIA/cudnn-frontend/releases/tag/v0.7.3. This can greatly reduce the burden from the caller side to track the support matrix of heuristics modes.\r\n\r\ncc. @nluehr @pjannaty ","created_at":"2022-10-24T17:42:36Z","closed_at":"2022-11-07T10:40:49Z","merged_at":"2022-11-07T10:40:49Z","user_id":4001424,"sentiment":{"polarity":0.13636363636363635,"subjectivity":0.45454545454545453}}
{"_id":1097734651,"title":"Improving converters for Select/SelectV2 operations.","body":"The converters for `Select/SelectV2` operations have been improved to cover some additional `DynamicShape` mode test cases. ","created_at":"2022-10-24T16:48:51Z","closed_at":"2022-10-27T01:48:31Z","merged_at":"2022-10-27T01:48:31Z","user_id":32910461,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1097240721,"title":"r2.11 cherry-pick: [oneDNN] Fix AvgPool3d Floating point exception","body":"Original PR: https://github.com/tensorflow/tensorflow/pull/57998\r\nPiper: 481588030\r\n","created_at":"2022-10-24T09:59:37Z","closed_at":"2022-10-26T14:05:35Z","merged_at":"2022-10-26T14:05:35Z","user_id":38085909,"sentiment":{"polarity":-0.75,"subjectivity":1.0}}
{"_id":1097186047,"title":"r2.11 cherry-pick: [oneDNN] Fix AvgPool3d Floating point exception","body":"Original PR: https://github.com/tensorflow/tensorflow/pull/57998\r\nOriginal commit: https://github.com/tensorflow/tensorflow/commit/4553398e4ec290209577a832140d4b260f4c3373","created_at":"2022-10-24T09:11:47Z","closed_at":"2022-10-24T09:15:05Z","merged_at":null,"user_id":16359713,"sentiment":{"polarity":-0.75,"subjectivity":1.0}}
{"_id":1096732277,"title":"Upgrading to the latest oneDNN 2.7.1","body":"Upgrading to the latest oneDNN 2.7.1","created_at":"2022-10-23T23:59:51Z","closed_at":"2022-10-24T19:08:05Z","merged_at":"2022-10-24T19:08:04Z","user_id":65728957,"sentiment":{"polarity":0.5,"subjectivity":0.9}}
{"_id":1096721708,"title":"Upgrading to the latest oneDNN-2.7.1 version","body":null,"created_at":"2022-10-23T23:21:13Z","closed_at":"2022-10-23T23:39:07Z","merged_at":null,"user_id":65728957,"sentiment":{"polarity":0.5,"subjectivity":0.9}}
{"_id":1096596039,"title":"Fix zlib download URL","body":"Using `zlib.net/zlib-${version}.tar.gz` only works if `${version}` is the last released version. So we would need to keep updating this file in a rush each time a new release of `zlib` occurs.\r\n\r\nHowever, all previous releases are at https://zlib.net/fossils/ so we won't need to do changes in a crunch (though it would still be good to bump dependencies as needed).","created_at":"2022-10-23T14:51:14Z","closed_at":"2022-10-24T21:43:21Z","merged_at":"2022-10-24T21:43:21Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1096262988,"title":"Create .github/ISSUE_TEMPLATE/tflite-other.md","body":"This makes it clearer how to file issues about TensorFlow Lite  that are not about Converters, Play Services or Ops.\r\n\r\nIt wasn't super clear to me if you wanted those in the general _Tensorflow Issue Template_ - if this is NOK, maybe widen that?\r\n\r\nPerhaps you would want to configure your bot to mark issues created from this template with some tflite tags?","created_at":"2022-10-22T17:21:12Z","closed_at":"2022-12-29T22:28:49Z","merged_at":"2022-12-29T22:28:49Z","user_id":298598,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1096130534,"title":"Update libjpeg_turbo","body":"Update libjpeg-turbo from 2.1.0 to 2.1.4\r\n\r\n- Refactoring: Switching from `template_rule` to `expand_template` (from Skylib) - in the long term all occurrences should be replaced\r\n- In 2.1.4 there is a new template file \"jversion.h.in\" that needs to be \"configured\"","created_at":"2022-10-22T11:53:30Z","closed_at":"2022-10-26T17:56:35Z","merged_at":"2022-10-26T17:56:35Z","user_id":3775001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1096072004,"title":"Range kenrel: align CPU and GPU impl","body":"Fixes https://github.com/tensorflow/tensorflow/issues/58133","created_at":"2022-10-22T08:47:04Z","closed_at":"2022-10-27T00:40:36Z","merged_at":"2022-10-27T00:40:35Z","user_id":1710528,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1095959603,"title":"Improving converters for Select/SelectV2 operations.","body":"The converters for `Select/SelectV2` operations have been improved to cover some additional `DynamicShape` mode test cases. ","created_at":"2022-10-22T03:37:24Z","closed_at":"2022-10-24T15:58:34Z","merged_at":null,"user_id":32910461,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1095894812,"title":"[NVIDIA TF] Unit tests for bf16 random ops on GPU","body":"Follow-up to https://github.com/tensorflow/tensorflow/pull/58203\r\nTests are currently gated to only run on Ampere GPUs or newer.\r\n\r\ncc @reedwm ","created_at":"2022-10-22T00:12:16Z","closed_at":"2022-10-25T00:27:14Z","merged_at":"2022-10-25T00:27:13Z","user_id":12981474,"sentiment":{"polarity":-0.5,"subjectivity":0.5}}
{"_id":1095877169,"title":"[Security] Raise an exception when input to CompositeTensorVariantToC…","body":"…omponents is not a valid CompositeTensorVariant tensor.\r\n\r\nSo TF won't crash.\r\n\r\nPiperOrigin-RevId: 474594628","created_at":"2022-10-21T23:34:35Z","closed_at":"2022-11-02T00:40:16Z","merged_at":"2022-11-02T00:40:16Z","user_id":15825877,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1095874769,"title":"[Security] Raise an exception when input to CompositeTensorVariantToC…","body":"…omponents is not a valid CompositeTensorVariant tensor.\r\n\r\nSo TF won't crash.\r\n\r\nPiperOrigin-RevId: 474594628","created_at":"2022-10-21T23:31:14Z","closed_at":"2022-11-02T00:40:05Z","merged_at":"2022-11-02T00:40:05Z","user_id":15825877,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1095867654,"title":"[Security] Raise an exception when input to CompositeTensorVariantToC…","body":"…omponents is not a valid CompositeTensorVariant tensor.\r\n\r\nSo TF won't crash.\r\n\r\nPiperOrigin-RevId: 474594628","created_at":"2022-10-21T23:18:01Z","closed_at":"2022-11-02T00:39:52Z","merged_at":"2022-11-02T00:39:52Z","user_id":15825877,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1095844211,"title":"r2.10 cherry-pick: c5b30379ba8 \"Fix cwise dimension overflow issue again.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/c5b30379ba87cbe774b08ac50c1f6d36df4ebb7c","created_at":"2022-10-21T22:40:54Z","closed_at":"2022-10-24T16:42:01Z","merged_at":"2022-10-24T16:42:01Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1095843259,"title":"r2.9 cherry-pick: c5b30379ba8 \"Fix cwise dimension overflow issue again.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/c5b30379ba87cbe774b08ac50c1f6d36df4ebb7c","created_at":"2022-10-21T22:38:55Z","closed_at":"2022-10-24T16:42:03Z","merged_at":"2022-10-24T16:42:03Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1095660201,"title":"r2.8 cherry-pick: d71090c3e5c \"Fix security vulnerability with FractionalMaxPoolGrad\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/d71090c3e5ca325bdf4b02eb236cfb3ee823e927","created_at":"2022-10-21T18:33:53Z","closed_at":"2022-10-24T16:42:06Z","merged_at":"2022-10-24T16:42:06Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1095659791,"title":"r2.10 cherry-pick: d71090c3e5c \"Fix security vulnerability with FractionalMaxPoolGrad\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/d71090c3e5ca325bdf4b02eb236cfb3ee823e927","created_at":"2022-10-21T18:33:19Z","closed_at":"2022-10-24T16:42:57Z","merged_at":"2022-10-24T16:42:57Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1095658357,"title":"r2.10 cherry-pick: 660ce5a89eb \"[Security] Add a check for empty variant tensor input to CompositeTensorVariantToComponents.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/660ce5a89eb6766834bdc303d2ab3902aef99d3d","created_at":"2022-10-21T18:31:24Z","closed_at":"2022-10-24T16:42:52Z","merged_at":"2022-10-24T16:42:51Z","user_id":16359713,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":1095655636,"title":"r2.9 cherry-pick: d66e1d56827 \"Fix tensor shape overflow in FusedResizeAndPadConv2D.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/d66e1d568275e6a2947de97dca7a102a211e01ce","created_at":"2022-10-21T18:29:01Z","closed_at":"2022-10-24T16:43:01Z","merged_at":"2022-10-24T16:43:01Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1095655444,"title":"r2.10 cherry-pick: d66e1d56827 \"Fix tensor shape overflow in FusedResizeAndPadConv2D.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/d66e1d568275e6a2947de97dca7a102a211e01ce","created_at":"2022-10-21T18:28:47Z","closed_at":"2022-10-24T16:43:05Z","merged_at":"2022-10-24T16:43:05Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1095655254,"title":"r2.8 cherry-pick: d66e1d56827 \"Fix tensor shape overflow in FusedResizeAndPadConv2D.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/d66e1d568275e6a2947de97dca7a102a211e01ce","created_at":"2022-10-21T18:28:34Z","closed_at":"2022-10-24T16:43:12Z","merged_at":"2022-10-24T16:43:12Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1095655060,"title":"r2.9 cherry-pick: 660ce5a89eb \"[Security] Add a check for empty variant tensor input to CompositeTensorVariantToComponents.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/660ce5a89eb6766834bdc303d2ab3902aef99d3d","created_at":"2022-10-21T18:28:23Z","closed_at":"2022-10-24T16:43:18Z","merged_at":"2022-10-24T16:43:18Z","user_id":16359713,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":1095654590,"title":"r2.8 cherry-pick: 660ce5a89eb \"[Security] Add a check for empty variant tensor input to CompositeTensorVariantToComponents.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/660ce5a89eb6766834bdc303d2ab3902aef99d3d","created_at":"2022-10-21T18:27:51Z","closed_at":"2022-10-24T16:43:51Z","merged_at":"2022-10-24T16:43:51Z","user_id":16359713,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":1095653119,"title":"r2.9 cherry-pick: d71090c3e5c \"Fix security vulnerability with FractionalMaxPoolGrad\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/d71090c3e5ca325bdf4b02eb236cfb3ee823e927","created_at":"2022-10-21T18:26:27Z","closed_at":"2022-10-24T16:43:25Z","merged_at":"2022-10-24T16:43:25Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1095652859,"title":"r2.10 cherry-pick: 80ff197d03d \"Fix SDCA optimizer crash.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/80ff197d03db2a70c6a111f97dcdacad1b0babfa","created_at":"2022-10-21T18:26:05Z","closed_at":"2022-10-24T16:43:29Z","merged_at":"2022-10-24T16:43:29Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1095652813,"title":"r2.8 cherry-pick: 80ff197d03d \"Fix SDCA optimizer crash.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/80ff197d03db2a70c6a111f97dcdacad1b0babfa","created_at":"2022-10-21T18:26:01Z","closed_at":"2022-10-24T16:43:33Z","merged_at":"2022-10-24T16:43:33Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1095649642,"title":"r2.10 cherry-pick: 39ec7eaf142 \"Make MfccMelFilterbank fail initialization if num_channels is > max int value.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/39ec7eaf1428e90c37787e5b3fbd68ebd3c48860","created_at":"2022-10-21T18:22:02Z","closed_at":"2022-10-24T16:42:28Z","merged_at":"2022-10-24T16:42:28Z","user_id":16359713,"sentiment":{"polarity":-0.5,"subjectivity":0.29999999999999993}}
{"_id":1095645660,"title":"r2.9 cherry-pick: 80ff197d03d \"Fix SDCA optimizer crash.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/80ff197d03db2a70c6a111f97dcdacad1b0babfa","created_at":"2022-10-21T18:17:12Z","closed_at":"2022-10-24T16:42:32Z","merged_at":"2022-10-24T16:42:32Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1095642463,"title":"r2.8 cherry-pick: 39ec7eaf142 \"Make MfccMelFilterbank fail initialization if num_channels is > max int value.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/39ec7eaf1428e90c37787e5b3fbd68ebd3c48860","created_at":"2022-10-21T18:13:26Z","closed_at":"2022-10-24T16:42:35Z","merged_at":"2022-10-24T16:42:35Z","user_id":16359713,"sentiment":{"polarity":-0.5,"subjectivity":0.29999999999999993}}
{"_id":1095641959,"title":"r2.9 cherry-pick: 39ec7eaf142 \"Make MfccMelFilterbank fail initialization if num_channels is > max int value.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/39ec7eaf1428e90c37787e5b3fbd68ebd3c48860","created_at":"2022-10-21T18:12:48Z","closed_at":"2022-10-24T16:42:38Z","merged_at":"2022-10-24T16:42:38Z","user_id":16359713,"sentiment":{"polarity":-0.5,"subjectivity":0.29999999999999993}}
{"_id":1095638125,"title":"r2.10 cherry-pick: cf35502463a \"Add rank checks to GenerateBoundingBoxProposals.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/cf35502463a88ca7185a99daa7031df60b3c1c98","created_at":"2022-10-21T18:07:56Z","closed_at":"2022-10-24T16:41:27Z","merged_at":"2022-10-24T16:41:27Z","user_id":16359713,"sentiment":{"polarity":-0.8,"subjectivity":0.9}}
{"_id":1095638060,"title":"r2.8 cherry-pick: cf35502463a \"Add rank checks to GenerateBoundingBoxProposals.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/cf35502463a88ca7185a99daa7031df60b3c1c98","created_at":"2022-10-21T18:07:52Z","closed_at":"2022-10-24T16:42:43Z","merged_at":"2022-10-24T16:42:43Z","user_id":16359713,"sentiment":{"polarity":-0.8,"subjectivity":0.9}}
{"_id":1095637703,"title":"r2.9 cherry-pick: cf35502463a \"Add rank checks to GenerateBoundingBoxProposals.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/cf35502463a88ca7185a99daa7031df60b3c1c98","created_at":"2022-10-21T18:07:27Z","closed_at":"2022-10-24T16:41:26Z","merged_at":"2022-10-24T16:41:25Z","user_id":16359713,"sentiment":{"polarity":-0.8,"subjectivity":0.9}}
{"_id":1095631935,"title":"r2.8 cherry-pick: eaf30105b04 \"Fix security vulnerability with calling ParseInt64Value with an invalid py_value.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/eaf30105b048833e58b6b4def707e789583144ed","created_at":"2022-10-21T18:01:28Z","closed_at":"2022-10-24T16:41:24Z","merged_at":"2022-10-24T16:41:24Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1095631837,"title":"r2.10 cherry-pick: eaf30105b04 \"Fix security vulnerability with calling ParseInt64Value with an invalid py_value.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/eaf30105b048833e58b6b4def707e789583144ed","created_at":"2022-10-21T18:01:23Z","closed_at":"2022-10-24T16:44:35Z","merged_at":"2022-10-24T16:44:35Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1095631378,"title":"r2.9 cherry-pick: eaf30105b04 \"Fix security vulnerability with calling ParseInt64Value with an invalid py_value.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/eaf30105b048833e58b6b4def707e789583144ed","created_at":"2022-10-21T18:01:04Z","closed_at":"2022-10-22T00:17:33Z","merged_at":"2022-10-22T00:17:33Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1095626299,"title":"r2.9 cherry-pick: a513a45dba3 \"Check for null input in pywrap_tfe_src.cc SetOpAttrList() function, to avoid program crash.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/a513a45dba3221f99e45cceac93fbb18ccc0de24","created_at":"2022-10-21T17:57:37Z","closed_at":"2022-10-22T00:17:18Z","merged_at":"2022-10-22T00:17:18Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1095620667,"title":"r2.10 cherry-pick: a513a45dba3 \"Check for null input in pywrap_tfe_src.cc SetOpAttrList() function, to avoid program crash.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/a513a45dba3221f99e45cceac93fbb18ccc0de24","created_at":"2022-10-21T17:51:33Z","closed_at":"2022-10-22T00:17:09Z","merged_at":"2022-10-22T00:17:09Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1095618615,"title":"r2.8 cherry-pick: a513a45dba3 \"Check for null input in pywrap_tfe_src.cc SetOpAttrList() function, to avoid program crash.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/a513a45dba3221f99e45cceac93fbb18ccc0de24","created_at":"2022-10-21T17:49:20Z","closed_at":"2022-10-22T00:16:56Z","merged_at":"2022-10-22T00:16:56Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1095613050,"title":"Fixed Markdown Warning in Ops_select.md","body":"Fixed Markdown Warning coming on Table borders in Ops_select.md . Found and Fix using Pycharm's inspect code.","created_at":"2022-10-21T17:42:46Z","closed_at":"2022-12-30T04:35:49Z","merged_at":null,"user_id":86464649,"sentiment":{"polarity":0.1,"subjectivity":0.2}}
{"_id":1095612196,"title":"r2.8 cherry-pick: 72c0bdcb253 \"Fix a potential buffer overflow issue in reference kernel of the CONV_3D_TRANSPOSE\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/72c0bdcb25305b0b36842d746cc61d72658d2941","created_at":"2022-10-21T17:41:42Z","closed_at":"2022-10-22T00:16:43Z","merged_at":"2022-10-22T00:16:43Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":1.0}}
{"_id":1095609384,"title":"r2.10 cherry-pick: 72c0bdcb253 \"Fix a potential buffer overflow issue in reference kernel of the CONV_3D_TRANSPOSE\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/72c0bdcb25305b0b36842d746cc61d72658d2941","created_at":"2022-10-21T17:38:13Z","closed_at":"2022-10-22T00:16:43Z","merged_at":"2022-10-22T00:16:43Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":1.0}}
{"_id":1095607031,"title":"r2.9 cherry-pick: 72c0bdcb253 \"Fix a potential buffer overflow issue in reference kernel of the CONV_3D_TRANSPOSE\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/72c0bdcb25305b0b36842d746cc61d72658d2941","created_at":"2022-10-21T17:35:12Z","closed_at":"2022-10-22T00:16:42Z","merged_at":"2022-10-22T00:16:42Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":1.0}}
{"_id":1095497858,"title":"Updated Ops compatibility list with new api","body":"Replaced  old api \r\n tf.check_numerics\r\nwith new api\r\n tf.debugging.check_numerics\r\n\r\nin ops compatibility list.","created_at":"2022-10-21T15:42:50Z","closed_at":"2022-10-27T00:35:46Z","merged_at":null,"user_id":86464649,"sentiment":{"polarity":0.13636363636363635,"subjectivity":0.45454545454545453}}
{"_id":1095458946,"title":"Do not pass 4th argument to _MklNativeFusedConv2D","body":"The recent change https://github.com/tensorflow/tensorflow/commit/0d5820c180613c0e292c1f3e99aa70162661b612 introduced 4th argument to _FusedConv2D, but _MklNativeFusedConv2D when running with TF_ENABLE_ONEDNN_OPTS=1 still accepting only 3 input arguemnts. This patch makes sure when building node with _MklNativeFsuedConv2D we only define it with 3 input arguments.","created_at":"2022-10-21T15:10:04Z","closed_at":"2022-10-24T20:46:25Z","merged_at":"2022-10-24T20:46:25Z","user_id":79916358,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1095371764,"title":"[ROCm] Enable RCCL in XLA pjrt","body":"This enables ROCm RCCL support in XLA PJRT.","created_at":"2022-10-21T13:59:42Z","closed_at":"2022-10-27T12:44:14Z","merged_at":"2022-10-27T12:44:14Z","user_id":4212398,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1094879865,"title":"Fix benchmark_model compilation for Windows","body":"Adding #ifdef block around unistd.h header.","created_at":"2022-10-21T06:34:02Z","closed_at":"2022-10-30T16:09:47Z","merged_at":null,"user_id":10049549,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1094711984,"title":"Sets `--experimental_link_static_libraries_once=true`","body":"This change ensures that no library is linked statically more than once. libtensorflow_framework.so is a dynamic dependency of _pywrap_tensorflow_internal.so. If a library is statically linked to both, Bazel complains and asks for the target to be exported from libtensorflow_framework.so. This change decreases TensorFlow Python package size.","created_at":"2022-10-21T03:06:01Z","closed_at":"2023-01-11T04:20:44Z","merged_at":null,"user_id":66660475,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1094665444,"title":"Pull the DEVICE_DEFAULT registration for Fill out of the CUDA ifdefs","body":"@penpornk This is a bug fix that will allow all pluggable devices to use these registrations.","created_at":"2022-10-21T02:03:29Z","closed_at":"2022-11-07T22:05:09Z","merged_at":"2022-11-07T22:05:09Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1094568901,"title":"Fix failure of //tensorflow/core/kernels:conv_ops_test_gpu on older GPUs","body":"Fixes the failure of //tensorflow/core/kernels:conv_ops_test_gpu  on older GPUs (P100) that started with this commit  https://github.com/tensorflow/tensorflow/commit/5be9a59ea29470e91f2ddc5cbb96d2d8c3edf2a7 The error reported is as follows.\r\n```\r\n(0) UNIMPLEMENTED: Fused convolution for int8 is only supported on GPUs with compute capability 6.1 or later.\r\n\t [[{{node fused_conv}}]]\r\n\t [[fused_conv/_3]]\r\n```\r\nThe fix was to use CPU to test fused conv2d with int8 for GPUs  that don't have at least 6.1 compute capability.","created_at":"2022-10-20T23:42:56Z","closed_at":"2022-12-05T16:45:15Z","merged_at":null,"user_id":25374808,"sentiment":{"polarity":-0.07500000000000004,"subjectivity":0.31666666666666665}}
{"_id":1094417921,"title":"[NVIDIA TF] Enable bfloat16 on GPU for random ops","body":"Builds bfloat16 kernels for GPU for Random ops.\r\nTODO: Add unit tests\r\n\r\ncc @reedwm ","created_at":"2022-10-20T21:25:42Z","closed_at":"2022-10-21T09:02:44Z","merged_at":"2022-10-21T09:02:44Z","user_id":12981474,"sentiment":{"polarity":-0.5,"subjectivity":0.5}}
{"_id":1094410848,"title":"[ROCM] Fix gpu_atomic_test for ROCm","body":"Fixes test for ROCm platform","created_at":"2022-10-20T21:20:04Z","closed_at":"2022-11-29T07:58:57Z","merged_at":"2022-11-29T07:58:57Z","user_id":4212398,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1094340081,"title":"r2.8 cherry-pick: a65411a1d69 \"Fix OOB write in grappler.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/a65411a1d69edfb16b25907ffb8f73556ce36bb7","created_at":"2022-10-20T20:25:52Z","closed_at":"2022-10-20T20:28:54Z","merged_at":"2022-10-20T20:28:54Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1094339609,"title":"r2.11 cherry-pick: 1be74370327 \"Resolve a sanitizer issue with invalid char -> bool conversion.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/1be743703279782a357adbf9b77dcb994fe8b508","created_at":"2022-10-20T20:25:31Z","closed_at":"2022-10-20T20:28:55Z","merged_at":"2022-10-20T20:28:55Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1094339155,"title":"r2.9 cherry-pick: 1be74370327 \"Resolve a sanitizer issue with invalid char -> bool conversion.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/1be743703279782a357adbf9b77dcb994fe8b508","created_at":"2022-10-20T20:25:09Z","closed_at":"2022-10-20T20:28:56Z","merged_at":"2022-10-20T20:28:56Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1094338938,"title":"r2.11 cherry-pick: a65411a1d69 \"Fix OOB write in grappler.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/a65411a1d69edfb16b25907ffb8f73556ce36bb7","created_at":"2022-10-20T20:24:58Z","closed_at":"2022-10-20T20:30:07Z","merged_at":"2022-10-20T20:30:07Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1094338865,"title":"r2.10 cherry-pick: a65411a1d69 \"Fix OOB write in grappler.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/a65411a1d69edfb16b25907ffb8f73556ce36bb7","created_at":"2022-10-20T20:24:55Z","closed_at":"2022-10-20T20:28:58Z","merged_at":"2022-10-20T20:28:58Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1094338681,"title":"r2.9 cherry-pick: a65411a1d69 \"Fix OOB write in grappler.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/a65411a1d69edfb16b25907ffb8f73556ce36bb7","created_at":"2022-10-20T20:24:46Z","closed_at":"2022-10-20T20:30:11Z","merged_at":"2022-10-20T20:30:11Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1094338608,"title":"r2.8 cherry-pick: 1be74370327 \"Resolve a sanitizer issue with invalid char -> bool conversion.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/1be743703279782a357adbf9b77dcb994fe8b508","created_at":"2022-10-20T20:24:43Z","closed_at":"2022-10-20T20:30:13Z","merged_at":"2022-10-20T20:30:13Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1094338444,"title":"r2.10 cherry-pick: 1be74370327 \"Resolve a sanitizer issue with invalid char -> bool conversion.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/1be743703279782a357adbf9b77dcb994fe8b508","created_at":"2022-10-20T20:24:35Z","closed_at":"2022-10-20T20:30:17Z","merged_at":"2022-10-20T20:30:17Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1094145714,"title":"r2.11 cherry-pick: 34dadfa8b09 \"Pass HloToolOptions instead of ToolOptions to ConvertHloProtoToToolData\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/34dadfa8b093197133b47beb30a50a5a2ddfedb2","created_at":"2022-10-20T17:32:43Z","closed_at":"2022-10-21T20:03:21Z","merged_at":"2022-10-21T20:03:21Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1094119970,"title":"[ROCm] Fix for JAX build breakage on ROCm.","body":"The following upstream commit caused JAX on ROCm to fail to build:\r\n\r\nhttps://github.com/ROCmSoftwarePlatform/tensorflow-upstream/commit/f03950067329636899e81173b3650c78ce78c432\r\n\r\nIt caused the following link time error:\r\n\r\n/usr/bin/ld.gold: error: bazel-out/k8-opt/bin/_solib_local/_U@local_Uconfig_Ucuda_S_Scuda_Ccudart___Ucuda_Scuda_Slib/libcudart.so: file is empty","created_at":"2022-10-20T17:10:31Z","closed_at":"2022-11-03T10:56:49Z","merged_at":"2022-11-03T10:56:49Z","user_id":70280935,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1093900219,"title":"Add CustomCallWithComputation to the xla_client ops.","body":"This change allows users of the `xla_client` to create custom calls that also have an attached computation.","created_at":"2022-10-20T14:28:32Z","closed_at":"2022-11-03T09:45:32Z","merged_at":"2022-11-03T09:45:32Z","user_id":60800749,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1093821922,"title":"Removed merge conflict marker","body":"Hi!\r\n\r\nI was trying to compile r2.9 from source and the compiler found this merge conflict marker still in `execute.cc` which was causing compilation to fail. As far as I can see the other merge conflict markers had been removed but this one was still there.\r\n\r\nAny questions or comments please let me know!\r\n    \r\nJamie","created_at":"2022-10-20T13:39:54Z","closed_at":"2022-10-20T20:29:16Z","merged_at":"2022-10-20T20:29:16Z","user_id":60134692,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1093623650,"title":"Remove outdated docs re: Arduino Library Manager installation","body":"For some years, Arduino maintained a TensorFlow Lite Micro mirror packaged as a standalone Arduino library named \"**Arduino_TensorFlowLite**\". This allowed the library to be distributed via [the Arduino Library Manager system](https://docs.arduino.cc/software/ide-v2/tutorials/ide-v2-installing-a-library#installing-a-library).\r\n\r\nThe maintainers of [the official `tensorflow/tflite-micro-arduino-examples` repository](https://github.com/tensorflow/tflite-micro-arduino-examples) recently requested that library be removed from the Arduino Library Manager (https://github.com/arduino/library-registry/pull/1748). For this reason, it is no longer possible to install the library via Library Manager. The library should now be installed following the official instructions here:\r\n\r\nhttps://github.com/tensorflow/tflite-micro-arduino-examples#how-to-install","created_at":"2022-10-20T11:11:00Z","closed_at":"2022-10-21T17:52:01Z","merged_at":"2022-10-21T17:52:01Z","user_id":8572152,"sentiment":{"polarity":-0.4000000000000001,"subjectivity":0.6333333333333334}}
{"_id":1093180385,"title":"Dev n1to1 a","body":" Fix ReLUN1To1 fused activation for OpenCL and OpenGL\r\n\r\nThe ReLUN1To1 op was repurposed from the a ReLU1 op. However it was not fully reimplemented. As a result it clipped to a minimum of 0 instead of -1.\r\n\r\nAdd a left clip attribute, lclip, to the ReLU implementation. Set to -1 for ReLUN1To1 and 0 for all other ReLUs.","created_at":"2022-10-20T04:31:58Z","closed_at":"2022-10-22T03:02:59Z","merged_at":null,"user_id":638447,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1092941846,"title":"Fix duplicated dylibs in Mac pip wheel","body":"Fixes #58164\r\n\r\nOn Mac, copying the runfiles with `-L` duplicates the symlinked dylibs. On Linux, the duplicate copies are removed during the wheel build, so this PR does the same for Mac.\r\n\r\nBefore\r\n```\r\n-rwxr-xr-x   1 tester  wheel   473M Oct 19  2022 libtensorflow_cc.2.12.0.dylib\r\n-rwxr-xr-x   1 tester  wheel   473M Oct 19  2022 libtensorflow_cc.2.dylib\r\n-rwxr-xr-x   1 tester  wheel    32M Oct 19  2022 libtensorflow_framework.2.12.0.dylib\r\n-rwxr-xr-x   1 tester  wheel    32M Oct 19  2022 libtensorflow_framework.2.dylib\r\n-rwxr-xr-x   1 tester  wheel    32M Oct 19  2022 libtensorflow_framework.dylib\r\n```\r\n\r\nAfter\r\n```\r\n-rwxr-xr-x   1 tester  wheel   473M Oct 19  2022 libtensorflow_cc.2.dylib\r\n-rwxr-xr-x   1 tester  wheel    32M Oct 19  2022 libtensorflow_framework.2.dylib\r\n```\r\n\r\ncc @learning-to-play ","created_at":"2022-10-19T22:29:57Z","closed_at":"2022-10-20T02:50:14Z","merged_at":"2022-10-20T02:50:14Z","user_id":12981474,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1092912559,"title":"Update rules_pkg","body":"Update rules_pkg from 0.7.0 to 0.7.1","created_at":"2022-10-19T21:45:46Z","closed_at":"2022-10-20T17:12:37Z","merged_at":"2022-10-20T17:12:37Z","user_id":3775001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1092865552,"title":"Add missing link library for MhloDialect","body":"Code in MhloDialect uses MLIRSparseTensorDialect, so it needs to be linked against for shared library build to work. This was causing builds to fail for onnx-mlir when updating versions.","created_at":"2022-10-19T20:48:17Z","closed_at":"2022-10-20T02:43:55Z","merged_at":"2022-10-20T02:43:55Z","user_id":4925255,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":1092730555,"title":"[ROCm] Fix for JAX build breakage on ROCm.","body":"The following upstream commit caused JAX on ROCm to fail to build:\r\n\r\nhttps://github.com/ROCmSoftwarePlatform/tensorflow-upstream/commit/f03950067329636899e81173b3650c78ce78c432\r\n\r\nIt caused the following link time error:\r\n\r\n/usr/bin/ld.gold: error: bazel-out/k8-opt/bin/_solib_local/_U@local_Uconfig_Ucuda_S_Scuda_Ccudart___Ucuda_Scuda_Slib/libcudart.so: file is empty","created_at":"2022-10-19T18:29:40Z","closed_at":"2022-10-20T13:18:41Z","merged_at":null,"user_id":70280935,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1092661581,"title":"Fix-rel-notes","body":"Fixes one typo and removes lines breaks which cause relnotes in the GitHub release page to show up in the wrong place.","created_at":"2022-10-19T17:20:32Z","closed_at":"2022-10-19T17:28:25Z","merged_at":"2022-10-19T17:28:25Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1092652558,"title":"Notice of deletion of legacy keras code.","body":null,"created_at":"2022-10-19T17:11:54Z","closed_at":"2022-10-19T17:14:11Z","merged_at":"2022-10-19T17:14:11Z","user_id":5118881,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1092552522,"title":"Fix valgrind error","body":"Valgrind indentified an error due to use of unintialised memory and identified this char array as being the source, so clear it to zero on allocation.","created_at":"2022-10-19T15:41:48Z","closed_at":"2022-10-20T22:02:05Z","merged_at":"2022-10-20T22:02:05Z","user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1091475053,"title":"[NVIDIA TF] Enable BF16 MatMul Ops","body":"This PR enables BF16 MatMul/BatchedMatMul via cuBLAS.\r\n\r\ncc. @nluehr @pjannaty @kushanam @trevor-m ","created_at":"2022-10-19T00:08:21Z","closed_at":"2022-11-15T19:09:32Z","merged_at":"2022-11-15T19:09:32Z","user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1091471100,"title":"Update version numbers for TensorFlow 2.11.0-rc1","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 11 -> 11\nPatch: 0 -> 0\n\nNo lingering old version strings \"2.11.0-rc0\" found in source directory \n\"tensorflow/\". Good.\nWARNING: Below are potentially instances of lingering old version string \n\"2.11.0rc0\" in source directory \"tensorflow/\" that are not updated by this \nscript. Please check them manually!\ntensorflow/tools/pip_package/setup.py:123:2.11.0rc0\n```","created_at":"2022-10-19T00:02:10Z","closed_at":"2022-10-19T00:14:58Z","merged_at":"2022-10-19T00:14:58Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1091369511,"title":"Update the keras packages version in master.","body":"Both keras nightly and keras next release are done, so we can do this update.\n\nSimilar PRs need to happen to Estimator (either a single one tomorrow updating both final and nightly or one today after rc0 estimator is released to main package and tomorrow for nightly)","created_at":"2022-10-18T21:38:25Z","closed_at":"2022-10-18T22:07:55Z","merged_at":"2022-10-18T22:07:55Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1091342655,"title":"Remove empty glob","body":"This glob is not globbing anything.\r\nThis prevents flipping the flag incompatible_disallow_empty_glob\r\nhttps://buildkite.com/bazel/bazelisk-plus-incompatible-flags/builds/1301#0183e377-b3bf-4648-8470-e7a0d37f4a04/582","created_at":"2022-10-18T21:06:51Z","closed_at":"2022-10-21T15:34:57Z","merged_at":"2022-10-21T15:34:57Z","user_id":3073717,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":1091277641,"title":"Update Keras and Estimator dependency versions in setup.py","body":null,"created_at":"2022-10-18T20:01:35Z","closed_at":"2022-10-18T20:37:10Z","merged_at":"2022-10-18T20:37:10Z","user_id":66660475,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1091196345,"title":"[TF-TRT] Fix native fallback issue in StridedSlice with dynamic input indices and shrink_axis_mask","body":"This PR introduces two changes: \r\n\r\n1. Returns unimplemented error when begin tensor has negative values.\r\n2. Fixes the logic when shrink_axis mask is used with unknown input dimensions. ","created_at":"2022-10-18T18:41:06Z","closed_at":"2022-11-04T17:08:53Z","merged_at":"2022-11-04T17:08:53Z","user_id":33809857,"sentiment":{"polarity":0.0,"subjectivity":0.16666666666666666}}
{"_id":1091073206,"title":"[OneDNN] Bug fix: Fixing a primitive cache key","body":"This PR addresses a potential problem that can appear in primitive caching for some rare cases where model has some FusedConv2D/3D nodes with same exact dimensions and parameters with the only difference being the fused activation function. To cover that case, we are updating the primitive cache key string to include the kind of activation function so it does the right cache lookup.","created_at":"2022-10-18T16:47:32Z","closed_at":"2022-10-24T17:32:58Z","merged_at":"2022-10-24T17:32:58Z","user_id":24963061,"sentiment":{"polarity":0.0,"subjectivity":1.0}}
{"_id":1091046784,"title":"[TF-TRT] Adding additional TraceMe ranges","body":"This PR adds a few additional TraceMe annotations to improve profiling for TF-TRT.","created_at":"2022-10-18T16:22:49Z","closed_at":"2022-10-19T18:26:54Z","merged_at":"2022-10-19T18:26:54Z","user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1091041917,"title":"Ubsan fixes","body":"The undefined behavior sanitizer flagged some minor issues, so fix them.","created_at":"2022-10-18T16:18:25Z","closed_at":"2022-11-09T14:47:40Z","merged_at":"2022-11-09T14:47:40Z","user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1090969448,"title":"[TF-TRT] `quantization_ops_test.cc` fix an error reported by `-Werror=unused-result`","body":"This PR just adds a fix for a recent bazel change adding `-Werror=unused-result` during testing.\r\nThis fixes the bug.","created_at":"2022-10-18T15:21:01Z","closed_at":"2022-11-07T18:40:05Z","merged_at":null,"user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1090964722,"title":"[TF-TRT] Adding `TF_TRT_OP_FAKELIST` env var to allow TF-TRT segmentation experimentation","body":"This PR introduces the env var `TF_TRT_OP_FAKELIST=OpName1,OpName2,...`.\r\n\r\nThe motivation of this change is to allow to experiment with the impact on graph segmentation of adding converter X, Y or Z.\r\nThis API is not designed for users, but rather TF-TRT team to evaluate the importance / impact of the different fearture requests.\r\n\r\n It works by intercepting the call to `OpConverterRegistry::Impl::LookUp` and return the `FakeOp` converter in case the OpName matches any of the names passed in `TF_TRT_OP_FAKELIST`.\r\n \r\n This is expected to have zero impact on any of the current workflows.","created_at":"2022-10-18T15:17:21Z","closed_at":"2022-12-14T23:15:24Z","merged_at":null,"user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1090138346,"title":"Update with python3-pip for focal base docker","body":"This update fixes the recent ROCm CI failures below:\r\n```\r\nPackage python-pip is not available, but is referred to by another package.\r\n\r\nThis may mean that the package is missing, has been obsoleted, or\r\n\r\nis only available from another source\r\n\r\nHowever the following packages replace it:\r\n\r\n  python3-pip\r\n\r\n\r\n\r\nE: Package 'python-pip' has no installation candidate\r\n```","created_at":"2022-10-18T02:23:23Z","closed_at":"2022-12-07T16:42:46Z","merged_at":null,"user_id":1049239,"sentiment":{"polarity":-0.8,"subjectivity":1.0}}
{"_id":1090097186,"title":"Upgrading to cuda 11.8 and cudnn 8.6","body":null,"created_at":"2022-10-18T01:00:34Z","closed_at":"2022-11-30T02:25:31Z","merged_at":null,"user_id":40809717,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1090032329,"title":"Refactor/update TensorFlow 2.11 RELEASE.md","body":null,"created_at":"2022-10-17T23:08:10Z","closed_at":"2022-10-17T23:52:28Z","merged_at":"2022-10-17T23:52:28Z","user_id":19637339,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1089993726,"title":"Fix minor typos in release notes","body":null,"created_at":"2022-10-17T22:22:07Z","closed_at":"2022-10-17T23:56:39Z","merged_at":"2022-10-17T23:56:39Z","user_id":323199,"sentiment":{"polarity":-0.05,"subjectivity":0.2}}
{"_id":1089923245,"title":"Update version numbers for TensorFlow 2.11.0-rc0","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 11 -> 11\nPatch: 0 -> 0\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.11.0\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/lite/tools/versioning/runtime_version.cc:157:2.11.0\ntensorflow/lite/tools/versioning/runtime_version.cc:386:2.11.0\ntensorflow/lite/tools/versioning/runtime_version.cc:389:2.11.0\ntensorflow/tensorflow.bzl:65:2.11.0\ntensorflow/tools/ci_build/release/requirements_common.txt:26:2.11.0\ntensorflow/tools/pip_package/setup.py:49:2.11.0\ntensorflow/tools/pip_package/setup.py:122:2.11.0\ntensorflow/tools/pip_package/setup.py:124:2.11.0\ntensorflow/tools/pip_package/setup.py:126:2.11.0\ntensorflow/tools/tf_sig_build_dockerfiles/devel.requirements.txt:32:2.11.0\ntensorflow/tools/tf_sig_build_dockerfiles/devel.requirements.txt:34:2.11.0\nBinary file \ntensorflow/cc/saved_model/testdata/OptimizerSlotVariableModule/saved_model.pb \nmatches\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.11.0\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/lite/tools/versioning/runtime_version.cc:157:2.11.0\ntensorflow/lite/tools/versioning/runtime_version.cc:386:2.11.0\ntensorflow/lite/tools/versioning/runtime_version.cc:389:2.11.0\ntensorflow/tensorflow.bzl:65:2.11.0\ntensorflow/tools/ci_build/release/requirements_common.txt:26:2.11.0\ntensorflow/tools/pip_package/setup.py:49:2.11.0\ntensorflow/tools/pip_package/setup.py:122:2.11.0\ntensorflow/tools/pip_package/setup.py:124:2.11.0\ntensorflow/tools/pip_package/setup.py:126:2.11.0\ntensorflow/tools/tf_sig_build_dockerfiles/devel.requirements.txt:32:2.11.0\ntensorflow/tools/tf_sig_build_dockerfiles/devel.requirements.txt:34:2.11.0\nBinary file \ntensorflow/cc/saved_model/testdata/OptimizerSlotVariableModule/saved_model.pb \nmatches\n```","created_at":"2022-10-17T21:08:57Z","closed_at":"2022-10-17T21:52:02Z","merged_at":"2022-10-17T21:52:02Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1089812881,"title":"Update release notes for TensorFlow 2.11.0","body":"This PR is intentionally incomplete. One of the Release Owners for 2.11.0\nneeds to fill in the internal release notes for this version before the PR gets\nsubmitted. Click on the :pencil2: icon in the header for `RELEASE.md` under\n\"Files Changed\" above.","created_at":"2022-10-17T19:31:08Z","closed_at":"2022-10-17T20:54:46Z","merged_at":"2022-10-17T20:54:46Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1089398098,"title":"[ROCm] Absorb fix for the LLVM AMDGPU backend addition of fp16 support of ne…","body":"…arbyint.\r\n\r\nThe following LLVM commit adds fp16 support for the nearbyint intrinsic on the AMDGPU backend:\r\n\r\nhttps://github.com/llvm/llvm-project/commit/6370bc2435a8406898eee7338ae7d795a252ad04","created_at":"2022-10-17T13:57:33Z","closed_at":"2022-10-19T17:39:08Z","merged_at":"2022-10-19T17:39:08Z","user_id":70280935,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1089114235,"title":"Fix for TensorArray example","body":"Fix for the TensorArray example. Attached working [gist](https://colab.research.google.com/gist/tiruk007/33a3f8934a9448f170574455637b88ac/tensorarray.ipynb) for reference","created_at":"2022-10-17T10:21:32Z","closed_at":"2022-11-04T19:05:48Z","merged_at":"2022-11-04T19:05:48Z","user_id":111861663,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1089055697,"title":"Updated Dockerfile.rocm","body":"The rocm build was failing due to requirement of python3-pip. The current python-pip is obsolete.\r\n\r\nFollowing is the error that it shows on jenkins:\r\n```terminal\r\nFetched 29.0 kB in 1s (24.2 kB/s)\r\nReading package lists...\r\nReading package lists...\r\nBuilding dependency tree...\r\nReading state information...\r\nPackage python-pip is not available, but is referred to by another package.\r\nThis may mean that the package is missing, has been obsoleted, or\r\nis only available from another source\r\nHowever the following packages replace it:\r\n  python3-pip\r\n\r\nE: Package 'python-pip' has no installation candidate\r\nThe command '/bin/sh -c apt-get update --allow-insecure-repositories && DEBIAN_FRONTEND=noninteractive apt-get install -y   build-essential   bsdmainutils   clang-6.0   clang-format-6.0   clang-tidy-6.0   cmake   cmake-qt-gui   ssh   curl   apt-utils   pkg-config   g++-multilib   git   kmod   libunwind-dev   libfftw3-dev   libelf-dev   libncurses5-dev   libpthread-stubs0-dev   vim   gfortran   libboost-program-options-dev   libssl-dev   libboost-dev   libboost-system-dev   libboost-filesystem-dev   rpm   libnuma-dev   pciutils   virtualenv   python-pip   libxml2   libxml2-dev   wget &&   apt-get clean &&   rm -rf /var/lib/apt/lists/*' returned a non-zero code: 100\r\nERROR: docker build failed. Dockerfile is at /home/jenkins/workspace/ROCm-Community-CI-Build_PR-58103/tensorflow/tools/ci_build/Dockerfile.rocm\r\n```","created_at":"2022-10-17T09:38:32Z","closed_at":"2022-10-17T20:33:38Z","merged_at":null,"user_id":25522048,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1088665980,"title":"Update tf_env_collect.sh","body":"Removed Unnecessary Blank Lines.","created_at":"2022-10-17T03:06:31Z","closed_at":"2022-10-24T16:49:11Z","merged_at":null,"user_id":69903860,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1088401606,"title":"Errorsolve","body":"There was a grammatical mistake in a one of comment in pywrap_sanitizers.py","created_at":"2022-10-16T13:36:20Z","closed_at":"2022-10-24T16:49:55Z","merged_at":null,"user_id":47137999,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1088233385,"title":"Fix segfault for multiframe gifs.","body":"Integer overflow occurs when 2^31 <= num_frames * height * width * channels < 2^32, for example Full HD screencast of at least 346 frames.","created_at":"2022-10-15T19:50:35Z","closed_at":"2022-12-28T19:59:29Z","merged_at":"2022-12-28T19:59:29Z","user_id":17516388,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1088228739,"title":"Fix typos and broken links in CONTRIBUTING.md","body":"- Included a mermaid flowchart for PR Workflow.\r\n- Fixed typos and broken links.\r\n- Organised the file with a new layout for better readability.","created_at":"2022-10-15T19:23:35Z","closed_at":"2022-10-20T16:08:54Z","merged_at":"2022-10-20T16:08:54Z","user_id":25522048,"sentiment":{"polarity":-0.4,"subjectivity":0.4}}
{"_id":1088108294,"title":"Disable failing linalg tests on ARM_CI","body":null,"created_at":"2022-10-15T09:39:00Z","closed_at":"2022-10-16T19:21:56Z","merged_at":"2022-10-16T19:21:56Z","user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1087894588,"title":"Pull the Variant registration for ResourceGather and ResourceScatterUpdate out of the CUDA ifdefs","body":"@penpornk This is a bug fix that will allow all pluggable devices to use these registrations.","created_at":"2022-10-14T20:56:05Z","closed_at":"2022-12-02T01:46:46Z","merged_at":"2022-12-02T01:46:46Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1087404814,"title":"Fixing the incorrect link in input_layer.py","body":"Added the correct link for `RaggedTensor`","created_at":"2022-10-14T12:44:43Z","closed_at":"2022-10-17T13:26:30Z","merged_at":null,"user_id":81610181,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1087251170,"title":"[AMD-ZENDNN] Code changes to support TF-Plugin for AMD CPU Inference","body":"This pull request contains necessary/base changes for supporting TF-Plugin for AMD CPU Inference.\r\n\r\nWith this code change we introduce,\r\n    - Functionality to enable AMD CPU optimizations by setting environment variable 'TF_ENABLE_ZENDNN_OPTS=1'\r\n    - Zen layout pass to re-write supported ops with ZenOps\r\n\r\nAll these code changes are under AMD_ZENDNN flag which is enabled for linux builds only.\r\n\r\nAuthors:\r\n    Aakar Dwivedi ( aakar.dwivedi@amd.com )\r\n    Aditya Chatterjee ( aditya.chatterjee@amd.com )\r\n    Arun Coimbatore Ramachandran ( aruncoimbatore.ramachandran@amd.com )\r\n    Avinash-Chandra Pandey ( avinash-chandra.pandey@amd.com )\r\n    Chandra Kumar Ramasamy ( chandrakumar.ramasamy@amd.com )\r\n    Savan Anadani ( savan.anadani@amd.com )\r\n\r\nSigned-off-by: Aakar Dwivedi <Aakar.Dwivedi@amd.com>","created_at":"2022-10-14T10:23:20Z","closed_at":"2023-01-06T16:52:36Z","merged_at":null,"user_id":82587125,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1087080740,"title":"Unify functions to check whether oneDNN is enabled","body":"Unify functions to check whether oneDNN is enabled: [Python test_util checker](https://github.com/tensorflow/tensorflow/blob/76b9fa22857148a562f3d9b5af6843402a93c15b/tensorflow/python/framework/test_util.py#L360-L362), [Pywrapped checker](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/util/port.cc#L62-L67) and [C++ checker](https://github.com/tensorflow/tensorflow/blob/76b9fa22857148a562f3d9b5af6843402a93c15b/tensorflow/core/util/util.cc#L130-L183).\r\n\r\nMove the main function to port.cc to avoid cyclic dependency. Keeping the fix minimal to cherry-pick into TF 2.11.\r\n\r\nInconsistencies could cause bugs because Python layer may assume oneDNN is disabled when it's not. For example, `//tensorflow/python/framework:config_test` will fail when run on Cascade Lake or newer CPUs because:\r\n* The test is [supposed to be skipped](https://github.com/tensorflow/tensorflow/blob/76b9fa22857148a562f3d9b5af6843402a93c15b/tensorflow/python/framework/config_test.py#L682-L684) when oneDNN is turned on.\r\n* Python `test_util` `IsMklEnabled` only checks for [static defines](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/util/port.cc#L62-L67) and [`TF_ENABLE_ONEDNN_OPTS` environment variable](https://github.com/tensorflow/tensorflow/blob/76b9fa22857148a562f3d9b5af6843402a93c15b/tensorflow/python/framework/test_util.py#L362). When the var is unset, the Python checker will just think oneDNN is disabled. But oneDNN is turned on by default on Cascade Lake and newer Intel CPUs (even when the env var is unset).\r\n* The test was not skipped when it should have been skipped.","created_at":"2022-10-14T07:52:30Z","closed_at":"2022-10-14T22:41:06Z","merged_at":null,"user_id":38085909,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1086257507,"title":"Fix conjugate transpose for 0/1D complex tensor","body":"This PR fixes issue-[58007](https://github.com/tensorflow/tensorflow/issues/58007).\r\nFor 0D or 1D complex input, the unfixed version tends to treat `tf.transpose(in, conjugate=True)` as no-op which may fail `tensorflow/python/kernel_tests/math_ops/transpose_op_test.py`.\r\n","created_at":"2022-10-13T15:15:14Z","closed_at":"2022-10-26T21:11:41Z","merged_at":"2022-10-26T21:11:41Z","user_id":25590028,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":1085399314,"title":"r2.10 cherry-pick: 717ca98d8c3 \"Adding missing requirement on inputs for MirrorPadGrad op and updating arithmetic to account for int32 padding values.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/717ca98d8c3bba348ff62281fdf38dcb5ea1ec92","created_at":"2022-10-13T01:42:40Z","closed_at":"2022-10-13T02:10:53Z","merged_at":"2022-10-13T02:10:52Z","user_id":16359713,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":1085399211,"title":"r2.9 cherry-pick: 717ca98d8c3 \"Adding missing requirement on inputs for MirrorPadGrad op and updating arithmetic to account for int32 padding values.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/717ca98d8c3bba348ff62281fdf38dcb5ea1ec92","created_at":"2022-10-13T01:42:23Z","closed_at":"2022-10-13T02:11:11Z","merged_at":"2022-10-13T02:11:11Z","user_id":16359713,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":1085388353,"title":"r2.8 cherry-pick: 717ca98d8c3 \"Adding missing requirement on inputs for MirrorPadGrad op and updating arithmetic to account for int32 padding values.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/717ca98d8c3bba348ff62281fdf38dcb5ea1ec92","created_at":"2022-10-13T01:25:13Z","closed_at":"2022-10-13T02:11:26Z","merged_at":"2022-10-13T02:11:26Z","user_id":16359713,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":1085194593,"title":"Replace reviewer for automatic cherrypicks","body":"Since I no longer work in TF due to reasons :)","created_at":"2022-10-12T20:34:42Z","closed_at":"2022-10-12T21:57:11Z","merged_at":"2022-10-12T21:57:10Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1085006095,"title":"[tosa] Add TFL.Relu0To1Op definition and Legalize to TOSA with Lit Test","body":"- Added the TFL.Relu0To1Op dialect definition\r\n- Added the legalization code to Tosa\r\n- Added the Lit Test\r\n\r\nSigned-off-by: Jerry Ge <jerry.ge@arm.com>","created_at":"2022-10-12T17:30:47Z","closed_at":"2022-10-19T23:41:30Z","merged_at":"2022-10-19T23:41:30Z","user_id":24451859,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1084878459,"title":"[TF-TRT] Improvements of the TRTConverterV2 summary","body":"Minor improvements of the `TRTConverterV2.summary()` method.\r\n- Deprecating `detailed=True` in favor of `verbosity_lvl=[0..2]`\r\n- Prints more details according to the verbosity level requested.\r\n- Default behavior unchanged","created_at":"2022-10-12T15:37:20Z","closed_at":"2023-01-18T18:15:19Z","merged_at":null,"user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1084156639,"title":"[oneDNN] Improve threadpool task scheduling","body":"Using oneDNN with eigen threadpool has threading conflict issue that affects performance when oneDNN threadpool thread num equals available CPU core num. This change makes Tensorflow scheduling a task in caller thread to avoid this issue. The behavior is controled by an environment variable.","created_at":"2022-10-12T05:50:01Z","closed_at":"2023-01-10T20:13:34Z","merged_at":"2023-01-10T20:13:34Z","user_id":89124486,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1084111029,"title":"[TF-TRT] Fix some compilation warnings in TF-TRT","body":"Fixes warnings related to -Wswitch and -Wunused-result.","created_at":"2022-10-12T04:41:19Z","closed_at":"2022-10-14T13:59:52Z","merged_at":"2022-10-14T13:59:52Z","user_id":30323187,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1083907479,"title":"Replace auto assignment list","body":"Update auto assignment list to include new engineer.","created_at":"2022-10-11T22:43:01Z","closed_at":"2022-10-13T17:39:14Z","merged_at":"2022-10-13T17:39:14Z","user_id":43972606,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1083860573,"title":"Deprecate ImplicitBatchModeCompatible dynamic shape strategy","body":"This strategy is intended for ease of use for people familiar with the implicit batch mode profile, in that it does not require the user to specifically call build() before trying to run an inference with TFTRT converted graph. Since this is actually a dynamic shape mode, and input shapes are required in dynamic shape mode for TensorRT profile generation; this mode makes some educated guesses for minimum and maximum shapes for inputs the TensorRT engine.\r\n\r\nThis has proven to be buggy for models that include transpose and reshape operations, among others.\r\n\r\nDue to the above, and since dynamic shape mode requires users to call build() with the correct input shapes to generate TensorRT profiles correctly, this mode is being deprecated.\r\n\r\nCC: @DEKHTIARJonathan @bixia1 \r\n\r\nSigned-off-by: Meenakshi Venkataraman <meenakshiv@nvidia.com>","created_at":"2022-10-11T21:40:45Z","closed_at":"2022-10-17T21:33:02Z","merged_at":"2022-10-17T21:33:02Z","user_id":80416898,"sentiment":{"polarity":0.0,"subjectivity":0.16666666666666666}}
{"_id":1083830518,"title":"Re-generate Flatbuffer in lite/experimental/acceleration/configuration","body":"This updates configuration_generated.h in lite/experimental/acceleration/configuration and adds the validation settings.\r\n\r\nGeneration steps:\r\n\r\n```\r\nbazel build tensorflow/lite/experimental/acceleration/configuration:all\r\ncp bazel-bin/tensorflow/lite/experimental/acceleration/configuration/configuration_generated.h ...\r\n```","created_at":"2022-10-11T21:02:32Z","closed_at":"2022-10-13T15:46:29Z","merged_at":null,"user_id":19397744,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1083772490,"title":"Add true_classes input validation for candidate sampler ops.","body":"The values must be within the valid range of the sampler.  Added a check for this.\r\n\r\nPiperOrigin-RevId: 479441496","created_at":"2022-10-11T19:59:48Z","closed_at":"2022-10-11T20:18:41Z","merged_at":"2022-10-11T20:18:40Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1083767086,"title":"Add true_classes input validation for candidate sampler ops.","body":"The values must be within the valid range of the sampler.  Added a check for this.\r\n\r\nPiperOrigin-RevId: 479441496","created_at":"2022-10-11T19:53:46Z","closed_at":"2022-10-11T20:18:54Z","merged_at":"2022-10-11T20:18:54Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1083766275,"title":"output test failure logs","body":"@nitins17 ","created_at":"2022-10-11T19:52:55Z","closed_at":"2022-10-12T04:49:28Z","merged_at":"2022-10-12T04:49:28Z","user_id":22492939,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":1083764684,"title":"Add true_classes input validation for candidate sampler ops.","body":"The values must be within the valid range of the sampler.  Added a check for this.\r\n\r\nPiperOrigin-RevId: 479441496","created_at":"2022-10-11T19:51:11Z","closed_at":"2022-10-11T20:19:09Z","merged_at":"2022-10-11T20:19:09Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1083757467,"title":"Fix OOB error when op input sizes do not match.","body":"In cases where op input sizes are specified as in\r\n```\r\nREGISTER_OP(\"DynamicStitch\")\r\n    .Input(\"indices: N * int32\")\r\n    .Input(\"data: N * T\")\r\n    .Output(\"merged: T\")\r\n    .Attr(\"N : int >= 1\")\r\n    .Attr(\"T : type\")\r\n    .SetShapeFn(DynamicStitchShapeFunction);\r\n```\r\nif differing number of inputs are provided (e.g. 3 for `indices` and 4 for `data`) we can get a crash in the executor when parsing the inputs, even before the kernel called.  Here we avoid this by checking the return code for the argument id and exit early.\r\n\r\nPiperOrigin-RevId: 478068540","created_at":"2022-10-11T19:42:53Z","closed_at":"2022-10-11T20:19:27Z","merged_at":"2022-10-11T20:19:27Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1083753958,"title":"Fix OOB error when op input sizes do not match.","body":"In cases where op input sizes are specified as in\r\n```\r\nREGISTER_OP(\"DynamicStitch\")\r\n    .Input(\"indices: N * int32\")\r\n    .Input(\"data: N * T\")\r\n    .Output(\"merged: T\")\r\n    .Attr(\"N : int >= 1\")\r\n    .Attr(\"T : type\")\r\n    .SetShapeFn(DynamicStitchShapeFunction);\r\n```\r\nif differing number of inputs are provided (e.g. 3 for `indices` and 4 for `data`) we can get a crash in the executor when parsing the inputs, even before the kernel called.  Here we avoid this by checking the return code for the argument id and exit early.\r\n\r\nPiperOrigin-RevId: 478068540","created_at":"2022-10-11T19:38:47Z","closed_at":"2022-10-11T20:19:41Z","merged_at":"2022-10-11T20:19:41Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1083735110,"title":"Fix OOB error when op input sizes do not match.","body":"In cases where op input sizes are specified as in\r\n```\r\nREGISTER_OP(\"DynamicStitch\")\r\n    .Input(\"indices: N * int32\")\r\n    .Input(\"data: N * T\")\r\n    .Output(\"merged: T\")\r\n    .Attr(\"N : int >= 1\")\r\n    .Attr(\"T : type\")\r\n    .SetShapeFn(DynamicStitchShapeFunction);\r\n```\r\nif differing number of inputs are provided (e.g. 3 for `indices` and 4 for `data`) we can get a crash in the executor when parsing the inputs, even before the kernel called.  Here we avoid this by checking the return code for the argument id and exit early.\r\n\r\nPiperOrigin-RevId: 478068540","created_at":"2022-10-11T19:17:10Z","closed_at":"2022-10-11T19:39:17Z","merged_at":null,"user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1083726478,"title":"Fix OOB error when op input sizes do not match.","body":"In cases where op input sizes are specified as in\r\n```\r\nREGISTER_OP(\"DynamicStitch\")\r\n    .Input(\"indices: N * int32\")\r\n    .Input(\"data: N * T\")\r\n    .Output(\"merged: T\")\r\n    .Attr(\"N : int >= 1\")\r\n    .Attr(\"T : type\")\r\n    .SetShapeFn(DynamicStitchShapeFunction);\r\n```\r\nif differing number of inputs are provided (e.g. 3 for `indices` and 4 for `data`) we can get a crash in the executor when parsing the inputs, even before the kernel called.  Here we avoid this by checking the return code for the argument id and exit early.\r\n\r\nPiperOrigin-RevId: 478068540","created_at":"2022-10-11T19:07:16Z","closed_at":"2022-10-11T20:19:58Z","merged_at":"2022-10-11T20:19:58Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1083588251,"title":"Added support for missing dtypes in tf.truncated_div ","body":"Added support for missing dtypes in tf.truncated_div . Fixes #58019","created_at":"2022-10-11T16:48:15Z","closed_at":"2022-11-07T04:28:12Z","merged_at":null,"user_id":86464649,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":1083580342,"title":"[NVIDIA TF] Use NHWC for TF32 (Inference only)","body":"This PR enables the NHWC data layout for the inference op graphs when the underlying GPUs are Ampere+ and input dtype is TF32. Using NHWC is recommended in such cases to better utilize the 3rd generation Tensor Core.\r\n\r\nFor now, the cuDNN can provide improved performance only for the fwd and bwd_data convolutions and will improve the bwd_filter convolution in the future release. Therefore, we enable this enhancement only for inference in this PR.\r\n\r\nWe have conducted some perf evaluation across a range of convnets (image classification and object detection tasks) and observed a ~20% perf improvement in most cases.\r\n\r\ncc. @nluehr @pjannaty for viz. ","created_at":"2022-10-11T16:40:54Z","closed_at":"2022-11-02T22:28:42Z","merged_at":"2022-11-02T22:28:42Z","user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":1.0}}
{"_id":1082427278,"title":"Represents the in64 bit indexing test for large tensors for Atanh","body":"Adding large tensor test for 64 bit indexing\r\n@frgossen ","created_at":"2022-10-10T19:29:40Z","closed_at":"2023-01-11T22:36:40Z","merged_at":null,"user_id":42385577,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.42857142857142855}}
{"_id":1082384935,"title":"Enable i64 bit indexing for unary MLIR kernels","body":"Enabling unary index64 kernels\r\n@CC @frgossen ","created_at":"2022-10-10T18:38:54Z","closed_at":"2023-01-18T18:42:12Z","merged_at":null,"user_id":42385577,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1082339795,"title":"[TEST ONLY] Enable softmax with oneDNN library.","body":null,"created_at":"2022-10-10T17:46:04Z","closed_at":"2022-10-10T18:43:06Z","merged_at":null,"user_id":27521767,"sentiment":{"polarity":0.0,"subjectivity":1.0}}
{"_id":1082185783,"title":"[ROCm] Fix for gpu_compiler_test breakage on ROCm.","body":"/cc @cheshire ","created_at":"2022-10-10T15:18:52Z","closed_at":"2022-10-10T15:28:39Z","merged_at":null,"user_id":70280935,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1081943532,"title":"Add Raises section to the documentation of tf.nn.max_pool and tf.nn.max_pool2d","body":"Address issue[#57978](https://github.com/tensorflow/tensorflow/issues/57978). Add Raises section to the docstring of tf.nn.max_pool and tf.nn.max_pool2d.\r\n\r\nFor max_pool, raises ValueError if\r\n- explicit padding is used with an input tensor of rank 5.\r\n- explicit padding is used with data_format='NCHW_VECT_C'.\r\n\r\nFor max_pool2d, raises ValueError: If explicit padding is used with data_format='NCHW_VECT_C'.\r\n","created_at":"2022-10-10T12:05:00Z","closed_at":"2022-12-28T19:19:19Z","merged_at":"2022-12-28T19:19:19Z","user_id":13077763,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1081589163,"title":"Adding large jit kernels","body":"Activating jit_i64_indexed_for_large_tensors_types path for unary kernels.\r\nCC: @frgossen ","created_at":"2022-10-10T06:20:13Z","closed_at":"2022-10-10T06:20:43Z","merged_at":null,"user_id":42385577,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.42857142857142855}}
{"_id":1081480618,"title":"Fixed missing leading zero issue on SlurmClusterResolver","body":"This PR is to fix the issue in #49956, also add an unit test for this condition.","created_at":"2022-10-10T03:08:40Z","closed_at":"2023-01-05T18:42:06Z","merged_at":"2023-01-05T18:42:06Z","user_id":9738259,"sentiment":{"polarity":-0.05,"subjectivity":0.125}}
{"_id":1081150226,"title":"Fixed some Grammar mistakes in array_ops.py","body":"Fixed some Grammar mistakes in array_ops.py - missing commas,articles,punctuations.","created_at":"2022-10-09T01:59:37Z","closed_at":"2022-10-14T13:59:52Z","merged_at":"2022-10-14T13:59:52Z","user_id":86464649,"sentiment":{"polarity":0.1,"subjectivity":0.2}}
{"_id":1080930544,"title":"Fixed some Grammar mistakes in core/ir/readme.md","body":"Fixed some Grammer mistakes core/ir/readme.md","created_at":"2022-10-08T05:44:43Z","closed_at":"2022-10-17T16:27:37Z","merged_at":"2022-10-17T16:27:37Z","user_id":86464649,"sentiment":{"polarity":0.1,"subjectivity":0.2}}
{"_id":1080737701,"title":"Add a check that strided slice op strides argument has reasonable size","body":"Add a check that strided slice op strides argument has reasonable size\r\n\r\nPiperOrigin-RevId: 478036251","created_at":"2022-10-07T19:50:59Z","closed_at":"2022-10-07T19:52:02Z","merged_at":"2022-10-07T19:52:02Z","user_id":1174378,"sentiment":{"polarity":0.2,"subjectivity":0.6}}
{"_id":1080737340,"title":"Add a check that strided slice op strides argument has reasonable size","body":"Add a check that strided slice op strides argument has reasonable size\r\n\r\nPiperOrigin-RevId: 478036251","created_at":"2022-10-07T19:50:25Z","closed_at":"2022-10-07T19:52:51Z","merged_at":"2022-10-07T19:52:51Z","user_id":1174378,"sentiment":{"polarity":0.2,"subjectivity":0.6}}
{"_id":1080736792,"title":"Add a check that strided slice op strides argument has reasonable size","body":"Add a check that strided slice op strides argument has reasonable size\r\n\r\nPiperOrigin-RevId: 478036251","created_at":"2022-10-07T19:49:35Z","closed_at":"2022-10-07T19:52:24Z","merged_at":"2022-10-07T19:52:24Z","user_id":1174378,"sentiment":{"polarity":0.2,"subjectivity":0.6}}
{"_id":1079713021,"title":"Cherry-pick Tensor.numpy() segfault fixes on 2.10","body":"Cherry-pick two similar commits which fix segfaults when calling `Tensor.numpy`.","created_at":"2022-10-06T23:47:36Z","closed_at":"2022-10-12T20:33:54Z","merged_at":"2022-10-12T20:33:54Z","user_id":6510203,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1079712999,"title":"Cherry-pick Tensor.numpy() segfault fixes on 2.9","body":"Cherry-pick two similar commits which fix segfaults when calling `Tensor.numpy`.","created_at":"2022-10-06T23:47:33Z","closed_at":"2022-10-12T20:33:59Z","merged_at":"2022-10-12T20:33:59Z","user_id":6510203,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1079712873,"title":"Cherry-pick Tensor.numpy() segfault fixes on 2.8","body":"Cherry-pick two similar commits which fix segfaults when calling `Tensor.numpy`.","created_at":"2022-10-06T23:47:16Z","closed_at":"2022-10-12T20:34:00Z","merged_at":"2022-10-12T20:34:00Z","user_id":6510203,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1079581030,"title":"Remove empty glob","body":"This glob is not globbing anything.\r\nThis prevents flipping the flag incompatible_disallow_empty_glob","created_at":"2022-10-06T20:48:07Z","closed_at":"2022-10-09T13:38:32Z","merged_at":"2022-10-09T13:38:32Z","user_id":3073717,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":1079129200,"title":"[ROCm] fixed unit test for gpu_compiler_test on ROCm","body":"GpuCompilerTest doesn't include ROCm platform and it will cause the uniti test failed on ROCm gpu.\r\n\r\n/cc @cheshire","created_at":"2022-10-06T14:43:24Z","closed_at":"2022-10-19T17:14:26Z","merged_at":"2022-10-19T17:14:26Z","user_id":913790,"sentiment":{"polarity":0.1,"subjectivity":0.2}}
{"_id":1077943348,"title":"[oneDNN] Fix AvgPool3d Floating point exception ","body":"This PR covers a corner case, which was exposed with issue : https://github.com/tensorflow/tensorflow/issues/57500","created_at":"2022-10-05T22:50:56Z","closed_at":"2022-10-17T09:44:52Z","merged_at":"2022-10-17T09:44:52Z","user_id":43043975,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1077882910,"title":"Fix tf.raw_ops.ResizeNearestNeighborGrad vulnerability with large dim…","body":"…ensions.\r\n\r\nNote: This fix will have to be cherry picked in r2.10, r2.9, and r2.8.\r\nPiperOrigin-RevId: 479141644","created_at":"2022-10-05T21:32:21Z","closed_at":"2022-10-06T17:42:18Z","merged_at":"2022-10-06T17:42:18Z","user_id":1046529,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.42857142857142855}}
{"_id":1077882610,"title":"Fix tf.raw_ops.ResizeNearestNeighborGrad vulnerability with large dim…","body":"…ensions.\r\n\r\nNote: This fix will have to be cherry picked in r2.10, r2.9, and r2.8.\r\nPiperOrigin-RevId: 479141644","created_at":"2022-10-05T21:31:59Z","closed_at":"2022-10-06T17:42:32Z","merged_at":"2022-10-06T17:42:32Z","user_id":1046529,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.42857142857142855}}
{"_id":1077882368,"title":"Fix tf.raw_ops.ResizeNearestNeighborGrad vulnerability with large dim…","body":"…ensions.\r\n\r\nNote: This fix will have to be cherry picked in r2.10, r2.9, and r2.8.\r\nPiperOrigin-RevId: 479141644","created_at":"2022-10-05T21:31:39Z","closed_at":"2022-10-06T17:42:42Z","merged_at":"2022-10-06T17:42:42Z","user_id":1046529,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.42857142857142855}}
{"_id":1077841726,"title":"Fix tf.raw_ops.ImageProjectiveTransformV2 vulnerability with large ou…","body":"…tput_shape.\r\n\r\nNote: This fix will have to be cherry picked in r2.10, r2.9, and r2.8.\r\nPiperOrigin-RevId: 479125772","created_at":"2022-10-05T20:46:08Z","closed_at":"2022-10-06T17:43:57Z","merged_at":"2022-10-06T17:43:57Z","user_id":1046529,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.42857142857142855}}
{"_id":1077841414,"title":"Fix tf.raw_ops.ImageProjectiveTransformV2 vulnerability with large ou…","body":"…tput_shape.\r\n\r\nNote: This fix will have to be cherry picked in r2.10, r2.9, and r2.8.\r\nPiperOrigin-RevId: 479125772","created_at":"2022-10-05T20:45:45Z","closed_at":"2022-10-06T17:44:27Z","merged_at":"2022-10-06T17:44:27Z","user_id":1046529,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.42857142857142855}}
{"_id":1077840918,"title":"Fix tf.raw_ops.ImageProjectiveTransformV2 vulnerability with large ou…","body":"…tput_shape.\r\n\r\nNote: This fix will have to be cherry picked in r2.10, r2.9, and r2.8.\r\nPiperOrigin-RevId: 479125772","created_at":"2022-10-05T20:45:13Z","closed_at":"2022-10-06T17:44:38Z","merged_at":"2022-10-06T17:44:38Z","user_id":1046529,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.42857142857142855}}
{"_id":1077834499,"title":"Update TOSA resize to match specification","body":"Attribute stride and shift are removed, and has new scale and border.","created_at":"2022-10-05T20:38:20Z","closed_at":"2022-10-05T22:37:13Z","merged_at":null,"user_id":5508949,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1077654802,"title":"[oneDNN] Adding AddN unit test for bfloat16","body":"Added unit test for bfloat16 (for AddN). ","created_at":"2022-10-05T17:46:48Z","closed_at":"2023-02-16T21:12:54Z","merged_at":"2023-02-16T21:12:54Z","user_id":16918172,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1077636429,"title":"Support for ACL fixed format kernels and depth wise convolution","body":"The following patch adds support in TF to use fixed format kernels from Compute Library in order to be able to update weights in-place so that we can remove AArch64-specific caching of oneDNN primitives that had to include as one part of the key partial content of weights.\r\n\r\nIt also additionally includes acceleration of depthwise convolution with equivalent Compute Library operations.","created_at":"2022-10-05T17:26:27Z","closed_at":"2022-10-06T23:21:07Z","merged_at":"2022-10-06T23:21:07Z","user_id":79916358,"sentiment":{"polarity":0.39999999999999997,"subjectivity":0.55}}
{"_id":1077550903,"title":"Various Google C++ style guide fixes","body":"I want to contribute to this wonderful project and picked up some low hanging fruit in the C++ section.\r\nI found some inconsistencies with the style guide on some files, and therefore submitted this PR.\r\n\r\nSpecifically, I have edited some files so that they comply to the \"include what you use\" rule (https://google.github.io/styleguide/cppguide.html#Include_What_You_Use) from the style guide.","created_at":"2022-10-05T15:58:15Z","closed_at":"2022-12-30T01:09:37Z","merged_at":"2022-12-30T01:09:37Z","user_id":14809962,"sentiment":{"polarity":0.0,"subjectivity":0.5}}
{"_id":1077530804,"title":"Fix crash of Conv2DBackpropFilter","body":"This PR tries to address the issue raised in #57980 where Conv2DBackpropFilter (MKL) will crash in certain situations.\r\n\r\nThis PR fixes #57980.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2022-10-05T15:41:15Z","closed_at":"2022-11-23T21:31:54Z","merged_at":"2022-11-23T21:31:54Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1077436612,"title":" Fix crash in tf.nn.conv2d_transpose when output shape is invalid","body":"This PR tries to address the issue in #57958 where tf.nn.conv2d_transpose will crash when output shape is invalid.\r\n\r\nThis PR adds a warpper ShapeFromFormatWithStatus (previously ShapeFromFormat) so that it is possible to return status.\r\n\r\nNote the change can be applied to other places to address similar crashs. Will create follow up PRs to cover other places once this PR is merged.\r\n\r\nThis PR fixes #57958.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2022-10-05T14:37:25Z","closed_at":"2022-12-02T23:24:32Z","merged_at":"2022-12-02T23:24:32Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1077146746,"title":"[ROCm] Fix 2 more unit tests for gpu_kernel_tiling_test on ROCm","body":"https://github.com/tensorflow/tensorflow/pull/57948 has fixed one unit test on ColReductionWithSmallDtype.\r\n\r\nThis PR has fixed rest two (RowReductionTwoRowsPerWarp and RowReductionFourRowsPerWarp) on gpu_kernel_tiling_test at ROCm.\r\n\r\n/cc @cheshire","created_at":"2022-10-05T10:22:53Z","closed_at":"2022-10-13T19:41:20Z","merged_at":"2022-10-13T19:41:20Z","user_id":913790,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":1076538587,"title":"Use setup.py for building the installer wheels for collaborator builds","body":"PiperOrigin-RevId: 478593715","created_at":"2022-10-04T21:40:00Z","closed_at":"2022-10-05T01:16:29Z","merged_at":"2022-10-05T01:16:29Z","user_id":29348997,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1075826879,"title":"Fix fail to build of aot_compiled_test on aarch64","body":"Build fails with static assertion that NR=4, so, as elsewhere, add the define to make NR=4\r\n\r\nFixes #57968 ","created_at":"2022-10-04T10:56:38Z","closed_at":"2022-10-07T20:37:13Z","merged_at":"2022-10-07T20:37:13Z","user_id":10442001,"sentiment":{"polarity":-0.5,"subjectivity":0.29999999999999993}}
{"_id":1075279618,"title":"Changes to add patch to openmp build, to fix build failure","body":"New constraints for switch stmt added to tensorflow , causes build error in openmp. (with --config=mkl)\r\nOne of the openmp files does not handle all cases within switch stmt.\r\nThis is a patch that fixes it.\r\n\r\nThe changes that causes the build failure.\r\nhttps://github.com/tensorflow/tensorflow/commit/16e2157e9279541e99dd8fdeb3d5b9e80dcc90b8\r\n\r\n#Add switch as an error on Linux.\r\nbuild:linux --copt=\"-Wswitch\"\r\nbuild:linux --copt=\"-Werror=switch\"","created_at":"2022-10-03T22:43:50Z","closed_at":"2022-10-06T21:09:01Z","merged_at":"2022-10-06T21:09:01Z","user_id":14943401,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":1075241914,"title":"Performance Enhancements for Sparse Embedding Lookups","body":"Introduces performance options for sparse embedding lookups that can appreciably speed up the training of recommendation systems. Sparse lookups alternatively accept inputs described by RaggedTensors which are more memory efficient. Performance is further increased by the optional use of a simplified and typically faster embedding lookup.\r\n\r\nIn the sparse embedding micro benchmarks in tensorflow/python/eager/benchmarks_test.py, the number of examples per second on a DGX A100 system increases from approx. 1,300 with SparseTensor and without simplified lookup to approx. 11,200 with RaggedTensor inputs and simplified lookup (+760%). The combination of SparseTensor inputs and simplified lookup yields approx. 3,000 examples per second (+130%).","created_at":"2022-10-03T21:48:51Z","closed_at":"2023-02-23T19:37:49Z","merged_at":null,"user_id":80296164,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1075150916,"title":"[ROCm] Add fence to memory barrier in XLA for gfx90a.","body":"This was done to compensate for LLVM commit 2c82a126d762c14c2f3df2d03a6ae5fb37c3351a which stops the compiler from emitting fences at barriers by default on gfx90a.\r\n\r\nThis LLVM change was done to provide more control over the type of fence that is emitted at memory barriers and thus places the onus of emitting the fence on the user.\r\n\r\n/cc @cheshire ","created_at":"2022-10-03T20:16:04Z","closed_at":"2022-10-06T10:05:11Z","merged_at":"2022-10-06T10:05:11Z","user_id":70280935,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1075118779,"title":"[TF-TRT] Additional TRT 8.5 Fixups","body":"@bixia1 for review","created_at":"2022-10-03T19:43:57Z","closed_at":"2022-10-19T16:36:24Z","merged_at":"2022-10-19T16:36:23Z","user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1074921512,"title":"Fix std::bad_alloc exception (followed by crash) when loading a SavedModel containing a tensor of unknown rank","body":"Examples of reported issues:\r\n- https://github.com/tensorflow/serving/issues/2061\r\n- https://github.com/tensorflow/serving/issues/2048\r\n- https://github.com/tensorflow/decision-forests/issues/124\r\n\r\nPiperOrigin-RevId: 475317100","created_at":"2022-10-03T16:31:33Z","closed_at":"2022-10-07T01:31:23Z","merged_at":"2022-10-07T01:31:23Z","user_id":52443,"sentiment":{"polarity":-0.45,"subjectivity":0.75}}
{"_id":1074921353,"title":"Fix std::bad_alloc exception (followed by crash) when loading a SavedModel containing a tensor of unknown rank.","body":"Examples of reported issues:\r\n- https://github.com/tensorflow/serving/issues/2061\r\n- https://github.com/tensorflow/serving/issues/2048\r\n- https://github.com/tensorflow/decision-forests/issues/124\r\n\r\nPiperOrigin-RevId: 475317100","created_at":"2022-10-03T16:31:25Z","closed_at":"2022-10-07T01:31:14Z","merged_at":"2022-10-07T01:31:14Z","user_id":52443,"sentiment":{"polarity":-0.45,"subjectivity":0.75}}
{"_id":1074500922,"title":"[ROCm] Fix for gpu_kernel_tiling_test on ROCm.","body":"/cc @cheshire ","created_at":"2022-10-03T10:58:47Z","closed_at":"2022-10-20T09:48:26Z","merged_at":"2022-10-20T09:48:26Z","user_id":70280935,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1074188593,"title":"[Intel oneDNN] For Windows symlink fetch size of the target file","body":"This fix will enable more unit tests to pass, e.g. //tensorflow/cc/saved_model:bundle_v2_test. See related issue https://github.com/tensorflow/tensorflow/issues/57685","created_at":"2022-10-03T05:57:46Z","closed_at":"2022-12-05T22:18:19Z","merged_at":null,"user_id":57962524,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1073730453,"title":"Fixed Grammer mistakes of control_flow_op.py","body":"Fixed some Grammar mistakes suggested by Pycharm editor","created_at":"2022-10-02T02:58:31Z","closed_at":"2022-10-26T16:00:46Z","merged_at":"2022-10-26T16:00:46Z","user_id":86464649,"sentiment":{"polarity":0.1,"subjectivity":0.2}}
{"_id":1073561039,"title":"Updated SECURITY.md","body":null,"created_at":"2022-10-01T13:57:55Z","closed_at":"2022-10-12T20:24:47Z","merged_at":null,"user_id":73215366,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1073510251,"title":"Fix crash in tf.image.resize when antialias is True and size is large","body":"This PR tries to fix the issue raised in #57897 where tf.image.resize\r\nwill crash when antialias is True and size is large.\r\n\r\nThis PR fixes #57897.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2022-10-01T10:46:47Z","closed_at":"2023-01-05T16:51:43Z","merged_at":"2023-01-05T16:51:43Z","user_id":6932348,"sentiment":{"polarity":0.28214285714285714,"subjectivity":0.5392857142857143}}
{"_id":1073051475,"title":"Update SECURITY.md to use a form.","body":null,"created_at":"2022-09-30T18:44:15Z","closed_at":"2022-10-13T04:30:43Z","merged_at":"2022-10-13T04:30:43Z","user_id":4316856,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1072849789,"title":"Adding very large tensor tests for JIT kernels","body":"This is to test adding large tensor tests for jit kernel path.\r\nCC: @frgossen ","created_at":"2022-09-30T15:18:53Z","closed_at":"2022-12-21T21:49:15Z","merged_at":null,"user_id":42385577,"sentiment":{"polarity":0.2785714285714286,"subjectivity":0.5571428571428572}}
{"_id":1071669195,"title":"[oneDNN] Add cpu BF16 kernel registration for Eigen FusedBatchNormV2","body":"Currently in auto_mixed_precision.cc, FusedBatchNorm is replaced by FusedBatchNormV2.\r\nBut FusedBatchNormV2 does not have a BFloat16 registration, so after AMP pass, we get an error and then FusedBatchNormV2 runs in FP32. Thus there are too many Cast ops introduced. And eventually in remapper it gets broken down to Mul + Add, but it still runs in FP32.\r\nWith this change, FusedBatchNormV2 will execute in BF16 and number of Casts will reduce, thus improving overall model performance.","created_at":"2022-09-29T17:45:18Z","closed_at":"2023-01-11T18:00:33Z","merged_at":"2023-01-11T18:00:33Z","user_id":42224728,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1071656785,"title":"Update AMP mkl lists","body":"Improves performance for many models by ~15-20% \r\n\r\nMoving Mean from Deny to Infer list because the Mean functor does accumulation in FP32. \r\nAlso, adding Rsqrt, SquaredDifference and Mean will help fusion the LayerNorm sub-graph.\r\n\r\nAdding ResizeBilinear to Clear list as it helps reduce the incoming Casts and improve performance","created_at":"2022-09-29T17:34:03Z","closed_at":"2022-10-11T18:22:18Z","merged_at":"2022-10-11T18:22:17Z","user_id":42224728,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1070550783,"title":"Fix tf.raw_ops.TensorListConcat vulnerability (segfault).","body":"Check that the element_shape input is valid.\r\nAdd graph/eager unit tests.\r\n\r\nNote: This fix will have to be cherry picked in r2.10, r2.9, and r2.8.\r\nPiperOrigin-RevId: 477544091","created_at":"2022-09-28T21:14:22Z","closed_at":"2022-09-28T21:45:03Z","merged_at":"2022-09-28T21:45:03Z","user_id":1046529,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1070550450,"title":"Fix tf.raw_ops.TensorListConcat vulnerability (segfault).","body":"Check that the element_shape input is valid.\r\nAdd graph/eager unit tests.\r\n\r\nNote: This fix will have to be cherry picked in r2.10, r2.9, and r2.8.\r\nPiperOrigin-RevId: 477544091","created_at":"2022-09-28T21:13:54Z","closed_at":"2022-09-28T21:44:31Z","merged_at":"2022-09-28T21:44:31Z","user_id":1046529,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1070550157,"title":"Fix tf.raw_ops.TensorListConcat vulnerability (segfault).","body":"Check that the element_shape input is valid.\r\nAdd graph/eager unit tests.\r\n\r\nNote: This fix will have to be cherry picked in r2.10, r2.9, and r2.8.\r\nPiperOrigin-RevId: 477544091","created_at":"2022-09-28T21:13:30Z","closed_at":"2022-09-28T21:41:17Z","merged_at":"2022-09-28T21:41:17Z","user_id":1046529,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1070367075,"title":"Update ARM_SKIP_TESTS.sh","body":null,"created_at":"2022-09-28T17:55:26Z","closed_at":"2022-09-30T21:51:29Z","merged_at":null,"user_id":22492939,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1070265812,"title":"Fix bugs found by static analysis","body":"These PR fixes a number of bugs found by Svace static analyzer:\r\n\r\n1. BUFFER_OVERFLOW at summary_db_writer.cc:\r\nFunction 'tensorflow::(anonymous namespace)::IdAllocator::MakeRandomId' generates id using 'tier_' as index for 'kIdTiers[]' array which of size 3. The value of 'tier_' starts from 0 and increments in a loop while 'tier_ < kMaxIdTier', and kMaxIdTier = 3. So there is possible out of bounds acces to 'kIdTiers[]' by index 3.\r\n2. BUFFER_UNDERFLOW at hlo_parser.cc:\r\nValue 'nest_level' is of type int64_t and initialized with 0. The value may become negative If '}' is parsed on the first iteration of do-while loop. That would lead to the out of bounds access of both 'elems_seen_per_dim' and 'shape'.\r\n3. DEREF_AFTER_NULL at grpc_worker_service.cc:\r\nAfter having been compared to NULL value at grpc_worker_service.cc:647, pointer 'hook' is dereferenced at grpc_worker_service.cc:651.\r\n4. DEREF_AFTER_NULL at hlo_module_util.cc\r\nAfter having been compared to NULL value at hlo_module_util.cc:111, pointer 'execution_options' is dereferenced at hlo_module_util.cc:119.\r\n5. DEREF_AFTER_NULL at hlo_legalize_to_lhlo.cc:\r\nAfter having been compared to NULL value at hlo_legalize_to_lhlo.cc:59, pointer 'result_type.impl' is passed in call to function 'mlir::RankedTensorType::getShape' at hlo_legalize_to_lhlo.cc:64, where it is dereferenced at BuiltinTypes.cpp.inc:232.\r\n6. DEREF_OF_NULL at xla_launch_util.cc:\r\nAfter having been assigned to NULL value at xla_launch_util.cc:461, pointer 'stream' is dereferenced at xla_launch_util.cc:487.","created_at":"2022-09-28T16:16:17Z","closed_at":"2022-12-20T13:36:08Z","merged_at":null,"user_id":13482580,"sentiment":{"polarity":0.5,"subjectivity":0.9}}
{"_id":1069878202,"title":"Update README.md","body":"Installation in Anaconda Environment","created_at":"2022-09-28T11:24:28Z","closed_at":"2022-10-14T23:35:27Z","merged_at":null,"user_id":60337534,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1069503295,"title":"enabling atanh expermintal","body":"add gpu_atanh_kernels_experimental to the experimental compile path\r\ncc: @frgossen :)","created_at":"2022-09-28T05:40:12Z","closed_at":"2022-09-29T17:36:21Z","merged_at":"2022-09-29T17:36:21Z","user_id":42385577,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1069308902,"title":"Upgrade CUDA version and libraries.","body":null,"created_at":"2022-09-28T00:12:24Z","closed_at":"2022-10-18T00:56:31Z","merged_at":null,"user_id":40809717,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1069255102,"title":"Move tensorflow/c/tf_status... to TSL","body":"This is done by forwarding as many function calls as possible. This will allow to cut some more dependencies from XLA to TensorFlow.\r\n","created_at":"2022-09-27T22:43:14Z","closed_at":"2022-12-29T17:55:10Z","merged_at":null,"user_id":3372300,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1069194722,"title":"[oneDNN] Upgrading oneDNN to 2.7","body":"Upgrading oneDNN to 2.7 and refactoring mkldnn_v1.BUILD to remove duplicate code.","created_at":"2022-09-27T21:34:33Z","closed_at":"2022-10-06T23:45:54Z","merged_at":"2022-10-06T23:45:54Z","user_id":16918172,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1069090401,"title":"Fix tf.raw_ops.TensorListScatterV2 vulnerability with non-scalar input.","body":"Check that the num_elements input is valid.\r\nAdd graph/eager unit tests. Graph mode was already ok but eager mode was not.\r\n\r\nNote: This fix will have to be cherry picked in r2.10, r2.9, and r2.8.\r\nPiperOrigin-RevId: 477225661","created_at":"2022-09-27T19:59:55Z","closed_at":"2022-09-27T22:10:31Z","merged_at":"2022-09-27T22:10:31Z","user_id":1046529,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1069089997,"title":"Fix tf.raw_ops.TensorListScatterV2 vulnerability with non-scalar input.","body":"Check that the num_elements input is valid.\r\nAdd graph/eager unit tests. Graph mode was already ok but eager mode was not.\r\n\r\nNote: This fix will have to be cherry picked in r2.10, r2.9, and r2.8.\r\nPiperOrigin-RevId: 477225661","created_at":"2022-09-27T19:59:26Z","closed_at":"2022-09-27T22:10:15Z","merged_at":"2022-09-27T22:10:15Z","user_id":1046529,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1069089694,"title":"Fix tf.raw_ops.TensorListScatterV2 vulnerability with non-scalar input.","body":"Check that the num_elements input is valid.\r\nAdd graph/eager unit tests. Graph mode was already ok but eager mode was not.\r\n\r\nNote: This fix will have to be cherry picked in r2.10, r2.9, and r2.8.\r\nPiperOrigin-RevId: 477225661","created_at":"2022-09-27T19:59:03Z","closed_at":"2022-09-27T22:09:36Z","merged_at":"2022-09-27T22:09:36Z","user_id":1046529,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1069032307,"title":"[TF-TRT] Change profile strategy for unit tests","body":"The DynamicShapeModeCompatible profile strategy can lead to invalid optimization profiles for the converted TensorRT network. This PR replaces the now deprecated DynamicShapeModeCompatible strategy with a correct optimization strategy for unit tests.","created_at":"2022-09-27T18:59:25Z","closed_at":"2022-09-30T19:31:16Z","merged_at":"2022-09-30T19:31:16Z","user_id":3671106,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1069006483,"title":"Update example docstring","body":"Updated examples in the docstring to set the argument x explicitly, otherwise code would throw error.\r\nReference colab gist: https://colab.sandbox.google.com/gist/sachinprasadhs/981ebbe8f408e6e555171cc846416f94/uniquewithcountsv2.ipynb#scrollTo=_bmFPaJ-LSIL","created_at":"2022-09-27T18:33:45Z","closed_at":"2022-11-16T16:34:29Z","merged_at":"2022-11-16T16:34:29Z","user_id":73069040,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1068921592,"title":"r2.8 cherry-pick: 888e34b4900 \"Fix tf.raw_ops.TensorListResize vulnerability with non-scalar input.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/888e34b49009a4e734c27ab0c43b0b5102682c56","created_at":"2022-09-27T17:15:09Z","closed_at":"2022-09-27T22:08:44Z","merged_at":"2022-09-27T22:08:44Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1068915998,"title":"r2.9 cherry-pick: 888e34b4900 \"Fix tf.raw_ops.TensorListResize vulnerability with non-scalar input.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/888e34b49009a4e734c27ab0c43b0b5102682c56","created_at":"2022-09-27T17:09:36Z","closed_at":"2022-09-27T22:08:27Z","merged_at":"2022-09-27T22:08:27Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1068909657,"title":"r2.10 cherry-pick: 888e34b4900 \"Fix tf.raw_ops.TensorListResize vulnerability with non-scalar input.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/888e34b49009a4e734c27ab0c43b0b5102682c56","created_at":"2022-09-27T17:03:39Z","closed_at":"2022-09-27T22:08:16Z","merged_at":"2022-09-27T22:08:16Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1068898674,"title":"r2.8 cherry-pick: e9e95553e54 \"Fix pywrap attribute read security vulnerability.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/e9e95553e5411834d215e6770c81a83a3d0866ce","created_at":"2022-09-27T16:54:06Z","closed_at":"2022-09-27T22:07:30Z","merged_at":"2022-09-27T22:07:30Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1068894050,"title":"r2.9 cherry-pick: e9e95553e54 \"Fix pywrap attribute read security vulnerability.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/e9e95553e5411834d215e6770c81a83a3d0866ce","created_at":"2022-09-27T16:49:59Z","closed_at":"2022-09-27T22:07:12Z","merged_at":"2022-09-27T22:07:12Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1068889105,"title":"r2.10 cherry-pick: e9e95553e54 \"Fix pywrap attribute read security vulnerability.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/e9e95553e5411834d215e6770c81a83a3d0866ce","created_at":"2022-09-27T16:45:45Z","closed_at":"2022-09-27T22:06:27Z","merged_at":"2022-09-27T22:06:27Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1068059293,"title":"Enable deterministic segment reductions on Windows","body":"This is an attempt to see if the Windows build error that previously blocked this has been or can be resolved.\r\n\r\nMarking as Draft until the Windows CI looks good.\r\n\r\nIf this works, I believe it fixes https://github.com/tensorflow/tensorflow/issues/54276\r\n\r\ncc @nluehr @pjannaty ","created_at":"2022-09-27T05:22:53Z","closed_at":"2022-09-29T02:45:44Z","merged_at":"2022-09-29T02:45:43Z","user_id":3979096,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1068040690,"title":"Fix crash in tf.nn.atrous_conv2d with large rate","body":"This PR tries to address the issue raised in #46915 where\r\ntf.nn.atrous_conv2d will crash when rate is larger than 2^31.\r\n\r\nThis PR fixes #46915.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2022-09-27T04:57:20Z","closed_at":"2022-09-30T18:09:09Z","merged_at":"2022-09-30T18:09:08Z","user_id":6932348,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.42857142857142855}}
{"_id":1067991580,"title":"Fix crash of tf.random.poisson when total shards is larger than 2^31","body":"This PR tries to address the issue raised in #57728 where tf.random.poisson will crash when total shards is larger than 2^31.\r\n\r\nThe issue was that the defined type was incorrectly casted into int (down from int64) when passed to function, resulting in CHECK failure and crash. This PR correct the type to be int64.\r\n\r\nThis PR fixes #57728.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2022-09-27T03:50:47Z","closed_at":"2022-09-30T18:11:28Z","merged_at":"2022-09-30T18:11:28Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.625}}
{"_id":1067867602,"title":"[TFTRT]: Deprecate ImplicitBatchModeCompatible dynamic shape strategy","body":"This strategy is intended for ease of use for people familiar with the implicit batch mode profile, in that it does not require the user to specifically call build() before trying to run an inference with TFTRT converted graph. Since this is actually a dynamic shape mode, and input shapes are required in dynamic shape mode for TensorRT profile generation; this mode makes some educated guesses for minimum and maximum shapes for inputs the TensorRT engine.\r\n\r\nThis has proven to be buggy for models that include transpose and reshape operations, among others.\r\n\r\nDue to the above, and since dynamic shape mode requires users to call build() with the correct input shapes to generate TensorRT profiles correctly, this mode is being deprecated.\r\n\r\ncc: @tfeher @bixia1 @DEKHTIARJonathan ","created_at":"2022-09-27T00:02:35Z","closed_at":"2022-09-30T18:30:52Z","merged_at":"2022-09-30T18:30:52Z","user_id":80416898,"sentiment":{"polarity":0.0,"subjectivity":0.16666666666666666}}
{"_id":1067819780,"title":"Fix tf.raw_ops.TensorListResize vulnerability with non-scalar input.","body":"Check that the size input is valid.\r\nAdd graph/eager unit tests. Graph mode was already ok but eager mode was not.\r\n\r\nNote: This fix will have to be cherry picked in r2.10, r2.9, and r2.8.\r\nPiperOrigin-RevId: 477002316","created_at":"2022-09-26T22:56:29Z","closed_at":"2022-09-28T21:40:06Z","merged_at":"2022-09-28T21:40:06Z","user_id":1046529,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1067819531,"title":"Fix tf.raw_ops.TensorListResize vulnerability with non-scalar input.","body":"Check that the size input is valid.\r\nAdd graph/eager unit tests. Graph mode was already ok but eager mode was not.\r\n\r\nNote: This fix will have to be cherry picked in r2.10, r2.9, and r2.8.\r\nPiperOrigin-RevId: 477002316","created_at":"2022-09-26T22:56:01Z","closed_at":"2022-09-28T21:39:17Z","merged_at":"2022-09-28T21:39:17Z","user_id":1046529,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1067816595,"title":"Fix tf.raw_ops.TensorListResize vulnerability with non-scalar input.","body":"Check that the size input is valid.\r\nAdd graph/eager unit tests. Graph mode was already ok but eager mode was not.\r\n\r\nNote: This fix will have to be cherry picked in r2.10, r2.9, and r2.8.\r\nPiperOrigin-RevId: 477002316","created_at":"2022-09-26T22:50:51Z","closed_at":"2022-09-28T21:38:25Z","merged_at":"2022-09-28T21:38:25Z","user_id":1046529,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1067695104,"title":"TFLite documentation additions ","body":"The documentation does not mention the max_secs parameter that the binary takes. \r\n\r\nThis changes mentions this parameter, and links people to the files that specify all of the parameters.","created_at":"2022-09-26T20:44:13Z","closed_at":"2022-11-10T18:30:16Z","merged_at":"2022-11-10T18:30:16Z","user_id":2359046,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1067335273,"title":"ConvGeneric: fix subgroups for non-intel devices","body":"non-intel devices having the \"cl_khr_subgroups\" extension can use the subgroups features to improve performances.","created_at":"2022-09-26T15:34:31Z","closed_at":"2022-10-06T16:25:59Z","merged_at":null,"user_id":89833130,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1066915634,"title":"Updates oneDNN and Compute Library bulds on AArch64","body":"- Updates oneDNN to v2.7-rc\r\n- Updates Compute Library to 22.08 release\r\n- Updates Compute Library BUILD for 22.08 release\r\n-- changes to a small number of source files\r\n-- support for OpenMP in place of CPP scheduler","created_at":"2022-09-26T10:17:02Z","closed_at":"2022-10-05T00:14:32Z","merged_at":"2022-10-05T00:14:32Z","user_id":32057673,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1066693014,"title":"Do not defer deallocations in EigenGpuStreamDevice","body":"(This is a replacement PR based on https://github.com/tensorflow/tensorflow/pull/57676#discussion_r975737506).\r\n- Allocators that use CUDA API calls cannot safely be called from inside stream callbacks. This issue was observed to cause hangs in several models when using the cuda_malloc_async allocator.\r\n- This commit changes the Eigen allocator wrapper to call Deallocate immediately instead of from within a stream callback. This change is expected to be safe even for allocators that are not stream ordered (such as BFCAllocator) for the same reasons that regular stream executor deallocations are safe.\r\n\r\ncc @reedwm @nluehr @pjannaty ","created_at":"2022-09-26T07:05:46Z","closed_at":"2022-09-28T22:02:23Z","merged_at":"2022-09-28T22:02:23Z","user_id":3979096,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1066544949,"title":"Fix mem alloc bug in SparseSplit GPU kernel","body":"- The temporary allocation used the wrong size, making it too small.\r\n- This was not caught by the existing tests due to their data being too small (and the BFCAllocator not checking out-of-bounds accesses).\r\n\r\ncc @nluehr @pjannaty ","created_at":"2022-09-26T03:40:26Z","closed_at":"2022-09-27T12:12:04Z","merged_at":"2022-09-27T12:12:04Z","user_id":3979096,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1066099594,"title":"Remove references to malloc.h","body":"malloc.h is deprecated: https://stackoverflow.com/questions/12973311/difference-between-stdlib-h-and-malloc-h. Tensorflow does not build on my friend's M1 Mac because of this (@carlthome, he is very sad about this).","created_at":"2022-09-24T16:56:40Z","closed_at":"2022-12-29T22:41:33Z","merged_at":null,"user_id":3961616,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1066097858,"title":"Remove references to malloc.h","body":"malloc.h is deprecated: https://stackoverflow.com/questions/12973311/difference-between-stdlib-h-and-malloc-h. Tensorflow does not build on my friend's M1 Mac because of this  (@carlthome, he is very sad about this).\r\n","created_at":"2022-09-24T16:48:45Z","closed_at":"2022-09-24T16:54:16Z","merged_at":null,"user_id":92311396,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1066097413,"title":"Remove references to malloc.h","body":"malloc.h is non-standard: https://stackoverflow.com/a/12973361\n","created_at":"2022-09-24T16:46:20Z","closed_at":"2022-09-24T16:47:41Z","merged_at":null,"user_id":92311396,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1065764409,"title":" [XLA:GPU] Consider big fusion as expensive during fusion merger. ","body":"The large T5 model in T5X has a \\~30% slowdown when we enable dropout. The core of the issue is that one fusion cause too much re-computation due to a broadcast by 512. There is already a mechanism that prevent fusion that trigger re-computation of costly instructions. In this case, no single instruction are costly, so it doesn't kick in. But there is \\~250 cheap instruction. So this re-computation end up being costly.\r\n\r\nThe fix is simple, check that the fusion we are merging isn't big when re-computation would be triggered in addition to the check for costly instruction.\r\n\r\nTime in kernels:\r\n* without dropout: 3519681664 ns\r\n* with dropout current: 4130066503 ns (1.17x slowdown)\r\n* with dropout with this PR: 3534917713 ns (1.004x slowdown)\r\n\r\n\r\nFull model HLO without dropout (forget filename):\r\n[t5x_slow_dropout_unit_test_unsafe_rbg.DR0.0.txt](https://github.com/tensorflow/tensorflow/files/9711840/t5x_slow_dropout_unit_test_unsafe_rbg.DR0.0.txt) (Full model, forget the filename) \r\nFull model HLO with dropout (forget filename)\r\n[t5x_slow_dropout_unit_test_unsafe_rbg.DR0.1.txt](https://github.com/tensorflow/tensorflow/files/9711841/t5x_slow_dropout_unit_test_unsafe_rbg.DR0.1.txt) (Full model, forget the filename) \r\nUnit test HLO with dropout:\r\n[t5x_slow_dropout_unit_test_unsafe_rbg.txt](https://github.com/tensorflow/tensorflow/files/9760136/t5x_slow_dropout_unit_test_unsafe_rbg.txt)\r\n\r\n@cheshire ","created_at":"2022-09-23T21:27:47Z","closed_at":"2022-11-04T00:13:05Z","merged_at":null,"user_id":180987,"sentiment":{"polarity":-0.25,"subjectivity":0.39999999999999997}}
{"_id":1065629120,"title":"Fix Typo","body":"Fixed typo in the docstring of the description and the error message.","created_at":"2022-09-23T18:22:20Z","closed_at":"2022-09-26T20:53:51Z","merged_at":"2022-09-26T20:53:51Z","user_id":73069040,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1065157378,"title":"[MLIR] add inferReturnTypeComponents for mhlo reduce op","body":"Hi, This commit add the `inferReturnTypeComponets` for `mhlo.reduce`","created_at":"2022-09-23T10:33:45Z","closed_at":"2022-12-02T12:31:37Z","merged_at":null,"user_id":64790599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1065132020,"title":"[MLIR] add inferReturnTypeComponents for mhlo reduce op","body":"Hi, This commit add the `inferReturnTypeComponets` for `mhlo.reduce`","created_at":"2022-09-23T10:06:52Z","closed_at":"2022-09-23T10:24:51Z","merged_at":null,"user_id":64790599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1064931519,"title":"[MHLO] Add simplifyDynamicGather pattern","body":"Canonicalize `mhlo.dynamic_gather` to `mhlo.gather` when `slice_sizes` is constant.","created_at":"2022-09-23T06:17:50Z","closed_at":"2022-09-27T07:51:19Z","merged_at":"2022-09-27T07:51:19Z","user_id":73166454,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1064855233,"title":"Converter for Select operation.","body":"Converter implementation for the [Select](https://www.tensorflow.org/api_docs/python/tf/raw_ops/Select) operation.","created_at":"2022-09-23T03:43:00Z","closed_at":"2022-10-11T19:38:39Z","merged_at":null,"user_id":32910461,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1064702678,"title":"[ROCm]: Update ROCm Dockerfile to Ubuntu 20.04","body":"Update ROCm docker file to point to Ubuntu 20.04. This is needed to get ROCm Community CI passing again along with the PR\r\nhttps://github.com/tensorflow/tensorflow/pull/56762","created_at":"2022-09-22T22:10:01Z","closed_at":"2022-09-26T20:59:31Z","merged_at":"2022-09-26T20:59:31Z","user_id":4212398,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1064645039,"title":"Fix tf.math.sobol_sample vulnerability with non-scalar inputs.","body":"Check that given inputs are valid.\r\nAdd graph/eager unit tests. Graph mode was already ok but eager mode was not.\r\n\r\nPiperOrigin-RevId: 476117492","created_at":"2022-09-22T20:53:38Z","closed_at":"2022-09-30T06:25:26Z","merged_at":"2022-09-30T06:25:26Z","user_id":1046529,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1064644739,"title":"Fix tf.math.sobol_sample vulnerability with non-scalar inputs.","body":"Check that given inputs are valid.\r\nAdd graph/eager unit tests. Graph mode was already ok but eager mode was not.\r\n\r\nPiperOrigin-RevId: 476117492","created_at":"2022-09-22T20:53:17Z","closed_at":"2022-09-30T06:25:22Z","merged_at":"2022-09-30T06:25:22Z","user_id":1046529,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1064644449,"title":"Fix tf.math.sobol_sample vulnerability with non-scalar inputs.","body":"Check that given inputs are valid.\r\nAdd graph/eager unit tests. Graph mode was already ok but eager mode was not.\r\n\r\nPiperOrigin-RevId: 476117492","created_at":"2022-09-22T20:52:52Z","closed_at":"2022-09-30T06:25:19Z","merged_at":"2022-09-30T06:25:19Z","user_id":1046529,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1064643819,"title":"Fix tf.math.sobol_sample vulnerability with non-scalar inputs.","body":"Check that given inputs are valid.\r\nAdd graph/eager unit tests. Graph mode was already ok but eager mode was not.\r\n\r\nPiperOrigin-RevId: 476117492","created_at":"2022-09-22T20:52:08Z","closed_at":"2022-09-22T22:16:46Z","merged_at":null,"user_id":1046529,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1064191934,"title":"[ROCm] Fixed all unused and ignored warnings and status in ROCm build","body":"/cc @cheshire \r\nhttps://github.com/tensorflow/tensorflow/commit/96b26a21e8d437745444a9f4b6a8d8e39689d083\r\nhttps://gist.github.com/cheshire/f81fd036f07ea9267e3abb8c14c12aec\r\n\r\nAll mentioned unused warning errors have been fixed, this also included a merged PR from external Eigen library.\r\n\r\nhttps://gitlab.com/libeigen/eigen/-/merge_requests/1077\r\n\r\nThanks","created_at":"2022-09-22T13:40:31Z","closed_at":"2022-12-07T10:39:27Z","merged_at":"2022-12-07T10:39:27Z","user_id":913790,"sentiment":{"polarity":0.1,"subjectivity":0.2}}
{"_id":1064167570,"title":"[ROCm] Fixed all unused and ignored warnings and status in ROCm build","body":"/cc @cheshire \r\nhttps://github.com/tensorflow/tensorflow/commit/96b26a21e8d437745444a9f4b6a8d8e39689d083\r\nhttps://gist.github.com/cheshire/f81fd036f07ea9267e3abb8c14c12aec\r\n\r\nAll mentioned unused warning errors have been fixed, this also included the one from external Eigen library https://gitlab.com/libeigen/eigen/-/merge_requests/1077\r\n\r\nThanks","created_at":"2022-09-22T13:21:29Z","closed_at":"2022-09-22T13:40:22Z","merged_at":null,"user_id":913790,"sentiment":{"polarity":0.1,"subjectivity":0.2}}
{"_id":1063847360,"title":"Fix typos and grammar/syntax in ops.td","body":"Fixed typo in line 498 and 502","created_at":"2022-09-22T08:47:40Z","closed_at":"2022-12-30T01:12:34Z","merged_at":"2022-12-30T01:12:33Z","user_id":81610181,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1063547916,"title":"[NVIDIA XLA] Support Conv-Bias-Elu fusion in XLA using cuDNN runtime fusion","body":"This PR enables the Conv-Bias-Elu fusion in XLA, which can take advantage of the cuDNN runtime compiled fusion kernels.\r\n\r\nXLA users need to set `xla_gpu_use_runtime_fusion` to enable this behavior as we use `TF_CUDNN_USE_RUNTIME_FUSION` in the native TF.\r\n\r\ncc. @nluehr @pjannaty ","created_at":"2022-09-22T02:11:32Z","closed_at":"2022-11-09T10:47:47Z","merged_at":null,"user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1063540346,"title":"Add qint support for tf.sparse.to_dense","body":"This PR tries to address the issue raised in #57489 where there is not qint support for tf.sparse.to_dense.\r\n\r\nThis PR fixes #57489.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2022-09-22T01:57:52Z","closed_at":"2022-09-30T17:49:53Z","merged_at":"2022-09-30T17:49:53Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1063492860,"title":"[oneDNN] Fix _FusedConv2D crash in oneDNN enabled build","body":"A previous commit 5be9a59 changes op definition of _FusedConv2D, but this causes a side effect of crashes when executing _FusedConv2D during run time in oneDNN enabled build. This PR provides quick fix for the crash.","created_at":"2022-09-22T00:21:53Z","closed_at":"2022-09-22T19:06:51Z","merged_at":"2022-09-22T19:06:51Z","user_id":42156420,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1063472474,"title":"[TF:TRT] Refactor IBuilder holder in covert_node_test.","body":"Create holder nvinfer1::IBuilder in a custom main funciton.\r\nRemove //tensorflow/core:test_main from convert_nodes_test.\r\n\r\nTRT allows multiple builders to share the same cache, having a placeholder builder can reduce the time of cache creation and destroy and thus, speed up the tests\r\nThe original code in tensorflow/compiler/tf2tensorrt/convert/convert_nodes_test.cc defines the holder nvinfer1::IBuilder to be static, which caused the destructor to be called at an unexpected time (not by the main function). We now create the holder in a custom main function.","created_at":"2022-09-21T23:36:15Z","closed_at":"2022-09-30T18:17:58Z","merged_at":"2022-09-30T18:17:58Z","user_id":109828133,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1063466294,"title":"Fix crash in tf.linalg.diag when input is too large","body":"This PR fixes issues raise in #57713 where tf.linalg.diag will crash if the input is invalid.\r\n\r\nThis PR fixes #57713.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2022-09-21T23:21:55Z","closed_at":"2022-11-25T21:30:50Z","merged_at":"2022-11-25T21:30:50Z","user_id":6932348,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.42857142857142855}}
{"_id":1063455140,"title":"Fix crash in tf.nn.conv2d_transpose when shape is negative","body":"This PR tries to address the issue raised in #57715 where\r\ntf.nn.conv2d_transpose will crash if any elements in shape is negative.\r\n\r\nThis PR fixes #57715.\r\nThis PR fixes #57709.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2022-09-21T22:59:17Z","closed_at":"2022-09-26T20:40:54Z","merged_at":"2022-09-26T20:40:53Z","user_id":6932348,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":1063421904,"title":"Fix crash in tf.math.unsorted_segment_min/max/sum caused by invalid num_segments","body":"This PR tries to address the issue raised in #57716 where tf.math.unsorted_segment_min/max/sum\r\nwill crash when num_segments is not valid.\r\n\r\nThis PR fixes #57716.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2022-09-21T22:16:25Z","closed_at":"2022-09-26T20:36:49Z","merged_at":"2022-09-26T20:36:49Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1063359874,"title":"Fix crash in tf.image.crop_and_resize caused by invalid box_indices","body":"This PR tries to address the issue in #57754 where tf.image.crop_and_resize\r\nwill crach when box_indices is invalid (should be 1-D, as was specified in doc).\r\n\r\nThis PR fixes #57754.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2022-09-21T21:22:27Z","closed_at":"2022-10-20T21:57:10Z","merged_at":"2022-10-20T21:57:10Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1063300682,"title":"[TFTRT] Avoid saving unused variables after conversion","body":"Regarding issue [#305](https://github.com/tensorflow/tensorrt/issues/305) - clears tracked dependencies prior to saving the converted model. As the graph is frozen prior to conversion, tracked variables are not needed by the converted model.\r\n\r\nNotably, this change also saves only the converted signature.","created_at":"2022-09-21T20:11:39Z","closed_at":"2022-10-04T17:10:20Z","merged_at":"2022-10-04T17:10:20Z","user_id":86808158,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1063202221,"title":"Add mirrorpad legalization for TF and TFL","body":"Include REFLECT and SYMMETRIC mode.","created_at":"2022-09-21T18:27:35Z","closed_at":"2022-10-19T18:10:54Z","merged_at":"2022-10-19T18:10:54Z","user_id":78814694,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1063010597,"title":"[ROCm] Add stream_executor/stream.h header to pip package","body":"With stream executor code moving over to XLA, the build_pip_package( //tensorflow/tools/pip_package:build_pip_package.) bazel rule doesn't create  header in this path tensorflow/include/stream_executor/stream.h in the pip/wheel package. It only ends in tensorflow/compiler/xla/stream_executor/stream.h. This is a problem because some other libraries(example horovod) still include header from the original path and can't build\r\n\r\n**Horovod** \r\nhttps://github.com/horovod/horovod/blob/master/horovod/tensorflow/mpi_ops.cc#L59-L66\r\n\r\n**Stream.h in the original path now redirects to xla path**\r\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/stream_executor/stream.h#L19\r\n\r\n\r\n","created_at":"2022-09-21T15:21:03Z","closed_at":"2022-10-04T08:41:46Z","merged_at":"2022-10-04T08:41:46Z","user_id":4212398,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1062550368,"title":"Fixed broken link in gpu_advanced.md","body":"Fixed broken link in gpu_advanced.md at line 3 and 305. \r\n","created_at":"2022-09-21T08:51:35Z","closed_at":"2023-01-17T10:08:37Z","merged_at":null,"user_id":86464649,"sentiment":{"polarity":-0.15000000000000002,"subjectivity":0.30000000000000004}}
{"_id":1062279780,"title":"[mlir/lite] fuse dilated conv2d with fp16","body":"Fuse dilated conv2d with fp16.  \r\n\r\nBTW, I have two questions to ask:\r\n1. Why the Batch dimension should not be dynamic?\r\n2. Why the padding mode set to `SAME` when not `VALID`, I think there are some corner cases which are neither `SAME` nor `VALID`?","created_at":"2022-09-21T02:57:25Z","closed_at":"2022-10-14T18:04:17Z","merged_at":"2022-10-14T18:04:16Z","user_id":29956693,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1062194453,"title":"Update sqlite to 3.39.3","body":"This PR updates sqlite to the latest release of 3.39.3 which fixed CVE-2022-35737 in 3.39.2 (the version used in tensorflow).\r\n\r\nSee https://www.sqlite.org/cves.html for details of CVE-2022-35737\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2022-09-21T00:11:58Z","closed_at":"2022-10-26T17:34:16Z","merged_at":null,"user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1062190440,"title":"Update libpng to libpng-1.6.38","body":"libpng is one of the libraries that has not been updated for a long time. The old version 1.6.37 used by tensorflow was from 04/14/2019 (more than 3 years ago). Since then quite some issues have been fixed.\r\nhttps://github.com/glennrp/libpng/tags\r\nIt is worth to update to the latest version (1.6.38) which has been released last week to cover any fixed issues and vulnerabilities.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2022-09-21T00:04:27Z","closed_at":"2022-10-27T17:55:28Z","merged_at":"2022-10-27T17:55:28Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1061147251,"title":"Refactoring the GEMM interface","body":"This PR replaces current GEMM-related methods (dozens of them, all with 10+ arguments) in the stream executor interface with a few methods, and packs their arguments into structures. \r\nThis substantially shrinks the code and makes the interface easily extensible (if a new optional argument, like the recently added compute precision setting, needs to be passed through to stream executor, it only needs to be added to the structure definition, instead of modifying 50 function signatures.)","created_at":"2022-09-20T06:59:18Z","closed_at":"2022-12-29T13:49:02Z","merged_at":null,"user_id":12205429,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1060486357,"title":"[ROCm] GPU unit test fix for gfx90a specific failure.","body":"/cc @cheshire ","created_at":"2022-09-19T15:41:51Z","closed_at":"2022-09-27T09:42:05Z","merged_at":null,"user_id":70280935,"sentiment":{"polarity":-0.15833333333333335,"subjectivity":0.21250000000000002}}
{"_id":1059239855,"title":"[INTEL oneDNN] Revert \"Merge fused convolution code for int8 from tf.contrib's Fused…\" commit","body":"This reverts commit 5be9a59ea29470e91f2ddc5cbb96d2d8c3edf2a7, which causes oneDNN conv ops not working. ","created_at":"2022-09-17T04:02:52Z","closed_at":"2022-09-29T17:12:02Z","merged_at":null,"user_id":29215195,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1059012694,"title":"Lint TensorFlow 2.10 release notes","body":"- Fixes a few formatting and typo issues.\r\n- Spells out \"MWMS\" as `tf.distribute.MultiWorkerMirroredStrategy`.\r\n\r\n@MarkDaoust cc @mihaimaruseac ","created_at":"2022-09-16T19:15:54Z","closed_at":"2022-09-20T20:19:35Z","merged_at":"2022-09-20T20:19:35Z","user_id":19637339,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1059003578,"title":"Doc changes","body":"Did some changes #57565","created_at":"2022-09-16T19:04:16Z","closed_at":"2022-10-26T07:56:30Z","merged_at":null,"user_id":94799887,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1058844719,"title":"Modify function def that was invalid for python < 3.9","body":"The function def was invalid syntax for python <= 3.8 so modify it to be compatible","created_at":"2022-09-16T16:47:38Z","closed_at":"2022-09-17T08:33:46Z","merged_at":null,"user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1056702744,"title":"[TFTRT] Disable TF32 evaluation in BatchMatMulWeightBroadcast test cases.","body":"The tests //tensorflow/python/compiler/tensorrt/test:batch_matmul_test_gpu are flakey when evaluated on Ampere GPUs where TensorFloat32 evaluation is available because the thresholds have been calibrated assuming full float32 precision.\r\n\r\nThis PR configures the offending test cases to use full float32 precision.\r\n\r\nAttn: @bixia1 ","created_at":"2022-09-15T00:21:57Z","closed_at":"2022-10-11T17:03:51Z","merged_at":"2022-10-11T17:03:51Z","user_id":1873655,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1056388195,"title":"Update image.rot90 docstring.","body":"Updated tf.image.rot90 docstring which specified only about counter clockwise.\r\nFixes: https://github.com/tensorflow/tensorflow/issues/57551\r\nGist: https://colab.sandbox.google.com/gist/sachinprasadhs/d51ffd226a448eeb95b102ed6de7acf8/57551.ipynb","created_at":"2022-09-14T17:54:31Z","closed_at":"2022-10-14T17:37:57Z","merged_at":"2022-10-14T17:37:57Z","user_id":73069040,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1055895816,"title":"Fix typos in einsum.cc","body":"Fixed typo in lines 360, 362 and 366","created_at":"2022-09-14T11:23:16Z","closed_at":"2022-09-20T18:31:11Z","merged_at":"2022-09-20T18:31:11Z","user_id":81610181,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1055472744,"title":"Tflite runtime shakti","body":"Tensorflow Lite support for Shakti Processors and Riscv64 Architecture.","created_at":"2022-09-14T05:02:44Z","closed_at":"2022-09-30T06:26:27Z","merged_at":null,"user_id":81209388,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1055302061,"title":"Fix issues discovered during TensorRT 8.5 QA","body":"1. Fixed build with static linked TRT.\r\n2. Updated several scripts for tolerance issues.\r\n3. Fix conv weights shape when transferring to TRT when using explicit precision.\r\n4. Create holder nvinfer1::IBuilder in a custom main funciton.","created_at":"2022-09-13T23:58:07Z","closed_at":"2022-11-04T16:44:43Z","merged_at":"2022-11-04T16:44:43Z","user_id":99041270,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1055299768,"title":"[TF-TRT]: Propagate batch_dims in Gather converter","body":"For gather operations where indices is a vector, this parameter specifies how many leading dimensions in indices tensor are to be used elementwise. This wasn't propagated correctly, leading to bugs in transformer models. Fix this.\r\n\r\ncc:@tfeher, @bixia1 @DEKHTIARJonathan @pavanimajety ","created_at":"2022-09-13T23:53:08Z","closed_at":"2022-10-04T16:16:40Z","merged_at":"2022-10-04T16:16:40Z","user_id":80416898,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1055094877,"title":"[ROCm] Disable mhlo llvm.roundeven op for ROCm.","body":"The llvm.roundeven op does not work on ROCm due to LLVM issues with the AMDGPU backend related to that op.\r\n\r\n/cc @cheshire ","created_at":"2022-09-13T19:22:27Z","closed_at":"2022-09-14T18:06:26Z","merged_at":"2022-09-14T18:06:26Z","user_id":70280935,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1055049670,"title":"TfLiteCoreMlDelegateOptions doc updated #57565","body":"I tried to update the documentation ","created_at":"2022-09-13T18:32:20Z","closed_at":"2022-10-26T07:56:30Z","merged_at":null,"user_id":94799887,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1054235468,"title":"Fix hang bug with cuda_malloc_async allocator","body":"- Allocator::DeallocateRaw is called from within a stream callback to ensure stream-aware behavior. However, it is unsafe to call CUDA APIs from inside a stream callback. While BFCAllocator does not call any CUDA APIs in DeallocateRaw, the cuda_malloc and cuda_malloc_async allocators do (cuMemFree and cuMemFreeAsync), and this was observed cause hangs in several models.\r\n- This PR identifies callback-unsafe allocators and calls their DeallocateRaw method directly instead of from the stream callback (the effect is the same, but this way is safe).\r\n\r\ncc @nluehr @pjannaty ","created_at":"2022-09-13T06:25:36Z","closed_at":"2022-09-29T00:39:57Z","merged_at":null,"user_id":3979096,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1054034654,"title":"[NVIDIA TF] Enable BF16 Conv Ops","body":"This PR enables BF16 Conv ops via cuDNN or cuBLASLt.\r\n\r\nThis includes the fwd and bwd ops for the Conv2D/3D and the Depthwise Conv.\r\n\r\ncc. @nluehr @pjannaty @kushanam ","created_at":"2022-09-13T00:37:15Z","closed_at":"2022-11-15T03:59:51Z","merged_at":"2022-11-15T03:59:51Z","user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1053403653,"title":"[TF-TRT] Fix calibration with data dependent shapes","body":"A network can have tensors with data dependent shapes, and these can be also inputs for a TensorRT engine. During calibration TensorRT expects that the input data has constant shape. Previously such network crashed during calibration.\r\n\r\nThis PR implements a workaround for this case: we skip over inputs whose shape is inconsistent with the calibration profile (defined by the first input used for calibration).","created_at":"2022-09-12T14:10:27Z","closed_at":"2022-10-11T17:37:03Z","merged_at":"2022-10-11T17:37:03Z","user_id":3671106,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1052665656,"title":"Fix Lite Documentation","body":"The \"TF2\" scripts were linking to the documentation for TensorFlow 1","created_at":"2022-09-12T01:30:35Z","closed_at":"2022-09-13T18:59:40Z","merged_at":"2022-09-13T18:59:40Z","user_id":2359046,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1051936759,"title":"[XLA] Speed up col reduction for dtype smaller then 32 bits.","body":"It was optimized for float32. Now that we frequently use f16, bf16 and sometimes int8, we need to update it.\r\nThis speed up the following kernel on V100 from 860us to 631us.\r\n\r\n```\r\nregion_0.18.clone {\r\n  Arg_0.0 = f32[] parameter(0)\r\n  Arg_1.0 = f32[] parameter(1)\r\n  ROOT add.0 = f32[] add(Arg_0.0, Arg_1.0)\r\n}\r\nfused_computation.1 {\r\n  param_0.4 = bf16[32,16,512,512]{3,2,1,0} parameter(0)\r\n  convert.31 = f32[32,16,512,512]{3,2,1,0} convert(param_0.4)\r\n  constant_1 = f32[] constant(0)\r\n  ROOT reduce.0 = f32[16,512,512]{2,1,0} reduce(convert.31, constant_1), dimensions={0}, to_apply=region_0.18.clone\r\n}\r\nENTRY main {\r\n Arg_3.4 = bf16[32,16,512,512]{3,2,1,0} parameter(0)\r\n ROOT fusion.1 = f32[16,512,512]{2,1,0} fusion(Arg_3.4), kind=kInput, calls=fused_computation.1\r\n}\r\n```\r\n\r\n@cheshire ","created_at":"2022-09-09T19:31:40Z","closed_at":"2022-09-28T22:38:42Z","merged_at":"2022-09-28T22:38:42Z","user_id":180987,"sentiment":{"polarity":0.0,"subjectivity":0.5}}
{"_id":1051840151,"title":"[mhlo] add missing dependency","body":"hlo_utils.cc creates `chlo::ConstantLikeOp` ops, thus requiring that\r\nChloOps be linked into the MLIRMhloUtils library.","created_at":"2022-09-09T17:34:30Z","closed_at":"2022-09-19T22:10:29Z","merged_at":"2022-09-19T22:10:29Z","user_id":19678,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":1051836864,"title":"[oneDNN][Bug-Fix] Fix unit test failure //tensorflow/python/grappler:remapper_test","body":"This PR fixes some bug in the remapper, when `TF_ENABLE_ONEDNN_OPTS=1`. Currently, oneDNN based `_FusedMatMul` op-kernel does not support `transpose_a=True`. We disable fusion in the remapper when there is no op-kernel on CPU with `transpose_a=True`.\r\n\r\nThanks to this PR https://github.com/tensorflow/tensorflow/pull/56827 as the bug was caught in this PR.","created_at":"2022-09-09T17:30:46Z","closed_at":"2022-09-30T19:01:14Z","merged_at":"2022-09-30T19:01:14Z","user_id":27521767,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":1051832583,"title":"[XLA] When dumping the html files, also dump a version without the fusion details.","body":"It allows to not dump the fusion internal.\r\n\r\nThis WAR the issue that \"too big\" HTML files aren't rendered by the browser.\r\nWe can manually look at the txt hlo to see the inside of the fusion.\r\n\r\n@cheshire ","created_at":"2022-09-09T17:24:55Z","closed_at":"2022-11-03T12:23:28Z","merged_at":"2022-11-03T12:23:28Z","user_id":180987,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1051119921,"title":"Updated depreciated api  of tf.QueueBase","body":"Updated depreciated api  of tf.QueueBase  with tf.queue.QueueBase at line 220, 222,400,418,420","created_at":"2022-09-09T05:22:08Z","closed_at":"2022-09-12T19:08:49Z","merged_at":"2022-09-12T19:08:49Z","user_id":86464649,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1050986322,"title":"Extended Pattern Matching for Unary XLA Ops","body":"Introduces a `UnaryOpAnyOfOrOperand` pattern which enables the matching of multiple unary XLA ops in a single Match call.","created_at":"2022-09-09T01:03:41Z","closed_at":"2022-09-22T11:56:32Z","merged_at":"2022-09-22T11:56:32Z","user_id":80296164,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1050646919,"title":"TFLite documentation fix","body":"The text printed along with results was changed in commit 48598dddf7a35471fb9dff431652df56306e1ad0.\r\n\r\nThe string that this document tells users to grep for will no longer work. This change fixes that problem, and replaces the grep string with one that will work with the new result message.","created_at":"2022-09-08T17:58:31Z","closed_at":"2022-09-12T23:33:19Z","merged_at":"2022-09-12T23:33:19Z","user_id":2359046,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1050461775,"title":"Re-enable FusionBitcastLift","body":"George and Rahul doesn't find issue with it now.\r\n\r\n@cheshire @codedivine","created_at":"2022-09-08T15:24:14Z","closed_at":"2022-09-14T03:43:43Z","merged_at":"2022-09-14T03:43:43Z","user_id":180987,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1049272202,"title":"[ROCm]: Add DLPack support for ROCm","body":"Add DLPack support for ROCm in XLA and Tensorflow Eager","created_at":"2022-09-07T22:12:20Z","closed_at":"2022-10-28T13:12:52Z","merged_at":"2022-10-28T13:12:52Z","user_id":4212398,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1049169178,"title":"Improving handling of data passed from input_fn.","body":"The improvement of `TrtGraphConverterV2::_convert_to_tensor()` allows you to pass a single object that will be converted to a tensor. Before that function expected the input parameters to be a list, tuple, or dictionary.\r\n\r\nA related example has been added to the docstring `TrtGraphConverterV2::build(self, input_fn)`\r\n","created_at":"2022-09-07T20:00:58Z","closed_at":"2022-09-21T23:18:03Z","merged_at":"2022-09-21T23:18:03Z","user_id":32910461,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1048942442,"title":"Fix code_check_full fails on aarch64","body":"Fixes https://github.com/tensorflow/tensorflow/issues/57637","created_at":"2022-09-07T15:43:57Z","closed_at":"2022-11-03T12:25:31Z","merged_at":"2022-11-03T12:25:31Z","user_id":10442001,"sentiment":{"polarity":-0.5,"subjectivity":0.3}}
{"_id":1048618883,"title":"Create toolchain for AARCH64 builds in Docker container","body":"A new docker container was needed to provide a toolchain with DUAL_ABI enabled for manylinux2014_aarch64","created_at":"2022-09-07T11:10:23Z","closed_at":"2022-12-15T18:22:10Z","merged_at":"2022-12-15T18:22:10Z","user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1048076177,"title":"Build nighlty with GCS cache","body":"Test if we are able to compile (and monitor the required time) to build TF CPU on the GitHub Action free resources using the nightly GCS cache.\r\n\r\nThis a good proxy to verify the setup a contributor could use to prepare and test locally a PR.\r\n\r\nThis is a follow-up of https://github.com/tensorflow/build/pull/48 as the CI files was removed from that repository.\r\n\r\n/cc @angerson  @perfinion @learning-to-play @mihaimaruseac @theadactyl ","created_at":"2022-09-06T22:21:00Z","closed_at":"2022-10-27T23:21:40Z","merged_at":null,"user_id":1710528,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1048025551,"title":"activating experimental 64 bit indexing","body":"Activating experimental 64 bit index for the atanh \r\nCC: @frgossen for review","created_at":"2022-09-06T21:05:35Z","closed_at":"2022-09-19T19:45:50Z","merged_at":"2022-09-19T19:45:50Z","user_id":42385577,"sentiment":{"polarity":0.1,"subjectivity":0.4}}
{"_id":1047989535,"title":"[oneDNN] [tfg] [remapper] Add Mish MLIR fusion","body":"This PR enables following fusion:\r\n\r\n- Mish ( Softplus, Tanh, Mul)","created_at":"2022-09-06T20:21:54Z","closed_at":"2022-11-02T05:27:44Z","merged_at":"2022-11-02T05:27:44Z","user_id":42224278,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1046903238,"title":"[FIX] Fix integer overflow in XLA nccl thunks","body":"Change `int` to `int64_t` to prevent integer overflow in XLA NCCL thunks","created_at":"2022-09-05T22:38:33Z","closed_at":"2022-09-08T10:21:15Z","merged_at":"2022-09-08T10:21:14Z","user_id":15100009,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1046112815,"title":"Fixed a golden error in floor_div_test","body":"Signed-off-by: Chen Xin <jack.chen@verisilicon.com>","created_at":"2022-09-05T09:15:58Z","closed_at":"2022-09-06T07:50:30Z","merged_at":null,"user_id":57057788,"sentiment":{"polarity":0.2,"subjectivity":0.35}}
{"_id":1045332537,"title":"Update estimator and keras version in TF 2.10 branch for 2.10.0.","body":null,"created_at":"2022-09-02T22:59:11Z","closed_at":"2022-09-02T22:59:55Z","merged_at":"2022-09-02T22:59:55Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1045313319,"title":"Update version numbers for TensorFlow 2.10.0","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 10 -> 10\nPatch: 0 -> 0\n\nNo lingering old version strings \"2.10.0-rc3\" found in source directory \n\"tensorflow/\". Good.\nNo lingering old version strings \"2.10.0rc3\" found in source directory \n\"tensorflow/\". Good.\n```","created_at":"2022-09-02T22:13:33Z","closed_at":"2022-09-02T22:28:58Z","merged_at":"2022-09-02T22:28:58Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1044350037,"title":"Fix the build r2.8","body":"Disable 'conv_utils_test '","created_at":"2022-09-01T23:36:54Z","closed_at":"2022-09-07T22:35:52Z","merged_at":null,"user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1044344600,"title":"Fix the build r2.8","body":"Disable test\r\n\"slice_op_test\" & \"slice_op_test_gpu\"","created_at":"2022-09-01T23:29:46Z","closed_at":"2022-09-07T22:36:05Z","merged_at":null,"user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1044316847,"title":"Fix the build r2.7","body":null,"created_at":"2022-09-01T23:06:20Z","closed_at":"2022-09-07T22:36:12Z","merged_at":null,"user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1044281330,"title":"Fix the build r2.7","body":"Disabling the test 'slice_op_test'","created_at":"2022-09-01T22:12:06Z","closed_at":"2022-09-07T22:36:24Z","merged_at":null,"user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1044254163,"title":"Fix the build r2.7","body":"Disabling the test pad_op_test, scan_ops_test, split_op_test","created_at":"2022-09-01T21:35:23Z","closed_at":"2022-09-07T22:36:51Z","merged_at":null,"user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1044089634,"title":"Fix conflict resolution error","body":"Signed-off-by: Mihai Maruseac <mihaimaruseac@google.com>","created_at":"2022-09-01T18:33:36Z","closed_at":"2022-09-01T18:34:47Z","merged_at":"2022-09-01T18:34:47Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1044089168,"title":"[TFTRT] Additional ConvertPool validation","body":"Add additional validation for TRT failure cases for `ConvertPool` and `ConvertPool3D`, so that failing nodes will not be converted.","created_at":"2022-09-01T18:33:04Z","closed_at":"2022-09-22T16:48:12Z","merged_at":"2022-09-22T16:48:12Z","user_id":86808158,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1044087835,"title":"[TF-TRT] CUDA Lazy Loading Warning Filtered","body":"Add an extra substring to filter CUDA Lazy Loading Warning Messages in TRT 8.5","created_at":"2022-09-01T18:31:25Z","closed_at":"2022-09-09T13:33:38Z","merged_at":"2022-09-09T13:33:38Z","user_id":10923599,"sentiment":{"polarity":-0.25,"subjectivity":1.0}}
{"_id":1044074924,"title":"Fix build on r2.8","body":"This is caused by bad merge conflict resolution, duplicate lines with old and new API were left in the code.\r\n\r\nSigned-off-by: Mihai Maruseac <mihaimaruseac@google.com>","created_at":"2022-09-01T18:16:28Z","closed_at":"2022-09-01T18:22:43Z","merged_at":"2022-09-01T18:22:43Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1044065349,"title":"[TF-TRT]: Revert default dynamic shape strategy to Range","body":"Revert \"Make default dynamic shape profile strategy to implicit batch compatible\"\r\n\r\nCurrently, the ImplicitBatchModeCompatible strategy creates profiles with the\r\nassumption that the first dim is always the batch dim. This does not necessarily\r\nhold for TRTEngineOps deeper in the graph, therefore we cannot simply override\r\ndim 0 for all the min values. We have a case where this leads to inconsistent\r\nprofiles and engine creation failure in certain BERT networks.\r\n\r\nThe Range profile strategy does not have this issue, so revert to using\r\nRange as the default.\r\n\r\nThis reverts commit 0737efbe374b2bc89134f153d54a45af6811592a.\r\n\r\ncc: @tfeher @bixia1 @DEKHTIARJonathan ","created_at":"2022-09-01T18:07:46Z","closed_at":"2022-09-12T18:27:57Z","merged_at":"2022-09-12T18:27:56Z","user_id":80416898,"sentiment":{"polarity":0.0,"subjectivity":0.16666666666666666}}
{"_id":1044062084,"title":"Pin protobuf.","body":"See https://github.com/tensorflow/tensorflow/releases/tag/v2.9.1\r\n\r\nSigned-off-by: Mihai Maruseac <mihaimaruseac@google.com>","created_at":"2022-09-01T18:04:34Z","closed_at":"2022-09-01T18:04:52Z","merged_at":"2022-09-01T18:04:52Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1043992183,"title":"Refactoring of the CombinedNMS converter.","body":"Combining two pairs of converters and test procedures:\r\n```\r\nStatus ConvertCombinedNMS(const OpConverterParams* params)\r\nTEST_P(OpConverter_FP32_Test, ConvertCombinedNMS)\r\n```\r\nwhich were written, respectively, for\r\n```\r\n#if IS_TRT_VERSION_GE(8, 2, 1, 6) || defined(TF_TRT_USE_EFFICIENT_NMS_PLUGIN)\r\n....\r\n#elif IS_TRT_VERSION_GE(7, 1, 3, 0)\r\n```\r\nThe new code is almost 200 lines shorter, easier to maintain and to rewrite via  `OpConverterBase`.\r\n","created_at":"2022-09-01T16:53:07Z","closed_at":"2022-09-14T00:32:57Z","merged_at":"2022-09-14T00:32:57Z","user_id":32910461,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1043832579,"title":"Prevent actions from running in forks","body":"Forks of the main repo do not have the resources or\r\ncredentials for running the Actions, so bail when\r\nthat is attempted","created_at":"2022-09-01T14:40:00Z","closed_at":"2022-09-07T15:35:59Z","merged_at":"2022-09-07T15:35:58Z","user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1043798732,"title":"Fix compilation and linking of compiler/xla/runtime:custom_call_test","body":"Failure was\r\n`ERROR: /home/builder/1/tensorflow_build/tensorflow-git/tensorflow/compiler/xla/runtime/BUILD:45:11: Compiling tensorflow/compiler/xla/runtime/async_runtime.cc failed: undeclared inclusion(s) in rule '//tensorflow/compiler/xla/runtime:async_runtime':\r\nthis rule is missing dependency declarations for the following files included by 'tensorflow/compiler/xla/runtime/async_runtime.cc':\r\n  'external/com_google_absl/absl/status/status.h'\r\n  'external/com_google_absl/absl/status/internal/status_internal.h'\r\nTarget //tensorflow/compiler/xla/runtime:custom_call_test failed to build\r\n`\r\nAfter fixing that it failed with\r\n`ERROR: /home/builder/1/tensorflow_build/tensorflow-git/tensorflow/compiler/xla/runtime/BUILD:102:11: Linking tensorflow/compiler/xla/runtime/custom_call_test failed: (Exit 1): gcc failed: error executing command \r\n  (cd /home/builder/.cache/bazel/_bazel_builder/9dc2dbd69dc3512cedb530e1521082e7/execroot/org_tensorflow && \\\r\n  exec env - \\\r\n    LD_LIBRARY_PATH=/usr/local/lib64:/usr/local/lib \\\r\n    PATH=/home/builder/.cache/bazelisk/downloads/bazelbuild/bazel-5.3.0-linux-arm64/bin:/home/builder/1/tensorflow_build/venv_py38/bin:/home/builder/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin \\\r\n    PWD=/proc/self/cwd \\\r\n    PYTHON_BIN_PATH=/home/builder/1/tensorflow_build/venv_py38/bin/python3 \\\r\n    PYTHON_LIB_PATH=/home/builder/1/tensorflow_build/venv_py38/lib/python3.8/site-packages \\\r\n    TF2_BEHAVIOR=1 \\\r\n  /usr/local/bin/gcc @bazel-out/aarch64-opt/bin/tensorflow/compiler/xla/runtime/custom_call_test-2.params)\r\n# Configuration: 6a157ea5430c4f8c0216a3c013aa8930b2449e788f4e52217225891817f5290a\r\n# Execution platform: @local_execution_config_platform//:platform\r\nbazel-out/aarch64-opt/bin/_solib_aarch64/libtensorflow_Scompiler_Sxla_Smlir_Stransforms_Sruntime_Slibjit_Ucompiler.so: error: undefined reference to 'LLVMInitializeAArch64AsmParser'\r\nbazel-out/aarch64-opt/bin/_solib_aarch64/libtensorflow_Scompiler_Sxla_Smlir_Stransforms_Sruntime_Slibjit_Ucompiler.so: error: undefined reference to 'LLVMInitializeAArch64AsmPrinter'\r\nbazel-out/aarch64-opt/bin/_solib_aarch64/libtensorflow_Scompiler_Sxla_Smlir_Stransforms_Sruntime_Slibjit_Ucompiler.so: error: undefined reference to 'LLVMInitializeAArch64TargetMC'\r\nbazel-out/aarch64-opt/bin/_solib_aarch64/libtensorflow_Scompiler_Sxla_Smlir_Stransforms_Sruntime_Slibjit_Ucompiler.so: error: undefined reference to 'LLVMInitializeAArch64Target'\r\nbazel-out/aarch64-opt/bin/_solib_aarch64/libtensorflow_Scompiler_Sxla_Smlir_Stransforms_Sruntime_Slibjit_Ucompiler.so: error: undefined reference to 'LLVMInitializeAArch64TargetInfo'\r\ncollect2: error: ld returned 1 exit status\r\nTarget //tensorflow/compiler/xla/runtime:custom_call_test failed to build\r\n`","created_at":"2022-09-01T14:14:23Z","closed_at":"2022-09-16T08:21:27Z","merged_at":null,"user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1043676568,"title":"Update Embedded Linux toolchains to GCC 11.3.1","body":"This PR upgrades the [Embedded Linux toolchains](https://github.com/tensorflow/tensorflow/blob/4cfeb0e3eb6027f95a3be624041c7331dee98911/.bazelrc#L81-L84) from the discontinued ARM GCC 8.3 toolchain to the latest [GCC 11.3.1 based release](https://developer.arm.com/downloads/-/arm-gnu-toolchain-downloads).\r\n\r\nThis PR fixes #57364 which would be great to back-port to the 2.10 release candidates as well.\r\n\r\n/cc @sachinprasadhs @arfaian","created_at":"2022-09-01T12:40:38Z","closed_at":"2022-12-30T00:15:35Z","merged_at":"2022-12-30T00:15:35Z","user_id":13285808,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1043221593,"title":"Updated Documentation on CoreML delegate","body":"Updated Documentation on CoreML delegate as mentioned in #57565","created_at":"2022-09-01T05:19:53Z","closed_at":"2022-12-22T14:38:21Z","merged_at":"2022-12-22T14:38:21Z","user_id":86464649,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1043138234,"title":"Fix the build","body":"Fix the build","created_at":"2022-09-01T02:53:28Z","closed_at":"2022-09-01T03:08:18Z","merged_at":"2022-09-01T03:08:18Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1043129235,"title":"Fix the build","body":"Fix the build","created_at":"2022-09-01T02:34:50Z","closed_at":"2022-09-01T02:36:37Z","merged_at":"2022-09-01T02:36:37Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1042882747,"title":"Fix invalid conflict resolution","body":"Signed-off-by: Mihai Maruseac <mihaimaruseac@google.com>","created_at":"2022-08-31T21:27:11Z","closed_at":"2022-08-31T21:28:45Z","merged_at":"2022-08-31T21:28:45Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1042876433,"title":"Fix build on r2.7","body":"Signed-off-by: Mihai Maruseac <mihaimaruseac@google.com>","created_at":"2022-08-31T21:19:52Z","closed_at":"2022-08-31T21:20:33Z","merged_at":"2022-08-31T21:20:33Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1042876271,"title":"Fix build on r2.8","body":"Signed-off-by: Mihai Maruseac <mihaimaruseac@google.com>","created_at":"2022-08-31T21:19:41Z","closed_at":"2022-08-31T21:20:37Z","merged_at":"2022-08-31T21:20:37Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1042865937,"title":"Fix build error","body":null,"created_at":"2022-08-31T21:07:45Z","closed_at":"2022-08-31T21:10:24Z","merged_at":"2022-08-31T21:10:24Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1042858123,"title":"[TF-TRT] Allow `bool` dtype as IO of TRTEngineOps","body":"This PR allows `bool` dtype as input or output dtype of `TRTEngineOp`.","created_at":"2022-08-31T20:59:10Z","closed_at":"2022-09-07T19:14:24Z","merged_at":"2022-09-07T19:14:24Z","user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1042853863,"title":"[TFTRT]: Remove shape optimization profile WAR for new TRT versions","body":"In dynamic shape mode, if an input shape value tensor has min=opt=max profiles, then TRT 7 prunes this tensor from the network (since its value could be deduced from the profile). TF-TRT introduced `FixShapeValueProfile` to modify the profiles which prevented TRT from pruning these inputs.\r\n\r\nThis workaround is not necessary in TRT8, and actually can be harmful, because it can lead to inconsistent input profiles. Remove this WAR for newer versions of TRT.\r\n","created_at":"2022-08-31T20:54:04Z","closed_at":"2022-09-09T13:35:34Z","merged_at":"2022-09-09T13:35:33Z","user_id":80416898,"sentiment":{"polarity":0.13636363636363635,"subjectivity":0.45454545454545453}}
{"_id":1042769921,"title":"Document PR life cycle","body":"Fixes Github https://github.com/tensorflow/tensorflow/issues/33802","created_at":"2022-08-31T19:27:31Z","closed_at":"2022-09-07T18:46:26Z","merged_at":"2022-09-07T18:46:26Z","user_id":42785357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1042750848,"title":"Update curl to 7.85.0","body":"\r\nThis PR updates curl to 7.85.0 (7.85.0 covers the following vulnerabilities):\r\n\r\nCVE-2022-35252: control code in cookie denial of service\r\n\r\nSee https://curl.se/docs/security.html for details\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2022-08-31T19:05:55Z","closed_at":"2022-09-14T03:22:51Z","merged_at":"2022-09-14T03:22:51Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1042726036,"title":"Fix year in sqlite","body":null,"created_at":"2022-08-31T18:40:04Z","closed_at":"2022-08-31T18:40:32Z","merged_at":"2022-08-31T18:40:32Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1042598622,"title":"Fix curl cherrypick","body":null,"created_at":"2022-08-31T16:17:27Z","closed_at":"2022-08-31T16:18:14Z","merged_at":"2022-08-31T16:18:14Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1042571714,"title":"Add ordered sparse index validation.","body":"Option to check that the indices tensor is lexicographically ordered,\r\nwhich is required by some ops.\r\n\r\nPiperOrigin-RevId: 460978686","created_at":"2022-08-31T15:53:10Z","closed_at":"2022-08-31T15:54:06Z","merged_at":"2022-08-31T15:54:06Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1042562369,"title":"Fix the sqlite cherrypick","body":null,"created_at":"2022-08-31T15:43:53Z","closed_at":"2022-08-31T15:44:53Z","merged_at":"2022-08-31T15:44:53Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1042560083,"title":"Add index check to ValidateSparseTensor.","body":"The validation check now verifies all index entries are within correct bounds.\r\nThis is to prevent memory access errors.\r\n\r\nPiperOrigin-RevId: 450695916","created_at":"2022-08-31T15:42:06Z","closed_at":"2022-08-31T15:43:12Z","merged_at":"2022-08-31T15:43:12Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1041662283,"title":"Add ordered sparse index validation.","body":"Option to check that the indices tensor is lexicographically ordered,\r\nwhich is required by some ops.\r\n\r\nPiperOrigin-RevId: 460978686","created_at":"2022-08-31T00:25:24Z","closed_at":"2022-08-31T15:26:53Z","merged_at":"2022-08-31T15:26:53Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1041644275,"title":"Add index check to ValidateSparseTensor.","body":"The validation check now verifies all index entries are within correct bounds.\r\nThis is to prevent memory access errors.\r\n\r\nPiperOrigin-RevId: 450695916","created_at":"2022-08-31T00:07:31Z","closed_at":"2022-08-31T00:17:05Z","merged_at":"2022-08-31T00:17:05Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1041621491,"title":"Add ordered sparse index validation.","body":"Option to check that the indices tensor is lexicographically ordered,\r\nwhich is required by some ops.\r\n\r\nPiperOrigin-RevId: 460978686","created_at":"2022-08-30T23:44:42Z","closed_at":"2022-08-30T23:51:46Z","merged_at":"2022-08-30T23:51:46Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1041584342,"title":"Revert \"Add ordered sparse index validation.\"","body":"Reverts tensorflow/tensorflow#57542","created_at":"2022-08-30T23:07:37Z","closed_at":"2022-08-30T23:08:10Z","merged_at":"2022-08-30T23:08:10Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1041537832,"title":"Add index check to ValidateSparseTensor.","body":"The validation check now verifies all index entries are within correct bounds.\r\nThis is to prevent memory access errors.\r\n\r\nPiperOrigin-RevId: 450695916","created_at":"2022-08-30T22:26:22Z","closed_at":"2022-08-30T23:17:18Z","merged_at":"2022-08-30T23:17:17Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1041489750,"title":"Add ordered sparse index validation.","body":"Option to check that the indices tensor is lexicographically ordered,\r\nwhich is required by some ops.\r\n\r\nPiperOrigin-RevId: 460978686","created_at":"2022-08-30T21:27:46Z","closed_at":"2022-08-30T21:58:11Z","merged_at":"2022-08-30T21:58:11Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1041447953,"title":"r2.7 cherry-pick: 5c089662eb7 \"Add ValidateSparseTensor function to sparse_utils.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/5c089662eb7cd1abb76f0687bca8c4f64d8e1fdf","created_at":"2022-08-30T20:45:31Z","closed_at":"2022-08-30T20:45:57Z","merged_at":"2022-08-30T20:45:57Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1041411782,"title":"r2.8 cherry-pick: 5c089662eb7 \"Add ValidateSparseTensor function to sparse_utils.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/5c089662eb7cd1abb76f0687bca8c4f64d8e1fdf","created_at":"2022-08-30T20:09:00Z","closed_at":"2022-08-30T20:09:27Z","merged_at":"2022-08-30T20:09:27Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1041325160,"title":"r2.9 cherry-pick: 5c089662eb7 \"Add ValidateSparseTensor function to sparse_utils.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/5c089662eb7cd1abb76f0687bca8c4f64d8e1fdf","created_at":"2022-08-30T18:29:31Z","closed_at":"2022-08-30T18:32:49Z","merged_at":"2022-08-30T18:32:49Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1041268604,"title":"Fix duplicate nodes as a result of graph freezing","body":"Updates `_ResourceGather.convert_variable_to_constant` to avoid adding duplicate constant nodes on repeated calls, modifying the existing node instead.","created_at":"2022-08-30T17:25:54Z","closed_at":"2022-09-01T14:54:29Z","merged_at":"2022-09-01T14:54:29Z","user_id":86808158,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1041048874,"title":"[mhlo] fix segfault from dereferencing a non-existent value","body":"This patch fixes a runtime segfault caused by calling `value()` on\r\noptional types in the predicate of `if` statements.  This patch replaces\r\nthe predicates with `has_value()` so that dereferencing the values later\r\nis safe.\r\n\r\nThanks to @fortianyou for diagnosing the problem!\r\n\r\ncc: @burmako","created_at":"2022-08-30T14:11:01Z","closed_at":"2022-09-08T00:54:38Z","merged_at":"2022-09-08T00:54:38Z","user_id":19678,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1040445068,"title":"[tosa] Add legalization for TF/TFL conv3d","body":"TFL doesn't have quantized implementation support for conv3d at the moment, only floating is supported in this patch.\r\n","created_at":"2022-08-30T04:34:08Z","closed_at":"2022-10-13T17:07:49Z","merged_at":"2022-10-13T17:07:49Z","user_id":78814694,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1040442770,"title":"[tosa] Add legalization for TFL gelu","body":null,"created_at":"2022-08-30T04:30:09Z","closed_at":"2022-10-05T18:21:38Z","merged_at":"2022-10-05T18:21:38Z","user_id":78814694,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1040354288,"title":"Removing the names of nodes from parameter lists.","body":"The current `name` parameter in use, which is passed to the following methods\r\n```\r\nvoid TestOpConverterMultiOut(const string& name, const NodeDef node_def, ...\r\nvoid TestOpConverter(const string& name, const NodeDef node_def, ...\r\n```\r\nof `ParameterizedOpConverterTestBase` class is redundant, as its value must always be equal to `node_def.name()`.\r\n\r\nThis PR removes this redundancy.\r\n\r\nSome minor changes in macros:\r\n- removing duplicate macros;\r\n- improving macros that report errors.","created_at":"2022-08-30T01:31:00Z","closed_at":"2022-09-01T15:35:56Z","merged_at":"2022-09-01T15:35:56Z","user_id":32910461,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1040326405,"title":"[oneDNN][grappler:remapper] Bug fix: LeakyRelu in the fusion: Pad + Conv3D + <BiasAdd> + Activation","body":"This PR fixes a bug in grappler remapper fusion (Pad + Conv3D + BiasAdd + Activation). The fusion happens in two stages:\r\n\r\n1. Conv3D + BiasAdd + Activation --> _FusedConv3D\r\n2. Pad + _FusedConv3D --> _FusedConv3D\r\n\r\nAt the second stage, we need to copy all attributes from _FusedConv3D obtained from the first stage. However, currently it misses some of the attributes (for example, leaky-relu has leakyrelu_alpha attribute). This PR fixes this bug copying all the attributes from the first stage.","created_at":"2022-08-30T00:30:52Z","closed_at":"2022-09-14T22:45:40Z","merged_at":"2022-09-14T22:45:40Z","user_id":27521767,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1040213335,"title":"Update tf.math.tan dtypes.","body":"Updated the tf.math.tan dtypes to the supported dtypes.\r\nFixes: https://github.com/tensorflow/tensorflow/issues/57192","created_at":"2022-08-29T21:22:30Z","closed_at":"2022-11-15T19:28:39Z","merged_at":null,"user_id":73069040,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1040130775,"title":"Update version numbers for TensorFlow 2.9.2","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 9 -> 9\nPatch: 1 -> 2\n\nNo lingering old version strings \"2.9.1\" found in source directory \n\"tensorflow/\". Good.\nNo lingering old version strings \"2.9.1\" found in source directory \n\"tensorflow/\". Good.\n```","created_at":"2022-08-29T19:46:40Z","closed_at":"2022-08-29T19:56:47Z","merged_at":"2022-08-29T19:56:47Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1040130563,"title":"Update version numbers for TensorFlow 2.8.3","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 8 -> 8\nPatch: 2 -> 3\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.8.2\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\nBinary file tensorflow/core/lib/psnr/testdata/cat_q72.jpg matches\nBinary file tensorflow/core/lib/psnr/testdata/cat_q20.jpg matches\nBinary file tensorflow/core/lib/psnr/testdata/cat_q95.jpg matches\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.8.2\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\nBinary file tensorflow/core/lib/psnr/testdata/cat_q72.jpg matches\nBinary file tensorflow/core/lib/psnr/testdata/cat_q20.jpg matches\nBinary file tensorflow/core/lib/psnr/testdata/cat_q95.jpg matches\n```","created_at":"2022-08-29T19:46:24Z","closed_at":"2022-08-29T19:49:15Z","merged_at":"2022-08-29T19:49:15Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1040124880,"title":"Update release notes with security updates","body":"Update release notes with security updates","created_at":"2022-08-29T19:40:09Z","closed_at":"2022-08-29T19:40:36Z","merged_at":"2022-08-29T19:40:36Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1040082163,"title":"Update release notes for TensorFlow 2.9.2","body":"This PR is intentionally incomplete. One of the Release Owners for 2.9.2\nneeds to fill in the internal release notes for this version before the PR gets\nsubmitted. Click on the :pencil2: icon in the header for `RELEASE.md` under\n\"Files Changed\" above.","created_at":"2022-08-29T18:53:20Z","closed_at":"2022-08-29T19:38:33Z","merged_at":"2022-08-29T19:38:33Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1040081708,"title":"Update release notes for TensorFlow 2.8.3","body":"This PR is intentionally incomplete. One of the Release Owners for 2.8.3\nneeds to fill in the internal release notes for this version before the PR gets\nsubmitted. Click on the :pencil2: icon in the header for `RELEASE.md` under\n\"Files Changed\" above.","created_at":"2022-08-29T18:52:47Z","closed_at":"2022-08-29T19:38:36Z","merged_at":"2022-08-29T19:38:36Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1040077819,"title":"Update version numbers for TensorFlow 2.7.4","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 7 -> 7\nPatch: 3 -> 4\n\nNo lingering old version strings \"2.7.3\" found in source directory \n\"tensorflow/\". Good.\nNo lingering old version strings \"2.7.3\" found in source directory \n\"tensorflow/\". Good.\n```","created_at":"2022-08-29T18:48:08Z","closed_at":"2022-08-29T18:51:02Z","merged_at":"2022-08-29T18:51:02Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1040060059,"title":"Fixes tensorflow/tensorflow#57390","body":null,"created_at":"2022-08-29T18:28:15Z","closed_at":"2022-11-23T07:03:51Z","merged_at":"2022-11-23T07:03:50Z","user_id":41478302,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1040024589,"title":"Update release notes for TensorFlow 2.7.4","body":"This PR is intentionally incomplete. One of the Release Owners for 2.7.4\nneeds to fill in the internal release notes for this version before the PR gets\nsubmitted. Click on the :pencil2: icon in the header for `RELEASE.md` under\n\"Files Changed\" above.","created_at":"2022-08-29T17:54:59Z","closed_at":"2022-08-29T18:38:44Z","merged_at":"2022-08-29T18:38:44Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1039941242,"title":"[mhlo] add `target_include_directories()` for Stablehlo","body":"Without this patch, downstream users of Stablehlo cannot include\r\n`stablehlo/dialect/Base.h` or tablegen'd files like\r\n`BaseAttrInterfaces.h.inc`.","created_at":"2022-08-29T16:38:12Z","closed_at":"2022-09-04T14:46:58Z","merged_at":null,"user_id":19678,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1038917228,"title":"[mhlo] build: fix missing dependencies on Chlo and Stablehlo","body":"These dependencies are not necessarily exposed in a parallel build.","created_at":"2022-08-28T16:34:37Z","closed_at":"2022-08-31T21:56:19Z","merged_at":null,"user_id":19678,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":1038676436,"title":"Add lambda support in loop","body":"Recover:\nhttps://github.com/tensorflow/tensorflow/pull/56119\n\nCause Rollback:\nhttps://github.com/tensorflow/tensorflow/commit/f36b1f5d447577df3b87af59b4dd1415ac35b3ba\n","created_at":"2022-08-27T17:32:38Z","closed_at":"2022-09-26T21:13:47Z","merged_at":"2022-09-26T21:13:46Z","user_id":1710528,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1038435619,"title":"[NVIDIA TF] Bump up cuDNN frontend to v0.7","body":"This PR bumps up the cuDNN frontend to the latest v0.7.1 ([release note](https://github.com/NVIDIA/cudnn-frontend/releases/tag/v0.7.1)). The v0.7.1 can better support the latest cuDNN v8.5 and has improved its forward compatibility support for 8.x.\r\n\r\nAlso, v0.7.1 has applied a unified API names to improve the user experience. And we substitute new APIs for the deprecated ones in this PR.\r\n\r\ncc. @nluehr @pjannaty ","created_at":"2022-08-26T23:09:18Z","closed_at":"2022-09-02T01:23:20Z","merged_at":"2022-09-02T01:23:20Z","user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1038423972,"title":"Apply `PyArray_Check` in `FillStringBufferWithPyArray` to avoid a har…","body":"…d crash when user pass in a TF eager tensor as input.\r\n\r\nPiperOrigin-RevId: 468345159","created_at":"2022-08-26T22:40:28Z","closed_at":"2022-08-26T22:42:27Z","merged_at":"2022-08-26T22:42:27Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1038418206,"title":"Apply `PyArray_Check` in `FillStringBufferWithPyArray` to avoid a har…","body":"…d crash when user pass in a TF eager tensor as input.\r\n\r\nPiperOrigin-RevId: 468345159","created_at":"2022-08-26T22:27:45Z","closed_at":"2022-08-26T22:28:14Z","merged_at":"2022-08-26T22:28:14Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1038416352,"title":"Apply `PyArray_Check` in `FillStringBufferWithPyArray` to avoid a har…","body":"…d crash when user pass in a TF eager tensor as input.\r\n\r\nPiperOrigin-RevId: 468345159","created_at":"2022-08-26T22:24:01Z","closed_at":"2022-08-26T22:25:00Z","merged_at":"2022-08-26T22:25:00Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1038021306,"title":"Add cpp version info/flag","body":"https://github.com/tensorflow/tensorflow/commit/8ea5ed0c392b329a3e0481a3f1f7b0ca86821b84#commitcomment-82094699 /cc @mihaimaruseac \r\n\r\n- [x] Expose in the wrapper/python","created_at":"2022-08-26T14:19:05Z","closed_at":"2022-08-30T21:31:04Z","merged_at":"2022-08-30T21:31:04Z","user_id":1710528,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1037792033,"title":"r2.10 cherry-pick: b5f6fbfba76 \"Re-enable testTensorListReserveWithNonScalarNumElements to work with mlir as well.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/b5f6fbfba76576202b72119897561e3bd4f179c7","created_at":"2022-08-26T10:25:00Z","closed_at":"2022-08-26T15:05:22Z","merged_at":"2022-08-26T15:05:22Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1037488218,"title":"Update all lite modules with `overriablefetchcontent` with correct CMake include","body":"Playing with the project for [ConanCenter](https://github.com/conan-io/conan-center-index) I found this include was missing is some of Lite's CMake modules (they were ~50% added)\r\n\r\nAll the files call the function\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/4bfe5240068d57cb586f2c282c1ce19198e3483d/tensorflow/lite/tools/cmake/modules/OverridableFetchContent.cmake#L246\r\n\r\nBut this was not accessible during configuration... I assume since some of them included the file the rest had access.\r\nI only found this since Conan provides all the dependencies (except for 2 which are not yet available) which tripped the issue\r\n\r\nThis allows downstream projects to set options like `abseil-cpp_POPULATED` to avoid pulling in the dep if it's already apart of the build tree.","created_at":"2022-08-26T04:19:08Z","closed_at":"2023-01-21T02:53:50Z","merged_at":"2023-01-21T02:53:50Z","user_id":16867443,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1037411078,"title":"Revert \"r2.10 cherry-pick: e9863e9a9cb \"Fix tf.raw_ops.EmptyTensorList vulnerability from non scalar `num_elements`.\"\"","body":"Reverts tensorflow/tensorflow#57075","created_at":"2022-08-26T02:02:28Z","closed_at":"2022-08-26T10:14:20Z","merged_at":"2022-08-26T10:14:20Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1037345052,"title":"[TF-TRT] Fail gracefully if engine is uncalibrated","body":"For cases where a TRTEngineOp is not executed during calibration (e.g. Hugging Face's BART), this will crash with a `NotFoundError`. Extends #56993 to catch this case instead of crashing.\r\n\r\ncc: @DEKHTIARJonathan @meena-at-work @bixia1","created_at":"2022-08-25T23:50:46Z","closed_at":"2022-09-01T16:19:53Z","merged_at":"2022-09-01T16:19:53Z","user_id":86808158,"sentiment":{"polarity":-0.5,"subjectivity":0.29999999999999993}}
{"_id":1037317059,"title":"r2.10 cherry-pick: b306fb31270 \"Apply `PyArray_Check` in `FillStringBufferWithPyArray` to avoid a hard crash when user pass in a TF eager tensor as input.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/b306fb31270359f484b9df74907336e16642eb37","created_at":"2022-08-25T22:55:13Z","closed_at":"2022-08-25T22:59:57Z","merged_at":"2022-08-25T22:59:57Z","user_id":16359713,"sentiment":{"polarity":-0.2916666666666667,"subjectivity":0.5416666666666666}}
{"_id":1037314769,"title":"[oneDNN] Adding BF16 unit tests for ReLU, ELU, CReLU, SELU","body":"Enable BF16 tests for ReLU, ReLU6, ELU, SELU, CReLU ops","created_at":"2022-08-25T22:50:10Z","closed_at":"2022-09-13T17:11:47Z","merged_at":"2022-09-13T17:11:47Z","user_id":16918172,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1037311896,"title":"Update version numbers for TensorFlow 2.10.0-rc3","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 10 -> 10\nPatch: 0 -> 0\n\nNo lingering old version strings \"2.10.0-rc2\" found in source directory \n\"tensorflow/\". Good.\nNo lingering old version strings \"2.10.0rc2\" found in source directory \n\"tensorflow/\". Good.\n```","created_at":"2022-08-25T22:44:22Z","closed_at":"2022-08-25T22:59:29Z","merged_at":"2022-08-25T22:59:29Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1036955180,"title":"Merge pull request #56594 from yongtang:curl-7.84.0","body":"PiperOrigin-RevId: 458239914","created_at":"2022-08-25T15:48:31Z","closed_at":"2022-08-25T20:14:34Z","merged_at":"2022-08-25T20:14:34Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1036941928,"title":"Merge pull request #56594 from yongtang:curl-7.84.0","body":"PiperOrigin-RevId: 458239914","created_at":"2022-08-25T15:40:12Z","closed_at":"2022-08-25T20:15:32Z","merged_at":"2022-08-25T20:15:32Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1036936174,"title":"Merge pull request #56594 from yongtang:curl-7.84.0","body":"PiperOrigin-RevId: 458239914","created_at":"2022-08-25T15:34:58Z","closed_at":"2022-08-25T20:15:33Z","merged_at":"2022-08-25T20:15:33Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1036449499,"title":"r2.10 cherry-pick: 2be1006c8df \"Exports multiple targets including //third_party/tensorflow/cc:client_session and //third_party/tensorflow/cc:scope from libtensorflow_cc.so to make relevant symbols available for downstream projects including TFDF.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/2be1006c8dffc9364a724b0bb7f55b719e00ccac","created_at":"2022-08-25T08:44:47Z","closed_at":"2022-08-25T20:15:34Z","merged_at":"2022-08-25T20:15:34Z","user_id":16359713,"sentiment":{"polarity":0.26666666666666666,"subjectivity":0.43333333333333335}}
{"_id":1036442875,"title":"Update sqlite version in TF","body":"This CL is squashed with multiple changes, hence manually cherrypicking into r2.7.\r\n(This needs to be cherrypicked in all versions we're releasing)\r\n\r\nPiperOrigin-RevId: 467408627","created_at":"2022-08-25T08:38:45Z","closed_at":"2022-08-25T20:15:37Z","merged_at":"2022-08-25T20:15:37Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1036436180,"title":"Update sqlite version in TF","body":"This CL is squashed with multiple changes, hence manually cherrypicking into r2.8.\r\n(This needs to be cherrypicked in all versions we're releasing)\r\n\r\nPiperOrigin-RevId: 467408627","created_at":"2022-08-25T08:32:29Z","closed_at":"2022-08-25T20:16:22Z","merged_at":"2022-08-25T20:16:22Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1036431812,"title":"Update sqlite version in TF","body":"This CL is squashed with multiple changes, hence manually cherrypicking into r2.9.\r\n(This needs to be cherrypicked in all versions we're releasing)\r\n\r\nPiperOrigin-RevId: 467408627","created_at":"2022-08-25T08:28:23Z","closed_at":"2022-08-25T20:16:04Z","merged_at":"2022-08-25T20:16:04Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1036424144,"title":"Update sqlite version in TF","body":"This CL is squashed with multiple changes, hence manually cherrypicking into r2.10.\r\n(This needs to be cherrypicked in all versions we're releasing)\r\n\r\nPiperOrigin-RevId: 467408627","created_at":"2022-08-25T08:23:16Z","closed_at":"2022-08-25T20:16:57Z","merged_at":"2022-08-25T20:16:57Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1036391842,"title":"r2.10 cherry-pick: 184ef0c9251 \"Updated the description in PyPI to mention 'TensorFlow is licensed under Apache 2.0.'\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/184ef0c92517954f64e041c9af57f675fc8735e2","created_at":"2022-08-25T07:57:37Z","closed_at":"2022-08-25T20:17:23Z","merged_at":"2022-08-25T20:17:23Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1036374071,"title":"Add IsScalar / IsVector (rank) checks to input min/max tensors for Fa…","body":"…keQuantWithMinMaxVarsPerChannelGradientOp and FakeQuantWithMinMaxVarsGradientOp.\r\n\r\nPiperOrigin-RevId: 462542629","created_at":"2022-08-25T07:39:13Z","closed_at":"2022-08-25T20:19:15Z","merged_at":"2022-08-25T20:19:15Z","user_id":106367904,"sentiment":{"polarity":-0.8,"subjectivity":0.9}}
{"_id":1036366081,"title":"Add IsScalar / IsVector (rank) checks to input min/max tensors for Fa…","body":"…keQuantWithMinMaxVarsPerChannelGradientOp and FakeQuantWithMinMaxVarsGradientOp.\r\n\r\nPiperOrigin-RevId: 462542629","created_at":"2022-08-25T07:32:39Z","closed_at":"2022-08-25T20:42:14Z","merged_at":"2022-08-25T20:42:14Z","user_id":106367904,"sentiment":{"polarity":-0.8,"subjectivity":0.9}}
{"_id":1036349845,"title":"Add IsScalar / IsVector (rank) checks to input min/max tensors for Fa…","body":"…keQuantWithMinMaxVarsPerChannelGradientOp and FakeQuantWithMinMaxVarsGradientOp.\r\n\r\nPiperOrigin-RevId: 462542629","created_at":"2022-08-25T07:17:26Z","closed_at":"2022-08-25T20:20:15Z","merged_at":"2022-08-25T20:20:15Z","user_id":106367904,"sentiment":{"polarity":-0.8,"subjectivity":0.9}}
{"_id":1036326052,"title":"Fix tf.raw_ops.SetSize vulnerability with invalid input arg specifyin…","body":"…g shape.\r\n\r\nCheck that given input is a 1D tensor, as required.\r\n\r\nPiperOrigin-RevId: 460740463","created_at":"2022-08-25T06:49:34Z","closed_at":"2022-08-25T20:20:55Z","merged_at":"2022-08-25T20:20:55Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1036312401,"title":"Fix tf.raw_ops.SetSize vulnerability with invalid input arg specifyin…","body":"…g shape.\r\n\r\nCheck that given input is a 1D tensor, as required.\r\n\r\nPiperOrigin-RevId: 460740463","created_at":"2022-08-25T06:33:04Z","closed_at":"2022-08-25T06:38:02Z","merged_at":null,"user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1036298055,"title":"Fix security vulnerability with DenseBincountOp","body":"PiperOrigin-RevId: 460826735","created_at":"2022-08-25T06:14:05Z","closed_at":"2022-08-25T20:43:49Z","merged_at":"2022-08-25T20:43:49Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1036296539,"title":"Fix security vulnerability with DenseBincountOp","body":"PiperOrigin-RevId: 460826735","created_at":"2022-08-25T06:11:56Z","closed_at":"2022-08-25T20:43:57Z","merged_at":"2022-08-25T20:43:57Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1036294884,"title":"Fix security vulnerability with DenseBincountOp","body":"PiperOrigin-RevId: 460826735","created_at":"2022-08-25T06:09:36Z","closed_at":"2022-08-25T20:43:46Z","merged_at":"2022-08-25T20:43:45Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1036286653,"title":"Add sparse tensor validation to SparseBincountOp.","body":"Addresses a security issue.\r\n\r\nPiperOrigin-RevId: 460573866","created_at":"2022-08-25T05:56:56Z","closed_at":"2022-08-25T20:23:57Z","merged_at":"2022-08-25T20:23:57Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1036279262,"title":"Add sparse tensor validation to SparseBincountOp.","body":"Addresses a security issue.\r\n\r\nPiperOrigin-RevId: 460573866","created_at":"2022-08-25T05:44:20Z","closed_at":"2022-08-25T20:24:00Z","merged_at":"2022-08-25T20:24:00Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1036042284,"title":"Add sparse tensor validation to SparseBincountOp.","body":"Addresses a security issue.\r\n\r\nPiperOrigin-RevId: 460573866","created_at":"2022-08-24T22:19:45Z","closed_at":"2022-08-24T23:50:51Z","merged_at":"2022-08-24T23:50:50Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1036007839,"title":"Add IsScalar (rank == 0) check to input_min/max tensors for QuantizeD…","body":"…ownAndShrinkRangeOp.\r\n\r\nPiperOrigin-RevId: 462401306","created_at":"2022-08-24T21:30:04Z","closed_at":"2022-08-24T22:50:04Z","merged_at":"2022-08-24T22:50:04Z","user_id":106367904,"sentiment":{"polarity":-0.8,"subjectivity":0.9}}
{"_id":1036002428,"title":"Add IsScalar (rank == 0) check to input_min/max tensors for QuantizeD…","body":"…ownAndShrinkRangeOp.\r\n\r\nPiperOrigin-RevId: 462401306","created_at":"2022-08-24T21:23:07Z","closed_at":"2022-08-24T22:50:22Z","merged_at":"2022-08-24T22:50:22Z","user_id":106367904,"sentiment":{"polarity":-0.8,"subjectivity":0.9}}
{"_id":1035993749,"title":"Add IsScalar (rank == 0) check to input_min/max tensors for QuantizeD…","body":"…ownAndShrinkRangeOp.\r\n\r\nPiperOrigin-RevId: 462401306","created_at":"2022-08-24T21:12:39Z","closed_at":"2022-08-24T22:50:39Z","merged_at":"2022-08-24T22:50:39Z","user_id":106367904,"sentiment":{"polarity":-0.8,"subjectivity":0.9}}
{"_id":1035843236,"title":"Moving deprecation section","body":"Moving the deprecation section after the breaking changes.","created_at":"2022-08-24T18:26:31Z","closed_at":"2022-08-24T19:09:24Z","merged_at":"2022-08-24T19:09:24Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1034931064,"title":"Fix empty inputs for Upper/LowerBound.","body":"For upper/lower-bound searches via `tf.searchsorted`, if the sorted input is empty,\r\nthe previous code resulted in a `nullptr` dereference.  For emtpy inputs, any\r\nsorted search should return a value of 0, meaning that a value would be inserted\r\ninto the first slot of the array.\r\n\r\nPiperOrigin-RevId: 460971165","created_at":"2022-08-24T03:47:14Z","closed_at":"2022-08-24T16:36:36Z","merged_at":"2022-08-24T16:36:36Z","user_id":106367904,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":1034917612,"title":"Fix empty inputs for Upper/LowerBound.","body":"For upper/lower-bound searches via `tf.searchsorted`, if the sorted input is empty,\r\nthe previous code resulted in a `nullptr` dereference.  For emtpy inputs, any\r\nsorted search should return a value of 0, meaning that a value would be inserted\r\ninto the first slot of the array.\r\n\r\nPiperOrigin-RevId: 460971165","created_at":"2022-08-24T03:23:25Z","closed_at":"2022-08-24T16:37:38Z","merged_at":"2022-08-24T16:37:38Z","user_id":106367904,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":1034905121,"title":"Fix security vulnerability with AvgPool3DGrad.","body":"PiperOrigin-RevId: 461244371","created_at":"2022-08-24T02:56:55Z","closed_at":"2022-08-25T20:57:11Z","merged_at":"2022-08-25T20:57:11Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1034897387,"title":"Check bounds for reads and writes in scatter_nd","body":"PiperOrigin-RevId: 463365479","created_at":"2022-08-24T02:44:04Z","closed_at":"2022-08-24T17:08:14Z","merged_at":"2022-08-24T17:08:14Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1034894961,"title":"Check bounds for reads and writes in scatter_nd","body":"PiperOrigin-RevId: 463365479","created_at":"2022-08-24T02:38:15Z","closed_at":"2022-08-24T17:08:36Z","merged_at":"2022-08-24T17:08:36Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1034888921,"title":"Check bounds for reads and writes in scatter_nd","body":"PiperOrigin-RevId: 463365479","created_at":"2022-08-24T02:26:06Z","closed_at":"2022-08-24T17:09:23Z","merged_at":"2022-08-24T17:09:23Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1034875250,"title":"Strengthen input verification for SpecializeType by replacing DCHECK …","body":"…with explicit test/status return.\r\n\r\nPiperOrigin-RevId: 453436708","created_at":"2022-08-24T01:57:47Z","closed_at":"2022-08-24T17:10:31Z","merged_at":"2022-08-24T17:10:31Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1034847326,"title":"[tfg][functiondef_import] Error on empty edge names","body":"Return an error in the generic function importer if an edge name is empty.\r\n\r\nPiperOrigin-RevId: 449953062","created_at":"2022-08-24T01:05:32Z","closed_at":"2022-08-24T17:10:42Z","merged_at":"2022-08-24T17:10:42Z","user_id":106367904,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":1034844890,"title":"[tfg][functiondef_import] Error on empty edge names","body":"Return an error in the generic function importer if an edge name is empty.\r\n\r\nPiperOrigin-RevId: 449953062","created_at":"2022-08-24T00:59:17Z","closed_at":"2022-08-24T17:11:33Z","merged_at":"2022-08-24T17:11:33Z","user_id":106367904,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":1034781614,"title":"[tfg][functiondef_import] Error on empty edge names","body":"Return an error in the generic function importer if an edge name is empty.\r\n\r\nPiperOrigin-RevId: 449953062","created_at":"2022-08-23T22:52:51Z","closed_at":"2022-08-24T01:10:38Z","merged_at":"2022-08-24T01:10:38Z","user_id":106367904,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":1034744521,"title":"[tfg][functiondef_import] Emit error on empty function attributes","body":"Disallow empty function attributes. Emit an error when one is encountered.\r\n\r\nPiperOrigin-RevId: 448629968","created_at":"2022-08-23T21:55:15Z","closed_at":"2022-08-24T01:09:19Z","merged_at":"2022-08-24T01:09:19Z","user_id":106367904,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":1034735959,"title":"r2.10 cherry-pick: add aarch64 wheel install details","body":null,"created_at":"2022-08-23T21:42:31Z","closed_at":"2022-08-24T16:29:02Z","merged_at":"2022-08-24T16:29:02Z","user_id":87143774,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1034718166,"title":"Readme update","body":null,"created_at":"2022-08-23T21:16:58Z","closed_at":"2022-08-23T21:17:46Z","merged_at":null,"user_id":87143774,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1034716349,"title":"Refactor all op->emitOpError with notifyMatchFailure","body":"This is an refactoring patch which comes from the discussion here: [link](https://github.com/tensorflow/tensorflow/pull/56926#discussion_r932678395). \r\n\r\nSigned-off-by: Jerry Ge <jerry.ge@arm.com>","created_at":"2022-08-23T21:14:31Z","closed_at":"2022-09-13T17:15:08Z","merged_at":"2022-09-13T17:15:08Z","user_id":24451859,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1034705421,"title":"r2.10 cherry-pick: Add missing clean_dep() to dependency","body":"Fix breakages in packages that depends on TensorFlow.\r\n\r\n\"Without clean_dep, the dependency introduced in https://github.com/tensorflow/tensorflow/pull/57088 breaks libraries depending on Tensorflow (such as Tensorflow Decision Forests)\"\r\n\r\nPiperOrigin-RevId: 469490042","created_at":"2022-08-23T21:00:25Z","closed_at":"2022-08-24T16:29:14Z","merged_at":"2022-08-24T16:29:14Z","user_id":38085909,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":1034694249,"title":"Fix build with -Wextra-semi","body":null,"created_at":"2022-08-23T20:51:43Z","closed_at":"2022-08-30T14:38:17Z","merged_at":"2022-08-30T14:38:17Z","user_id":29989851,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1034680731,"title":"r2.10 cherry-pick: Move TF-oneDNN RFC link to the x86 bullet","body":"Based on feedback from @snadampal.","created_at":"2022-08-23T20:34:55Z","closed_at":"2022-08-24T16:46:17Z","merged_at":"2022-08-24T16:46:16Z","user_id":38085909,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1034643993,"title":"Update triggers for r2.9 branch ARM CI/CD","body":null,"created_at":"2022-08-23T19:53:37Z","closed_at":"2022-08-24T16:47:13Z","merged_at":"2022-08-24T16:47:13Z","user_id":22492939,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1034608971,"title":"Strengthen input verification for SpecializeType b…","body":"R2.8 Cherry-Pick resolve merge conflict cl/453436708 - Strengthen input verification for SpecializeType by replacing DCHECK with explicit test/status return","created_at":"2022-08-23T19:17:03Z","closed_at":"2022-08-24T01:37:37Z","merged_at":null,"user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1034414056,"title":"[XLA:GPU] Replace LOG(ERROR) with VLOG in cublas_pad_for_gemms","body":"The error here is misleading to the user. Incase the gemm is not cannonical, it would not be a candidate for padding but that would not be an error. cuBLAS can still handle the non-canonical gemms.\r\nHence, changing this `LOG(ERROR)` to a `VLOG`.","created_at":"2022-08-23T16:23:02Z","closed_at":"2022-08-30T20:37:12Z","merged_at":"2022-08-30T20:37:12Z","user_id":42984676,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1034224809,"title":"Fixes model export issue in #57386, #56970","body":"Fixes model export issue by upgrading flatbuffers to 2.0 from 1.12 (default version in Colab)\r\nAttached resolved [gist](https://colab.sandbox.google.com/gist/mohantym/20aef7edda23af1fdb655350c1d96de6/model-maker-object-detection-tutorial.ipynb#scrollTo=qhl8lqVamEty) as proof for reference.","created_at":"2022-08-23T13:50:25Z","closed_at":"2022-09-28T14:07:26Z","merged_at":null,"user_id":86464649,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1034157786,"title":"Fix kernel test build with cmake","body":"Fixes #57391 ","created_at":"2022-08-23T12:58:00Z","closed_at":"2022-08-24T16:29:29Z","merged_at":"2022-08-24T16:29:29Z","user_id":56120470,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1033936389,"title":"fix: adjust iOS flag for loading TensorFlowLiteSelectTfOps based on tf version","body":null,"created_at":"2022-08-23T09:57:32Z","closed_at":"2022-09-22T16:02:06Z","merged_at":"2022-09-22T16:02:06Z","user_id":4065840,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1033681676,"title":"Fix empty inputs for Upper/LowerBound. - r2.7 Cherry-Pick","body":"Merge Conflict Resolution - cl/460971165 - For upper/lower-bound searches via `tf.searchsorted`, if the sorted input is empty,\r\nthe previous code resulted in a `nullptr` dereference.  For emtpy inputs, any\r\nsorted search should return a value of 0, meaning that a value would be inserted\r\ninto the first slot of the array.","created_at":"2022-08-23T05:50:09Z","closed_at":"2022-08-24T02:14:20Z","merged_at":null,"user_id":106367904,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":1033676313,"title":"Fix empty inputs for Upper/LowerBound. R2.8 Cherry-Pick","body":"Merge Conflict resolution - cl/460971165 - For upper/lower-bound searches via `tf.searchsorted`, if the sorted input is empty,\r\nthe previous code resulted in a `nullptr` dereference.  For emtpy inputs, any\r\nsorted search should return a value of 0, meaning that a value would be inserted\r\ninto the first slot of the array.","created_at":"2022-08-23T05:40:43Z","closed_at":"2022-08-24T03:03:55Z","merged_at":null,"user_id":106367904,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":1033660208,"title":"Cherrypick test on r2.9","body":null,"created_at":"2022-08-23T05:15:41Z","closed_at":"2022-08-24T21:55:29Z","merged_at":null,"user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1033632615,"title":"Check bounds for reads and writes in scatter_nd - Merge conflict","body":"R2.7 Cherry-Pick cl/463365479 - Check bounds for reads and writes in scatter_nd","created_at":"2022-08-23T04:34:43Z","closed_at":"2022-08-24T02:14:20Z","merged_at":null,"user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1033625818,"title":"Check bounds for reads and writes in scatter_nd - Merge conflict","body":"R2.8 Cherry-Pick cl/463365479 - Check bounds for reads and writes in scatter_nd","created_at":"2022-08-23T04:26:59Z","closed_at":"2022-08-24T02:14:20Z","merged_at":null,"user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1033622427,"title":"Check bounds for reads and writes in scatter_nd - Merge conflict","body":"R2.9 Cherry-Pick cl/463365479 - Check bounds for reads and writes in scatter_nd","created_at":"2022-08-23T04:21:27Z","closed_at":"2022-08-24T02:14:22Z","merged_at":null,"user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1033505904,"title":"[TF:TRT] Refactor IBuilder holder in convert_node_test.","body":"Create holder nvinfer1::IBuilder in a custom main funciton.\r\nRemove //tensorflow/core:test_main from convert_nodes_test.\r\n\r\nTRT allows multiple builders to share the same cache, having a placeholder builder can reduce the time of cache creation and destroy and thus, speed up the tests\r\nThe original code in tensorflow/compiler/tf2tensorrt/convert/convert_nodes_test.cc defines the holder nvinfer1::IBuilder to be static, which caused the destructor to be called at an unexpected time (not by the main function). We now create the holder in a custom main function. ","created_at":"2022-08-23T00:44:22Z","closed_at":"2022-09-12T18:32:11Z","merged_at":"2022-09-12T18:32:11Z","user_id":109828133,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1033495321,"title":"Checks fails in QuantizeAndDequantizeV3.","body":"R2.8 Cherry-Pick cl/463755293 - Validate the rank and number of elements of the num_bits tensor for QuantizeAndDequantizeV3.","created_at":"2022-08-23T00:26:11Z","closed_at":"2022-08-23T14:57:56Z","merged_at":"2022-08-23T14:57:56Z","user_id":106367904,"sentiment":{"polarity":-0.5,"subjectivity":0.3}}
{"_id":1033492537,"title":"Checks fails in QuantizeAndDequantizeV3.","body":"R2.8 Cherry-Pick cl/463755293 - Validate the rank and number of elements of the num_bits tensor for QuantizeAndDequantizeV3.","created_at":"2022-08-23T00:21:09Z","closed_at":"2022-08-23T14:58:23Z","merged_at":"2022-08-23T14:58:23Z","user_id":106367904,"sentiment":{"polarity":-0.5,"subjectivity":0.3}}
{"_id":1033433251,"title":"Cherrypick f3f9cb38ecfe5a8a703f2c4a8fead434ef2917132 on r2.9","body":"Cherrypick f3f9cb38ecfe5a8a703f2c4a8fead434ef2917132 on r2.9","created_at":"2022-08-22T22:49:39Z","closed_at":"2022-08-22T23:02:47Z","merged_at":"2022-08-22T23:02:46Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1033405990,"title":"Cherrypick f3f9cb38ecfe5a8a703f2c4a8fead434ef291713 on r2.9","body":"Cherrypick f3f9cb38ecfe5a8a703f2c4a8fead434ef291713 on r2.9","created_at":"2022-08-22T22:15:07Z","closed_at":"2022-08-22T22:15:20Z","merged_at":null,"user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1033151327,"title":"[ROCm] For RoundNearestEven op use LLVM rint intrinsic instead of nearbyint …","body":"…because nearbyint is not currently supported by ROCm/HIP for fp16.\r\n\r\n/cc @cheshire ","created_at":"2022-08-22T17:33:57Z","closed_at":"2022-08-30T20:45:46Z","merged_at":"2022-08-30T20:45:46Z","user_id":70280935,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1033141161,"title":"Update version numbers for TensorFlow 2.10.0-rc2","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 10 -> 10\nPatch: 0 -> 0\n\nNo lingering old version strings \"2.10.0-rc1\" found in source directory \n\"tensorflow/\". Good.\nNo lingering old version strings \"2.10.0rc1\" found in source directory \n\"tensorflow/\". Good.\n```","created_at":"2022-08-22T17:22:43Z","closed_at":"2022-08-22T17:25:57Z","merged_at":"2022-08-22T17:25:57Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1033002818,"title":"[mhlo] fix warnings from upstream MLIR changes and from comparisons","body":" - Replace deprecated `Optional::getValue()` with `Optional::value()`\r\n   and deprecated `Optional::hasValue()` with `Optional::has_value()`\r\n - Fixed warnings from comparison of signed and unsigned values by\r\n   casting unsigned values to signed values\r\n - Fixed warning from returning an `APInt` from a lambda\r\n - Fix warnings from `Wc++98-compat-extra-semi`","created_at":"2022-08-22T15:26:53Z","closed_at":"2022-08-29T18:49:30Z","merged_at":"2022-08-29T18:49:30Z","user_id":19678,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1032383906,"title":"Intead of install, wrote Installation Procedure","body":"README.md updated","created_at":"2022-08-22T06:39:46Z","closed_at":"2022-08-22T16:11:44Z","merged_at":null,"user_id":74568688,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031655738,"title":"r2.7 cherry-pick: 7cdf9d4d208 \"Fix QuantizedAvgPool invalid rank issue.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/7cdf9d4d2083b739ec81cfdace546b0c99f50622","created_at":"2022-08-20T00:33:09Z","closed_at":"2022-08-21T23:22:06Z","merged_at":"2022-08-21T23:22:06Z","user_id":16359713,"sentiment":{"polarity":-0.8,"subjectivity":0.9}}
{"_id":1031655700,"title":"r2.8 cherry-pick: 49b3824d83a \"Add IsScalar (rank == 0) check to min/max input tensors for QuantizedAdd/Relu/Relu6 op.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/49b3824d83af706df0ad07e4e677d88659756d89","created_at":"2022-08-20T00:32:57Z","closed_at":"2022-08-22T15:42:52Z","merged_at":"2022-08-22T15:42:52Z","user_id":16359713,"sentiment":{"polarity":-0.8,"subjectivity":0.9}}
{"_id":1031655627,"title":"r2.7 cherry-pick: 49b3824d83a \"Add IsScalar (rank == 0) check to min/max input tensors for QuantizedAdd/Relu/Relu6 op.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/49b3824d83af706df0ad07e4e677d88659756d89","created_at":"2022-08-20T00:32:38Z","closed_at":"2022-08-22T15:42:53Z","merged_at":"2022-08-22T15:42:53Z","user_id":16359713,"sentiment":{"polarity":-0.8,"subjectivity":0.9}}
{"_id":1031655557,"title":"r2.9 cherry-pick: 49b3824d83a \"Add IsScalar (rank == 0) check to min/max input tensors for QuantizedAdd/Relu/Relu6 op.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/49b3824d83af706df0ad07e4e677d88659756d89","created_at":"2022-08-20T00:32:24Z","closed_at":"2022-08-22T15:42:54Z","merged_at":"2022-08-22T15:42:53Z","user_id":16359713,"sentiment":{"polarity":-0.8,"subjectivity":0.9}}
{"_id":1031655541,"title":"r2.8 cherry-pick: 7cdf9d4d208 \"Fix QuantizedAvgPool invalid rank issue.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/7cdf9d4d2083b739ec81cfdace546b0c99f50622","created_at":"2022-08-20T00:32:20Z","closed_at":"2022-08-22T15:43:16Z","merged_at":"2022-08-22T15:43:16Z","user_id":16359713,"sentiment":{"polarity":-0.8,"subjectivity":0.9}}
{"_id":1031655421,"title":"r2.9 cherry-pick: 7cdf9d4d208 \"Fix QuantizedAvgPool invalid rank issue.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/7cdf9d4d2083b739ec81cfdace546b0c99f50622","created_at":"2022-08-20T00:31:46Z","closed_at":"2022-08-22T15:43:17Z","merged_at":"2022-08-22T15:43:17Z","user_id":16359713,"sentiment":{"polarity":-0.8,"subjectivity":0.9}}
{"_id":1031647960,"title":"r2.8 cherry-pick: b5f6fbfba76 \"Re-enable testTensorListReserveWithNonScalarNumElements to work with mlir as well.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/b5f6fbfba76576202b72119897561e3bd4f179c7","created_at":"2022-08-20T00:09:55Z","closed_at":"2022-08-22T15:43:35Z","merged_at":"2022-08-22T15:43:35Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031647949,"title":"r2.7 cherry-pick: b5f6fbfba76 \"Re-enable testTensorListReserveWithNonScalarNumElements to work with mlir as well.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/b5f6fbfba76576202b72119897561e3bd4f179c7","created_at":"2022-08-20T00:09:54Z","closed_at":"2022-08-22T15:43:18Z","merged_at":"2022-08-22T15:43:18Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031646223,"title":"r2.9 cherry-pick: b5f6fbfba76 \"Re-enable testTensorListReserveWithNonScalarNumElements to work with mlir as well.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/b5f6fbfba76576202b72119897561e3bd4f179c7","created_at":"2022-08-20T00:03:33Z","closed_at":"2022-08-22T15:43:34Z","merged_at":"2022-08-22T15:43:34Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031624970,"title":"Fix MLIRTosaDialect ref in CMake","body":null,"created_at":"2022-08-19T23:07:14Z","closed_at":"2022-08-22T07:58:50Z","merged_at":"2022-08-22T07:58:50Z","user_id":1040968,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031590868,"title":"r2.7 cherry-pick: 37e64539cd2 \"Fix overflow issue\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/37e64539cd29fcfb814c4451152a60f5d107b0f0","created_at":"2022-08-19T21:53:18Z","closed_at":"2022-08-19T22:05:05Z","merged_at":"2022-08-19T22:05:05Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031590650,"title":"r2.8 cherry-pick: 37e64539cd2 \"Fix overflow issue\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/37e64539cd29fcfb814c4451152a60f5d107b0f0","created_at":"2022-08-19T21:53:10Z","closed_at":"2022-08-19T22:05:42Z","merged_at":"2022-08-19T22:05:42Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031590619,"title":"r2.9 cherry-pick: 37e64539cd2 \"Fix overflow issue\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/37e64539cd29fcfb814c4451152a60f5d107b0f0","created_at":"2022-08-19T21:53:08Z","closed_at":"2022-08-19T22:05:43Z","merged_at":"2022-08-19T22:05:43Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031586312,"title":"r2.9 cherry-pick: 0ef9ff6ef63 \"Use `zeros` instead of `empty`\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/0ef9ff6ef63cb815c4b1eda66dc63c05ffca17c9","created_at":"2022-08-19T21:43:53Z","closed_at":"2022-08-19T22:05:55Z","merged_at":"2022-08-19T22:05:55Z","user_id":16359713,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":1031586217,"title":"r2.8 cherry-pick: 0ef9ff6ef63 \"Use `zeros` instead of `empty`\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/0ef9ff6ef63cb815c4b1eda66dc63c05ffca17c9","created_at":"2022-08-19T21:43:40Z","closed_at":"2022-08-19T22:06:08Z","merged_at":"2022-08-19T22:06:08Z","user_id":16359713,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":1031585837,"title":"r2.9 cherry-pick: 6104f0d4091 \"Strengthen input verification for SpecializeType by replacing DCHECK with explicit test/status return.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/6104f0d4091c260ce9352f9155f7e9b725eab012","created_at":"2022-08-19T21:42:47Z","closed_at":"2022-08-19T22:06:05Z","merged_at":"2022-08-19T22:06:05Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031566292,"title":"r2.8 cherry-pick: 1cf45b831ee \"[tfg][functiondef_import] Emit error on empty function attributes\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b","created_at":"2022-08-19T21:07:42Z","closed_at":"2022-08-19T21:11:46Z","merged_at":"2022-08-19T21:11:46Z","user_id":16359713,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":1031566219,"title":"r2.9 cherry-pick: 1cf45b831ee \"[tfg][functiondef_import] Emit error on empty function attributes\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b","created_at":"2022-08-19T21:07:35Z","closed_at":"2022-08-19T21:12:00Z","merged_at":"2022-08-19T21:12:00Z","user_id":16359713,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":1031566118,"title":"r2.8 cherry-pick: aed36912609 \"Check correct input/output scalar types for LinearAlgebraOp.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/aed36912609fc07229b4d0a7b44f3f48efc00fd0","created_at":"2022-08-19T21:07:24Z","closed_at":"2022-08-19T21:11:08Z","merged_at":"2022-08-19T21:11:08Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031566074,"title":"r2.7 cherry-pick: aed36912609 \"Check correct input/output scalar types for LinearAlgebraOp.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/aed36912609fc07229b4d0a7b44f3f48efc00fd0","created_at":"2022-08-19T21:07:18Z","closed_at":"2022-08-19T21:11:42Z","merged_at":"2022-08-19T21:11:42Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031566039,"title":"r2.9 cherry-pick: aed36912609 \"Check correct input/output scalar types for LinearAlgebraOp.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/aed36912609fc07229b4d0a7b44f3f48efc00fd0","created_at":"2022-08-19T21:07:15Z","closed_at":"2022-08-19T21:11:41Z","merged_at":"2022-08-19T21:11:41Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031563021,"title":"r2.7 cherry-pick: da0d65cdc12 \"Fix dtype bug in draw bounding boxes.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/da0d65cdc1270038e72157ba35bf74b85d9bda11","created_at":"2022-08-19T21:01:53Z","closed_at":"2022-08-19T21:02:15Z","merged_at":"2022-08-19T21:02:14Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031562686,"title":"r2.8 cherry-pick: da0d65cdc12 \"Fix dtype bug in draw bounding boxes.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/da0d65cdc1270038e72157ba35bf74b85d9bda11","created_at":"2022-08-19T21:01:14Z","closed_at":"2022-08-19T21:01:46Z","merged_at":"2022-08-19T21:01:46Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031562546,"title":"r2.9 cherry-pick: da0d65cdc12 \"Fix dtype bug in draw bounding boxes.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/da0d65cdc1270038e72157ba35bf74b85d9bda11","created_at":"2022-08-19T21:00:59Z","closed_at":"2022-08-19T21:02:00Z","merged_at":"2022-08-19T21:02:00Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031562504,"title":"r2.7 cherry-pick: 4419d10d576 \"Fix check failure in Unbatch Op kernel by checking whether input argument is a scalar before trying to extract value.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/4419d10d576adefa36b0e0a9425d2569f7c0189f","created_at":"2022-08-19T21:00:53Z","closed_at":"2022-08-19T21:01:12Z","merged_at":"2022-08-19T21:01:12Z","user_id":16359713,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":1031562301,"title":"r2.8 cherry-pick: 4419d10d576 \"Fix check failure in Unbatch Op kernel by checking whether input argument is a scalar before trying to extract value.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/4419d10d576adefa36b0e0a9425d2569f7c0189f","created_at":"2022-08-19T21:00:30Z","closed_at":"2022-08-19T21:00:50Z","merged_at":"2022-08-19T21:00:50Z","user_id":16359713,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":1031562088,"title":"r2.9 cherry-pick: 4419d10d576 \"Fix check failure in Unbatch Op kernel by checking whether input argument is a scalar before trying to extract value.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/4419d10d576adefa36b0e0a9425d2569f7c0189f","created_at":"2022-08-19T21:00:09Z","closed_at":"2022-08-19T21:01:41Z","merged_at":"2022-08-19T21:01:41Z","user_id":16359713,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":1031550877,"title":"r2.8 cherry-pick: 552bfced6ce \"Fix size check for large input shape and rates.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/552bfced6ce4809db5f3ca305f60ff80dd40c5a3","created_at":"2022-08-19T20:40:46Z","closed_at":"2022-08-19T20:41:05Z","merged_at":"2022-08-19T20:41:05Z","user_id":16359713,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.42857142857142855}}
{"_id":1031550737,"title":"r2.7 cherry-pick: 552bfced6ce \"Fix size check for large input shape and rates.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/552bfced6ce4809db5f3ca305f60ff80dd40c5a3","created_at":"2022-08-19T20:40:35Z","closed_at":"2022-08-19T20:40:52Z","merged_at":"2022-08-19T20:40:52Z","user_id":16359713,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.42857142857142855}}
{"_id":1031550510,"title":"r2.9 cherry-pick: 552bfced6ce \"Fix size check for large input shape and rates.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/552bfced6ce4809db5f3ca305f60ff80dd40c5a3","created_at":"2022-08-19T20:40:14Z","closed_at":"2022-08-19T20:40:32Z","merged_at":"2022-08-19T20:40:32Z","user_id":16359713,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.42857142857142855}}
{"_id":1031546181,"title":"r2.7 cherry-pick: bb03fdf4aae \"Check for element_shape in TensorListScatter and TensorListScatterV2\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/bb03fdf4aae944ab2e4b35c7daa051068a8b7f61","created_at":"2022-08-19T20:33:00Z","closed_at":"2022-08-19T20:33:19Z","merged_at":"2022-08-19T20:33:19Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031546008,"title":"r2.8 cherry-pick: bb03fdf4aae \"Check for element_shape in TensorListScatter and TensorListScatterV2\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/bb03fdf4aae944ab2e4b35c7daa051068a8b7f61","created_at":"2022-08-19T20:32:44Z","closed_at":"2022-08-19T20:33:02Z","merged_at":"2022-08-19T20:33:02Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031545857,"title":"r2.9 cherry-pick: bb03fdf4aae \"Check for element_shape in TensorListScatter and TensorListScatterV2\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/bb03fdf4aae944ab2e4b35c7daa051068a8b7f61","created_at":"2022-08-19T20:32:31Z","closed_at":"2022-08-19T20:32:48Z","merged_at":"2022-08-19T20:32:48Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031545311,"title":"r2.7 cherry-pick: 3db59a042a3 \"Check for element_shape in TensorListFromTensor\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/3db59a042a38f4338aa207922fa2f476e000a6ee","created_at":"2022-08-19T20:31:38Z","closed_at":"2022-08-19T20:32:01Z","merged_at":"2022-08-19T20:32:01Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031545147,"title":"r2.9 cherry-pick: 3db59a042a3 \"Check for element_shape in TensorListFromTensor\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/3db59a042a38f4338aa207922fa2f476e000a6ee","created_at":"2022-08-19T20:31:20Z","closed_at":"2022-08-19T20:32:25Z","merged_at":"2022-08-19T20:32:25Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031545059,"title":"r2.8 cherry-pick: 3db59a042a3 \"Check for element_shape in TensorListFromTensor\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/3db59a042a38f4338aa207922fa2f476e000a6ee","created_at":"2022-08-19T20:31:13Z","closed_at":"2022-08-19T20:32:24Z","merged_at":"2022-08-19T20:32:24Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031541951,"title":"r2.8 cherry-pick: cf70b79d266 \"Fix tf.raw_ops.SetSize vulnerability with invalid input arg specifying shape.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/cf70b79d2662c0d3c6af74583641e345fc939467","created_at":"2022-08-19T20:26:25Z","closed_at":"2022-08-19T20:26:42Z","merged_at":"2022-08-19T20:26:42Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031541675,"title":"r2.9 cherry-pick: cf70b79d266 \"Fix tf.raw_ops.SetSize vulnerability with invalid input arg specifying shape.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/cf70b79d2662c0d3c6af74583641e345fc939467","created_at":"2022-08-19T20:25:59Z","closed_at":"2022-08-19T20:26:24Z","merged_at":"2022-08-19T20:26:24Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031539504,"title":"r2.7 cherry-pick: c1f491817de \"Fix for check failure in CollectiveGather op.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/c1f491817dec39a26be3c574e86a88c30f3c4770","created_at":"2022-08-19T20:22:21Z","closed_at":"2022-08-19T20:22:48Z","merged_at":"2022-08-19T20:22:48Z","user_id":16359713,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":1031539422,"title":"r2.8 cherry-pick: c1f491817de \"Fix for check failure in CollectiveGather op.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/c1f491817dec39a26be3c574e86a88c30f3c4770","created_at":"2022-08-19T20:22:14Z","closed_at":"2022-08-19T20:22:35Z","merged_at":"2022-08-19T20:22:35Z","user_id":16359713,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":1031539097,"title":"r2.9 cherry-pick: c1f491817de \"Fix for check failure in CollectiveGather op.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/c1f491817dec39a26be3c574e86a88c30f3c4770","created_at":"2022-08-19T20:21:44Z","closed_at":"2022-08-19T20:22:10Z","merged_at":"2022-08-19T20:22:10Z","user_id":16359713,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":1031539037,"title":"r2.8 cherry-pick: bf6b4524499 \"Fix tf.raw_ops.AudioSummaryV2 vulnerability with invalid `sample_rate`.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/bf6b45244992e2ee543c258e519489659c99fb7f","created_at":"2022-08-19T20:21:40Z","closed_at":"2022-08-19T20:22:04Z","merged_at":"2022-08-19T20:22:04Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031538321,"title":"r2.9 cherry-pick: bf6b4524499 \"Fix tf.raw_ops.AudioSummaryV2 vulnerability with invalid `sample_rate`.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/bf6b45244992e2ee543c258e519489659c99fb7f","created_at":"2022-08-19T20:20:30Z","closed_at":"2022-08-19T20:20:52Z","merged_at":"2022-08-19T20:20:52Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031538035,"title":"r2.7 cherry-pick: bf6b4524499 \"Fix tf.raw_ops.AudioSummaryV2 vulnerability with invalid `sample_rate`.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/bf6b45244992e2ee543c258e519489659c99fb7f","created_at":"2022-08-19T20:20:01Z","closed_at":"2022-08-19T20:20:20Z","merged_at":"2022-08-19T20:20:20Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031536380,"title":"r2.7 cherry-pick: 611d80db29d \"Fix conv2d crash when input size is empty.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/611d80db29dd7b0cfb755772c69d60ae5bca05f9","created_at":"2022-08-19T20:17:23Z","closed_at":"2022-08-19T20:18:58Z","merged_at":"2022-08-19T20:18:58Z","user_id":16359713,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":1031535949,"title":"r2.9 cherry-pick: 611d80db29d \"Fix conv2d crash when input size is empty.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/611d80db29dd7b0cfb755772c69d60ae5bca05f9","created_at":"2022-08-19T20:16:41Z","closed_at":"2022-08-19T20:19:12Z","merged_at":"2022-08-19T20:19:12Z","user_id":16359713,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":1031535930,"title":"r2.8 cherry-pick: 611d80db29d \"Fix conv2d crash when input size is empty.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/611d80db29dd7b0cfb755772c69d60ae5bca05f9","created_at":"2022-08-19T20:16:40Z","closed_at":"2022-08-19T20:19:14Z","merged_at":"2022-08-19T20:19:14Z","user_id":16359713,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":1031534723,"title":"r2.9 cherry-pick: 83dcb4dbfa0 \"Fix check failure in SparseCrossV2Op by adding check for scalar value for separator.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/83dcb4dbfa094e33db084e97c4d0531a559e0ebf","created_at":"2022-08-19T20:14:43Z","closed_at":"2022-08-19T20:19:48Z","merged_at":"2022-08-19T20:19:48Z","user_id":16359713,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":1031534557,"title":"r2.7 cherry-pick: 83dcb4dbfa0 \"Fix check failure in SparseCrossV2Op by adding check for scalar value for separator.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/83dcb4dbfa094e33db084e97c4d0531a559e0ebf","created_at":"2022-08-19T20:14:27Z","closed_at":"2022-08-19T20:19:19Z","merged_at":"2022-08-19T20:19:19Z","user_id":16359713,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":1031534474,"title":"r2.8 cherry-pick: 83dcb4dbfa0 \"Fix check failure in SparseCrossV2Op by adding check for scalar value for separator.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/83dcb4dbfa094e33db084e97c4d0531a559e0ebf","created_at":"2022-08-19T20:14:19Z","closed_at":"2022-08-19T20:15:58Z","merged_at":"2022-08-19T20:15:58Z","user_id":16359713,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":1031532855,"title":"r2.7 cherry-pick: c8ba76d4856 \"Fix tf.raw_ops.EmptyTensorList vulnerability with invalid `element_shape`.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/c8ba76d48567aed347508e0552a257641931024d","created_at":"2022-08-19T20:12:07Z","closed_at":"2022-08-19T20:19:24Z","merged_at":"2022-08-19T20:19:24Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031532632,"title":"r2.8 cherry-pick: c8ba76d4856 \"Fix tf.raw_ops.EmptyTensorList vulnerability with invalid `element_shape`.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/c8ba76d48567aed347508e0552a257641931024d","created_at":"2022-08-19T20:11:48Z","closed_at":"2022-08-19T20:19:27Z","merged_at":"2022-08-19T20:19:27Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031532251,"title":"r2.9 cherry-pick: c8ba76d4856 \"Fix tf.raw_ops.EmptyTensorList vulnerability with invalid `element_shape`.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/c8ba76d48567aed347508e0552a257641931024d","created_at":"2022-08-19T20:11:14Z","closed_at":"2022-08-19T20:19:29Z","merged_at":"2022-08-19T20:19:29Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031531765,"title":"r2.9 cherry-pick: 27a65a43cf7 \"Fix GPU/CPU Conv2DBackpropInputOp check error.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/27a65a43cf763897fecfa5cdb5cc653fc5dd0346","created_at":"2022-08-19T20:10:24Z","closed_at":"2022-08-19T20:10:44Z","merged_at":"2022-08-19T20:10:44Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031531601,"title":"r2.8 cherry-pick: 27a65a43cf7 \"Fix GPU/CPU Conv2DBackpropInputOp check error.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/27a65a43cf763897fecfa5cdb5cc653fc5dd0346","created_at":"2022-08-19T20:10:09Z","closed_at":"2022-08-19T20:10:30Z","merged_at":"2022-08-19T20:10:30Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031531495,"title":"r2.7 cherry-pick: 27a65a43cf7 \"Fix GPU/CPU Conv2DBackpropInputOp check error.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/27a65a43cf763897fecfa5cdb5cc653fc5dd0346","created_at":"2022-08-19T20:09:58Z","closed_at":"2022-08-19T20:10:17Z","merged_at":"2022-08-19T20:10:17Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031529946,"title":"r2.7 cherry-pick: 32d7bd3defd \"Fix MaxPool crash on GPU for invalid filter size.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/32d7bd3defd134f21a4e344c8dfd40099aaf6b18","created_at":"2022-08-19T20:07:23Z","closed_at":"2022-08-19T20:10:01Z","merged_at":"2022-08-19T20:10:01Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031529269,"title":"r2.8 cherry-pick: 32d7bd3defd \"Fix MaxPool crash on GPU for invalid filter size.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/32d7bd3defd134f21a4e344c8dfd40099aaf6b18","created_at":"2022-08-19T20:06:33Z","closed_at":"2022-08-19T20:20:32Z","merged_at":"2022-08-19T20:20:32Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031529157,"title":"r2.9 cherry-pick: 32d7bd3defd \"Fix MaxPool crash on GPU for invalid filter size.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/32d7bd3defd134f21a4e344c8dfd40099aaf6b18","created_at":"2022-08-19T20:06:28Z","closed_at":"2022-08-19T20:09:48Z","merged_at":"2022-08-19T20:09:48Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031528585,"title":"r2.8 cherry-pick: c55b476aa0e \"Fix empty batch issue in svd.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/c55b476aa0e0bd4ee99d0f3ad18d9d706cd1260a","created_at":"2022-08-19T20:05:34Z","closed_at":"2022-08-19T20:05:54Z","merged_at":"2022-08-19T20:05:54Z","user_id":16359713,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":1031528110,"title":"r2.7 cherry-pick: c55b476aa0e \"Fix empty batch issue in svd.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/c55b476aa0e0bd4ee99d0f3ad18d9d706cd1260a","created_at":"2022-08-19T20:04:53Z","closed_at":"2022-08-19T20:05:11Z","merged_at":"2022-08-19T20:05:11Z","user_id":16359713,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":1031527820,"title":"r2.9 cherry-pick: c55b476aa0e \"Fix empty batch issue in svd.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/c55b476aa0e0bd4ee99d0f3ad18d9d706cd1260a","created_at":"2022-08-19T20:04:27Z","closed_at":"2022-08-19T20:04:55Z","merged_at":"2022-08-19T20:04:55Z","user_id":16359713,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":1031524642,"title":"r2.8 cherry-pick: 7a4591fd4f0 \"Fix RaggedBincount Segmentation Fault from the Splits arg\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/7a4591fd4f065f4fa903593bc39b2f79530a74b8","created_at":"2022-08-19T19:59:43Z","closed_at":"2022-08-19T20:04:49Z","merged_at":"2022-08-19T20:04:49Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031524213,"title":"r2.7 cherry-pick: 7a4591fd4f0 \"Fix RaggedBincount Segmentation Fault from the Splits arg\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/7a4591fd4f065f4fa903593bc39b2f79530a74b8","created_at":"2022-08-19T19:59:07Z","closed_at":"2022-08-19T20:06:09Z","merged_at":"2022-08-19T20:06:09Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031524035,"title":"r2.9 cherry-pick: 7a4591fd4f0 \"Fix RaggedBincount Segmentation Fault from the Splits arg\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/7a4591fd4f065f4fa903593bc39b2f79530a74b8","created_at":"2022-08-19T19:58:50Z","closed_at":"2022-08-19T20:06:28Z","merged_at":"2022-08-19T20:06:28Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031522969,"title":"r2.8 cherry-pick: bd90b3efab4 \"Fix security vulnerability with LRNGradOp\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/bd90b3efab4ec958b228cd7cfe9125be1c0cf255","created_at":"2022-08-19T19:57:14Z","closed_at":"2022-08-19T20:06:50Z","merged_at":"2022-08-19T20:06:49Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031522783,"title":"r2.7 cherry-pick: bd90b3efab4 \"Fix security vulnerability with LRNGradOp\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/bd90b3efab4ec958b228cd7cfe9125be1c0cf255","created_at":"2022-08-19T19:56:56Z","closed_at":"2022-08-19T20:10:57Z","merged_at":"2022-08-19T20:10:57Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031522596,"title":"r2.9 cherry-pick: bd90b3efab4 \"Fix security vulnerability with LRNGradOp\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/bd90b3efab4ec958b228cd7cfe9125be1c0cf255","created_at":"2022-08-19T19:56:39Z","closed_at":"2022-08-19T20:15:45Z","merged_at":"2022-08-19T20:15:45Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031521362,"title":"r2.8 cherry-pick: 72180be0344 \"Fix tensor shape dtype bug in parameterized_truncated_normal.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/72180be03447a10810edca700cbc9af690dfeb51","created_at":"2022-08-19T19:54:44Z","closed_at":"2022-08-19T20:15:40Z","merged_at":"2022-08-19T20:15:40Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031521299,"title":"r2.7 cherry-pick: 72180be0344 \"Fix tensor shape dtype bug in parameterized_truncated_normal.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/72180be03447a10810edca700cbc9af690dfeb51","created_at":"2022-08-19T19:54:39Z","closed_at":"2022-08-19T20:15:38Z","merged_at":"2022-08-19T20:15:38Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031521275,"title":"r2.9 cherry-pick: 72180be0344 \"Fix tensor shape dtype bug in parameterized_truncated_normal.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/72180be03447a10810edca700cbc9af690dfeb51","created_at":"2022-08-19T19:54:37Z","closed_at":"2022-08-19T20:15:30Z","merged_at":"2022-08-19T20:15:30Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031519557,"title":"r2.7 cherry-pick: 5dd7b86b84a \"Fix tf.raw_ops.SaveSlices vulnerability with unsupported dtypes.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4","created_at":"2022-08-19T19:51:58Z","closed_at":"2022-08-19T20:15:29Z","merged_at":"2022-08-19T20:15:28Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031519364,"title":"r2.9 cherry-pick: 5dd7b86b84a \"Fix tf.raw_ops.SaveSlices vulnerability with unsupported dtypes.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4","created_at":"2022-08-19T19:51:41Z","closed_at":"2022-08-19T20:15:24Z","merged_at":"2022-08-19T20:15:24Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031519354,"title":"r2.8 cherry-pick: 5dd7b86b84a \"Fix tf.raw_ops.SaveSlices vulnerability with unsupported dtypes.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4","created_at":"2022-08-19T19:51:40Z","closed_at":"2022-08-19T20:15:18Z","merged_at":"2022-08-19T20:15:18Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031510436,"title":"r2.8 cherry-pick: 88f93dfe691 \"[security] Fix failed shape check in RaggedTensorToVariant.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/88f93dfe691563baa4ae1e80ccde2d5c7a143821","created_at":"2022-08-19T19:37:58Z","closed_at":"2022-08-19T19:45:37Z","merged_at":"2022-08-19T19:45:37Z","user_id":16359713,"sentiment":{"polarity":-0.5,"subjectivity":0.3}}
{"_id":1031510257,"title":"r2.7 cherry-pick: 88f93dfe691 \"[security] Fix failed shape check in RaggedTensorToVariant.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/88f93dfe691563baa4ae1e80ccde2d5c7a143821","created_at":"2022-08-19T19:37:44Z","closed_at":"2022-08-19T19:46:36Z","merged_at":"2022-08-19T19:46:36Z","user_id":16359713,"sentiment":{"polarity":-0.5,"subjectivity":0.3}}
{"_id":1031510190,"title":"r2.9 cherry-pick: 88f93dfe691 \"[security] Fix failed shape check in RaggedTensorToVariant.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/88f93dfe691563baa4ae1e80ccde2d5c7a143821","created_at":"2022-08-19T19:37:37Z","closed_at":"2022-08-19T19:46:43Z","merged_at":"2022-08-19T19:46:42Z","user_id":16359713,"sentiment":{"polarity":-0.5,"subjectivity":0.3}}
{"_id":1031509755,"title":"r2.8 cherry-pick: 8741e57d163 \"Fix security vulnerability with FractionalMaxPoolGrad\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/8741e57d163a079db05a7107a7609af70931def4","created_at":"2022-08-19T19:36:54Z","closed_at":"2022-08-19T19:46:48Z","merged_at":"2022-08-19T19:46:48Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031509573,"title":"r2.7 cherry-pick: 8741e57d163 \"Fix security vulnerability with FractionalMaxPoolGrad\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/8741e57d163a079db05a7107a7609af70931def4","created_at":"2022-08-19T19:36:38Z","closed_at":"2022-08-19T20:16:21Z","merged_at":"2022-08-19T20:16:21Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031509478,"title":"r2.9 cherry-pick: 8741e57d163 \"Fix security vulnerability with FractionalMaxPoolGrad\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/8741e57d163a079db05a7107a7609af70931def4","created_at":"2022-08-19T19:36:29Z","closed_at":"2022-08-19T19:46:54Z","merged_at":"2022-08-19T19:46:54Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031505364,"title":"[XLA] Make replay_computation print the total run time.","body":null,"created_at":"2022-08-19T19:30:09Z","closed_at":"2022-08-31T10:00:01Z","merged_at":"2022-08-31T10:00:01Z","user_id":180987,"sentiment":{"polarity":0.0,"subjectivity":0.75}}
{"_id":1031499346,"title":"r2.7 cherry-pick: aca766ac769 \"Fix tf.raw_ops. QuantizedMatMul vulnerability from non scalar min/max a/b arguments.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/aca766ac7693bf29ed0df55ad6bfcc78f35e7f48","created_at":"2022-08-19T19:21:07Z","closed_at":"2022-08-19T19:47:00Z","merged_at":"2022-08-19T19:47:00Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031499263,"title":"r2.9 cherry-pick: aca766ac769 \"Fix tf.raw_ops. QuantizedMatMul vulnerability from non scalar min/max a/b arguments.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/aca766ac7693bf29ed0df55ad6bfcc78f35e7f48","created_at":"2022-08-19T19:20:59Z","closed_at":"2022-08-19T19:47:15Z","merged_at":"2022-08-19T19:47:15Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031499206,"title":"r2.8 cherry-pick: aca766ac769 \"Fix tf.raw_ops. QuantizedMatMul vulnerability from non scalar min/max a/b arguments.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/aca766ac7693bf29ed0df55ad6bfcc78f35e7f48","created_at":"2022-08-19T19:20:52Z","closed_at":"2022-08-19T19:47:23Z","merged_at":"2022-08-19T19:47:23Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031498659,"title":"r2.8 cherry-pick: 785d67a78a1 \"Fix quantize ops input validation issues.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/785d67a78a1d533759fcd2f5e8d6ef778de849e0","created_at":"2022-08-19T19:20:03Z","closed_at":"2022-08-19T19:47:33Z","merged_at":"2022-08-19T19:47:33Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031498438,"title":"r2.7 cherry-pick: 785d67a78a1 \"Fix quantize ops input validation issues.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/785d67a78a1d533759fcd2f5e8d6ef778de849e0","created_at":"2022-08-19T19:19:42Z","closed_at":"2022-08-19T19:47:39Z","merged_at":"2022-08-19T19:47:39Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031498003,"title":"r2.9 cherry-pick: 785d67a78a1 \"Fix quantize ops input validation issues.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/785d67a78a1d533759fcd2f5e8d6ef778de849e0","created_at":"2022-08-19T19:19:02Z","closed_at":"2022-08-19T19:47:46Z","merged_at":"2022-08-19T19:47:46Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031496658,"title":"r2.7 cherry-pick: 50156d547b9 \"Add security vulnerability test for raw_ops.Conv2DBackpropInput\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/50156d547b9a1da0144d7babe665cf690305b33c","created_at":"2022-08-19T19:16:57Z","closed_at":"2022-08-19T20:17:21Z","merged_at":"2022-08-19T20:17:21Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031496605,"title":"r2.9 cherry-pick: 50156d547b9 \"Add security vulnerability test for raw_ops.Conv2DBackpropInput\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/50156d547b9a1da0144d7babe665cf690305b33c","created_at":"2022-08-19T19:16:52Z","closed_at":"2022-08-19T20:16:38Z","merged_at":"2022-08-19T20:16:38Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031496306,"title":"r2.8 cherry-pick: 50156d547b9 \"Add security vulnerability test for raw_ops.Conv2DBackpropInput\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/50156d547b9a1da0144d7babe665cf690305b33c","created_at":"2022-08-19T19:16:24Z","closed_at":"2022-08-19T20:16:47Z","merged_at":"2022-08-19T20:16:47Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031494969,"title":"r2.7 cherry-pick: 3a6ac52664c \"Fix security vulnerability with AvgPoolGrad\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/3a6ac52664c6c095aa2b114e742b0aa17fdce78f","created_at":"2022-08-19T19:14:17Z","closed_at":"2022-08-19T20:19:35Z","merged_at":"2022-08-19T20:19:35Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031494589,"title":"r2.8 cherry-pick: 3a6ac52664c \"Fix security vulnerability with AvgPoolGrad\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/3a6ac52664c6c095aa2b114e742b0aa17fdce78f","created_at":"2022-08-19T19:13:43Z","closed_at":"2022-08-19T20:17:24Z","merged_at":"2022-08-19T20:17:24Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031494491,"title":"r2.9 cherry-pick: 3a6ac52664c \"Fix security vulnerability with AvgPoolGrad\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/3a6ac52664c6c095aa2b114e742b0aa17fdce78f","created_at":"2022-08-19T19:13:32Z","closed_at":"2022-08-19T20:17:01Z","merged_at":"2022-08-19T20:17:01Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031489308,"title":"r2.9 cherry-pick: bce3717eaef \"Fix empty inputs for Upper/LowerBound.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/bce3717eaef4f769019fd18e990464ca4a2efeea","created_at":"2022-08-19T19:05:36Z","closed_at":"2022-08-19T20:17:26Z","merged_at":"2022-08-19T20:17:26Z","user_id":16359713,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":1031488710,"title":"r2.7 cherry-pick: 2a458fc4866 \"Add size input validation to BlockLSTMGradV2.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/2a458fc4866505be27c62f81474ecb2b870498fa","created_at":"2022-08-19T19:04:42Z","closed_at":"2022-08-19T20:15:07Z","merged_at":"2022-08-19T20:15:07Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031487996,"title":"r2.8 cherry-pick: 2a458fc4866 \"Add size input validation to BlockLSTMGradV2.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/2a458fc4866505be27c62f81474ecb2b870498fa","created_at":"2022-08-19T19:03:36Z","closed_at":"2022-08-19T20:15:06Z","merged_at":"2022-08-19T20:15:06Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031487290,"title":"r2.9 cherry-pick: 2a458fc4866 \"Add size input validation to BlockLSTMGradV2.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/2a458fc4866505be27c62f81474ecb2b870498fa","created_at":"2022-08-19T19:02:30Z","closed_at":"2022-08-19T20:15:05Z","merged_at":"2022-08-19T20:15:05Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031481331,"title":"r2.7 cherry-pick: 03a659d7be9 \"Fix security vulnerability with FractionalAvgPoolGrad\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/03a659d7be9a1154fdf5eeac221e5950fec07dad","created_at":"2022-08-19T18:53:20Z","closed_at":"2022-08-19T18:53:41Z","merged_at":"2022-08-19T18:53:41Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031480549,"title":"r2.9 cherry-pick: 03a659d7be9 \"Fix security vulnerability with FractionalAvgPoolGrad\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/03a659d7be9a1154fdf5eeac221e5950fec07dad","created_at":"2022-08-19T18:52:13Z","closed_at":"2022-08-19T18:52:43Z","merged_at":"2022-08-19T18:52:43Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031479599,"title":"r2.8 cherry-pick: 03a659d7be9 \"Fix security vulnerability with FractionalAvgPoolGrad\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/03a659d7be9a1154fdf5eeac221e5950fec07dad","created_at":"2022-08-19T18:51:16Z","closed_at":"2022-08-19T18:51:46Z","merged_at":"2022-08-19T18:51:46Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031476063,"title":"[XLA] Allow to prefix fusion kernel name.","body":"This split https://github.com/tensorflow/tensorflow/pull/57087 as required here:\r\n\r\nhttps://github.com/tensorflow/tensorflow/pull/57087#discussion_r949344998\r\n\r\n@cheshire ","created_at":"2022-08-19T18:46:07Z","closed_at":"2022-08-22T12:57:47Z","merged_at":"2022-08-22T12:57:47Z","user_id":180987,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031439028,"title":"r2.9 cherry-pick: 9178ac9d638 \"Fix security vulnerability with AvgPool3DGrad.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/9178ac9d6389bdc54638ab913ea0e419234d14eb","created_at":"2022-08-19T17:55:54Z","closed_at":"2022-08-19T17:56:20Z","merged_at":"2022-08-19T17:56:20Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031438795,"title":"r2.8 cherry-pick: 9178ac9d638 \"Fix security vulnerability with AvgPool3DGrad.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/9178ac9d6389bdc54638ab913ea0e419234d14eb","created_at":"2022-08-19T17:55:43Z","closed_at":"2022-08-19T17:56:03Z","merged_at":"2022-08-19T17:56:03Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031411557,"title":"r2.7 cherry-pick: 5f945fc6409 \"Fix security vulnerability with UnbatchGradKernel\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/5f945fc6409a3c1e90d6970c9292f805f6e6ddf2","created_at":"2022-08-19T17:34:01Z","closed_at":"2022-08-19T17:34:24Z","merged_at":"2022-08-19T17:34:24Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031411293,"title":"r2.8 cherry-pick: 5f945fc6409 \"Fix security vulnerability with UnbatchGradKernel\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/5f945fc6409a3c1e90d6970c9292f805f6e6ddf2","created_at":"2022-08-19T17:33:39Z","closed_at":"2022-08-19T17:34:26Z","merged_at":"2022-08-19T17:34:26Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031411254,"title":"r2.9 cherry-pick: 5f945fc6409 \"Fix security vulnerability with UnbatchGradKernel\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/5f945fc6409a3c1e90d6970c9292f805f6e6ddf2","created_at":"2022-08-19T17:33:37Z","closed_at":"2022-08-19T17:34:25Z","merged_at":"2022-08-19T17:34:25Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031405146,"title":"r2.7 cherry-pick: cbe447c3b62 \"Add security vulnerability test with raw_ops.AvgPool\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/cbe447c3b622c158879efd23717189ab7ec668b9","created_at":"2022-08-19T17:28:22Z","closed_at":"2022-08-19T17:28:42Z","merged_at":"2022-08-19T17:28:42Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031404803,"title":"r2.8 cherry-pick: cbe447c3b62 \"Add security vulnerability test with raw_ops.AvgPool\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/cbe447c3b622c158879efd23717189ab7ec668b9","created_at":"2022-08-19T17:27:54Z","closed_at":"2022-08-19T17:28:14Z","merged_at":"2022-08-19T17:28:14Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031404299,"title":"r2.9 cherry-pick: cbe447c3b62 \"Add security vulnerability test with raw_ops.AvgPool\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/cbe447c3b622c158879efd23717189ab7ec668b9","created_at":"2022-08-19T17:27:15Z","closed_at":"2022-08-19T17:27:39Z","merged_at":"2022-08-19T17:27:39Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031401725,"title":"r2.7 cherry-pick: 37cefa91bee \"[security] Fix int overflow in RaggedRangeOp.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/37cefa91bee4eace55715eeef43720b958a01192","created_at":"2022-08-19T17:23:45Z","closed_at":"2022-08-19T17:26:17Z","merged_at":"2022-08-19T17:26:17Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031401530,"title":"r2.8 cherry-pick: 37cefa91bee \"[security] Fix int overflow in RaggedRangeOp.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/37cefa91bee4eace55715eeef43720b958a01192","created_at":"2022-08-19T17:23:29Z","closed_at":"2022-08-19T17:26:16Z","merged_at":"2022-08-19T17:26:16Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031401328,"title":"r2.9 cherry-pick: 37cefa91bee \"[security] Fix int overflow in RaggedRangeOp.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/37cefa91bee4eace55715eeef43720b958a01192","created_at":"2022-08-19T17:23:12Z","closed_at":"2022-08-19T17:26:15Z","merged_at":"2022-08-19T17:26:15Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031394014,"title":"r2.7 cherry-pick: 595a65a3e22 \"Return a TFLite error if gather_nd will result in reading invalid memory\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/595a65a3e224a0362d7e68c2213acfc2b499a196","created_at":"2022-08-19T17:13:19Z","closed_at":"2022-08-19T17:13:41Z","merged_at":"2022-08-19T17:13:41Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031393959,"title":"r2.8 cherry-pick: 595a65a3e22 \"Return a TFLite error if gather_nd will result in reading invalid memory\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/595a65a3e224a0362d7e68c2213acfc2b499a196","created_at":"2022-08-19T17:13:14Z","closed_at":"2022-08-19T17:13:39Z","merged_at":"2022-08-19T17:13:39Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031393772,"title":"r2.9 cherry-pick: 595a65a3e22 \"Return a TFLite error if gather_nd will result in reading invalid memory\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/595a65a3e224a0362d7e68c2213acfc2b499a196","created_at":"2022-08-19T17:12:59Z","closed_at":"2022-08-19T17:13:37Z","merged_at":"2022-08-19T17:13:37Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1031383312,"title":"r2.7 cherry-pick: c65c67f88ad \"Fix `CHECK`-fail due to passing invalid tensors in `SobolOp`.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/c65c67f88ad770662e8f191269a907bf2b94b1bf","created_at":"2022-08-19T16:58:39Z","closed_at":"2022-08-19T17:04:21Z","merged_at":"2022-08-19T17:04:21Z","user_id":16359713,"sentiment":{"polarity":-0.125,"subjectivity":0.375}}
{"_id":1031383246,"title":"r2.8 cherry-pick: c65c67f88ad \"Fix `CHECK`-fail due to passing invalid tensors in `SobolOp`.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/c65c67f88ad770662e8f191269a907bf2b94b1bf","created_at":"2022-08-19T16:58:33Z","closed_at":"2022-08-19T17:04:49Z","merged_at":"2022-08-19T17:04:49Z","user_id":16359713,"sentiment":{"polarity":-0.125,"subjectivity":0.375}}
{"_id":1031382900,"title":"r2.9 cherry-pick: c65c67f88ad \"Fix `CHECK`-fail due to passing invalid tensors in `SobolOp`.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/c65c67f88ad770662e8f191269a907bf2b94b1bf","created_at":"2022-08-19T16:58:03Z","closed_at":"2022-08-19T17:04:52Z","merged_at":"2022-08-19T17:04:52Z","user_id":16359713,"sentiment":{"polarity":-0.125,"subjectivity":0.375}}
{"_id":1031364029,"title":"r2.7 cherry-pick: 61f0f9b94df \"Fix failed check in tf.reshape.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/61f0f9b94df8c0411f0ad0ecc2fec2d3f3c33555","created_at":"2022-08-19T16:35:06Z","closed_at":"2022-08-19T16:35:25Z","merged_at":"2022-08-19T16:35:25Z","user_id":16359713,"sentiment":{"polarity":-0.5,"subjectivity":0.3}}
{"_id":1031363239,"title":"r2.8 cherry-pick: 61f0f9b94df \"Fix failed check in tf.reshape.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/61f0f9b94df8c0411f0ad0ecc2fec2d3f3c33555","created_at":"2022-08-19T16:34:39Z","closed_at":"2022-08-19T16:34:56Z","merged_at":"2022-08-19T16:34:56Z","user_id":16359713,"sentiment":{"polarity":-0.5,"subjectivity":0.3}}
{"_id":1031362308,"title":"r2.9 cherry-pick: 61f0f9b94df \"Fix failed check in tf.reshape.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/61f0f9b94df8c0411f0ad0ecc2fec2d3f3c33555","created_at":"2022-08-19T16:33:56Z","closed_at":"2022-08-19T16:34:20Z","merged_at":"2022-08-19T16:34:20Z","user_id":16359713,"sentiment":{"polarity":-0.5,"subjectivity":0.3}}
{"_id":1031117661,"title":"Add assert condition for clip","body":"Avances ","created_at":"2022-08-19T12:38:25Z","closed_at":"2022-12-29T16:02:59Z","merged_at":null,"user_id":102270105,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1030806212,"title":"Fix broken link.","body":"Fixed broken link with the latest path.","created_at":"2022-08-19T07:01:33Z","closed_at":"2022-11-11T18:48:59Z","merged_at":null,"user_id":73069040,"sentiment":{"polarity":-0.4,"subjectivity":0.4}}
{"_id":1030797218,"title":"Added working links for Object detection","body":"Put working links for Object detection for android app at line 389","created_at":"2022-08-19T06:50:23Z","closed_at":"2022-08-25T19:59:20Z","merged_at":"2022-08-25T19:59:20Z","user_id":86464649,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1030593089,"title":"[TF-TRT]: Fix tile converter for dynamic shape mode","body":"In dynamic shape mode, when all input tensors to the Tile op are constants, the batch dimension was not being propagated correctly. Fix this.","created_at":"2022-08-19T00:29:40Z","closed_at":"2022-08-24T20:23:44Z","merged_at":"2022-08-24T20:23:44Z","user_id":80416898,"sentiment":{"polarity":0.0,"subjectivity":0.16666666666666666}}
{"_id":1030492844,"title":"Fix for CMake iOS linker issue","body":"Resolves https://github.com/tensorflow/tensorflow/issues/57218","created_at":"2022-08-18T21:26:15Z","closed_at":"2022-08-25T19:45:06Z","merged_at":null,"user_id":1772504,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1030470565,"title":"Update scorecard-action to v2:alpha","body":"v2:alpha fixes some bugs","created_at":"2022-08-18T20:57:30Z","closed_at":"2022-08-18T21:56:32Z","merged_at":"2022-08-18T21:56:32Z","user_id":4825078,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1030470245,"title":"Update TOSA resize to match specification","body":"The new attribute scale and border substitute stride and shift.\r\n\r\nSigned-off-by: TatWai Chong <tatwai.chong@arm.com>","created_at":"2022-08-18T20:57:04Z","closed_at":"2022-10-08T13:26:24Z","merged_at":null,"user_id":78814694,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1030298413,"title":"r2.10 cherry-pick: Fix --config=mkl x86 build breakage from another cherry-pick","body":"Fix `--config=mkl` x86 build breakage caused by another cherry-pick for aarch64, https://github.com/tensorflow/tensorflow/pull/57088.\r\n\r\nOriginal PR: https://github.com/tensorflow/tensorflow/pull/57186","created_at":"2022-08-18T18:19:42Z","closed_at":"2022-08-19T15:50:25Z","merged_at":"2022-08-19T15:50:25Z","user_id":38085909,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1029159128,"title":"[INTEL oneDNN] Disable MKL ML related functionality in xla/service/cpu","body":"This is an alternative workaround for this PR\r\n\r\n     https://github.com/tensorflow/tensorflow/pull/57186\r\n\r\n(by Penporn et al.) by disabling MKL ML related source code which causes build issue in master branch and TF 2.10 (with\r\n--config=mkl option)\r\n\r\nIf PR  https://github.com/tensorflow/tensorflow/pull/57186 is merged to TF 2.10, there is no \r\nneed to merged this one.\r\n     ","created_at":"2022-08-17T18:28:07Z","closed_at":"2022-08-18T17:12:17Z","merged_at":null,"user_id":29215195,"sentiment":{"polarity":0.0,"subjectivity":0.4}}
{"_id":1028828613,"title":"Add a pjrt plugin device client to the XLA client.","body":"This pull request adds an opaque \"plugin device client\" to the XLA client interface.\r\nThis allows experimental/out-of-tree backends (perhaps a Graphcore IPU backend) to be exposed to users of the XLA client interface (like JAX) in a standard way.\r\n\r\nThis change is guarded by the `enable_plugin_device ` flag which defaults to `False`.\r\n\r\n/cc @DavidNorman ","created_at":"2022-08-17T13:16:30Z","closed_at":"2022-09-09T23:41:11Z","merged_at":"2022-09-09T23:41:11Z","user_id":60800749,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1028370288,"title":"Fixing typos","body":"Fixed a small typo in graph_properties.cc and updated a missing punctuation in TF doc.\r\nFixes the issue #56618","created_at":"2022-08-17T06:21:09Z","closed_at":"2022-08-18T18:33:43Z","merged_at":"2022-08-18T18:33:43Z","user_id":84765720,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1028095943,"title":"[xla_cpu]: restrict copts to acl definitions","body":null,"created_at":"2022-08-16T21:28:58Z","closed_at":"2022-08-18T17:45:40Z","merged_at":null,"user_id":87143774,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1028089192,"title":"r2.10 cherry-pick: c1f68309986 \"[NumPy] Fix NumPy 1.23 compatibility problems in TensorFlow.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/c1f68309986a4a7105c55545eac92b8b0f5917ab","created_at":"2022-08-16T21:19:36Z","closed_at":"2022-08-16T21:20:06Z","merged_at":"2022-08-16T21:20:06Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1028073656,"title":"Remove `tf_copts` that were added by XLA ACL changes","body":"Replace `tf_copts` in `simple_orc_jit` and `dot_op_emitter` with only necessary flags for ACL.\r\n\r\n`tf_copts` was recently added to the two targets in https://github.com/tensorflow/tensorflow/pull/56715. Its addition broke the x86 oneDNN OpenMP build so we are reverting back to just add aarch64 ACL copts directly to these targets for the time being.\r\n\r\nCredit: @snadampal for finding the flags and testing on aarch64\r\ncc: @TensorFlow-MKL, @agramesh1 \r\n\r\nEdited to add: Also replace `tf_copts` in `debug_options_flags`. Credit: @agramesh1 ","created_at":"2022-08-16T20:59:48Z","closed_at":"2022-08-18T07:09:40Z","merged_at":"2022-08-18T07:09:40Z","user_id":38085909,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1028003553,"title":"Print a useful warning if we can't find a directory for temporary files.","body":"This should help cases like: https://github.com/google/jax/issues/11190","created_at":"2022-08-16T19:36:26Z","closed_at":"2022-09-08T21:10:12Z","merged_at":"2022-09-08T21:10:12Z","user_id":180987,"sentiment":{"polarity":0.3,"subjectivity":0.0}}
{"_id":1027790445,"title":"Fix LLVM target detection when cross-compiling.","body":"Conditions like @bazel_tools//src/conditions:linux_aarch64 do not\r\nappear to be triggered correctly when cross-compiling on Linux. I'm\r\nguessing this is because TensorFlow does not yet use Bazel platforms and\r\ninstead uses the older --cpu and --crosstool_top features.\r\n\r\nThis means that we fall through to the default condition and end up\r\nbuilding an x86-targeting LLVM even though we intended to target, say,\r\naarch64. The symptom this causes is errors like:\r\n'neoverse-n1' is not a recognized processor for this target (ignoring\r\nprocessor)\r\n'+neon' is not a recognized feature for this target (ignoring feature)\r\n'+fp-armv8' is not a recognized feature for this target (ignoring\r\nfeature)\r\n'+crypto' is not a recognized feature for this target (ignoring feature)\r\n'+lse' is not a recognized feature for this target (ignoring feature)\r\n'+crc' is not a recognized feature for this target (ignoring feature)\r\nfrom XLA:CPU compilation.\r\n\r\nTake the same approach that has previously been used for Darwin ARM64\r\nbuilds and add a new config_setting() for LLVM architecture detection\r\nthat mirrors the definitions in //tensorflow/BUILD.\r\n\r\nChange tested both under x86->aarch64 cross compilation and aarch64\r\nself-hosted compilation.","created_at":"2022-08-16T15:39:54Z","closed_at":"2022-08-19T16:39:53Z","merged_at":"2022-08-19T16:39:53Z","user_id":348932,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1027639005,"title":"[TF-TRT] Fix pylint error (line too long)","body":"Fixes a pylint error introduced in #57096 ","created_at":"2022-08-16T13:37:02Z","closed_at":"2022-08-18T21:52:37Z","merged_at":"2022-08-18T21:52:37Z","user_id":17441062,"sentiment":{"polarity":-0.05,"subjectivity":0.4}}
{"_id":1027416836,"title":"int32 is not working","body":"The dtype section in the documentation says `int32` is supported  `tf.math.ceil` but it is `failing`. Kindly find the [gist](https://colab.research.google.com/gist/tilakrayal/81abf656028290a58a536dd238d8728d/untitled488.ipynb). Fixes #57123","created_at":"2022-08-16T10:09:09Z","closed_at":"2022-12-30T02:44:45Z","merged_at":null,"user_id":81610181,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1026997946,"title":"Link tensorflow.dll to kernels_experimental on Windows","body":"Windows doesn't have an equivalent to `libtensorflow_framework.so` as part of its C API library, so it needs to include everything as a part of `tensorflow.dll`. Linking `kernels_experimental` to `tensorflow.dll` will allow pluggable devices to be used with the TensorFlow C API on Windows.","created_at":"2022-08-15T23:33:13Z","closed_at":"2022-10-15T00:20:12Z","merged_at":"2022-10-15T00:20:11Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1026974690,"title":"Updated the 8-bit SoftmaxOp exponent calculation with 4 16-bit tables to avoid extreme large/small slope errors","body":"Softmax uses 2x16-bit table lookups to calculate the exp() value. With the stricter checking on the interpolation of 16-bit table, the table lookups are failing. Instead, I updated the softmax to use 4x16-bit tables to do the exp() calculation which can avoid failing test cases when the interpolation slope is too large/small.\r\n\r\nSigned-off-by: Jerry Ge <jerry.ge@arm.com>","created_at":"2022-08-15T22:57:20Z","closed_at":"2022-08-19T21:01:31Z","merged_at":"2022-08-19T21:01:31Z","user_id":24451859,"sentiment":{"polarity":-0.125,"subjectivity":1.0}}
{"_id":1026358681,"title":"Don't set MLIR_PDLL_TABLEGEN_EXE","body":"With llvm/llvm-project@91b6f76 landed, external projects no longer need\r\nto set `MLIR_PDLL_TABLEGEN_EXE`. The variable is now set as a cache\r\nvariable in MLIR upstream. Setting it in an external project breaks\r\ncross-compilation.\r\n\r\nThis patch is similar to tensorflow/mlir-hlo@77bd8ec.","created_at":"2022-08-15T11:50:22Z","closed_at":"2022-08-16T16:39:38Z","merged_at":"2022-08-16T16:39:38Z","user_id":8095156,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1025855704,"title":"Switch on Py_SET_TYPE","body":"Since Py_TYPE() is changed to a inline static function, `Py_TYPE(obj) = new_type`\r\nmust be replaced with `Py_SET_TYPE(obj, new_type)` (available since Python 3.9)\r\n\r\nThis fix build with Python 3.11","created_at":"2022-08-14T17:47:06Z","closed_at":"2022-08-16T16:59:57Z","merged_at":null,"user_id":61256,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1025668395,"title":"r2.10 cherry-pick: Skip appending kernel registration to log message for oneDNN ops.","body":"Original PR: https://github.com/tensorflow/tensorflow/pull/57137\r\nSource commit: 89c4c20\r\n\r\nFixes ~10% regression in some eager models caused by https://github.com/tensorflow/tensorflow/commit/c04f65da3e7937b6be01d844a26bf9fd58a27a2d.\r\n\r\nThe merge commit to master (49f97f1) contains changes from other PRs as well. So I'm making a separate commit directly to r2.10 for cherry-picking.","created_at":"2022-08-13T21:47:30Z","closed_at":"2022-08-15T19:36:46Z","merged_at":"2022-08-15T19:36:46Z","user_id":38085909,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1025595683,"title":"random_distributions: fix duplicate symbols","body":"Building on Windows using clang-cl (with linker ) results in a duplicate symbol error.\r\nThis is likely because of a template specialization `SingleSampleAdapter<PhiloxRandom>::SkipFromGenerator` (I'm not sure if the original code is correct or not...), so this was fixed by moving it into the header and marking it inline; there should be no problem as the implementation is just one simple line.\r\n\r\nEdit: please do not review yet, I'm just testing.","created_at":"2022-08-13T13:26:33Z","closed_at":"2022-08-31T10:44:41Z","merged_at":null,"user_id":1911407,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1025522611,"title":"Refactoring TRT tests for Python.","body":"Refactoring of the TRT tests for Python removes a lot of duplicate code from`tensorflow/python/compiler/tensorrt/test/BUILD` and makes this file 5.3x times shorter. The new and old versions of that file have 117 and 620 lines, respectively.","created_at":"2022-08-13T06:04:21Z","closed_at":"2022-08-24T16:16:27Z","merged_at":"2022-08-24T16:16:27Z","user_id":32910461,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1025440047,"title":"[ROCm] Fix for //tensorflow/python/distribute:collective_all_reduce_strategy…","body":"…_test_xla_2gpu unit test failure on ROCm.\r\n\r\n/cc @cheshire ","created_at":"2022-08-12T23:11:22Z","closed_at":"2022-08-16T13:46:15Z","merged_at":"2022-08-16T13:46:15Z","user_id":70280935,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1025386472,"title":"[oneDNN] Skip appending kernel registration to log message for MKL ops","body":"This PR skips printing kernel registrations for MKL ops since it leads to performance drop for some eager models caused by this commit https://github.com/tensorflow/tensorflow/commit/c04f65da3e7937b6be01d844a26bf9fd58a27a2d# This is a temporary fix and the condition will be removed when support for block format is removed as a more permanent fix.","created_at":"2022-08-12T21:11:34Z","closed_at":"2022-08-13T16:42:00Z","merged_at":null,"user_id":42224278,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1025357143,"title":"r2.10 cherry-pick: Mention ACL in the release notes","body":null,"created_at":"2022-08-12T20:25:02Z","closed_at":"2022-08-15T19:36:15Z","merged_at":"2022-08-15T19:36:15Z","user_id":38085909,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1025352590,"title":"r2.10 cherry-pick: 73e652c6d3f \"Update tensorboard dependencies for 2.10.0 release.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/73e652c6d3fd8da4eaa9cc208b522112f75e723e","created_at":"2022-08-12T20:17:31Z","closed_at":"2022-08-15T19:37:03Z","merged_at":"2022-08-15T19:37:03Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1025342418,"title":"Patch for building on Windows","body":"Resolves https://github.com/tensorflow/tensorflow/issues/57133","created_at":"2022-08-12T20:01:37Z","closed_at":"2022-08-24T00:39:08Z","merged_at":"2022-08-24T00:39:08Z","user_id":1772504,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1025230726,"title":"Update version numbers for TensorFlow 2.10.0-rc1","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 10 -> 10\nPatch: 0 -> 0\n\nNo lingering old version strings \"2.10.0-rc0\" found in source directory \n\"tensorflow/\". Good.\nWARNING: Below are potentially instances of lingering old version string \n\"2.10.0rc0\" in source directory \"tensorflow/\" that are not updated by this \nscript. Please check them manually!\ntensorflow/tools/pip_package/setup.py:114:2.10.0rc0\ntensorflow/tools/pip_package/setup.py:116:2.10.0rc0\n```","created_at":"2022-08-12T17:41:33Z","closed_at":"2022-08-12T17:58:13Z","merged_at":"2022-08-12T17:58:13Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1024931636,"title":"README Spanish translation.","body":"I added a README-es.md file, which is a translation to Spanish of the original README, also I added a direct link in the README file, this is for our huge Hispanic community, Thanks!","created_at":"2022-08-12T13:08:59Z","closed_at":"2022-08-12T15:25:42Z","merged_at":null,"user_id":78756825,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1024810911,"title":"grammatically updated","body":"Updated lower case to uppercase where needed.","created_at":"2022-08-12T10:50:50Z","closed_at":"2022-08-12T15:28:33Z","merged_at":null,"user_id":108065131,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1024607166,"title":"Updated README for MacOS users","body":"Updated README for macOS users with ARM architecture.","created_at":"2022-08-12T06:45:58Z","closed_at":"2022-08-16T06:45:08Z","merged_at":"2022-08-16T06:45:08Z","user_id":48821634,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1024583355,"title":"Grammatically and bugs fix","body":" grammatically mistakes in docs updated and fixed,\r\n\r\nspelling mistake in test_dir:\r\n\r\ndef _test_dir(test_name):\r\n  test_dir = os.path.join(test.get_temp_dir(), test_name)\r\n  if os.path.exists(test_dir):\r\n    shutil.rmtree(test_dir)\r\n  return test_dir","created_at":"2022-08-12T06:09:15Z","closed_at":"2022-12-29T04:57:09Z","merged_at":null,"user_id":108065131,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1024512311,"title":"Python integration test for boolean operations.","body":"Implementation of the integration test for boolean operations.","created_at":"2022-08-12T03:36:29Z","closed_at":"2022-09-19T04:51:44Z","merged_at":"2022-09-19T04:51:44Z","user_id":32910461,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1024461102,"title":"[TF-TRT]  Refactor Softmax converter to use OpConverterBase","body":"This commit refactors the Softmax TF-TRT conversion to use OpConverterBase classes. ","created_at":"2022-08-12T01:28:51Z","closed_at":"2022-08-25T20:18:15Z","merged_at":"2022-08-25T20:18:15Z","user_id":33809857,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1024437251,"title":"Add nonpip ci for arm","body":"Adding a separate pipeline for running non pip tests for arm.","created_at":"2022-08-12T00:32:58Z","closed_at":"2022-08-17T14:33:37Z","merged_at":"2022-08-17T14:33:36Z","user_id":22492939,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1024435200,"title":"r2.10 cherry-pick: Add oneDNN changes to v2.10 release notes.","body":"The content in the oneDNN auto-mixed-precision grappler pass article hasn't been updated to reflect the renaming yet. It will be updated before the final release comes out.","created_at":"2022-08-12T00:28:09Z","closed_at":"2022-08-12T15:12:28Z","merged_at":"2022-08-12T15:12:28Z","user_id":38085909,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1024295680,"title":"Reduce verbose logging","body":"Reduce verbose logging for `grpc_channel.cc` by changing one of `LOG(INFO)` to `VLOG(2)`.","created_at":"2022-08-11T20:29:58Z","closed_at":"2022-08-15T21:37:38Z","merged_at":"2022-08-15T21:37:37Z","user_id":49047362,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1024288874,"title":"Make target \"gpu_device_array\" publicly visible.","body":"Make target \"gpu_device_array\" publicly visible.\r\n\r\nThis is useful for developing custom ops.","created_at":"2022-08-11T20:21:01Z","closed_at":"2022-08-16T08:52:46Z","merged_at":"2022-08-16T08:52:46Z","user_id":49047362,"sentiment":{"polarity":0.0,"subjectivity":0.06666666666666667}}
{"_id":1024270437,"title":"[XLA:GPU] Fix performance regression when enabling multi-threading for compilation","body":"This PR fixed the XLA GPU performance regression when enabling multi-threading for compilation. For a few models we have tested, some global constants like `constant_190 = u64[] constant(32)` may be shared by multiple fused computations. After calling `llvm::SplitModule`, these variables will have external linkage type in those submodules that don't actually own the data and thus cannot be constant-folded properly during llvm optimization. This PR fixed this issue by making those global constants private to each submodule after split.\r\n\r\nWe tested a few NLP models using pytorch/xla:\r\n| Model      | thrpt (num_threads=1) | thrpt (num_threads=16) | thrpt (num_threads=16 with this PR) |\r\n| ----------- | ----------- | ----------- | ----------- |\r\n| bert-base-uncased | 83.79 | 80.30 | 84.07 |\r\n| roberta-base | 76.87 | 73.76 | 76.74 |\r\n| facebook/bart-base | 63.26 | 59.39 | 62.51 |\r\n| gpt2 | 86.76 | 83.63 | 85.57 |\r\n* throughput unit: sequences/sec\r\n* measured with fake data (batch size=24, sequence length=512)\r\n\r\nWe considered other methods, but eventually adopted the current approach due to its simplicity:\r\n1. Fuse global constant variables into fused_computations by writing a HLO pass. We tested this method and it works.\r\n2. Add llvm link time optimization. We didn't verify this method but it's likely to be more complicated and the additional benefits are unclear.\r\n\r\nCo-authored by: @ducdoan510","created_at":"2022-08-11T20:01:52Z","closed_at":"2022-08-22T07:27:09Z","merged_at":"2022-08-22T07:27:09Z","user_id":19481308,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1023675537,"title":"[ROCm] gpu solvers support","body":"1. three OPs (TrsmBatched, Trsv and Gesvd) support from rocm are added.\r\n2. separate OPs between hip/rocSolver and rocBlas in rocm_solvers.cc with description, which is used to mix together and now it's similar to cuda_solvers.cc. This will benefit for adding new OPs in the future. \r\n\r\n\r\n/cc @cheshire ","created_at":"2022-08-11T10:10:16Z","closed_at":"2022-09-01T10:32:23Z","merged_at":"2022-09-01T10:32:23Z","user_id":913790,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1023632649,"title":"Add dep to MLIRGmlStComposeSetInterfaceIncGen","body":"`thlo_ops.cc` includes `gml_st_ops.h` which includes\r\n`compose_set_interface.h` and the latter requires\r\n`compose_set_interface.h.inc` which belongs to the CMake target\r\n`MLIRGmlStComposeSetInterfaceIncGen`.\r\n\r\nThe missing dep on `MLIRGmlStComposeSetInterfaceIncGen` caused the\r\nmlir-emitc CI to fail when bumping the mlir-hlo submodule:\r\nhttps://github.com/iml130/mlir-emitc/runs/7783649359?check_suite_focus=true","created_at":"2022-08-11T09:25:20Z","closed_at":"2022-08-12T16:17:26Z","merged_at":"2022-08-12T16:17:26Z","user_id":8095156,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1023435765,"title":"[TF-TRT] DEFAULT_TRT_MAX_WORKSPACE_SIZE_BYTES fixed to `LLONG_MAX - 512`","body":"This PR fixes a minor bug where default `max_workspace_size` was set to 2GB instead of LLONG_MAX as recommended by TensorRT.\r\n\r\nThis PR fixes this problem","created_at":"2022-08-11T04:49:43Z","closed_at":"2022-08-15T15:39:09Z","merged_at":"2022-08-15T15:39:09Z","user_id":10923599,"sentiment":{"polarity":0.1,"subjectivity":0.2}}
{"_id":1023276764,"title":"[TF-TRT] Adding TRT Logger Filtering to remove unnecessary logs","body":"This PR \"filter\" unnecessary warnings (validated with TensorRT team) in order to help cleanup the stdout.\r\nBehavior can be deactivated using `export TF_TRT_EXPERIMENTAL_FEATURES=disable_logger_filtering`","created_at":"2022-08-10T22:51:04Z","closed_at":"2022-08-15T15:46:38Z","merged_at":"2022-08-15T15:46:38Z","user_id":10923599,"sentiment":{"polarity":-0.4,"subjectivity":0.9}}
{"_id":1023276092,"title":"[TF-TRT] Not Calling `getMaxBatchSize()` with NetworkDefinitionCreationFlag::kEXPLICIT_BATCH","body":"This PR fixes a logical bug where `getMaxBatchSize()` is being called and its result is used to set the dim-0 size for all the input shape in `kEXPLICIT_BATCH`, which is not correct.","created_at":"2022-08-10T22:49:37Z","closed_at":"2022-08-15T15:43:13Z","merged_at":"2022-08-15T15:43:13Z","user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1023275584,"title":"[TF-TRT] Adjusting Conv2D Test Tolerance","body":"This PR adjusts & fixes the unittest tolerance for the test `Conv2DStridedNCHWTest` in INT8 mode.\r\n","created_at":"2022-08-10T22:48:38Z","closed_at":"2022-08-13T16:42:00Z","merged_at":null,"user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1023254893,"title":"r2.10 cherry-pick: Fix XLA CPU build breakages when building with ACL","body":"Fixes issue https://github.com/tensorflow/tensorflow/issues/56673\r\n\r\nOriginal PR: https://github.com/tensorflow/tensorflow/pull/56715\r\nPiperOrigin-RevId: 466739831 (Made internal edits before merging)","created_at":"2022-08-10T22:11:46Z","closed_at":"2022-08-12T15:11:33Z","merged_at":"2022-08-12T15:11:33Z","user_id":38085909,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1023174900,"title":"[XLA:GPU] Fuse copy added by copy-insertion","body":"@cheshire @thomasjoerg \r\nA follow up to https://github.com/tensorflow/tensorflow/pull/57020/\r\n\r\nThis add the h-loop-fusion optimization pass after the copy-insertion pass.\r\nThis is to be able to fuse the introduced copies.\r\n\r\nAn example HLO before optimizations when copy-insertion add copies:\r\n ```\r\nHloModule d2d_copy, entry_computation_layout={()->(f32[1]{0}, f32[1]{0}, f32[1]{0}, f32[1]{0})}\r\n \r\nENTRY main.22543 {\r\n  constant.535 = f32[1]{0} constant({0})\r\n  ROOT tuple_out = (f32[1]{0}, f32[1]{0}, f32[1]{0}, f32[1]{0}) tuple(constant.535, constant.535, constant.535, constant.535)\r\n}\r\n```\r\n\r\nCurrent after_optimizations:\r\n```\r\nHloModule d2d_copy, entry_computation_layout={()->(f32[1]{0}, f32[1]{0}, f32[1]{0}, f32[1]{0})}\r\n \r\nENTRY main.22543 {\r\n  constant_535 = f32[1]{0} constant({0})\r\n  copy = f32[1]{0} copy(constant_535)\r\n  copy.1 = f32[1]{0} copy(constant_535)\r\n  copy.2 = f32[1]{0} copy(constant_535)\r\n  copy.3 = f32[1]{0} copy(constant_535)\r\n  ROOT tuple = (f32[1]{0}, f32[1]{0}, f32[1]{0}, f32[1]{0}) tuple(copy, copy.1, copy.2, copy.3)\r\n}\r\n```\r\n\r\nNew hlo after this PR:\r\n```\r\nHloModule d2d_copy, entry_computation_layout={()->(f32[1]{0}, f32[1]{0}, f32[1]{0}, f32[1]{0})}\r\n\r\ncopy_horizontally_fused_computation {\r\n  param_0_0 = f32[1]{0} parameter(0)\r\n  copy.8 = f32[1]{0} copy(param_0_0)\r\n  param_1_0 = f32[1]{0} parameter(1)\r\n  copy.9 = f32[1]{0} copy(param_1_0)\r\n  param_2_0 = f32[1]{0} parameter(2)\r\n  copy.10 = f32[1]{0} copy(param_2_0)\r\n  param_3_0 = f32[1]{0} parameter(3)\r\n  copy.11 = f32[1]{0} copy(param_3_0)\r\n  concatenate = f32[4]{0} concatenate(copy.8, copy.9, copy.10, copy.11), dimensions={0}\r\n  slice = f32[1]{0} slice(concatenate), slice={[0:1]}\r\n  slice.1 = f32[1]{0} slice(concatenate), slice={[1:2]}\r\n  slice.2 = f32[1]{0} slice(concatenate), slice={[2:3]}\r\n  slice.3 = f32[1]{0} slice(concatenate), slice={[3:4]}\r\n  ROOT tuple.1 = (f32[1]{0}, f32[1]{0}, f32[1]{0}, f32[1]{0}) tuple(slice, slice.1, slice.2, slice.3)\r\n}\r\n\r\nENTRY main.22543 {\r\n  constant_535 = f32[1]{0} constant({0})\r\n  copy_fusion = (f32[1]{0}, f32[1]{0}, f32[1]{0}, f32[1]{0}) fusion(constant_535, constant_535, constant_535, constant_535), kind=kInput, calls=copy_horizontally_fused_computation\r\n  get-tuple-element.4 = f32[1]{0} get-tuple-element(copy_fusion), index=0\r\n  get-tuple-element.5 = f32[1]{0} get-tuple-element(copy_fusion), index=1\r\n  get-tuple-element.6 = f32[1]{0} get-tuple-element(copy_fusion), index=2\r\n  get-tuple-element.7 = f32[1]{0} get-tuple-element(copy_fusion), index=3\r\n  ROOT tuple = (f32[1]{0}, f32[1]{0}, f32[1]{0}, f32[1]{0}) tuple(get-tuple-element.4, get-tuple-element.5, get-tuple-element.6, get-tuple-element.7)\r\n}\r\n```\r\n\r\nI disable that optimization pass when there is control flow in the graph. This pass doesn't know how to handle that. I do not need that case now, so I do not plan to make it works when control-flow is used.","created_at":"2022-08-10T20:27:35Z","closed_at":"2022-09-30T11:47:24Z","merged_at":"2022-09-30T11:47:24Z","user_id":180987,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1023037493,"title":"Fix Python 3.11 compatibility problems for JAX/XLA.","body":"* We must use `PyThreadState_GetFrame` to obtain a traceback of the current thread, and we must use `PyFrame_GetBack` to obtain the previous frame. Both of these functions return strong references.\r\n* We must use `Py_SET_TYPE` to set types.\r\n* `exc_traceback` no longer exists, but we no longer need a C++ helper to set the exception traceback.","created_at":"2022-08-10T18:21:24Z","closed_at":"2022-08-16T16:52:10Z","merged_at":"2022-08-16T16:52:10Z","user_id":348932,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1022257365,"title":"Minor changes in README.md","body":null,"created_at":"2022-08-10T05:53:58Z","closed_at":"2022-10-21T15:12:29Z","merged_at":null,"user_id":98255423,"sentiment":{"polarity":-0.05,"subjectivity":0.2}}
{"_id":1022073634,"title":"r2.10 cherry-pick: f3f9cb38ecf \"Validate the rank and number of elements of the `num_bits` tensor for QuantizeAndDequantizeV3.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/f3f9cb38ecfe5a8a703f2c4a8fead434ef291713","created_at":"2022-08-09T23:41:05Z","closed_at":"2022-08-10T18:49:39Z","merged_at":"2022-08-10T18:49:39Z","user_id":16359713,"sentiment":{"polarity":-0.8,"subjectivity":0.9}}
{"_id":1022069512,"title":"r2.10 cherry-pick: aca766ac769 \"Fix tf.raw_ops. QuantizedMatMul vulnerability from non scalar min/max a/b arguments.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/aca766ac7693bf29ed0df55ad6bfcc78f35e7f48","created_at":"2022-08-09T23:31:09Z","closed_at":"2022-08-10T18:49:28Z","merged_at":"2022-08-10T18:49:27Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1022054156,"title":"r2.10 cherry-pick: e9863e9a9cb \"Fix tf.raw_ops.EmptyTensorList vulnerability from non scalar `num_elements`.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/e9863e9a9cbde182fc86d03be8081dd45aa9aaa3","created_at":"2022-08-09T23:01:30Z","closed_at":"2022-08-10T18:49:04Z","merged_at":"2022-08-10T18:49:04Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1022053348,"title":"[oneDNN] Enable fp32 & bf16 Einsum for CPU by default","body":"1. Adding support for MklEinsum by default ie. without #ifdef ENABLE_MKL.\r\nSo, with oneDNN enabled, it will use MklEisum for better performance.\r\n2. Also, adding Einsum to the auto_mixed_precision ALLOWLIST so that this op can run in BF16.","created_at":"2022-08-09T22:59:50Z","closed_at":"2022-10-12T16:20:22Z","merged_at":"2022-10-12T16:20:22Z","user_id":42224728,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1022051672,"title":"r2.10 cherry-pick: [oneDNN-aarch64] Fix regression from fusing conv+batchnorm","body":"Original PR: https://github.com/tensorflow/tensorflow/pull/57059\r\n\r\nThis fix results in 10-15% speedup on models from TF-Hub, e.g., MobileNet and ResNet.","created_at":"2022-08-09T22:58:10Z","closed_at":"2022-08-10T18:48:49Z","merged_at":"2022-08-10T18:48:49Z","user_id":38085909,"sentiment":{"polarity":-0.75,"subjectivity":1.0}}
{"_id":1022003890,"title":"r2.10 cherry-pick: [oneDNN] Fix memory corruption issues","body":"Avoid memory corruption issues by disabling onednn side primitive cache.\r\n\r\nOriginal PR: https://github.com/tensorflow/tensorflow/pull/57044","created_at":"2022-08-09T21:39:25Z","closed_at":"2022-08-10T18:48:35Z","merged_at":"2022-08-10T18:48:35Z","user_id":38085909,"sentiment":{"polarity":-0.75,"subjectivity":1.0}}
{"_id":1021938964,"title":"Fix endianness issue in Tensor::BitcastFrom() on s390x","body":"The following Bitcast related test cases would fail on s390x (BE machines):\r\n\r\n- `//tensorflow/python/ops/ragged:ragged_bitcast_op_test`\r\n- `//tensorflow/compiler/tests:cast_ops_test_cpu`\r\n- `//tensorflow/compiler/tests:cast_ops_test_cpu_mlir_bridge_test`\r\n\r\nI found the root cause is that the basic Bitcast operation in `Tensor::BitcastFrom()` only reuses the input buffer, see https://github.com/tensorflow/tensorflow/blob/55782dc6b8276eddce25f56fe97aacd0fc3c6fe7/tensorflow/core/framework/tensor.cc#L757, which would cause the endianness issue on BE machines when bit-casting between types of different sizes.\r\n\r\nThis PR made code changes in `tensor.cc` which use `tensor::DeepCopy()` function to allocate a new buffer for the output in `BitcastFrom()` function on BE machines when the types are of different sizes, since the output buffer needs to be swapped to solve the endianness issue and the input buffer shouldn’t be affected. After applying this PR, the above test cases could pass on BE machines.\r\n\r\nThis code change would not cause any regressions on existing test cases and it won't affect LE machines.\r\n\r\nSigned-off-by: Kun-Lu <kun.lu@ibm.com>","created_at":"2022-08-09T20:18:08Z","closed_at":"2022-10-28T16:01:49Z","merged_at":"2022-10-28T16:01:48Z","user_id":78156688,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1021938343,"title":"r2.10 cherry-pick: c9bc6ad023b \"[tf.data] Fix return value type in `tf.data.Dataset.save` documentation.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/c9bc6ad023b42195c3ab0ddb824b974146351ad1","created_at":"2022-08-09T20:17:22Z","closed_at":"2022-08-10T18:48:23Z","merged_at":"2022-08-10T18:48:23Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1021907495,"title":"Fix endianness issue in BitcastConvert operation of HloEvaluator on s390x","body":"Test case `//tensorflow/compiler/xla/tests:bitcast_convert_test_cpu` would fail on s390x (BE machines). This test case applies two XLA backends (HOST/CPU and Interpreter) to execute the `BitcastConvertHloTest` and compare the results. However, the `Interpreter` backend which executes the graph with built-in `HloEvaluator` uses direct memory copy when performing Bitcast operations, which causes the endianness issue on BE machines.\r\n\r\nThis patch will do two rounds of endianness swap after direct memory copy in `LiteralBase::BitcastConvert()` function, which would be invoked by `HloEvaluator` to evaluate HLO modules containing `Bitcast` instructions. The first swap is based on the input data type, while the second one is based on the output data type. After applying the code change, all HLO subtests in `//tensorflow/compiler/xla/tests:bitcast_convert_test_cpu` could pass.\r\n\r\nThis code change would not cause any regressions on existing test cases and it won't affect LE machines.\r\n\r\nSigned-off-by: Kun-Lu <kun.lu@ibm.com>","created_at":"2022-08-09T19:40:56Z","closed_at":"2022-09-27T11:01:44Z","merged_at":"2022-09-27T11:01:44Z","user_id":78156688,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1021893562,"title":"[ROCm] Fix ROCm specific reduction_vectorization_test unit test failure.","body":"/cc @cheshire ","created_at":"2022-08-09T19:24:13Z","closed_at":"2022-08-16T07:39:39Z","merged_at":"2022-08-16T07:39:39Z","user_id":70280935,"sentiment":{"polarity":-0.15833333333333335,"subjectivity":0.21250000000000002}}
{"_id":1021859005,"title":"r2.10 cherry-pick: e472bb45b82 \"Fix stale documentation for `tf.data.Dataset.load()`.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/e472bb45b82fbc25f7d36479a58277a11cf433f2","created_at":"2022-08-09T18:44:00Z","closed_at":"2022-08-09T18:59:51Z","merged_at":"2022-08-09T18:59:51Z","user_id":16359713,"sentiment":{"polarity":-0.5,"subjectivity":0.5}}
{"_id":1021854662,"title":"r2.10 cherry-pick: 741777a876c \"Fix out of range index error.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/741777a876c486888e97b82e3d3c502e76061904","created_at":"2022-08-09T18:38:52Z","closed_at":"2022-08-09T18:59:38Z","merged_at":"2022-08-09T18:59:37Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1021767670,"title":"Disable optimising batch norm as sequence of post ops on AArch64","body":"MKL Tensorflow fuses batch normalisation with convolution by rewriting it as a sequence of four postops (subtraction, two multiplications and addition). When running convolution with postops using Arm Compute Library (ACL) this leads to poorer performance then running ACL convolution followed by ACL batch normalisation, because postops cannot be fused in ACL and are executed sequentially one after the other instead in a single step. This patch disables fusing batch normalisation with convolution as post ops on AArch64 to remove the performance bottleneck","created_at":"2022-08-09T17:05:08Z","closed_at":"2022-08-09T21:56:09Z","merged_at":"2022-08-09T21:56:09Z","user_id":79916358,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1021598292,"title":"Add support for int8 for SplitV and OneHot","body":"Adds support for int8 for SplitV and OneHot ops to allow for lower memory consumption.\r\n\r\nCloses #56785.","created_at":"2022-08-09T14:29:35Z","closed_at":"2022-09-08T17:39:51Z","merged_at":"2022-09-08T17:39:51Z","user_id":5785856,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1021457634,"title":"Don't set MLIR_TABLEGEN_EXE","body":"With llvm/llvm-project@112499f landed, `MLIR_TABLEGEN_EXE` is given as a\r\ncache variable in the MLIR core project. Other external projects, such\r\nas MLIR-HLO, should not set the variable as this breaks cross-compilation.\r\n\r\nIt might be necessary to wait for the integrate commit that lands commit\r\nllvm/llvm-project@112499f, before this one can be merged.","created_at":"2022-08-09T12:29:43Z","closed_at":"2022-08-10T18:42:52Z","merged_at":"2022-08-10T18:42:52Z","user_id":8095156,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1021422656,"title":"Remove logging of mac count to stdout during flatbuffer_export phase.","body":"Logging the mac count to stdout should be avoided since it bypasses the verbosity-controlled logging mechanism and it creates an echo in stdout.","created_at":"2022-08-09T11:56:18Z","closed_at":"2022-08-11T15:41:44Z","merged_at":"2022-08-11T15:41:44Z","user_id":75073361,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1021270556,"title":"Remove logging of mac count to stdout during flatbuffer_export phase.","body":"Logging the mac count to stdout should be avoided since it bypasses the verbosity-controlled logging mechanism and it creates an echo in case that the verbosity level is set to INFO or higher.","created_at":"2022-08-09T09:29:41Z","closed_at":"2022-08-09T11:53:23Z","merged_at":"2022-08-09T11:53:23Z","user_id":75073361,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1021246146,"title":"Remove logging of mac count to stdout during flatbuffer_export phase.","body":null,"created_at":"2022-08-09T09:06:48Z","closed_at":"2022-08-09T09:14:08Z","merged_at":null,"user_id":75073361,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1021048788,"title":"Propose file change","body":"I am looking to start contributing to OSS on GitHub and trying it out first with some simple grammar fixes. Also, I signed the Contributor License Agreement (CLA).","created_at":"2022-08-09T05:12:09Z","closed_at":"2022-08-22T22:26:59Z","merged_at":null,"user_id":49926511,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1020985974,"title":"Update - Text Classification","body":null,"created_at":"2022-08-09T03:19:47Z","closed_at":"2022-10-31T19:18:17Z","merged_at":"2022-10-31T19:18:17Z","user_id":77369648,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1020841974,"title":"Propose file change","body":null,"created_at":"2022-08-08T22:50:00Z","closed_at":"2022-08-09T05:09:37Z","merged_at":null,"user_id":49926511,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1020748561,"title":"[oneDNN] Disabling onednn side primitive cache","body":"This PR disables oneDNN side primitive cache for the time being. We found some memory corruption issues while internally testing a change to the allocator and until we fix the issue, we want to disable the prim cache. We have a fwk side primitive cache for most oneDNN kernels , so we don't expect significant loss of performance.","created_at":"2022-08-08T20:51:49Z","closed_at":"2022-08-09T19:13:46Z","merged_at":"2022-08-09T19:13:45Z","user_id":39842562,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1020339104,"title":"[XLA] Add debug print to all tests","body":"A subset of PR https://github.com/tensorflow/tensorflow/pull/57020/ that only change test logs.","created_at":"2022-08-08T14:03:25Z","closed_at":"2022-08-10T10:32:26Z","merged_at":"2022-08-10T10:32:26Z","user_id":180987,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1019350646,"title":"fix build of tensorflow/tensorflow/lite/c with cmake","body":"Hi,\r\n\r\nThis PR is fixing compilation of tensorflow/tensorflow/lite/c using cmake.\r\nThis is broken in v2.9.1 and was working with v2.8.0\r\n\r\nAfter this modification it is possible to run : \r\n```\r\nmkdir build && cd build && cmake ../tensorflow/lite/c\r\n```\r\n\r\nBest Regards,\r\nMichel.","created_at":"2022-08-06T14:10:29Z","closed_at":"2022-08-08T09:25:00Z","merged_at":null,"user_id":1367630,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1019203870,"title":"r2.10 cherry-pick: [oneDNN] Fix duplicate class name (MklEltwiseFwdPrimitive)","body":"Original PR: https://github.com/tensorflow/tensorflow/pull/56371","created_at":"2022-08-05T23:54:20Z","closed_at":"2022-08-09T14:58:29Z","merged_at":"2022-08-09T14:58:29Z","user_id":38085909,"sentiment":{"polarity":-0.75,"subjectivity":1.0}}
{"_id":1019200108,"title":"r2.10 cherry-pick: [PluggableDevice] Minor Grappler C API fixes","body":"This PR cherry-picks two minor Grappler C API fixes from two PRs:\r\n* https://github.com/tensorflow/tensorflow/pull/55579\r\n* https://github.com/tensorflow/tensorflow/pull/55544\r\n","created_at":"2022-08-05T23:38:15Z","closed_at":"2022-08-09T14:58:20Z","merged_at":"2022-08-09T14:58:20Z","user_id":38085909,"sentiment":{"polarity":-0.4,"subjectivity":0.6000000000000001}}
{"_id":1019193449,"title":"r2.10 cherry-pick: Update oneDNN version for aarch64, increase aarch64 test coverage","body":"oneDNN version update is necessary for performance and bug fixes.\r\n\r\nThis cherrypick combines commits from several PRs, because all of them modify cpu_arm64_pip.sh: \r\n* https://github.com/tensorflow/tensorflow/pull/56933\r\n* https://github.com/tensorflow/tensorflow/pull/56811\r\n* https://github.com/tensorflow/tensorflow/pull/56972\r\n* https://github.com/tensorflow/tensorflow/pull/56975\r\n* https://github.com/tensorflow/tensorflow/pull/57009\r\n\r\nIf we have separate cherry-pick PRs, we will need to keep track of the PR merge order, so it's better to just combine them into one PR.\r\n","created_at":"2022-08-05T23:16:46Z","closed_at":"2022-08-09T14:58:11Z","merged_at":"2022-08-09T14:58:11Z","user_id":38085909,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1019138398,"title":"r2.10 cherry-pick: [oneDNN-aarch64] Fix stale tensor retrieval ","body":"Original PR: https://github.com/tensorflow/tensorflow/pull/56218","created_at":"2022-08-05T22:01:47Z","closed_at":"2022-08-09T14:57:39Z","merged_at":"2022-08-09T14:57:39Z","user_id":38085909,"sentiment":{"polarity":-0.625,"subjectivity":0.75}}
{"_id":1019118999,"title":"Attempted workaround for reduce_mean with Hexagon delegates","body":"Attempted workaround for reduce_mean - bump the index for axes reducing over by the number of 'padding' dimensions of size one we add when the input tensor is rank < 4.\r\n\r\nI've tesetd this using the benchmarking program and the Hexagon delegate, but I need some help cleaning it up.  Currently, it leaks memory, and there is an error relating to trying to add a duplicate tensor (`ERROR: Trying to add duplicate tensor without overwrite, tflite_tensor_id 1, hexagon_node_id 16, hexagon_node_output_id 0`).\r\n\r\nI can't mutate the `axes_tensor` directly (I think because the allocation type is `kTfLiteMmapRo`) and get a segmentation fault if I try.\r\n\r\n### The problem (#57026)\r\n\r\nWhen feeding a model with a `reduce_foo` op and a fixed axis to reduce on, we get:\r\n    \r\nInput tensor shape -> [1, 48, 768]\r\nAxis = 2\r\nOutput tensor shape -> [1, 48, 1]\r\n    \r\nbut in the hexagon delegate we pad the dimensions to make it 4D for nnlib, so we\r\nhave:\r\n    \r\nInput tensor shape -> [1, 1, 48, 768]\r\nAxis = 2\r\nOutput tensor shape -> [1, 1, 1, 768]\r\n\r\nand so get messages like:\r\n\r\n```\r\nLog\r\nhexagon/ops/src/op_reducing_mean.c:268:Output tensor is of size 48, but expected output tensor of size 768\r\nhexagon/src/execute.c:167:execute() failed on node id=1b err=-1\r\nhexagon/src/interface.c:1297:fail in execute_inner()\r\n```\r\nfrom nnlib when trying to run.\r\n","created_at":"2022-08-05T21:47:07Z","closed_at":"2022-08-16T17:21:35Z","merged_at":null,"user_id":50339167,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1019074985,"title":"[XLA:GPU] HorizontalLoopFusion now generates a cleaner graph","body":"This ask less works by other optimization pass.\r\nThis is a safe subset of another PR. \r\nIn case of revert, it will revert less changes.\r\nThe main changes are:\r\n- Only insert bitcast when needed.\r\n- Only insert reshape when needed.\r\n- Remove old HloComputation when not needed.\r\n\r\nThis also update the tests for the above change.","created_at":"2022-08-05T20:43:24Z","closed_at":"2022-08-31T10:03:42Z","merged_at":"2022-08-31T10:03:42Z","user_id":180987,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1018031910,"title":"[TF-TRT] Add LogSoftmax Support for TF-TRT","body":"This PR adds TF-TRT support to `tf.nn.log_softmax` operation.  This is performed using the formula `logsoftmax = logits - log(reduce_sum(exp(logits), axis=-1))` .  The implemented TRT layers are fused into a single op.   \r\n\r\n@DEKHTIARJonathan @tfeher : Please review the changes.","created_at":"2022-08-04T21:27:44Z","closed_at":"2022-08-13T16:42:01Z","merged_at":null,"user_id":33809857,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1017891834,"title":"Cloning from master","body":"Cloning from master","created_at":"2022-08-04T18:27:34Z","closed_at":"2022-08-04T18:27:47Z","merged_at":"2022-08-04T18:27:47Z","user_id":73069040,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1017722888,"title":"Edit release notes TF-2.10.0-Rc0","body":"Formatting and Line wrap corrections","created_at":"2022-08-04T15:38:40Z","closed_at":"2022-08-04T15:46:14Z","merged_at":"2022-08-04T15:46:14Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1017649373,"title":"Remove more unit tests from exclude list as they now pass","body":"These tests were broken with numpy>=1.23.0 as they relied\r\non deprecated behaviour that has now been removed. The\r\ncode has now been updated to work without needing the old\r\ndeprecated behaviour.","created_at":"2022-08-04T14:48:24Z","closed_at":"2022-08-05T22:30:03Z","merged_at":"2022-08-05T22:30:03Z","user_id":10442001,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":1017451373,"title":"[TF C API] Add TF_SetShape C API","body":"C API to set shape of tensor is missing. This API is required by TF Plugin to modify shapes of existing tensors.\r\n\r\nSigned-off-by: Aakar Dwivedi <Aakar.Dwivedi@amd.com>\r\nReviewed-by: Chandra Kumar Ramasamy <ChandraKumar.Ramasamy@amd.com>","created_at":"2022-08-04T12:14:02Z","closed_at":"2022-08-05T19:02:00Z","merged_at":"2022-08-05T19:01:59Z","user_id":82587125,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1017305907,"title":"[MHLO] fix cmake build dependencies","body":"* [MHLO] fix cmake build dependencies\r\n* BTW, I think the cmake build system of MHLO should be reorganized.","created_at":"2022-08-04T09:49:39Z","closed_at":"2023-01-03T01:19:36Z","merged_at":null,"user_id":29956693,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1017058455,"title":"Bump keras version now that keras 2.10.0rc0 is released","body":null,"created_at":"2022-08-04T05:19:37Z","closed_at":"2022-08-04T05:20:11Z","merged_at":"2022-08-04T05:20:10Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1016437194,"title":"Update - Text classification","body":"## PR Description\r\n\r\n### What did you do ?\r\n\r\n- [x] Update the Text Classification to use TFLite Task Library to demo how to use the trained models","created_at":"2022-08-03T15:01:05Z","closed_at":"2022-08-09T02:57:04Z","merged_at":null,"user_id":77369648,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1015464174,"title":"Fix Failing XLA GEMM Rewrite Test","body":"Removes the `selected_algorithm` attribute from the HLO patterns in the XLA GEMM rewrite test and allows the test to pass. The attribute is optional and is currently only set during autotuning.","created_at":"2022-08-02T18:38:00Z","closed_at":"2022-08-30T22:26:53Z","merged_at":"2022-08-30T22:26:53Z","user_id":80296164,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1015416498,"title":"tensorflow/python/kernel_tests/image_ops/extract_image_patches_grad_t…","body":"…est_gpu.runfiles/org_tensorflow/bazel_pip/tensorflow/python/kernel_tests/image_ops/extract_image_patches_grad_test.py flaky in docker\r\n\r\nDevInfra is working on TF 2.10.0 release builds, and docker release builds are failing because of the 'extract_image_patches_grad_test_gpu' changes. I'm disabling the test for TF's oss tests.","created_at":"2022-08-02T17:53:46Z","closed_at":"2022-08-02T17:54:46Z","merged_at":"2022-08-02T17:54:45Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1015412406,"title":"[TF-TRT] Fail gracefully if calibration error occurs","body":"This PR enables native segment fallback during calibration failure. Previously, an  engine building error during INT8 calibration terminated the conversion.","created_at":"2022-08-02T17:51:02Z","closed_at":"2022-08-11T22:42:10Z","merged_at":"2022-08-11T22:42:10Z","user_id":3671106,"sentiment":{"polarity":-0.5,"subjectivity":0.29999999999999993}}
{"_id":1015411529,"title":"r2.10 cherry-pick: Fix failing unit-test conv_ops_test_cpu ","body":"Fix failing unit test: //tensorflow/python/kernel_tests/nn_ops:conv_ops_test_cpu\r\n\r\nOriginal PR: https://github.com/tensorflow/tensorflow/pull/56948","created_at":"2022-08-02T17:50:26Z","closed_at":"2022-08-09T14:57:29Z","merged_at":"2022-08-09T14:57:29Z","user_id":38085909,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1015393565,"title":"tensorflow/python/kernel_tests/image_ops/extract_image_patches_grad_t…","body":"…est_gpu.runfiles/org_tensorflow/bazel_pip/tensorflow/python/kernel_tests/image_ops/extract_image_patches_grad_test.py flaky in docker\r\n\r\nDevInfra is working on TF 2.10.0 release builds, and docker release builds are failing because of the 'extract_image_patches_grad_test_gpu' changes. I'm disabling the test for TF's oss tests.","created_at":"2022-08-02T17:38:06Z","closed_at":"2022-08-02T17:43:12Z","merged_at":null,"user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1015212198,"title":"[TF C API] Added TF_GetMutableOutput C API","body":"C API to get the mutable output tensor is missing. This API is required by the TF Plugin for forwarding the input to output.\r\n\r\nSigned-off-by: Chandra Kumar Ramasamy <ChandraKumar.Ramasamy@amd.com>\r\nReviewed-by: Aakar Dwivedi <Aakar.Dwivedi@amd.com>","created_at":"2022-08-02T14:42:58Z","closed_at":"2022-08-18T18:37:53Z","merged_at":"2022-08-18T18:37:53Z","user_id":82651473,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1014909728,"title":"Change lib name from MLIRTosa to MLIRTosaDialect","body":"to match upstream changes in https://github.com/llvm/llvm-project/commit/e16d13322b2617843511aebb29a502166824b07a","created_at":"2022-08-02T10:10:12Z","closed_at":"2022-09-13T09:19:50Z","merged_at":null,"user_id":320163,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1014627375,"title":"[ROCm] Enable fusion ops to be MLIR generated on ROCm.","body":"/cc @cheshire @chsigg ","created_at":"2022-08-02T05:17:29Z","closed_at":"2022-08-09T14:57:16Z","merged_at":"2022-08-09T14:57:16Z","user_id":70280935,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1014509831,"title":"Disable the flaky random_generator_test for upcoming Docker tests","body":"DevInfra is working on TF 2.10.0 release builds, and docker release builds are failing because of the 'random_generator_test_cpu' test changes.\r\nI'm disabling the test for TF's oss tests.","created_at":"2022-08-02T01:17:46Z","closed_at":"2022-08-02T01:18:45Z","merged_at":"2022-08-02T01:18:45Z","user_id":106367904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1014393423,"title":"Updates oneDNN version for AArch64 builds.","body":"Moves oneDNN version for AArch64 build from v2.6 to https://github.com/oneapi-src/oneDNN/commit/70d1198de554e61081147c199d661df049233279\r\n\r\nIncludes fixes to matmul broadcase which resolves a number\r\nof unit test failures - https://github.com/oneapi-src/oneDNN/pull/1380\r\n\r\nRemoves superfluous patches for oneDNN 2.6.","created_at":"2022-08-01T22:02:14Z","closed_at":"2022-08-05T02:46:20Z","merged_at":"2022-08-05T02:46:20Z","user_id":32057673,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1014262038,"title":"remove unused test flags for arm builds","body":"Removing `-nopip,-no_pip` flags as they are added by the pip_new.sh script https://github.com/tensorflow/tensorflow/blob/5e7c4a9fc98caee07b41d758d9648a72080f811b/tensorflow/tools/ci_build/builds/pip_new.sh#L185","created_at":"2022-08-01T19:34:20Z","closed_at":"2022-08-05T02:59:53Z","merged_at":"2022-08-05T02:59:53Z","user_id":22492939,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1014259411,"title":"[ROCm] The following commit enabled MLIR generation for fusion ops by…","body":"… default:\r\n\r\nhttps://github.com/tensorflow/tensorflow/commit/e3fb392bad8c79a65131ca2470ee4db2c5860b8c\r\n\r\nThis caused Nvidia CUDA IR to be generated even on the ROCm platform.\r\n\r\nThis commit fixes this by emitting AMDGPU IR on ROCm builds.\r\n\r\n/cc @cheshire @chsigg ","created_at":"2022-08-01T19:31:18Z","closed_at":"2022-08-07T08:42:43Z","merged_at":"2022-08-07T08:42:43Z","user_id":70280935,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":1012627900,"title":"[XLA] [Docs] Add a known issue: must-be-constant inputs as functions of induction variables","body":"\r\nUsers sometimes get hit by having TF loops collide with must-be-constant inputs to XLA, e.g. https://github.com/tensorflow/tensorflow/issues/56769#issuecomment-1184715463","created_at":"2022-07-30T11:22:22Z","closed_at":"2022-08-01T18:23:23Z","merged_at":"2022-08-01T18:23:23Z","user_id":348959,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1012477040,"title":"Update version numbers for TensorFlow 2.10.0-rc0","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 10 -> 10\nPatch: 0 -> 0\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.10.0\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/tensorflow.bzl:64:2.10.0\ntensorflow/workspace2.bzl:655:2.10.0\ntensorflow/workspace2.bzl:655:2.10.0\ntensorflow/workspace2.bzl:656:2.10.0\ntensorflow/workspace2.bzl:656:2.10.0\ntensorflow/lite/tools/versioning/runtime_version.cc:327:2.10.0\ntensorflow/lite/tools/versioning/runtime_version.cc:383:2.10.0\ntensorflow/lite/tools/versioning/runtime_version.cc:384:2.10.0\ntensorflow/lite/tools/versioning/runtime_version.cc:385:2.10.0\ntensorflow/lite/tools/versioning/runtime_version.cc:386:2.10.0\nBinary file tensorflow/cc/saved_model/testdata/bert2/saved_model.pb matches\nBinary file tensorflow/cc/saved_model/testdata/bert1/saved_model.pb matches\ntensorflow/tools/pip_package/setup_partner_builds.py:43:2.10.0\ntensorflow/tools/pip_package/setup.py:48:2.10.0\ntensorflow/tools/pip_package/setup.py:113:2.10.0\ntensorflow/tools/pip_package/setup.py:115:2.10.0\ntensorflow/tools/pip_package/setup.py:117:2.10.0\ntensorflow/tools/ci_build/release/requirements_common.txt:27:2.10.0\ntensorflow/tools/ci_build/release/requirements_common.txt:29:2.10.0\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.10.0\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/tensorflow.bzl:64:2.10.0\ntensorflow/workspace2.bzl:655:2.10.0\ntensorflow/workspace2.bzl:655:2.10.0\ntensorflow/workspace2.bzl:656:2.10.0\ntensorflow/workspace2.bzl:656:2.10.0\ntensorflow/lite/tools/versioning/runtime_version.cc:327:2.10.0\ntensorflow/lite/tools/versioning/runtime_version.cc:383:2.10.0\ntensorflow/lite/tools/versioning/runtime_version.cc:384:2.10.0\ntensorflow/lite/tools/versioning/runtime_version.cc:385:2.10.0\ntensorflow/lite/tools/versioning/runtime_version.cc:386:2.10.0\nBinary file tensorflow/cc/saved_model/testdata/bert2/saved_model.pb matches\nBinary file tensorflow/cc/saved_model/testdata/bert1/saved_model.pb matches\ntensorflow/tools/pip_package/setup_partner_builds.py:43:2.10.0\ntensorflow/tools/pip_package/setup.py:48:2.10.0\ntensorflow/tools/pip_package/setup.py:113:2.10.0\ntensorflow/tools/pip_package/setup.py:115:2.10.0\ntensorflow/tools/pip_package/setup.py:117:2.10.0\ntensorflow/tools/ci_build/release/requirements_common.txt:27:2.10.0\ntensorflow/tools/ci_build/release/requirements_common.txt:29:2.10.0\n```","created_at":"2022-07-30T00:54:12Z","closed_at":"2022-07-30T01:19:03Z","merged_at":"2022-07-30T01:19:03Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1012457169,"title":"r2.10 cherry-pick: 8326f697020 \"Modify update_version.py to change versions for partner builds setup file as well\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/8326f697020bd7ba768bce5e327318b6efc95a47","created_at":"2022-07-29T23:36:36Z","closed_at":"2022-07-29T23:43:02Z","merged_at":"2022-07-29T23:43:02Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1012408316,"title":"Update version numbers for TensorFlow 2.10.0-rc0","body":"Same as #56949 but with the version change also in `tensorflow/tools/pip_package/setup_partner_builds.py`","created_at":"2022-07-29T22:46:29Z","closed_at":"2022-07-30T01:00:18Z","merged_at":null,"user_id":29348997,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1012360048,"title":"Update version numbers for TensorFlow 2.10.0-rc0","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 10 -> 10\nPatch: 0 -> 0\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.10.0\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/workspace2.bzl:655:2.10.0\ntensorflow/workspace2.bzl:655:2.10.0\ntensorflow/workspace2.bzl:656:2.10.0\ntensorflow/workspace2.bzl:656:2.10.0\nBinary file tensorflow/cc/saved_model/testdata/bert2/saved_model.pb matches\nBinary file tensorflow/cc/saved_model/testdata/bert1/saved_model.pb matches\ntensorflow/tools/pip_package/setup.py:48:2.10.0\ntensorflow/tools/pip_package/setup.py:113:2.10.0\ntensorflow/tools/pip_package/setup.py:115:2.10.0\ntensorflow/tools/pip_package/setup.py:117:2.10.0\ntensorflow/tools/pip_package/setup_partner_builds.py:43:2.10.0\ntensorflow/tools/ci_build/release/requirements_common.txt:27:2.10.0\ntensorflow/tools/ci_build/release/requirements_common.txt:29:2.10.0\ntensorflow/tensorflow.bzl:64:2.10.0\ntensorflow/lite/tools/versioning/runtime_version.cc:327:2.10.0\ntensorflow/lite/tools/versioning/runtime_version.cc:383:2.10.0\ntensorflow/lite/tools/versioning/runtime_version.cc:384:2.10.0\ntensorflow/lite/tools/versioning/runtime_version.cc:385:2.10.0\ntensorflow/lite/tools/versioning/runtime_version.cc:386:2.10.0\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.10.0\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/workspace2.bzl:655:2.10.0\ntensorflow/workspace2.bzl:655:2.10.0\ntensorflow/workspace2.bzl:656:2.10.0\ntensorflow/workspace2.bzl:656:2.10.0\nBinary file tensorflow/cc/saved_model/testdata/bert2/saved_model.pb matches\nBinary file tensorflow/cc/saved_model/testdata/bert1/saved_model.pb matches\ntensorflow/tools/pip_package/setup.py:48:2.10.0\ntensorflow/tools/pip_package/setup.py:113:2.10.0\ntensorflow/tools/pip_package/setup.py:115:2.10.0\ntensorflow/tools/pip_package/setup.py:117:2.10.0\ntensorflow/tools/pip_package/setup_partner_builds.py:43:2.10.0\ntensorflow/tools/ci_build/release/requirements_common.txt:27:2.10.0\ntensorflow/tools/ci_build/release/requirements_common.txt:29:2.10.0\ntensorflow/tensorflow.bzl:64:2.10.0\ntensorflow/lite/tools/versioning/runtime_version.cc:327:2.10.0\ntensorflow/lite/tools/versioning/runtime_version.cc:383:2.10.0\ntensorflow/lite/tools/versioning/runtime_version.cc:384:2.10.0\ntensorflow/lite/tools/versioning/runtime_version.cc:385:2.10.0\ntensorflow/lite/tools/versioning/runtime_version.cc:386:2.10.0\n```","created_at":"2022-07-29T21:24:42Z","closed_at":"2022-07-30T00:59:44Z","merged_at":null,"user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1012356906,"title":"[oneDNN] Fix failing test //tensorflow/python/kernel_tests/nn_ops:conv_ops_test_cpu","body":"The test started failing with this commit https://github.com/tensorflow/tensorflow/commit/50156d547b9a1da0144d7babe665cf690305b33c \r\n\r\nI am introducing similar check in the Mkl kernel.\r\n\r\nError message :\r\n[ RUN      ] Conv2DTest.testConv2DBackpropInputInvalidOutBackpropRaiseError\r\n2022-07-29 22:04:15.472870: F ./tensorflow/core/util/tensor_format.h:427] Check failed: index >= 0 && index < num_total_dims Invalid index from the dimension: 0, 0, N\r\nFatal Python error: Aborted\r\n\r\n","created_at":"2022-07-29T21:18:31Z","closed_at":"2022-08-02T17:29:31Z","merged_at":"2022-08-02T17:29:31Z","user_id":42224728,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1012328787,"title":"[oneDNN] Enable BF16 for AvgPool3D, MaxPool3D, AvgPool3DGrad, MaxPool3DGrad","body":"Enable BF16 Eigen kernels for AvgPool3D, MaxPool3D, AvgPool3DGrad, MaxPool3DGrad ops","created_at":"2022-07-29T20:30:54Z","closed_at":"2023-01-10T18:25:46Z","merged_at":"2023-01-10T18:25:46Z","user_id":42224728,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1011598583,"title":"Updated Task Library Text Tasks Documentation","body":null,"created_at":"2022-07-29T06:23:11Z","closed_at":"2022-10-24T17:41:23Z","merged_at":"2022-10-24T17:41:23Z","user_id":42828735,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1011549607,"title":"Fix NodeDefDataTypeAttributeName for Unary and Binary op converters.","body":"- To check the input data type, we need to know which attribute of the node defines it. The op converter defines [NodeDefDataTypeAttributeName()](https://github.com/tensorflow/tensorflow/blob/c1ed80d5e26c54bae9ff54eeaf9810fe744fab15/tensorflow/compiler/tf2tensorrt/convert/op_converter.h#L87) to return the name of the attribute.\r\n- The actual converters can override this. If an empty string is returned by NodeDefDataTypeAttributeName then [type checking is skipped](https://github.com/tensorflow/tensorflow/blob/c1ed80d5e26c54bae9ff54eeaf9810fe744fab15/tensorflow/compiler/tf2tensorrt/convert/op_converter.h#L98).\r\n- Previously the unary and binary op converters returned [empty string](https://github.com/tensorflow/tensorflow/blob/c1ed80d5e26c54bae9ff54eeaf9810fe744fab15/tensorflow/compiler/tf2tensorrt/convert/ops/unary_ops.cc#L198).\r\nThis bug is corrected in this PR.","created_at":"2022-07-29T04:50:44Z","closed_at":"2022-08-24T15:18:51Z","merged_at":"2022-08-24T15:18:50Z","user_id":32910461,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1011475354,"title":"Enable C++ profiles to be exported to TensorBoard","body":"Makes `ExportToTensorBoard()` publicly visibility to allow C++ applications to export profiles to TensorBoard. Also adds the symbol to `libtensorflow_framework.so` for C++ applications that link to the shared object.\r\n- Moves `ExportToTensorBoard()` to `tensorboard_export.h` and `tensorboard_export.cc`\r\n- Moves `PopulateNewProfileSessionRequest()`, `PopulateProfileRequest()`, and `PopulateMonitorRequest()` to `populate_request.h`, which is depended on by `tensorboard_export` and `capture_profile`\r\n\r\ncc: @DEKHTIARJonathan @meena-at-work @bixia1 ","created_at":"2022-07-29T02:06:45Z","closed_at":"2022-08-12T17:38:21Z","merged_at":null,"user_id":86808158,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1011400665,"title":"Update release notes for TensorFlow 2.10.0","body":"This PR is intentionally incomplete. One of the Release Owners for 2.10.0\nneeds to fill in the internal release notes for this version before the PR gets\nsubmitted. Click on the :pencil2: icon in the header for `RELEASE.md` under\n\"Files Changed\" above.","created_at":"2022-07-28T23:18:37Z","closed_at":"2022-07-29T18:52:04Z","merged_at":"2022-07-29T18:52:04Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1011383421,"title":"Fix out of range index error.","body":"Updated the out of range index logic from the invalid range.\r\nFixes: #56906","created_at":"2022-07-28T22:42:03Z","closed_at":"2022-08-05T18:55:42Z","merged_at":"2022-08-05T18:55:42Z","user_id":73069040,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1011130211,"title":"Register more types to DEVICE_DEFAULT for AssignVariableOp","body":"I ran into the same issue in this forum post (https://discuss.tensorflow.org/t/how-does-assignvarop-work/8335/5) when making a Pluggable Device.","created_at":"2022-07-28T17:53:41Z","closed_at":"2022-08-22T19:28:30Z","merged_at":"2022-08-22T19:28:30Z","user_id":16256045,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":1010903169,"title":"Allow re-init on same stream in cudamallocasync allocator.","body":"This fixes a bug in which destroying and re-creating a session causes the cuda_malloc_async allocator to fail.\r\n\r\nFor example, when `TF_GPU_ALLOCATOR` is set to `cuda_malloc_async` without this patch\r\n```python\r\nimport tensorflow as tf\r\ntf.compat.v1.disable_eager_execution()\r\nfor i in [0, 1]:\r\n    print(\"i={}\".format(i))\r\n    with tf.compat.v1.Session() as sess:\r\n        pass\r\n```\r\nresults in the error\r\n```\r\nF tensorflow/core/common_runtime/gpu/gpu_cudamallocasync_allocator.cc:390] Trying to set the stream twice. This isn't supported.\r\n```","created_at":"2022-07-28T14:27:23Z","closed_at":"2022-08-01T18:03:22Z","merged_at":null,"user_id":1873655,"sentiment":{"polarity":0.0,"subjectivity":0.125}}
{"_id":1010688817,"title":"Some unit tests are fixed and should be removed from exclude list","body":"Remove those unit tests that have been fixed, from the exclude list\r\nused by the AARCH64 CI/CD actions","created_at":"2022-07-28T11:14:46Z","closed_at":"2022-07-29T13:37:02Z","merged_at":"2022-07-29T13:37:02Z","user_id":10442001,"sentiment":{"polarity":0.1,"subjectivity":0.2}}
{"_id":1010114095,"title":"Enable BF16 for Conv3DBackpropFilterV2 and Conv3DBackpropFilterV2","body":"Register BF16 Eigen kernels for Conv3DBackpropFilterV2 and Conv3DBackpropFilterV2","created_at":"2022-07-27T20:52:05Z","closed_at":"2022-09-07T18:54:50Z","merged_at":"2022-09-07T18:54:49Z","user_id":42224728,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1009902796,"title":"Added a legalization for the TFL schema operator RELU_N1_TO_1 to TOSA…","body":"Added a legalization for the TFL schema operator RELU_N1_TO_1 to TOSA clamp and its framework tests.\r\n\r\nSigned-off-by: Jerry Ge <jerry.ge@arm.com>","created_at":"2022-07-27T16:59:22Z","closed_at":"2022-08-08T11:13:06Z","merged_at":"2022-08-08T11:13:06Z","user_id":24451859,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1009804394,"title":"Updates cpu_arm64_pip.sh to build with Eigen Threadpool support.","body":"https://github.com/tensorflow/tensorflow/pull/56790 adds support for\r\nEigen threadpool with oneDNN and Compute Library on AArch64.\r\n\r\nThis patch sets the --config=mkl_aarch64_threadpool option in place\r\nof mkl_aarch64 in the CI build script.\r\n\r\nThe OpenMP flags are also removed accordingly (note, these are set in\r\ntensorflow/third_party/compute_library/BUILD when required for an\r\nOpenMP (i.e. --config=mkl_aarch64) build.","created_at":"2022-07-27T15:20:01Z","closed_at":"2022-07-27T23:53:34Z","merged_at":"2022-07-27T23:53:33Z","user_id":32057673,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1009288009,"title":"Suppression of the logger messages.","body":"Implement the ability to suppress/unsuppress messages sent to the logger. \r\nThis feature can be very useful for suppressing error messages from tests that should fail.","created_at":"2022-07-27T07:21:17Z","closed_at":"2022-08-11T16:48:15Z","merged_at":"2022-08-11T16:48:15Z","user_id":32910461,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1009235094,"title":"Error in tensor parameter","body":"There is an error in the tensor quantization parameter, causing the result to overflow\r\n\r\nSigned-off-by: Chen Xin <jack.chen@verisilicon.com>","created_at":"2022-07-27T06:10:41Z","closed_at":"2022-12-02T12:43:15Z","merged_at":null,"user_id":57057788,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1008999636,"title":"[ROCM] Enable bfloat16 unit test case","body":null,"created_at":"2022-07-26T21:59:34Z","closed_at":"2022-07-30T10:14:21Z","merged_at":"2022-07-30T10:14:21Z","user_id":4212398,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1008952704,"title":"Fix failing unit tests quantization_ops:quantization_ops_test","body":"\r\nThe failure was reported in https://github.com/tensorflow/tensorflow/issues/56861. This PR fixes the issue.","created_at":"2022-07-26T20:50:54Z","closed_at":"2022-07-27T23:30:51Z","merged_at":"2022-07-27T23:30:51Z","user_id":42224728,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1008907417,"title":"ppc64le: set 'gold' linker in the configure.py to fix ppc build","body":"The commit 3484416b49d4af6742e0e1290dd75364a276131d removed the\r\n'rules_cc_toolchains' call from the bazel configuration. After that,\r\nthe build process is calling 'lld' to link several binaries, causing\r\nproblems on ppc64le arch.\r\n\r\nThis patch set the 'gold' linker as default in the configure script.","created_at":"2022-07-26T19:53:15Z","closed_at":"2022-12-29T22:39:15Z","merged_at":"2022-12-29T22:39:15Z","user_id":2990132,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1008813128,"title":"Correction of some minor errors in the Tile Converter testing procedure.","body":"Some tests were launched with incorrect parameters and because of that a bunch of useless error messages were generated when the multipliers were passed as tensors.\r\n","created_at":"2022-07-26T17:56:16Z","closed_at":"2022-07-28T18:43:48Z","merged_at":"2022-07-28T18:43:48Z","user_id":32910461,"sentiment":{"polarity":-0.05,"subjectivity":0.2}}
{"_id":1008480853,"title":"Change XLA bincount determinism string rationale","body":"Add a more detailed pointer to the CUB determinism constrains","created_at":"2022-07-26T12:46:02Z","closed_at":"2022-07-28T00:54:10Z","merged_at":"2022-07-28T00:54:10Z","user_id":1710528,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1008347209,"title":"Case error","body":null,"created_at":"2022-07-26T10:35:17Z","closed_at":"2022-07-26T10:36:02Z","merged_at":null,"user_id":57057788,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1008318123,"title":"Update aarch64 skip-test list","body":"Adding `kernel_tests/quantization_ops:quantization_ops_test` as it was recently modified and breaks the pipeline.\r\n\r\nRemoving `kernel_tests/nn_ops:pooling_ops_3d_test_cpu` as it was fixed recently.","created_at":"2022-07-26T10:09:29Z","closed_at":"2022-07-26T19:06:43Z","merged_at":"2022-07-26T19:06:43Z","user_id":22492939,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1008316946,"title":"Disable running of quantization_ops_test on AARCH64 MKL build","body":"This is a workaround until the issue #56861 can be resolved.","created_at":"2022-07-26T10:08:21Z","closed_at":"2022-07-26T19:07:59Z","merged_at":null,"user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1007891541,"title":"[mhlo] specify the include dirs are from build","body":"Otherwise, the cmake command will fail when the project is built within LLVM.","created_at":"2022-07-25T23:54:20Z","closed_at":"2022-07-27T11:58:45Z","merged_at":"2022-07-27T11:58:45Z","user_id":4314836,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1007711235,"title":"Removing the use of Tile Converter for multipliers passed as tensors","body":"Using the Tile Converter for multipliers passed as tensors is blocked until an issue found in our tests is fixed.","created_at":"2022-07-25T19:58:46Z","closed_at":"2022-07-26T15:30:10Z","merged_at":null,"user_id":32910461,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1007304344,"title":"[DOC, XLA] Now TF use int64_t, not int64.","body":null,"created_at":"2022-07-25T13:20:23Z","closed_at":"2022-07-30T09:41:00Z","merged_at":"2022-07-30T09:41:00Z","user_id":180987,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1006595566,"title":"Added a resource","body":null,"created_at":"2022-07-24T18:03:12Z","closed_at":"2022-08-19T12:41:03Z","merged_at":"2022-08-19T12:41:02Z","user_id":18336312,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1006484563,"title":"Update CocoaPods specs: added swift_version(5.0)","body":"Hello, I'd like to submit a PR. \r\n\r\n* What's changed: Added a configuration, `swift_version`,  to the Cocoapod **podspec** [file](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/lite/swift/TensorFlowLiteSwift.podspec)\r\n\r\n  - The version, `5.0`, came from the xcode project settings within the [docsgen](https://github.com/tensorflow/tensorflow/tree/master/tensorflow/lite/swift/docsgen/TensorFlowLiteSwift/TensorFlowLiteSwift.xcodeproj) folder.\r\n\r\n* Purpose: To fix issues in integrating this pod.\r\nEspecially when using `pod package mylib.podspec` where `mylib` has a dependency on [TensorFlowLiteSwift(2.9.1)](https://cocoapods.org/pods/TensorFlowLiteSwift).\r\n\r\n```sh\r\n$ pod package mylib.podspec \r\n\r\nInstalling TensorFlowLiteC (2.9.1)\r\nInstalling TensorFlowLiteSwift (2.9.1)\r\n[!] Unable to determine Swift version for the following pods:\r\n\r\n- `TensorFlowLiteSwift` does not specify a Swift version and none of the targets (`packager`) \r\nintegrating it have the `SWIFT_VERSION` attribute set. Please contact the author or \r\nset the `SWIFT_VERSION` attribute in at least one of the targets that integrate this pod.\r\n```\r\n\r\nBelow is the podspec file used with the command above.\r\n```podspec\r\nPod::Spec.new do |s|\r\n  s.name             = 'mylib'\r\n  s.version          = '0.1.0'\r\n  s.summary          = 'A short description of mylib.'\r\n  s.description      = <<-DESC\r\nTODO: Add long description of the pod here.\r\n                       DESC\r\n  s.homepage         = 'https://github.com/myhomepage'\r\n  s.license          = { :type => 'MIT', :file => 'LICENSE' }\r\n  s.author           = { 'myname' => 'myemail' }\r\n  s.source           = { :http => 'myurl' }\r\n  s.ios.deployment_target = '12.0'\r\n  s.static_framework = true\r\n  s.source_files = 'mylib/Classes/**/*'\r\n  s.dependency 'TensorFlowLiteSwift', '~> 2.9.1'\r\n  s.dependency 'TensorFlowLiteSwift/CoreML', '~> 2.9.1'\r\n  s.dependency 'TensorFlowLiteSwift/Metal', '~> 2.9.1'\r\n  s.script_phases = [\r\n          {\r\n              :name => 'Download Tflite models',\r\n              :execution_position => :before_compile,\r\n              :shell_path => '/bin/sh',\r\n              :script => '/bin/sh \"$SRCROOT/../../RunScripts/download_models.sh\"'\r\n          }\r\n      ]\r\nend                    \r\n\r\n```\r\n\r\n","created_at":"2022-07-24T07:16:19Z","closed_at":"2022-12-07T22:51:50Z","merged_at":null,"user_id":43307475,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1006446262,"title":"Update CocoaPods specs: added swift_version(5.0)","body":"Hello, I'd like to submit a PR. \r\n\r\n* What's changed: Added a configuration, `swift_version`,  to the Cocoapod **podspec** [file](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/lite/swift/TensorFlowLiteSwift.podspec)\r\n\r\n  - The version, `5.0`, came from the xcode project settings within the [docsgen](https://github.com/tensorflow/tensorflow/tree/master/tensorflow/lite/swift/docsgen/TensorFlowLiteSwift/TensorFlowLiteSwift.xcodeproj) folder.\r\n\r\n* Purpose: To fix issues in integrating this pod.\r\nEspecially when using `pod package mylib.podspec` where `mylib` has a dependency on [TensorFlowLiteSwift(2.9.1)](https://cocoapods.org/pods/TensorFlowLiteSwift).\r\n\r\n```sh\r\n$ pod package mylib.podspec \r\n\r\nInstalling TensorFlowLiteC (2.9.1)\r\nInstalling TensorFlowLiteSwift (2.9.1)\r\n[!] Unable to determine Swift version for the following pods:\r\n\r\n- `TensorFlowLiteSwift` does not specify a Swift version and none of the targets (`packager`) \r\nintegrating it have the `SWIFT_VERSION` attribute set. Please contact the author or \r\nset the `SWIFT_VERSION` attribute in at least one of the targets that integrate this pod.\r\n```\r\n\r\nBelow is the podspec file used with the command above.\r\n```podspec\r\nPod::Spec.new do |s|\r\n  s.name             = 'mylib'\r\n  s.version          = '0.1.0'\r\n  s.summary          = 'A short description of mylib.'\r\n  s.description      = <<-DESC\r\nTODO: Add long description of the pod here.\r\n                       DESC\r\n  s.homepage         = 'https://github.com/myhomepage'\r\n  s.license          = { :type => 'MIT', :file => 'LICENSE' }\r\n  s.author           = { 'myname' => 'myemail' }\r\n  s.source           = { :http => 'myurl' }\r\n  s.ios.deployment_target = '12.0'\r\n  s.static_framework = true\r\n  s.source_files = 'mylib/Classes/**/*'\r\n  s.dependency 'TensorFlowLiteSwift', '~> 2.9.1'\r\n  s.dependency 'TensorFlowLiteSwift/CoreML', '~> 2.9.1'\r\n  s.dependency 'TensorFlowLiteSwift/Metal', '~> 2.9.1'\r\n  s.script_phases = [\r\n          {\r\n              :name => 'Download Tflite models',\r\n              :execution_position => :before_compile,\r\n              :shell_path => '/bin/sh',\r\n              :script => '/bin/sh \"$SRCROOT/../../RunScripts/download_models.sh\"'\r\n          }\r\n      ]\r\nend                    \r\n\r\n```\r\n\r\n","created_at":"2022-07-24T01:18:28Z","closed_at":"2022-07-24T06:24:20Z","merged_at":null,"user_id":43307475,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1006347446,"title":"Fix markdown files in security.md","body":"Corrected spelling errors and formatted sentences","created_at":"2022-07-23T12:45:25Z","closed_at":"2022-07-30T05:44:44Z","merged_at":"2022-07-30T05:44:44Z","user_id":96517901,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1006175489,"title":"Add AMD/ROCm build dependency for grapper/optimizer","body":" ROCm have some grappler/optmizer code that uses code from rocm_dnn.c. This commit updates the BUILD file to include that dependency","created_at":"2022-07-22T21:44:32Z","closed_at":"2022-11-29T17:58:19Z","merged_at":"2022-11-29T17:58:19Z","user_id":4212398,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1006157521,"title":"Fusion MatMul Op test shouldn't use GPU for AMD/ROCm","body":"Fused MatMul Op test shouldn't use GPU for AMD/ROCm as it is not supported.","created_at":"2022-07-22T21:08:07Z","closed_at":"2023-02-23T18:13:04Z","merged_at":null,"user_id":4212398,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1005923258,"title":"Add support to int64 input type for benchmark tool","body":"The current benchmark tool does not support int64 tensor as input. In order to support int64, we need to add this kind of type to the input tensor generator.","created_at":"2022-07-22T15:34:47Z","closed_at":"2022-07-30T03:06:19Z","merged_at":"2022-07-30T03:06:19Z","user_id":5110988,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1004900864,"title":"[mhlo] Fix warnings emited by `-Wsign-compare`","body":"Building with clang (v14) produces numerous warnings about comparison\r\nbetween signed and unsigned values.  This patch introduces explicit cast\r\noperations to eliminate the warnings.  The unit tests run as part of the\r\n`check-mlir-hlo` targets pass.","created_at":"2022-07-22T02:04:48Z","closed_at":"2022-08-01T16:42:00Z","merged_at":"2022-08-01T16:42:00Z","user_id":19678,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1004598042,"title":"[NVIDIA TF] Support MatMul+BiasAdd+Tanh/Sigmoid cuDNN runtime fusion","body":"This PR enables the cudnn matmul fusion backend for supporting the generic matmul fusion patterns. Specifically, this PR focuses on the matmul+bias+tanh|sigmoid pattern. This PR is on top of these following three PRs:\r\n\r\nPart 1: Stream executor supports cudnn matmul fusion.\r\nPart 2: Fused matmul op supports cudnn matmul fusion.\r\nPart 3: Grappler graph pass supports matmul+bias+gelu_exact.\r\n\r\nNote: This PR depends on the changes of a parent PR (https://github.com/tensorflow/tensorflow/pull/56827). Please see the change diff [here](https://github.com/kaixih/tensorflow/compare/gelu_exact_upstream_part3...kaixih:tensorflow:gelu_exact_upstream_part4?expand=1).\r\n\r\ncc. @nluehr @pjannaty","created_at":"2022-07-21T19:30:42Z","closed_at":"2022-09-08T02:51:54Z","merged_at":"2022-09-08T02:51:54Z","user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1004556771,"title":"fixed some typos, formatted document","body":"Please do the review, and if everything is perfect merge it, or else I will re-edit it again.","created_at":"2022-07-21T18:46:44Z","closed_at":"2022-08-19T05:46:34Z","merged_at":null,"user_id":40994679,"sentiment":{"polarity":0.1,"subjectivity":0.2}}
{"_id":1004204717,"title":"Updated iOS Documentation for Task Library v4.2.0","body":null,"created_at":"2022-07-21T13:30:43Z","closed_at":"2022-09-20T04:08:34Z","merged_at":"2022-09-20T04:08:34Z","user_id":42828735,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1003535238,"title":"Update - Image Classification","body":"## PR Description\r\n\r\n### What did you do ?\r\n\r\n- [x] Update the Image Classification to use TFLite Task Library to demo how to use the trained models","created_at":"2022-07-21T04:13:03Z","closed_at":"2022-08-09T02:23:26Z","merged_at":"2022-08-09T02:23:26Z","user_id":77369648,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1003141331,"title":"[mhlo] Add missing dependency to the MhloDialect","body":"Recent versions of mlir have moved functionality around, so now the MhloDialect has a dependency on MLIRQuantDialect. This is fine as it is unless one builds with shared libraries enabled in which case the build fails. This change adds the missing library and also does a couple of other \"nice\" things to improve library usage - adds the target include directories and cleans up the top-level include definition to use the variables.\r\n\r\nWe ran into this in onnx-mlir which recently took a dependency on mlir-hlo.\r\n\r\nSigned-off-by: Stella Stamenova <stilis@microsoft.com>","created_at":"2022-07-20T23:20:08Z","closed_at":"2022-07-22T20:51:24Z","merged_at":"2022-07-22T20:51:24Z","user_id":29738015,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":1002810592,"title":"[TF-TRT] Improve unit test of validation","body":"This PR fixes testing the validation mode of the converters. We compare the validation status always to the expected status.\r\n\r\nThe previous test did not handle the case correctly if the expected status is fail, but the actual validation status was passing.","created_at":"2022-07-20T19:27:53Z","closed_at":"2022-12-02T12:50:29Z","merged_at":null,"user_id":3671106,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1002353698,"title":"Cache size is too small for machines with more than 49 CPU cores","body":"The element size in this case is 363 bytes which only allows for\r\n49 entries in the cache with a size of 18000. So instead make\r\nthe size of cache dependent on the number of CPU cores.\r\nThe count of CPU cores is relevant as the elements of the dataset\r\nare pre-fetched, once per CPU core. This means that if the cache\r\nis too small for the number of CPU cores then the sliding window\r\nwill have moved away from the original element read thus making\r\nthe cache pointless.\r\n\r\nFixes #56840 ","created_at":"2022-07-20T14:48:40Z","closed_at":"2022-07-22T19:57:02Z","merged_at":"2022-07-22T19:57:02Z","user_id":10442001,"sentiment":{"polarity":0.125,"subjectivity":0.45}}
{"_id":1001522447,"title":"Fix compilation issue when building mhlo as an external project.","body":"For the \"MLIR_PDLL_TABLEGEN_EXE not set\" issue that I met in this PR (https://github.com/llvm/torch-mlir/pull/1083) when building mhlo as an external project","created_at":"2022-07-20T03:17:51Z","closed_at":"2022-07-21T10:25:27Z","merged_at":"2022-07-21T10:25:26Z","user_id":17693755,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":1001457184,"title":"update skip test list","body":null,"created_at":"2022-07-20T01:46:09Z","closed_at":"2022-07-21T16:48:29Z","merged_at":"2022-07-21T16:48:29Z","user_id":22492939,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1001394801,"title":"[oneDNN]: Fixing pooling_ops_3d_test unit test failure","body":"This PR fixes a failure in `//tensorflow/python/kernel_tests/nn_ops:pooling_ops_3d_test` unit test introduced by [this](https://github.com/tensorflow/tensorflow/commit/9178ac9d6389bdc54638ab913ea0e419234d14eb) commit.","created_at":"2022-07-19T23:50:22Z","closed_at":"2022-07-22T05:48:03Z","merged_at":"2022-07-22T05:48:03Z","user_id":28113241,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":1001327970,"title":"[NVIDIA TF] Part 3: Grappler graph pass supports matmul+bias+gelu_exact","body":"This PR enables the cudnn matmul fusion backend for supporting the generic matmul fusion patterns. Specifically, this PR focuses on the matmul+bias+gelu_exact pattern. (Note, the matmul+bias+gelu_approximate has already been supported by cublasLt backend. See https://github.com/tensorflow/tensorflow/pull/55966)\r\n\r\nPart 1: Stream executor supports cudnn matmul fusion.\r\nPart 2: Fused matmul op supports cudnn matmul fusion.\r\nPart 3: Grappler graph pass supports matmul+bias+gelu_exact. (This one)\r\n\r\nNote: This PR depends on the changes of a parent PR (https://github.com/tensorflow/tensorflow/pull/56826). Please see the change diff  [here](https://github.com/kaixih/tensorflow/compare/gelu_exact_upstream_part2...kaixih:tensorflow:gelu_exact_upstream_part3?expand=1).\r\n\r\ncc. @nluehr @pjannaty ","created_at":"2022-07-19T22:47:09Z","closed_at":"2022-09-02T22:00:36Z","merged_at":"2022-09-02T22:00:36Z","user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1001327938,"title":"[NVIDIA TF] Part 2: Fused matmul op supports cudnn matmul fusion","body":"This PR enables the cudnn matmul fusion backend for supporting the generic matmul fusion patterns. Specifically, this PR focuses on the matmul+bias+gelu_exact pattern. (Note, the matmul+bias+gelu_approximate has already been supported by cublasLt backend. See https://github.com/tensorflow/tensorflow/pull/55966)\r\n\r\nPart 1: Stream executor supports cudnn matmul fusion.\r\nPart 2: Fused matmul op supports cudnn matmul fusion. (This one)\r\nPart 3: Grappler graph pass supports matmul+bias+gelu_exact.\r\n\r\nNote: This PR depends on the changes of a parent PR (https://github.com/tensorflow/tensorflow/pull/56825). Please see the change diff  [here](https://github.com/kaixih/tensorflow/compare/gelu_exact_upstream_part1...kaixih:tensorflow:gelu_exact_upstream_part2?expand=1).\r\n\r\ncc. @nluehr @pjannaty ","created_at":"2022-07-19T22:47:05Z","closed_at":"2022-08-31T19:27:38Z","merged_at":null,"user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1001327912,"title":"[NVIDIA TF] Part 1: Stream executor supports cudnn matmul fusion","body":"This PR enables the cudnn matmul fusion backend for supporting the generic matmul fusion patterns. Specifically, this PR focuses on the matmul+bias+gelu_exact pattern. (Note, the matmul+bias+gelu_approximate has already been supported by cublasLt backend. See https://github.com/tensorflow/tensorflow/pull/55966)\r\n\r\nPart 1: Stream executor supports cudnn matmul fusion. (This one)\r\nPart 2: Fused matmul op supports cudnn matmul fusion.\r\nPart 3: Grappler graph pass supports matmul+bias+gelu_exact.\r\n\r\ncc. @nluehr @pjannaty ","created_at":"2022-07-19T22:47:00Z","closed_at":"2022-08-30T19:51:55Z","merged_at":"2022-08-30T19:51:55Z","user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1001265285,"title":"[oneDNN] Upgrading oneDNN version to 2.6.1","body":"Upgrading to the latest oneDNN-2.6.1 version","created_at":"2022-07-19T21:37:06Z","closed_at":"2022-07-22T22:48:32Z","merged_at":"2022-07-22T22:48:32Z","user_id":65728957,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1001233167,"title":"[TF-TRT] Disable combined_nms_test with no_oss tag.","body":"The combined_nms_test has long failed under TensorRT 8.x. I'm not sure the test was every reliably passing.\r\n\r\nI'm disabling it in OSS the tests in anticipation of updating OSS builds from TensorRT 7.2 to TensorRT 8.4 (c.f., https://github.com/tensorflow/build/pull/124)\r\n\r\nAttn: @bixia1 ","created_at":"2022-07-19T20:52:06Z","closed_at":"2022-07-21T06:05:39Z","merged_at":"2022-07-21T06:05:39Z","user_id":1873655,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":1001012330,"title":"Use FP32 in DepthwiseConv2D tests on TF32 capable devices","body":"Recent versions of CUDNN enable TF32 kernels for depthwise convolutions. This tweak configures tests to use true FP32 for these tests since that is what their numerical tolerances have been calibrated for.\r\n\r\nAttn: @reedwm ","created_at":"2022-07-19T16:38:31Z","closed_at":"2022-07-19T20:01:42Z","merged_at":"2022-07-19T20:01:42Z","user_id":1873655,"sentiment":{"polarity":0.2,"subjectivity":0.4}}
{"_id":1000251082,"title":"Update cpuinfo","body":"Specifically to include https://github.com/pytorch/cpuinfo/pull/105 which was lost in https://github.com/tensorflow/tensorflow/pull/56446","created_at":"2022-07-19T03:12:01Z","closed_at":"2022-07-19T21:09:25Z","merged_at":"2022-07-19T21:09:25Z","user_id":283886,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":999612737,"title":"Remove incorrect test tags so that all expected pip tests are run","body":"These tags are not needed for pip tests on an installed wheel as is happening here.","created_at":"2022-07-18T16:24:57Z","closed_at":"2022-08-02T18:56:52Z","merged_at":"2022-08-02T18:56:51Z","user_id":10442001,"sentiment":{"polarity":-0.1,"subjectivity":0.4}}
{"_id":999590256,"title":"[XLA] Keep the metadata during optimization for dot operation.","body":"Update the XLA optimization dot_decomposer and dot_merger to keep metadata for the dot operation.\r\nThis help get frequent metadata in the optimized graph.\r\n\r\nNote, for the optimization dot_merger, we would need to add merge 2 metadata. So 2 source_line, 2 source_path, 2 op_name, ... This doesn't seem to be supported right now. So I add just one. One is better then none. But allowing multiple would be great.","created_at":"2022-07-18T16:07:05Z","closed_at":"2022-07-19T20:32:23Z","merged_at":"2022-07-19T20:32:23Z","user_id":180987,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":999402971,"title":"[ROCm] Fix for auto mixed precision simulated GPU unit test failure.","body":"/cc @cheshire ","created_at":"2022-07-18T13:30:53Z","closed_at":"2022-08-08T18:11:57Z","merged_at":"2022-08-08T18:11:57Z","user_id":70280935,"sentiment":{"polarity":-0.15833333333333335,"subjectivity":0.275}}
{"_id":999387606,"title":"Resubmission of #55619 (faster sort in GPU TopK)","body":"This is the same as #55619 except that it makes the choice of descending sort static rather than dynamic in an attempt to avoid unnecessary kernel instantiations that bloat the GPU memory overhead.\r\n\r\ncc @nluehr @pjannaty ","created_at":"2022-07-18T13:18:48Z","closed_at":"2022-08-03T22:40:26Z","merged_at":"2022-08-03T22:40:26Z","user_id":3979096,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":998224681,"title":"ROCm specific registration for custom ops","body":"1. ROCM registration for the custom ops for GPU assert\r\n2. Adds code to use runtime function to determine GPU platform(CUDA or ROCm)\r\n\r\n","created_at":"2022-07-15T21:43:02Z","closed_at":"2022-10-28T11:24:20Z","merged_at":null,"user_id":4212398,"sentiment":{"polarity":0.0,"subjectivity":0.125}}
{"_id":998123395,"title":"[oneDNN] rename config auto_mixed_precision_mkl","body":"renaming auto_mixed_precision_mkl to auto_mixed_precision_bfloat16 to make the intent clear ","created_at":"2022-07-15T20:15:54Z","closed_at":"2022-07-27T22:26:10Z","merged_at":"2022-07-27T22:26:09Z","user_id":42224728,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":997901106,"title":"Updates Compute Library version to 22.05 and add mkl_aarch64_threadpool option","body":"- Changes to workspace2.bzl to download the v22.05 sources from GitHub\r\n- third_party/compute_library/BUILD updated to account for changes since\r\n  22.02\r\n- Version number and Git hash in compute_library.patch updated\r\n  accordingly\r\n- Build config for mkl_aarch64 with support for Eigen threadpool added (`--config=mkl_aarch64_threadpool`)","created_at":"2022-07-15T15:55:40Z","closed_at":"2022-07-27T23:26:50Z","merged_at":"2022-07-27T23:26:50Z","user_id":32057673,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":997895432,"title":"Fix unit tests for ROCm ","body":"Adjust tolerance for auto_mixed_precision_test  on ROCm platform","created_at":"2022-07-15T15:48:44Z","closed_at":"2022-07-22T16:32:39Z","merged_at":"2022-07-22T16:32:39Z","user_id":4212398,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":997891170,"title":"Update bazel apple rules","body":"There are fixes in newer versions of these rules required to build\r\ntensorflow with newer versions of Xcode.","created_at":"2022-07-15T15:43:44Z","closed_at":"2022-08-23T18:56:56Z","merged_at":"2022-08-23T18:56:56Z","user_id":283886,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":997355246,"title":"[oneDNN] fuse gelu subgraph with MatMul and Biasadd","body":"This PR fuses gelu subgraph with MatMul and BiasAdd. This pattern is found in official bert base, bert large etc models. And gives significant performance improvement. This fusion is also enabled for bfloat16.","created_at":"2022-07-15T04:59:56Z","closed_at":"2023-01-17T10:52:22Z","merged_at":"2023-01-17T10:52:22Z","user_id":42224728,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":997254634,"title":"[ROCM] Register GenericTfCallback Op for ROCm","body":"ROCM registration for the custom ops for GPU GenericTfCallback","created_at":"2022-07-15T01:09:27Z","closed_at":"2022-07-18T17:19:27Z","merged_at":null,"user_id":4212398,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":997254239,"title":"[ROCM] Platform finder logic to substitute ROCM for CUDA when permitted","body":"Looks up for \"rocm\" platform if lookup for platform by name \"CUDA\" or cuda fails","created_at":"2022-07-15T01:08:23Z","closed_at":"2022-10-12T01:44:04Z","merged_at":null,"user_id":4212398,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":997253630,"title":"Fix upstream rocm xla","body":"1) ROCM registration for the custom ops for GPU assert \r\n2) Update a ROCm specific check in  gpu_atomic_test","created_at":"2022-07-15T01:06:53Z","closed_at":"2022-07-18T17:19:13Z","merged_at":null,"user_id":4212398,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":997253300,"title":"Fix upstream rocm batra","body":null,"created_at":"2022-07-15T01:06:06Z","closed_at":"2022-07-15T15:34:54Z","merged_at":null,"user_id":4212398,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":996703458,"title":"Add return_index_map argument in ssim()","body":"Closes #53115 ","created_at":"2022-07-14T13:48:36Z","closed_at":"2022-08-13T16:42:02Z","merged_at":null,"user_id":74930666,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":996111825,"title":"[ROCm] Add generic layout optimizer fix for ROCm.","body":"/cc @cheshire ","created_at":"2022-07-14T01:52:12Z","closed_at":"2022-07-29T22:30:34Z","merged_at":null,"user_id":70280935,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":996050590,"title":"[ROCM] Move ROCm builds to 5.3; Fix build failures","body":"This PR includes a number of updates and fixes for the ROCm build. I plan on splitting this into separate PRs, but at the moment all of this is needed to get the CI working, so I'll use this PR as reference and open separate PRs once this one shows a clean CI run.\r\n\r\n- ROCm ~~5.2~~ 5.3 support\r\n- Update Dockerfile.rocm to Ubuntu20.04 including some updates related to the newer compiler\r\n- Some build fixes related to hipsparse and hipsolver/rocsolver\r\n~~Unit test fixes for a handful of tests~~\r\n~~ROCM registration for the custom ops for GPU assert and GenericTfCallback~~","created_at":"2022-07-13T23:54:44Z","closed_at":"2022-11-18T09:05:31Z","merged_at":"2022-11-18T09:05:31Z","user_id":8660918,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":995887372,"title":"GEMM + Bias + ReLU Epilogue Fusion in XLA","body":"Adds XLA support for the epilogue fusion of GEMM + Bias + ReLU using the cuBLASLt library.","created_at":"2022-07-13T19:57:34Z","closed_at":"2022-10-27T01:19:41Z","merged_at":"2022-10-27T01:19:41Z","user_id":80296164,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":995782386,"title":"Unique mlir kernel names","body":"This MR incorporates the name attribute for kernel get in MLIR. This is done to enable generation of the experimental kernels for int64 bit indexing.\r\n\r\nCC: @frgossen ","created_at":"2022-07-13T17:49:21Z","closed_at":"2022-07-28T17:03:21Z","merged_at":"2022-07-28T17:03:21Z","user_id":42385577,"sentiment":{"polarity":0.375,"subjectivity":1.0}}
{"_id":994898532,"title":"Refactors callback and py_client_gpu out of py_client","body":"Splits up some previously coupled dependencies","created_at":"2022-07-13T00:20:20Z","closed_at":"2022-08-18T20:49:24Z","merged_at":null,"user_id":1142926,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":994829360,"title":"[NVIDIA TF] Revert TF32+NHWC changes","body":"After some more extensive tests, we think we need to revert those PRs regarding the NHWC+TF32 changes:\r\nhttps://github.com/tensorflow/tensorflow/pull/55761\r\nhttps://github.com/tensorflow/tensorflow/pull/55806\r\nhttps://github.com/tensorflow/tensorflow/pull/55920\r\n\r\nDuring the tests, we noticed that in some cases the NCHW kernels are faster on Ampere. So, we think it is still a good practice to use NCHW by default for fp32/tf32 at this point.\r\n\r\ncc. @nluehr @pjannaty \r\n","created_at":"2022-07-12T22:02:47Z","closed_at":"2022-08-18T02:52:15Z","merged_at":"2022-08-18T02:52:15Z","user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":994429626,"title":"Add bincount XLA support","body":"Recover:\r\nhttps://github.com/tensorflow/tensorflow/pull/56276\r\n\r\nRollback:\r\nhttps://github.com/tensorflow/tensorflow/commit/3d3f01cd0193099173aaa20a96a68102518d6f80\r\n\r\nFixes https://github.com/tensorflow/tensorflow/issues/54479\r\n\r\n/cc @majnemer @cheshire @MichaelHudgins","created_at":"2022-07-12T15:25:11Z","closed_at":"2022-07-14T09:49:27Z","merged_at":null,"user_id":1710528,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":994336534,"title":"Simplify the fuzzers","body":"- Make use of atheris.FuzzedDataProvider where possible\r\n- Enable_python_coverage isn't necessary anymore\r\n- Don't instrument `sys`\r\n- @atheris.instrument_func isn't necessary anymore","created_at":"2022-07-12T14:04:05Z","closed_at":"2022-07-12T14:20:55Z","merged_at":null,"user_id":325724,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":993291518,"title":"Fix PyLint error where line is too long","body":"tensorflow/python/ops/array_ops.py:5456:0: C0301: Line too long (83/80) (line-too-long)\r\n\r\nJust move 'the' onto the next line to resolve","created_at":"2022-07-11T16:06:42Z","closed_at":"2022-07-29T23:49:48Z","merged_at":"2022-07-29T23:49:48Z","user_id":10442001,"sentiment":{"polarity":-0.05,"subjectivity":0.4}}
{"_id":992907025,"title":"Fixing the incorrect link in backend.py","body":"Added the correct link for `RaggedTensor`","created_at":"2022-07-11T10:06:20Z","closed_at":"2022-07-13T06:52:03Z","merged_at":null,"user_id":81610181,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":992669663,"title":"Adding names to mlir kernels for uniqueness","body":"The purpose for this small MR is to add {name} to the kernel gen path for uniqueness of the kernel names and resolve the conflicts within the existing \"_gen_mlir_op_rule\" and re-enabling the experimental atanh kernel generation.\r\nCC: @frgossen \r\n","created_at":"2022-07-11T05:12:30Z","closed_at":"2022-07-11T05:17:17Z","merged_at":null,"user_id":42385577,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":992214433,"title":"Add bincount XLA support","body":"Recover:\r\nhttps://github.com/tensorflow/tensorflow/pull/56276\r\n\r\nRollback:\r\nhttps://github.com/tensorflow/tensorflow/commit/3d3f01cd0193099173aaa20a96a68102518d6f80\r\n\r\nFixes https://github.com/tensorflow/tensorflow/issues/54479\r\n\r\n/cc @majnemer @cheshire @MichaelHudgins\r\n","created_at":"2022-07-09T11:54:04Z","closed_at":"2022-07-09T11:55:34Z","merged_at":null,"user_id":1710528,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":991702567,"title":"Update compat.py","body":"Fixed the broken link","created_at":"2022-07-08T13:58:52Z","closed_at":"2022-07-13T05:49:35Z","merged_at":"2022-07-13T05:49:35Z","user_id":98147397,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":991700200,"title":"Update unit tests for xla cpu changes","body":"Update unit tests to fix the build break from the xla cpu changes.\r\nfixes this issue#\r\nhttps://github.com/tensorflow/tensorflow/issues/56673","created_at":"2022-07-08T13:56:44Z","closed_at":"2022-08-10T18:19:19Z","merged_at":null,"user_id":87143774,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":991551789,"title":"Fix unit tests that rely on unsupported behaviour","body":"numpy 1.23.0 has removed some behaviours that have been\r\nFutureWarn for some time now. Fix those unit tests that\r\nstill relied on that old unsupported behaviour\r\n\r\nFixes: https://github.com/tensorflow/tensorflow/issues/56713","created_at":"2022-07-08T11:31:21Z","closed_at":"2022-07-20T23:06:15Z","merged_at":"2022-07-20T23:06:15Z","user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":990873620,"title":"Update the RBE images to the latest container versions","body":"This PR was created by a GitHub Actions workflow to update all the SIG Build-based RBE containers to the most recent containers. See:\n\n- https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/toolchains/remote_config/configs.bzl\n- https://github.com/tensorflow/tensorflow/blob/master/.github/workflows/update-rbe.yml","created_at":"2022-07-07T21:53:32Z","closed_at":"2022-08-11T01:04:25Z","merged_at":"2022-08-11T01:04:25Z","user_id":16359713,"sentiment":{"polarity":0.5,"subjectivity":0.9}}
{"_id":990760580,"title":"[NVIDIA TF:XLA:JAX] Add NVIDIA as a Trusted Partner and assign reviewers","body":"Add NVIDIA as a Trusted Partner and assign reviewers. Also add a domain check to prevent accidental cross-partner triggering of assignments.\r\n\r\nPer-component designated reviewers:\r\n- NVIDIA TF: Rohan Jain, Bruce Fontaine, Penporn Koanantakool\r\n- NVIDIA XLA and GPU: George Karpenkov, Chris Forster, Reed Wanderman-Milne, Christian Sigg\r\n- NVIDIA JAX: Peter Hawkins\r\n\r\nThe assignment logic retains the possibility of dispatching changes to more than one component, e.g. [NVIDIA TF XLA].\r\n\r\ncc: @hawkinsp @yashk2810 @cheshire @gcforster @reedwm @chsigg @rohan100jain @bfontain @penpornk @skye","created_at":"2022-07-07T19:55:27Z","closed_at":"2022-07-11T05:46:56Z","merged_at":"2022-07-11T05:46:56Z","user_id":107573555,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":990608535,"title":"Bump JAX libs for CI","body":"JAX libs are needed in CI as part of testing JAX <-> TFLite integration. This is only needed on Linux and Mac, as the corresponding tests are not run on Windows at this time.\r\n\r\nThere is no need for an equivalent change in `setup.py` as TF wheel does not depend on JAX. This is just a test-only dependency.\r\n\r\nFixes #56699","created_at":"2022-07-07T17:52:21Z","closed_at":"2022-07-07T20:28:50Z","merged_at":"2022-07-07T20:28:50Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":989462268,"title":"[NVIDIA TF] Fix cublas build issues and update stub","body":"Fixes #56630 \r\n\r\nCommit https://github.com/tensorflow/tensorflow/commit/ba57ae7f24743e684accef3521485a24c1235186 introduced two bugs into the build for cublas:\r\n\r\n1. It referenced an API `cublasGetStatusString` which was not yet in the cublas stubs. I regenerated the stubs to fix this.\r\n2. It did not use the cublas_plugin/stub correctly, so `//tensorflow/stream_executor/cuda:cublas_plugin` was built into both `libtensorflow_framwork.so` and `pywrap_tensorflow_internal.so`. This caused duplicate registration issues with cublas as seen in #56630. I fixed this by following the patterns demonstrated by the other code in TF which uses cuda libraries.\r\n\r\n\r\ncc @kaixih @chr1sj0nes @nluehr ","created_at":"2022-07-06T22:40:32Z","closed_at":"2022-08-10T21:33:22Z","merged_at":"2022-08-10T21:33:22Z","user_id":12981474,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":987532704,"title":"[ROCm] Upstream rocm fixes 2","body":"/cc @cheshire ","created_at":"2022-07-05T14:51:52Z","closed_at":"2022-07-07T15:45:24Z","merged_at":"2022-07-07T15:45:24Z","user_id":70280935,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":985977130,"title":"Added missing close bracket","body":"Added missing open bracket from JAX converter","created_at":"2022-07-04T04:35:56Z","closed_at":"2022-08-16T17:18:57Z","merged_at":"2022-08-16T17:18:57Z","user_id":86464649,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":985906151,"title":"[ROCm] Fix for JAX failure on ROCm due to commit ba57ae7f24743e684accef35214…","body":"…85a24c1235186.\r\n\r\nWhen running JAX unit tests on ROCm, the following error was observed:\r\n\r\nImportError: /usr/local/lib/python3.9/dist-packages/jaxlib/xla_extension.so: undefined symbol: _ZN10tensorflow33tensor_float_32_execution_enabledEv\r\n\r\nThis PR fixes the error.\r\n\r\n/cc @cheshire @hawkinsp ","created_at":"2022-07-04T02:16:54Z","closed_at":"2022-07-13T18:55:04Z","merged_at":null,"user_id":70280935,"sentiment":{"polarity":-0.22083333333333335,"subjectivity":0.3375}}
{"_id":985458408,"title":"[NVIDIA TF] Preload Cudnn Sub Libraries for Frontend APIs","body":"Before this PR, the cudnn sub libraries were only preloaded when the legacy APIs are used. This PR fixes this and ensures the preload for cudnn frontend APIs.\r\n\r\nIt would be difficult to create unit test for this, since it depends on the cudnn heuristics which differs among GPU architectures, cudnn versions, etc. We manually tested it using:\r\n\r\n(1) Insert these lines in the XLA `GpuConvAlgorithmPicker::PickBestAlgorithmNoCacheCuda` to display the profiling time for each autotuned conv engine:\r\n```c++\r\n  for (auto& runner_cache : runners) {\r\n    TF_ASSIGN_OR_RETURN(\r\n        auto result, AutotuneOneConvRunner(\r\n                         config, instr, allocator, &input_output_allocator,\r\n                         stream, &runner_cache, operand_buffers, result_buffer,\r\n                         &reference_result, disabled_algos));\r\n    auto a = tensorflow::proto_utils::FromDurationProto(result.run_time());\r\n    double a_sec = absl::ToDoubleSeconds(a);\r\n    printf(\"Run time: %lf\\n\", a_sec);\r\n\r\n    profile_results.emplace_back(std::move(result));\r\n  }\r\n```\r\n(2) Rebuild TF and run the script with cudnn frontend api enabled:\r\n```python\r\nimport tensorflow as tf\r\n\r\nx = tf.random.normal((512, 112, 112, 32), dtype=tf.float32)\r\np = tf.constant(0.)\r\n\r\nconv2d = tf.keras.layers.Conv2D(filters=32, kernel_size=(3, 3), strides=(1, 1),\r\n                                padding='same', use_bias=False, groups=32)\r\n\r\n@tf.function(jit_compile=True)\r\ndef step(x):\r\n  return conv2d(x)\r\n\r\ny = step(x)\r\n(p + 1.).numpy()  # Sync the GPU\r\n```\r\nOn a V100 GPU, Before:\r\n```\r\nRun time: 0.541476 # This includes the overhead of loading cudnn lib.\r\nRun time: 0.003376\r\nRun time: 0.026523\r\nRun time: 0.032151\r\nRun time: 0.030736\r\nRun time: 0.032210\r\nRun time: 0.034119\r\nRun time: 0.033691\r\nRun time: 0.037900\r\n```\r\nAfter:\r\n```\r\nRun time: 0.002799 # This can more accurately reflect the kernel time.\r\nRun time: 0.003250\r\nRun time: 0.025338\r\nRun time: 0.030755\r\nRun time: 0.029313\r\nRun time: 0.030758\r\nRun time: 0.032752\r\nRun time: 0.033699\r\nRun time: 0.037834\r\n```\r\nAfter the PR, the overhead of loading cudnn sub libraries will not be included in the autotuning.\r\n\r\ncc. @nluehr @pjannaty","created_at":"2022-07-02T05:03:43Z","closed_at":"2022-08-08T01:00:38Z","merged_at":"2022-08-08T01:00:38Z","user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":985396949,"title":"Test PR","body":"Experimenting with creating draft PRs.","created_at":"2022-07-01T22:58:20Z","closed_at":"2022-07-07T17:53:28Z","merged_at":null,"user_id":107573555,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":985356859,"title":"Converter for SelectV2 operation.","body":"Implementation of converter for [`ops::SelectV2`](https://www.tensorflow.org/api_docs/cc/class/tensorflow/ops/select-v2) operation.","created_at":"2022-07-01T21:30:06Z","closed_at":"2022-08-26T16:47:58Z","merged_at":"2022-08-26T16:47:58Z","user_id":32910461,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":984570212,"title":"Update README.md","body":"In accordance with Jakob Nielsen’s third usability heuristic for user interface design, the README.md file was updated to give the user more control and freedom by including a section of how to uninstall TensorFlow and related packages that are installed when TensorFlow is installed.","created_at":"2022-07-01T06:15:31Z","closed_at":"2022-12-29T04:58:49Z","merged_at":null,"user_id":56042557,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":984389553,"title":"[INTEL ONEDNN] - Added name of the primitive as key of mkl primitive …","body":"…cache in order to avoid collision in the cache. This change is to fix the issue https://github.com/tensorflow/tensorflow/issues/55933","created_at":"2022-07-01T00:14:15Z","closed_at":"2022-07-27T15:21:45Z","merged_at":"2022-07-27T15:21:45Z","user_id":29615281,"sentiment":{"polarity":0.0,"subjectivity":1.0}}
{"_id":984289739,"title":"update flags and test skip list","body":"Addresses comments in https://github.com/tensorflow/tensorflow/issues/56088 and fixes CD pipeline","created_at":"2022-06-30T21:06:11Z","closed_at":"2022-07-04T16:03:01Z","merged_at":"2022-07-04T16:03:01Z","user_id":22492939,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":983646948,"title":"Fix crash during shutdown in distributed training","body":"Releasing and reaquiring the GIL during Python shutdown is not possible and leads to force termination.\r\nRemove that.\r\n\r\nFixes #50853","created_at":"2022-06-30T10:17:58Z","closed_at":"2023-01-18T13:19:10Z","merged_at":"2023-01-18T13:19:10Z","user_id":309017,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":983625019,"title":"Enhance NumSchedulableCPUs to allow for nodes with more than 1024 cores","body":"In systems with large core counts the default size of `cpu_set_t` is not large enough to hold a space for each of them.\r\nUse the `CPU_ALLOC` macro to dynamically create space while doubling the number of possible CPUs (and hence required space) when `sched_getaffinity` fails with `EINVAL`.\r\n\r\nCode based on CPythons implementation of `os.sched_getaffinity`\r\nSee https://github.com/python/cpython/blob/21cbdae90ffdac047d27d1b83a5442fabcf89f7c/Modules/posixmodule.c#L7197-L7214\r\n\r\nFixes #49833","created_at":"2022-06-30T09:57:15Z","closed_at":"2022-08-02T14:38:07Z","merged_at":"2022-08-02T14:38:06Z","user_id":309017,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":983522329,"title":"Fixes for formatting","body":null,"created_at":"2022-06-30T08:20:56Z","closed_at":"2022-07-04T15:53:21Z","merged_at":"2022-07-04T15:53:21Z","user_id":2438950,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":983498304,"title":"Fixing a typo","body":"Fixed a small typo in graph_properties.cc \r\nFixes the issue #56618","created_at":"2022-06-30T07:56:21Z","closed_at":"2022-08-09T13:54:09Z","merged_at":null,"user_id":84765720,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":983089062,"title":"Describe `tf.squeeze`'s None shape behavior.","body":null,"created_at":"2022-06-29T20:35:38Z","closed_at":"2022-08-10T16:58:12Z","merged_at":"2022-08-10T16:58:12Z","user_id":138060,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":982808258,"title":"[TF-TRT] s/absl::make_unique/std::make_unique","body":"Update TF-TRT Codebase for C++17 changes. Replace `absl::make_unique` with `std::make_unique`","created_at":"2022-06-29T16:15:54Z","closed_at":"2022-06-29T23:42:04Z","merged_at":"2022-06-29T23:42:04Z","user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":982429502,"title":"Update README.md","body":"try","created_at":"2022-06-29T10:56:30Z","closed_at":"2022-06-29T10:56:42Z","merged_at":null,"user_id":88095079,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":982398892,"title":"Remove references to no_oss_py2 tag","body":"As Python2 is not supported, this tag is obsolete and should be removed.","created_at":"2022-06-29T10:25:18Z","closed_at":"2022-07-07T15:51:00Z","merged_at":"2022-07-07T15:51:00Z","user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":982201214,"title":"[TF:TRT] Refactor einsum converter to use IEinsumLayer","body":"This PR refactors the Einsum converter to use IEinsumLayer which is available in TRT 8.2.\r\n\r\nUsing IEinsumLayer improves the performance and enables conversion of additional equation types.\r\n\r\nAdditionally the test of validation mode is improved:\r\n - The expected status of validation was not checked if the actual status was OK.\r\n - This is now corrected: the validation status is always checked.","created_at":"2022-06-29T07:12:59Z","closed_at":"2022-07-21T14:50:57Z","merged_at":"2022-07-21T14:50:56Z","user_id":3671106,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":981980907,"title":"Converter for Range operator with mixed type parameters.","body":"This is an improvement for [PR#546040](https://github.com/tensorflow/tensorflow/pull/56040): \"Converter for Range operator\". which allows you to pass parameters (start, limit, delta) by using any combinations of weights and tensors. Previously, they could be passed either all three as weights or all three as tensors.\r\n\r\nWhen at least one of these parameters is passed as a tensor, all three of them should be of type DT_INT32 and the parameter delta should be positive.","created_at":"2022-06-28T23:46:40Z","closed_at":"2022-07-07T16:14:13Z","merged_at":"2022-07-07T16:14:13Z","user_id":32910461,"sentiment":{"polarity":0.0,"subjectivity":0.25}}
{"_id":981854340,"title":"[oneDNN] Unblocking Matmul+Add(Bias) fusion","body":"This PR unblocks Matmul + Add(Bias) fusion when bias dims are more than one and also adds a test.\r\nThe fusion was blocked by this PR https://github.com/tensorflow/tensorflow/pull/55687\r\n\r\nco-authored by: @mahmoud-abuzaina ","created_at":"2022-06-28T20:41:57Z","closed_at":"2022-08-10T19:10:52Z","merged_at":"2022-08-10T19:10:52Z","user_id":42224278,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":981642663,"title":"[TF-TRT] Converter Typo BugFix","body":"This PR fixes a typo in the bug that would create a bug if it were executed.","created_at":"2022-06-28T16:34:41Z","closed_at":"2022-06-29T19:28:55Z","merged_at":"2022-06-29T19:28:55Z","user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":981447717,"title":"[ROCm] Upstream rocm fixes","body":"/cc @cheshire ","created_at":"2022-06-28T13:54:05Z","closed_at":"2022-07-11T11:10:36Z","merged_at":null,"user_id":70280935,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":981301827,"title":"Link libdl in core/platform/default/stacktrace","body":"~Required due to use of `dladdr` via the `stacktrace_handler` dependency~\r\n\r\nRequired due to use of `dladdr` in `stacktrace.h` which is e.g. a dependency of `test_main` via `stacktrace_handler`\r\n\r\nFixes #45013","created_at":"2022-06-28T11:51:09Z","closed_at":"2022-09-16T16:28:57Z","merged_at":"2022-09-16T16:28:57Z","user_id":309017,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":981190183,"title":"cherry-pick: Refactor to allow extensions to the algebraic simplifier","body":"cherry-pick form: 90355d2af1f1feea996d6ff4ae1fe2e183f5db3e","created_at":"2022-06-28T09:59:55Z","closed_at":"2022-06-28T15:55:22Z","merged_at":null,"user_id":22370779,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":981187065,"title":"Update float_t to float for consistent behavior across platforms","body":"`//tensorflow/lite/delegates/flex:util_test` fails on s390x with error: `TfLiteTensor's size doesn't match the TF tensor's size.`\r\nThe cause of this failure is that size of float_t on s390x is 8 and on amd it is 4. Size could vary as per [this](https://en.cppreference.com/w/c/numeric/math/float_t) , hence proposing a generic change in test case.","created_at":"2022-06-28T09:56:53Z","closed_at":"2022-09-14T18:25:57Z","merged_at":"2022-09-14T18:25:57Z","user_id":21953668,"sentiment":{"polarity":0.25,"subjectivity":0.25}}
{"_id":980949866,"title":"Fixes byte order for uint16 and bfloat variables based on endianness","body":"This PR fixes `//tensorflow/python/lib/core:bfloat16_test` test case on s390x arch.\r\n\r\nTest case initially failed for s390x arch because the `little_endian_uint16` and `little_endian_bfloat` variables were defined with byte order as little-endian. Updating the byte order to Big Endian fixes this test case on s390x. Added an \"if guard\" to handle the byte order of these variables based on endianness. \r\n","created_at":"2022-06-28T06:02:03Z","closed_at":"2022-08-12T16:34:20Z","merged_at":"2022-08-12T16:34:20Z","user_id":41043754,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":980548288,"title":"Update the RBE images to the latest container versions","body":"This PR was created by a GitHub Actions workflow to update all the SIG Build-based RBE containers to the most recent containers. See:\n\n- https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/toolchains/remote_config/configs.bzl\n- https://github.com/tensorflow/tensorflow/blob/master/.github/workflows/update-rbe.yml","created_at":"2022-06-27T20:54:02Z","closed_at":"2022-07-07T21:46:38Z","merged_at":null,"user_id":16359713,"sentiment":{"polarity":0.5,"subjectivity":0.9}}
{"_id":980132312,"title":"Update curl library to 7.84.0","body":"This PR updates curl library to 7.84.0 as the previous 7.83.1 consists of the following vul:\r\n\r\n125\tCVE-2022-32208: FTP-KRB bad message verification\r\n124\tCVE-2022-32207: Unpreserved file permissions\r\n123\tCVE-2022-32206: HTTP compression denial of service\r\n122\tCVE-2022-32205: Set-Cookie denial of service\r\n\r\nSee https://curl.se/docs/security.html\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2022-06-27T14:20:42Z","closed_at":"2022-06-30T16:10:16Z","merged_at":"2022-06-30T16:10:16Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":979891557,"title":"Fix interleave_test in CGroup restricted CPU envs","body":"Use `len(os.sched_getaffinity(0))`, which returns the number cores available to the job,\r\nrather than `multiprocessing.cpu_count()`, which returns the total number of cores in the node,\r\nand which causes the interleave_test to fail when e.g. CGroups limit the\r\nnumber of cores to less than the total core count.\r\n\r\nOriginally written by @smoors","created_at":"2022-06-27T10:44:36Z","closed_at":"2022-08-03T16:21:33Z","merged_at":"2022-08-03T16:21:33Z","user_id":309017,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":979233300,"title":"Fix several typos and grammar mistakes ","body":"I scanned over the tensorflow lite android quickstart.md file and found some typos and errors that should be addressed. \r\nAlso, I fixed the repetitive occurrences of <code>the the</code> in some files.\r\nThese are all combined into a single pull request, and this is not a “one-liner” correcting one error.","created_at":"2022-06-26T06:59:54Z","closed_at":"2022-07-29T16:27:52Z","merged_at":"2022-07-29T16:27:52Z","user_id":55179845,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":979176785,"title":"Tflite gpu python","body":null,"created_at":"2022-06-26T00:48:16Z","closed_at":"2022-06-26T00:49:47Z","merged_at":null,"user_id":11700669,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":979109683,"title":"Fix comment typo in collective_rma_distributed.cc","body":"Fixing comment: 'invalid' in place of 'in valid'.","created_at":"2022-06-25T18:18:20Z","closed_at":"2022-08-25T22:52:02Z","merged_at":null,"user_id":6155946,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":978883988,"title":"Fix typo in tf.data.experimental.DistributeOptions","body":"Updated the Example given for `tf.data.experimental.DistributeOptions`.","created_at":"2022-06-25T02:29:54Z","closed_at":"2022-07-07T23:23:53Z","merged_at":"2022-07-07T23:23:53Z","user_id":99852755,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":978835036,"title":"Support Cudnn Runtime Fusion (Conv+Bias+Relu6/Elu/LeakyRelu)","body":"This PR adds the support of fusion patterns of Conv+Bias+Relu6/Elu/LeakyRelu on GPUs. This is realized by using the CuDNN graph API which can utilize the runtime compiled kernels for Ampere GPUs or later.\r\n\r\nThis PR is on top of https://github.com/tensorflow/tensorflow/pull/56526 and https://github.com/tensorflow/tensorflow/pull/56528.\r\n\r\ncc. @nluehr ","created_at":"2022-06-24T23:51:42Z","closed_at":"2022-08-17T00:37:39Z","merged_at":"2022-08-17T00:37:39Z","user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":978500996,"title":"[MLIR/XLA] not lowering tf.Reshape with non-HLOTensorType, like tf_ty…","body":"…pe.string\r\n\r\n* not lowering `tf.Reshape` with non-HLOTensorType, like `!tf_type.string`","created_at":"2022-06-24T16:21:34Z","closed_at":"2022-06-27T16:18:55Z","merged_at":"2022-06-27T16:18:55Z","user_id":29956693,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":977385786,"title":"Simplify CUDA d2d transfert.","body":"Both path should have about the same CPU overhead. So simpler is better.\r\n\r\nThis was discussed with @hawkinsp \r\n\r\nThis also fix some multi-GPU case in VM for https://github.com/tensorflow/tensorflow/pull/56551/. They can be merged in parallel.","created_at":"2022-06-23T16:23:48Z","closed_at":"2022-06-23T18:54:51Z","merged_at":"2022-06-23T18:54:50Z","user_id":180987,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":977381258,"title":"Allow to use cudaMallocAsync with PJRT. ","body":"The first commit is from @hawkinsp. I also include some error messages update.","created_at":"2022-06-23T16:19:16Z","closed_at":"2022-06-23T22:27:47Z","merged_at":"2022-06-23T22:27:47Z","user_id":180987,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":975818534,"title":"[intel windows] Revert \"Introduce a \"StatusOr<bool> FileExists\" helper, to help code …","body":"…distinguish between \"file does not exist\" and \"some other error\".\"\r\n\r\nThis reverts commit f19b0ba5fe619b8382166e1e7bd4bcbbbbe49601.\r\nIt was causing following build error:\r\nERROR: C:/jenkins/workspace/tf-test-win2/tensorflow/tensorflow/core/platform/windows/BUILD:20:11: Compiling tensorflow/core/platform/file_system_helper.cc failed: undeclared inclusion(s) in rule '//tensorflow/core/platform/windows:env':\r\nthis rule is missing dependency declarations for the following files included by 'tensorflow/core/platform/file_system_helper.cc':\r\n  'tensorflow/core/platform/statusor.h'\r\n  'tensorflow/core/platform/statusor_internals.h'\r\ncl : Command line warning D9035 : option 'experimental:preprocessor' has been deprecated and will be removed in a future release\r\ncl : Command line warning D9036 : use 'Zc:preprocessor' instead of 'experimental:preprocessor'\r\ncl : Command line warning D9002 : ignoring unknown option '/arch=AVX'\r\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\r\nINFO: Elapsed time: 99.060s, Critical Path: 46.30s\r\nINFO: 945 processes: 33 internal, 912 local.\r\nFAILED: Build did NOT complete successfully","created_at":"2022-06-22T21:18:05Z","closed_at":"2022-06-23T03:22:07Z","merged_at":null,"user_id":57962524,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":975333549,"title":"[Tensorflow Lite] GPU selection support on Desktop","body":"Adding the ability to select between multiple available GPUs (usually on Desktop environment) for running inference with the OpenCL delegate. By default, if the user does not specify a preference, OpenCL device 0 on platform 0 is still picked by default, so as to not break things on mobile devices where typically only a single OpenCL capable device is available.","created_at":"2022-06-22T15:44:16Z","closed_at":"2022-11-11T02:13:36Z","merged_at":null,"user_id":67419721,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":974626004,"title":"Fix filter shape checking in grappler remapping pass","body":"This PR fixes the way the grappler remapping checks the filter shape. The code was intended to check the 1x1 convolution, which should be `filter_shape.dim(0)` and `filter_shape.dim(1)`, since the filter shape is in the format of `[filter_height, filter_width, in_channels, out_channels]`.\r\n\r\ncc @nluehr ","created_at":"2022-06-22T06:17:24Z","closed_at":"2022-07-08T00:02:21Z","merged_at":"2022-07-08T00:02:21Z","user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":974293558,"title":"Support fp16 for conv-bias-relu on GPU","body":"This PR enables the fp16 for the conv-bias-relu fusion pattern on GPUs. This is a prerequisite of https://github.com/tensorflow/tensorflow/pull/56572 for supporting more conv fusion patterns.\r\n\r\ncc. @nluehr ","created_at":"2022-06-21T23:42:27Z","closed_at":"2022-07-08T17:12:30Z","merged_at":"2022-07-08T17:12:30Z","user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":974090280,"title":"fixing the alloc dealloc behavior of jit execute","body":"Currently there is a bufferization issue with the kernel generator JIT for large tensors. With the introduction of control flow into the kernel gen to allow for large tensor kernels, the bufferization.clone operation throws error preventing the lowering. The implementation of alloc dealloc methods by extending the DeclareOpInterfaceMethods would hint the bufferize pass to ignore the insertion.\r\n\r\nCC: @frgossen ","created_at":"2022-06-21T20:29:57Z","closed_at":"2022-06-22T22:27:18Z","merged_at":"2022-06-22T22:27:18Z","user_id":42385577,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":973825067,"title":"TF-TRT Only set binding dimensions if needed","body":"To avoid potential overhead with IExecutionContext::setBindingDimension API, we only call it if the size needs to be updated.","created_at":"2022-06-21T17:03:06Z","closed_at":"2022-07-28T18:28:58Z","merged_at":"2022-07-28T18:28:58Z","user_id":3671106,"sentiment":{"polarity":0.0,"subjectivity":1.0}}
{"_id":973115912,"title":"fix: bullet point list has been refactored","body":"Unnecessary \".\" symbol have been removed","created_at":"2022-06-21T05:34:28Z","closed_at":"2022-08-09T15:37:51Z","merged_at":null,"user_id":6383738,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":972865849,"title":"Fixed link error on MSVC(2019).","body":"This commits a solve link error when build tflite on Windows with MSVC(2019).\r\n\r\nMSVC does not need a link for m.lib. Because MSVC dose not have it.\r\n\r\nThe _m_ link cause of linker error on MSVC.\r\n\r\nWe can check the error (not found m.lib) by following command on Windows PowerShell.\r\n\r\n```\r\ncd tensorflow/tensorflow/lite/examples/minimal\r\nmkdir b\r\ncd b\r\ncmake -G \"Visual Studio 16 2019\" .\r\ncmake --build . -j\r\n```","created_at":"2022-06-21T01:59:51Z","closed_at":"2022-09-05T19:29:33Z","merged_at":"2022-09-05T19:29:33Z","user_id":7899480,"sentiment":{"polarity":0.1,"subjectivity":0.2}}
{"_id":970798331,"title":"Allow for explicit stop of WorkerServer and DispatchServer","body":"There is currently no documented way to stop a `WorkerServer` or `DispatchServer`. It gets automatically stopped on GC, but an explicit `stop` method provides better control on when the shutdown occurs.\r\n\r\nThis adds `stop` to `WorkerServer` or `DispatchServer`, as well as `__exit__`, both calling into existing `_stop`.","created_at":"2022-06-17T16:24:33Z","closed_at":"2022-09-22T20:19:06Z","merged_at":"2022-09-22T20:19:06Z","user_id":44700269,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":970525776,"title":"Fix typo error of @tf.experimental.dispatch_for_api","body":"Updated the example given for `tf.experimental.unregister_dispatch_for`. Thank you!\r\n\r\n","created_at":"2022-06-17T11:37:21Z","closed_at":"2022-06-22T01:25:56Z","merged_at":"2022-06-22T01:25:56Z","user_id":99852755,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":970501423,"title":"Fix zero-point addition in PortableCwiseMul","body":"This bug caused errors for the int8 `unidirectional_sequence_lstm` layer.\r\n\r\n<details>\r\n  <summary>Python example to reproduce the bug in the LSTM layer, fixed by this PR (click to expand).</summary>\r\n\r\n```python\r\nimport numpy as np\r\nimport tensorflow as tf\r\n\r\nBATCH_SIZE = 1\r\nNUM_SAMPLES = 3\r\nSAMPLE_SIZE = 4\r\nLSTM_UNITS = 2\r\n\r\n\r\ndef convert_model(model: tf.keras.Model, representative_dataset_gen) -> bytes:\r\n    converter = tf.lite.TFLiteConverter.from_keras_model(model)\r\n    converter.experimental_new_converter = True\r\n    converter.optimizations = [tf.lite.Optimize.DEFAULT]\r\n    converter.representative_dataset = representative_dataset_gen\r\n    converter.target_spec.supported_ops = [tf.lite.OpsSet.TFLITE_BUILTINS_INT8]\r\n    converter.inference_input_type = tf.int8\r\n    converter.inference_output_type = tf.int8\r\n    return converter.convert()\r\n\r\n\r\ndef dataset_example(num_samples: int = 100):\r\n    for _ in range(num_samples):\r\n        yield [\r\n            tf.random.uniform(shape=(1, NUM_SAMPLES, SAMPLE_SIZE), minval=-1, maxval=1)\r\n        ]\r\n\r\n\r\ndef get_model() -> tf.keras.Model:\r\n    input_layer = tf.keras.layers.Input(\r\n        shape=(NUM_SAMPLES, SAMPLE_SIZE), batch_size=BATCH_SIZE\r\n    )\r\n    x = tf.keras.layers.LSTM(\r\n        units=LSTM_UNITS,\r\n        return_sequences=True,\r\n    )(input_layer)\r\n    x = tf.keras.layers.Flatten()(x)\r\n    return tf.keras.Model(input_layer, x, name=\"LSTM\")\r\n\r\n\r\ndef test_bug_reproducer() -> None:\r\n    # Get Keras model\r\n    lstm_model = get_model()\r\n    lstm_model.summary()\r\n\r\n    # Convert model to INT8 TFLite\r\n    tflite_lstm_model = convert_model(lstm_model, dataset_example)\r\n\r\n    # Test Keras model\r\n    test_data = np.random.uniform(-1, 1, (BATCH_SIZE, NUM_SAMPLES, SAMPLE_SIZE))\r\n    print(\"> Testing Keras LSTM with input data:\")\r\n    print(test_data)\r\n    result = lstm_model.predict(test_data)\r\n    print(\"> got Keras result:\")\r\n    print(result)\r\n\r\n    # Test INT8 TFLite model\r\n    interpreter = tf.lite.Interpreter(model_content=tflite_lstm_model)\r\n    interpreter.allocate_tensors()\r\n    output_details = interpreter.get_output_details()[0]\r\n    input_details = interpreter.get_input_details()[0]\r\n    input_scale = input_details[\"quantization_parameters\"][\"scales\"][0]\r\n    input_zp = input_details[\"quantization_parameters\"][\"zero_points\"][0]\r\n    output_scale = output_details[\"quantization_parameters\"][\"scales\"][0]\r\n    output_zp = output_details[\"quantization_parameters\"][\"zero_points\"][0]\r\n    test_data_int8 = np.round((test_data / input_scale) + input_zp).astype(np.int8)\r\n    print(\"> Testing TFLite INT8 LSTM with input data:\")\r\n    print(test_data_int8)\r\n    interpreter.set_tensor(input_details[\"index\"], test_data_int8)\r\n    interpreter.invoke()\r\n    result_int8 = interpreter.get_tensor(output_details[\"index\"])\r\n    print(\"> got TFlite INT8 result:\")\r\n    print(result_int8)\r\n    result_float = (result_int8 - output_zp) * output_scale\r\n    print(\"> got TFlite float result:\")\r\n    print(result_float)\r\n\r\n\r\ntest_bug_reproducer()\r\n```\r\n</details>","created_at":"2022-06-17T11:07:22Z","closed_at":"2022-09-22T18:31:19Z","merged_at":null,"user_id":248512,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":969826380,"title":"[TF-TRT] Enable Sparse Compute Env Var: `TF_TRT_SPARSE_MODE`","body":"This provides an API to activate/deactivate Sparse compute with TensorRT","created_at":"2022-06-16T22:07:07Z","closed_at":"2022-10-27T02:56:13Z","merged_at":"2022-10-27T02:56:13Z","user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":969798909,"title":"[TF-TRT] Use tf_cuda_cc_test instead of tf_cc_test to define two unit tests.","body":"These two tests need to be run with GPU to make sense. If the tests are defined via tf_cc_test, the tests will be skipped when running with GPU using --test_tag_filters=-no_gpu.","created_at":"2022-06-16T21:26:08Z","closed_at":"2022-08-11T16:58:56Z","merged_at":"2022-08-11T16:58:56Z","user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":969690300,"title":"[TF-TRT] Fix SUPER call in vgg_block_test.","body":"Small fix in one of TF-TRT test file","created_at":"2022-06-16T19:09:34Z","closed_at":"2022-07-07T21:50:24Z","merged_at":"2022-07-07T21:50:24Z","user_id":10923599,"sentiment":{"polarity":0.3333333333333333,"subjectivity":0.6666666666666666}}
{"_id":969678371,"title":"[TF-TRT] Disable TF32 for TF-TRT unittests that needs it","body":"TF32 computation may require in some cases a higher threshold to pass some unittests. Instead of implementing some complex logic, the standard procedure for these few cases is to test in FP32 instead of TF32 and not modifying the threshold.\r\n\r\nThis PR corrects TF-TRT python unittests with this logic.","created_at":"2022-06-16T18:53:58Z","closed_at":"2022-10-19T18:20:32Z","merged_at":"2022-10-19T18:20:32Z","user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":969599574,"title":"[MHLO] unfuse batch norm ops with shape dialect, and split inference …","body":"…and training pattern\r\n\r\n1. lowering with `shape` dialect. The original lowering pattern is not a Progressive Lowering. As the `shape` dialect is more mature in MLIR, I think lowering dynamic shape pattern with `shape` dialect is more suitable.\r\n2. split inference and training pattern for flexible integration. The original patterns have both `mhlo.batch_norm_inference` and `mhlo.batch_norm_training` lowering pattern. Sometimes we want to only lower one of them, so I split these pattern.","created_at":"2022-06-16T17:25:28Z","closed_at":"2022-07-07T17:02:10Z","merged_at":null,"user_id":29956693,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":969391968,"title":"Add macos_minimum_version to the bazelrc.","body":"This passes the flag to clang for compilation for macos_arm64 config on MacOS.\r\n\r\n@nitins17 @learning-to-play","created_at":"2022-06-16T14:23:14Z","closed_at":"2022-06-16T19:43:09Z","merged_at":"2022-06-16T19:43:08Z","user_id":453004,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":969206798,"title":"[ROCm] Fix unit test for ROCm.","body":"/cc @cheshire ","created_at":"2022-06-16T11:23:33Z","closed_at":"2022-06-27T18:38:19Z","merged_at":"2022-06-27T18:38:19Z","user_id":70280935,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":969198331,"title":"Updated iOS and Python docs of TFLite Task Library","body":"1. Updated swift docs to TensorFlowLiteTaskVision 0.4.1\r\n2. Added Coral Edge TPU inference for Python","created_at":"2022-06-16T11:14:19Z","closed_at":"2022-06-21T22:03:03Z","merged_at":"2022-06-21T22:03:03Z","user_id":42828735,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":968854657,"title":"fix backward compatible in delegate","body":"Hi, \r\n\r\nThis PR fix that not backward compatible after add new structure `TfLiteRegistrationExternal` in TfLiteRegistration once use delegate case\r\n\r\nPlease check the changes.\r\n\r\nRegards\r\nArvin","created_at":"2022-06-16T04:10:34Z","closed_at":"2022-12-29T16:36:17Z","merged_at":null,"user_id":103914581,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":968750264,"title":"Update FlatBuffer to 2.0.6","body":"- Update build rules.\r\n- Update generated schema headers.","created_at":"2022-06-16T00:25:38Z","closed_at":"2022-06-16T22:32:32Z","merged_at":null,"user_id":2908505,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":968338596,"title":"Add missing dep to fusion interface","body":"`gml_st_ops.cc` includes `gml_st_ops.h` which which includes\r\n`fusion_interface.h` which includes `fusion_interface.h.inc`. This is\r\npart of the `MLIRGmlStFusionInterfaceIncGen` CMake target to which the\r\ndependecy was missing.","created_at":"2022-06-15T15:37:39Z","closed_at":"2022-06-16T19:00:03Z","merged_at":"2022-06-16T19:00:03Z","user_id":8095156,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":968336980,"title":"Fix a potential wrong operator bug","body":"Hi,\r\n\r\nThis pull request is a fix to a potential wrong operator bug at `tensorflow/python/autograph/pyct/cfg.py`. Please check the changes.\r\n\r\nBest,\r\nJingxuan","created_at":"2022-06-15T15:36:07Z","closed_at":"2022-08-19T00:42:57Z","merged_at":"2022-08-19T00:42:57Z","user_id":6451553,"sentiment":{"polarity":-0.25,"subjectivity":0.95}}
{"_id":967630354,"title":"[TF-TRT] TraceMe instrumentation for TRTEngineOp","body":"This PR adds some additional TraceMe ranges. This allows to better profile and debug TF-TRT execution and better identify bottlenecks.\r\n\r\nIt namely focus around:\r\n- Instrument getDeviceMemorySize\r\n- TraceMe for output bindings","created_at":"2022-06-15T03:16:42Z","closed_at":"2022-07-06T15:57:23Z","merged_at":"2022-07-06T15:57:23Z","user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":967512306,"title":"Allow greater version for protobuf and grpcio","body":"In the last version of Tensorflow, the required versions for protobuf and grpcio are defined as  \r\n\r\n```\r\nprotobuf ~= 3.19.3\r\ngrpcio ~= 1.43.0\r\n```\r\n\r\nThese requirements allow only bump of the patch version (according semantic versioning) and can lead to conflict with other lib that require more recent version of one of these lib.\r\n\r\nThis PR set the requirements more lenient by allowing bump to minor version (for example protobuf 3.20.0). It still restrict bump for the major version.\r\n\r\nThis behavior is more close to the requirements in tensorflow < 2.7 that was defined as \r\n\r\n```\r\nprotobuf >= 3.17.1\r\ngrpcio ~= 1.38.1\r\n```","created_at":"2022-06-14T23:45:14Z","closed_at":"2023-01-30T18:11:42Z","merged_at":null,"user_id":20039871,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":967421753,"title":"Update script_ops.py","body":"Small typo fix","created_at":"2022-06-14T21:16:29Z","closed_at":"2022-08-08T15:17:34Z","merged_at":"2022-08-08T15:17:34Z","user_id":74963545,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":967314803,"title":"Re-applying the Jit indexing build path","body":"Re-submitting the build path for JIT 64 bit indexing (rolling back the b6569d7) and fixing the name length (to fix the the Winodws build issue).\r\nAttn: @frgossen","created_at":"2022-06-14T19:17:21Z","closed_at":"2022-06-27T16:42:16Z","merged_at":"2022-06-27T16:42:16Z","user_id":42385577,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":966663555,"title":"Fix endless loop in DecodeLin16WaveAsFloatVector","body":"Hi!\r\nWe were doing some fuzzing using libFuzzer and symbolic execution tool Sydr for fuzz targets from this [PR](https://github.com/google/oss-fuzz/pull/7704). And we found an interesting issue. Loop at [wav_io.cc:233]( https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/lib/wav/wav_io.cc#L233) could be endless under certain conditions. I'll try to explain: if variable _found_text_ is equal for one of keywords from  [if at wav_io.cc:240](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/lib/wav/wav_io.cc#L240) (for example found_text = \"bext\") and the next value of **size_of_chunk** is equal to -8 in sign representation there will be an endless loop.\r\nSo, how it works. Before line [wav_io.cc:246](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/lib/wav/wav_io.cc#L246) **offset** points to first byte of  **size_of_chunk** value to be read. After line 246 is executed **size_of_chunk** is -8 and offset is offset + 4. Then calling _IncrementOffset_ with this parameters changes **offset** to point on the first byte of **found_string**(\"bext\") before **size_of_chunk** and here we go again...\r\nI've fixed this problem adding a check for negative size of increment in  [IncrementOffset](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/lib/wav/wav_io.cc#L88) function. Also I changed type of increment parameter from size_t to int. I think it's ok, because  the only place it used is [line 98](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/lib/wav/wav_io.cc#L98) where implicit cast to int is happening.\r\nIf you want to reproduce this case, you could follow instructions from [here](https://github.com/ispras/oss-sydr-fuzz/tree/master/projects/tensorflow) or use docker container from oss-fuzz. I attach the buggy input:[timeout-9552d4db656b46794c5032c2ce463542f43b6970.txt](https://github.com/tensorflow/tensorflow/files/8898252/timeout-9552d4db656b46794c5032c2ce463542f43b6970.txt)\r\n","created_at":"2022-06-14T09:14:42Z","closed_at":"2022-06-28T19:33:34Z","merged_at":"2022-06-28T19:33:34Z","user_id":38811376,"sentiment":{"polarity":-0.125,"subjectivity":0.75}}
{"_id":966522334,"title":"Update CONTRIBUTING.md","body":null,"created_at":"2022-06-14T06:52:20Z","closed_at":"2022-06-14T16:27:07Z","merged_at":null,"user_id":106900164,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":966449172,"title":"[TF-TRT] Export TRT engines to filesystem","body":"If the environment variable TF_TRT_EXPORT_TRT_ENGINES_PATH is set, then save generated TRT engines to this path. The dimensions of inputs to engines will also be saved along with the engines. These files can then be analyzed using TRT specific debug tools.\r\n\r\nCC: @DEKHTIARJonathan @cliffwoolley @tfeher @bixia1 ","created_at":"2022-06-14T05:00:59Z","closed_at":"2022-07-11T05:46:57Z","merged_at":"2022-07-11T05:46:56Z","user_id":80416898,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":966084621,"title":"Update cpuinfo and ruy to the latest revision","body":"This includes recent improvements to the CMake build.","created_at":"2022-06-13T19:06:08Z","closed_at":"2022-07-15T08:25:07Z","merged_at":"2022-07-15T08:25:07Z","user_id":283696,"sentiment":{"polarity":0.5,"subjectivity":0.9}}
{"_id":966053744,"title":"[Intel oneDNN] Enable BF16 support for binary ops: xdivy, xlogy, xlog1py","body":"This PR adds BF16 support for the following binary ops: _xdivy_, _xlogy_, _xlog1py_","created_at":"2022-06-13T18:29:40Z","closed_at":"2022-12-09T19:27:12Z","merged_at":"2022-12-09T19:27:12Z","user_id":87341429,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":965482520,"title":"update version for nightly arm wheel","body":"- Checkout `nightly` branch for nightly wheels\r\n- Update version to contain date for nightly wheels","created_at":"2022-06-13T09:24:48Z","closed_at":"2022-06-13T22:31:46Z","merged_at":"2022-06-13T22:31:45Z","user_id":22492939,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":965295761,"title":"Put working links for  Android build instructions","body":"Put working link for \"configuring your project for android builds\" hyper link with \"g3doc/android/lite_build.md\"","created_at":"2022-06-13T05:53:33Z","closed_at":"2022-11-16T10:26:27Z","merged_at":null,"user_id":86464649,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":965257291,"title":"Fix compilation failure that prevents JAX from building on ROCm.","body":"/cc @cheshire @chsigg","created_at":"2022-06-13T04:41:20Z","closed_at":"2022-06-13T15:06:27Z","merged_at":"2022-06-13T15:06:27Z","user_id":70280935,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":965013286,"title":"Experimental rostam","body":" The [cosine embedding loss](https://torch.mlverse.org/docs/reference/nn_cosine_embedding_loss.html) in torch is given by:\r\n\r\nloss(x,y)={1−cos(x1,x2),max(0,cos(x1,x2)−margin),if y=1if y=−1\r\n\r\nThe idea is to give it a pair of vectors and and a response value 1 or −1 depending on if they belong to the same group or not.\r\n\r\nFirst let’s generate large dataset of 20 observations, each one being a length 100 vector. We also sample for each obs if it belongs to group ‘a’ or group ‘b’:\r\n\r\nlibrary(torch)\r\nlibrary(ggplot2) # going to use for plotting\r\nx <- torch_randn(20, 100)\r\ny <- sample(c(\"a\", \"b\"), replace = TRUE, size = x$shape[1])\r\nNext, we crate a torch dataset that will do the following everytime we ask for a new item i:\r\n\r\nTake the observation corresponding to the item i in the dataset we created previously.\r\nWith prob=0.5 select an observation from the same group to be it’s pair, otherwise select an observation from a different group.\r\nReturn both selected observations and the objective value −1 of they are obs are not from the same group and 1 if they are.\r\ndata <- dataset(\r\n  initialize = function(x, y, rate = 0.5) {\r\n    self x <- x\r\n    self y <- y\r\n    self rate <- rate\r\n  },\r\n  .getitem = function(i) {\r\n    \r\n    lab <- self y[i]\r\n    if (self rate < runif(1)) {\r\n      i_ <- sample(which(self y = lab), 1)\r\n      obj <- 1\r\n    } else {\r\n      i_ <- sample(which(self y = lab), 1)\r\n      obj <- -1\r\n    }\r\n    \r\n    list(x = self x[i,], x_ = self x[i_,], obj = obj)\r\n  },\r\n  .length = function() {\r\n    x shape[1]\r\n  }\r\n)\r\n\r\n# Initialize the dataset and dataloaders\r\nd <- data(x, y)\r\ndl <- dataloader(d, batch_size = 5)\r\nThe model we are going to define is a dimension reduction model. It will take the observation space from 100 dimensions to only 2: R100⇒R2. It does that via linear model.\r\n\r\nmodel <- nn_linear(100, 2)\r\nWe create a plotting utility to plot observations in the model space.\r\n\r\nmake_plot <- functn(model, x, y) {\r\n  with_no_grad({\r\n    as <- as.data.frame(as.matrix(model(x[y == \"a\", ])))\r\n    as class <- \"a\"\r\n    bs <- as.data.frame(as.matrix(model(x[y == \"b\", ])))\r\n    bs class <- \"b\"  \r\n  })\r\n  \r\n  ggplot(rbind(as, bs), aes(x = V1, y = V2, color = class)) +\r\n    geom_point() +\r\n    xlim(-2, 2) +\r\n    ylim(-2, 2)\r\n}\r\nWe now fit this model for 100 epochs saving intermediary plots:\r\n\r\nopt <- optim_adam(model$parameters)\r\ncriterion <- nn_cosine_embedding_loss()\r\n\r\nplots <- list()\r\nfor (epoch in 1:100) {\r\n  coro::loop(for (b in dl) {\r\n    r <- model(b x)\r\n    r_ <- model(b x_)\r\n    \r\n    opt zero_grad()\r\n    loss <- criterion(r, r_, b obj)\r\n    loss backward()\r\n    opt step()\r\n    \r\n  })\r\n  plots[[length(plots) + 1]] <- make_plot(model, x, y)\r\n}\r\nAnd we can finally observe how the observations evolve in the model space during training:\r\n\r\ngifski::save_gif(delay = 0.1, lapply(seq_along(plots), function(x) {\r\n  p <- plots[[x]] +\r\n    ggtitle(label = sprintf(\"Epoch d\", x))\r\n  print(p)\r\n}), \"animation.gif\")\r\n[1] \"/Users/dfalbel/Documents/dfalbel.github.io/_posts/2021-04-15-cosine-embedding-loss-in-[torch](https://torch.mlverse.org/docs)/animation.gif\"","created_at":"2022-06-12T14:19:11Z","closed_at":"2022-06-12T15:18:45Z","merged_at":null,"user_id":103095468,"sentiment":{"polarity":0.1,"subjectivity":0.4}}
{"_id":964860736,"title":"Nightly","body":".","created_at":"2022-06-12T00:19:18Z","closed_at":"2022-06-14T15:23:06Z","merged_at":null,"user_id":60682087,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":963899277,"title":"Fix type error of tf.experimental.BatchableExtensionType","body":"Updated the documentation of `tf.experimental.BatchableExtensionType` with executable example code.\r\n\r\n`class Vehicle(BatchableExtensionType):`\r\n\r\nReplaced with\r\n`class Vehicle( tf.experimental.BatchableExtensionType):`\r\n\r\nThank you.","created_at":"2022-06-10T09:16:39Z","closed_at":"2022-06-13T14:39:20Z","merged_at":"2022-06-13T14:39:20Z","user_id":99852755,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":963733811,"title":"[R2.9] Fixed Build error on example/minimal.","body":"This PR fixed build error on example/minimal with Windows(MSVC 2019) environment.\r\nCurrently, master branch has another error, so I commit to the r2.9 branch. \r\nThis commits works fine on r2.9 branch.\r\n\r\nEnvironments.\r\nOS: Windows 10\r\nCompiler: MSVC (2019)\r\n\r\nThis PR has the next three commits.\r\n\r\n* Some components use C++20's function. The commit rewrites C++14 to C++20.\r\n* MSVC does not recognize `__PRETTY_FUNCTION__`. The commit fixed it.\r\n* fft2d requires to m library. But MSVC does not need it.\r\n\r\nThis commits resolve build error when we use next command on Windows terminal.\r\n\r\n```\r\ncd tensorflow\\tensorflow\\lite\\examples\\minimal\r\nmkdir b\r\ncd b\r\ncmake -G \"Visual Studio 16 2019\" ..\r\ncmake --build . -j\r\n```\r\n\r\nI believe this commits resolve build error with any other TFLite C++ code.","created_at":"2022-06-10T06:21:40Z","closed_at":"2022-06-21T01:51:28Z","merged_at":null,"user_id":7899480,"sentiment":{"polarity":0.1,"subjectivity":0.2}}
{"_id":962537433,"title":"MSVC Compatibility Changes ","body":"This PR addresses two issues: \r\n- [x] Remove usage of GCC specific compiler macro which was an issue while compiling on MSVC 2019 and other MSVC compilers.\r\n- [x] Avoid use of designated initializer sytnax which is only supported in MSVC 2019+ and only when c++20 standard is enabled.","created_at":"2022-06-09T07:58:16Z","closed_at":"2022-06-16T03:19:35Z","merged_at":"2022-06-16T03:19:35Z","user_id":151124,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":962235559,"title":"Update TOSA transpose_conv2d legalizations","body":"TOSA transpose_conv2d does not have dilation attributes, and has four\r\nelements for padding. The MLIR dialect was updated, the legalizations\r\nneed to change to match the dialect changes.\r\n\r\nThis change depends on the corresponding change to the MLIR dialect before it can be merged.\r\nhttps://reviews.llvm.org/D127332","created_at":"2022-06-08T22:50:04Z","closed_at":"2022-08-09T20:40:01Z","merged_at":null,"user_id":71658898,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":961497033,"title":"Updating the expected behavior in TF doc","body":"In tf.image.resize_with_pad, if the value is negative or zero for target width and target height, it is raising value error. It raises 'InvalidArgumentError' when a certain positive value that is given for (target_width<100).  \r\nFixes #56333","created_at":"2022-06-08T10:52:55Z","closed_at":"2022-10-12T01:44:03Z","merged_at":null,"user_id":84765720,"sentiment":{"polarity":-0.1,"subjectivity":0.4}}
{"_id":961404830,"title":"Typo fix in command_line_flags comment","body":null,"created_at":"2022-06-08T09:24:45Z","closed_at":"2022-06-09T06:43:58Z","merged_at":null,"user_id":2898670,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":961074047,"title":"[55789] make_tensor_proto() now respects byte order of numpy input arrays","body":"Fixes Issue: https://github.com/tensorflow/tensorflow/issues/55789\r\n\r\nPreviously make_tensor_proto() did not respect byte order of numpy input arrays as demonstrated in this repro: \r\nhttps://colab.research.google.com/gist/tilakrayal/cef07cf718456b6b07526ea38d73fb52/55789.ipynb\r\n\r\nNow with these updates, the function takes into consideration the byte order of the system and input array and coerces the input array to match prior to utilizing it within the function.","created_at":"2022-06-08T01:26:43Z","closed_at":"2022-10-12T01:44:02Z","merged_at":null,"user_id":26746433,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":960742500,"title":"[tf-mlir-translate] fixed bug in parsing command line input data types","body":"There was a bug in parsing command line data type inputs to tf-mlir-translate. This patch fixes that and adds a testcase for it.","created_at":"2022-06-07T18:19:36Z","closed_at":"2022-06-09T10:24:57Z","merged_at":"2022-06-09T10:24:56Z","user_id":35123665,"sentiment":{"polarity":0.1,"subjectivity":0.2}}
{"_id":960620747,"title":"[TF-TRT] Simplify redundant TensorRT version stubs","body":"Most of the library stubs for various TensorRT versions are actually identical, so there's little point in having a new set of stubs for every single TensorRT release.  Doing so unnecessarily complicates the adoption of newer TRT releases that retain API compatibility with earlier releases, which they generally do.\r\n\r\nThis change removes the redundant stubs, reducing to a minimal set for the supported version ranges.\r\n\r\nNote: it's likely that even TensorRT versions >= 9.0, whenever such a thing might come to exist, could also reuse all or part of these same stubs, but since it's more difficult to predict this across major version boundaries, I retained the previous behavior of allowing only known _major_ releases, while relaxing the previous behavior that unnecessarily limited us to only known _minor_ releases.\r\n\r\nThis allows successful compilation with TensorRT 8.4.","created_at":"2022-06-07T16:22:59Z","closed_at":"2022-06-08T23:03:29Z","merged_at":"2022-06-08T23:03:29Z","user_id":9682398,"sentiment":{"polarity":-0.2,"subjectivity":0.2}}
{"_id":960472139,"title":"Change the documentation for TensorArray","body":"Fixes #56272. I'm not totally sure about the wording here, so feel free to suggest changes!","created_at":"2022-06-07T14:22:40Z","closed_at":"2022-08-15T18:47:59Z","merged_at":null,"user_id":12866554,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":960350127,"title":"Fixed tensorflow-lite label_image build error.","body":"Fixed #56384 .\r\nNeed to add `root_profiler.cc` to CMakeLists.txt\r\n(Same modification as the commit of bbceca5761385ac0654db3f4448957e923a337f4c)","created_at":"2022-06-07T12:55:39Z","closed_at":"2022-06-30T22:19:15Z","merged_at":null,"user_id":17954673,"sentiment":{"polarity":0.1,"subjectivity":0.2}}
{"_id":959910964,"title":"Converter for Range operator with mixed type parameters.","body":"This is an improvement for [PR#56040](https://github.com/tensorflow/tensorflow/pull/56040): **\"Converter for Range operator\"**. which allows you to pass parameters  **(start, limit, delta)** by using any combinations of weights and tensors. Previously, they could be passed either all three as weights or all three as tensors.\r\nWhen at least one of these parameters is passed as a tensor, all three of them should be of type DT_INT32 and the parameter **delta** should be positive.","created_at":"2022-06-07T05:40:06Z","closed_at":"2022-06-28T23:51:44Z","merged_at":null,"user_id":32910461,"sentiment":{"polarity":0.0,"subjectivity":0.25}}
{"_id":959829996,"title":"Modified the Official Builds section in README.md","body":"The Official Builds section now reflects the reasoning as to why the status is not available anymore for a particular build.","created_at":"2022-06-07T03:02:31Z","closed_at":"2022-06-07T12:31:38Z","merged_at":null,"user_id":72182630,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":959472123,"title":"[Intel oneDNN] Fusing Mul-Maximum pattern into LeakyRelu","body":"\r\n![164541360-4d0e0466-db6b-4503-8876-103f24acbfa8](https://user-images.githubusercontent.com/87341429/172229550-7271072d-4641-4140-b144-2b3d8305e43e.png)\r\n\r\n\r\n_Mul_ followed by _Maximum_ is a frequently occurring pattern in several models. This PR enables the fusion of this pattern into _LeakyRelu_ op. For the models consisting this pattern, a performance improvement of ~9% was observed.\r\n\r\n_Note: In order to fully realize the performance improvement, [PR-56339](https://github.com/tensorflow/tensorflow/pull/56339) needs to be merged into master._","created_at":"2022-06-06T19:09:49Z","closed_at":"2022-08-04T21:55:37Z","merged_at":"2022-08-04T21:55:37Z","user_id":87341429,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":959262346,"title":"MklEltwiseFwdPrimitive implemented twice (same class name used)","body":"In files tensorflow/core/kernels/mkl/mkl_eltwise_activation_base_op.h and tensorflow/core/kernels/mkl/mkl_relu_op.cc there are two classes with the same name: MklEltwiseFwdPrimitive. We have noticed that this can lead to segmentation fault at runtime when method is called on different instantiation of the class then what is expected (i.e calling Execute() on implementation in mkl_eltwise_activation_base_op.h instead of one in mkl_relu_op.cc). Since implementation are slightly different this patch renames MklEltwiseFwdPrimitive in mkl_eltwise_activation_base_op.h to MklEltwiseFwdActivationPrimitive to avoid the issue.","created_at":"2022-06-06T15:42:37Z","closed_at":"2022-08-05T23:45:32Z","merged_at":"2022-08-05T23:45:32Z","user_id":79916358,"sentiment":{"polarity":0.0,"subjectivity":0.125}}
{"_id":959054777,"title":"Fixed a bug in the xnnpack delegate option for label_image.","body":"Fixed #56367 .","created_at":"2022-06-06T12:40:12Z","closed_at":"2022-06-12T22:30:31Z","merged_at":"2022-06-12T22:30:31Z","user_id":17954673,"sentiment":{"polarity":0.1,"subjectivity":0.2}}
{"_id":959051342,"title":"Fixed a bug in the xnnpack delegate option for label_image.","body":"FIxed #56367 .","created_at":"2022-06-06T12:36:37Z","closed_at":"2022-06-06T12:36:54Z","merged_at":null,"user_id":17954673,"sentiment":{"polarity":0.1,"subjectivity":0.2}}
{"_id":958984283,"title":"Optimizing and improving accuracy of fp16 conv2d for new powervr gpu …","body":"…generation.\r\n\r\nThe patch:\r\n- Adds powervr gpu_info\r\n- On the new powervr gpu generation, uses the fp16 matmul builtin for conv2d\r\n- Uses better workgroup size and block size\r\n\r\nWe see 1.3 ~ 1.55 times speedup of inference time on IMG BXM-8-256 using our internal NN models.\r\n\r\nbenchmark_model option: --use_gpu=true --gpu_backend=cl --gpu_precision_loss_allowed=true","created_at":"2022-06-06T11:23:18Z","closed_at":"2022-10-11T15:43:36Z","merged_at":null,"user_id":5351229,"sentiment":{"polarity":0.13636363636363635,"subjectivity":0.45454545454545453}}
{"_id":958928456,"title":"Prevent ARM CD/CI actions from being run in forks","body":"The new ARM workflows should be prevented from running in forks.","created_at":"2022-06-06T10:21:01Z","closed_at":"2022-06-07T03:29:44Z","merged_at":"2022-06-07T03:29:44Z","user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":958396058,"title":"use double quotes to enable history expansion","body":null,"created_at":"2022-06-05T11:30:31Z","closed_at":"2022-06-06T18:53:29Z","merged_at":"2022-06-06T18:53:29Z","user_id":22492939,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":958310563,"title":"resolve gcc_host_compiler_path in a symlink directory","body":"Resolves a missing dependency declarations error, when gcc_host_compiler_path is in a symlink directory resolving to other directories.\r\n\r\nIn my university's cluster, I got the following error when compiling TensorFlow 2.9.1:\r\n```\r\nERROR: /scratch/jz748/packages/bazelcache/_bazel_jz748/437f513259d7a63d9ada0ccba4c220f0/external/zlib/BUILD.bazel:5:11: Compiling compress.c failed: undeclared inclusion(s) in rule '@zlib//:zlib':\r\nthis rule is missing dependency declarations for the following files included by 'compress.c':\r\n  '/opt/sw/packages/gcc/11.2/lib/gcc/x86_64-pc-linux-gnu/11.2.0/include/stddef.h'\r\n  '/opt/sw/packages/gcc/11.2/lib/gcc/x86_64-pc-linux-gnu/11.2.0/include-fixed/limits.h'\r\n  '/opt/sw/packages/gcc/11.2/lib/gcc/x86_64-pc-linux-gnu/11.2.0/include-fixed/syslimits.h'\r\n  '/opt/sw/packages/gcc/11.2/lib/gcc/x86_64-pc-linux-gnu/11.2.0/include/stdarg.h'\r\n```\r\nHere I set `GCC_HOST_COMPILER_PATH` to  `/opt/sw/packages/gcc/11.2/bin/gcc`. After I read [third_party/gpus/cuda_configure.bzl#L277](https://github.com/tensorflow/tensorflow/blob/72177a67c200c704c50982164bb0a52ccb10288d/third_party/gpus/cuda_configure.bzl#L277), I execute `gcc -E -x c - -v --sysroot .` to check includes directory and I got\r\n```\r\n#include \"...\" search starts here:\r\n#include <...> search starts here:\r\n /cache/sw/packages/gcc/11.2/bin/../lib/gcc/x86_64-pc-linux-gnu/11.2.0/include\r\n /cache/sw/packages/gcc/11.2/bin/../lib/gcc/x86_64-pc-linux-gnu/11.2.0/include-fixed\r\n /cache/sw/packages/gcc/11.2/bin/../lib/gcc/../../include\r\nEnd of search list.\r\n```\r\nI realized that `/opt/sw` is a symlink to `/cache/sw/` in this cluster and GCC only returns the real path.\r\n\r\nIn 58b236b235ce57808c917feb19b9f895f628710c, if `gcc` is a symlink, the real path will be resolved. But it does not work if GCC is not a symlink but the parent directory of GCC is the symlink. This commit resolves the issue.","created_at":"2022-06-04T23:22:04Z","closed_at":"2022-12-29T16:31:00Z","merged_at":"2022-12-29T16:31:00Z","user_id":9496702,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":958155272,"title":"update arm dockerfile arg name","body":"Fixes typo","created_at":"2022-06-04T11:40:01Z","closed_at":"2022-06-04T20:55:48Z","merged_at":"2022-06-04T20:55:48Z","user_id":22492939,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":957975323,"title":"Updated find_cuda_config.py.gz.base64","body":"Now matches https://github.com/tensorflow/tensorflow/pull/56246\r\n\r\nSigned-off-by: Cliff Woolley <jwoolley@nvidia.com>","created_at":"2022-06-03T23:21:28Z","closed_at":"2022-06-30T19:14:35Z","merged_at":"2022-06-30T19:14:35Z","user_id":9682398,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":957770499,"title":"Update nsync from 1.24.0 to 1.25.0.","body":"This PR upgrades nsync from 1.24.0 to 1.25.0 to include a fix from upstream.\r\n\r\nPlease see the following issue for more details. Thanks.\r\nhttps://github.com/tensorflow/tensorflow/issues/56280\r\n\r\n","created_at":"2022-06-03T19:12:23Z","closed_at":"2022-06-30T15:52:30Z","merged_at":null,"user_id":2879122,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":957085238,"title":"Change allow_failure description to match its functionality","body":"The `allow_failure` parameter of [`remote_config/common.bzl:execute()`](https://github.com/tensorflow/tensorflow/blob/master/third_party/remote_config/common.bzl#L223-L224) appears to be incorrectly documented. The documentation says that _\"if True, an empty stdout result **and** output to stderr is fine, otherwise it's an error_\" (emphasis mine), but when this flag is not enabled, **either** of those conditions is an error, because the actual test is an [`or`](https://github.com/tensorflow/tensorflow/blob/master/third_party/remote_config/common.bzl#L229).\r\n\r\nThis PR changes the parameter's description to match the behavior of the function.","created_at":"2022-06-03T06:22:34Z","closed_at":"2022-06-09T15:44:09Z","merged_at":"2022-06-09T15:44:09Z","user_id":6125322,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":957078196,"title":"Fix filename on CMakeLists.txt","body":"Fixed filename common.c to common.cc.\r\n\r\nI got the following error on Windows 10 with Visual Studio 16 2019.\r\n\r\n```\r\nCMake Error at CMakeLists.txt:63 (add_library):\r\n  Cannot find source file:\r\n\r\n    common.c\r\n\r\n  Tried extensions .c .C .c++ .cc .cpp .cxx .cu .mpp .m .M .mm .ixx .cppm .h\r\n  .hh .h++ .hm .hpp .hxx .in .txx .f .F .for .f77 .f90 .f95 .f03 .hip .ispc\r\n```\r\n\r\nI executed the next command got from https://www.tensorflow.org/lite/guide/build_cmake?hl=en.\r\n\r\n```\r\ncmake -G \"Visual Studio 16 2019\" ..\\tensorflow\\tensorflow\\lite\\c\\\r\n```","created_at":"2022-06-03T06:12:38Z","closed_at":"2022-06-03T08:26:26Z","merged_at":null,"user_id":7899480,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":956997533,"title":"[ROCm] Add ROCm support for XLA python GPU callback.","body":"This PR is intended to enable this functionality for JAX on ROCm.\r\n\r\n/cc @hawkinsp @sharadmv ","created_at":"2022-06-03T04:10:21Z","closed_at":"2022-06-07T11:40:03Z","merged_at":"2022-06-07T11:40:03Z","user_id":70280935,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":956773583,"title":"Pin pylint in CI","body":"CI is broken with the last pylint release:\r\n\r\nhttps://github.com/tensorflow/tensorflow/runs/6718349021?check_suite_focus=true","created_at":"2022-06-03T01:24:18Z","closed_at":"2022-06-07T03:36:01Z","merged_at":"2022-06-07T03:36:01Z","user_id":1710528,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":956655805,"title":"[Intel oneDNN] Enhancing the Pattern Matcher","body":"The following is a summary of the changes implemented in this PR:\r\n- **Condition check for swapping**: The patterns with first input as \"*\" is currently being rejected by the pattern matcher. The reason for this is that lines 126-127 (condition check for swapping the pattern) only consider the first input of the Op in the graph. In order to make it more comprehensive and avoid the aforementioned issue, similar checks have been added for the second input of the Op in the graph.\r\n- **IsSame(...) and IsCommutative(...) functions**: The functions are not currently equipped to handle a pattern expressing an op among multiple op types (separated by \"|\"). Implemented changes to facilitate that.\r\n- Also, this PR adds _SquaredDifference_ and _Maximum_ to the list of commutative ops.","created_at":"2022-06-03T00:05:13Z","closed_at":"2022-06-10T20:59:33Z","merged_at":"2022-06-10T20:59:33Z","user_id":87341429,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":956308815,"title":"Trigger ARM CI on push commits for easy debug","body":"Fix logic for PyPI project name's conditional assignment\r\nTrigger ARM CI on push commits on master and release branches for easy debug\r\nLimit to one python version (3.10) in CI to increase availability of runners\r\nAdd 2 flaky tests to skip list","created_at":"2022-06-02T20:02:53Z","closed_at":"2022-06-03T20:47:54Z","merged_at":"2022-06-03T20:47:54Z","user_id":22492939,"sentiment":{"polarity":0.43333333333333335,"subjectivity":0.8333333333333334}}
{"_id":956146735,"title":"Update TFL_MINIMUM_OS_VERSION","body":"Updating the Update TFL_MINIMUM_OS_VERSION to 10.\r\nRelated issues: https://github.com/tensorflow/tensorflow/issues/55322, https://github.com/tensorflow/tensorflow/issues/56250","created_at":"2022-06-02T16:58:56Z","closed_at":"2022-08-17T16:48:56Z","merged_at":"2022-08-17T16:48:56Z","user_id":73069040,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":955752894,"title":"[TF-TRT] Lazy-load trt_convert","body":"The goal of this PR is to avoid running any TF-TRT code when the user doesn't need TF-TRT. In particular, this has the effect that TF-TRT doesn't try to load `libnvinfer.so` when TF is imported.","created_at":"2022-06-02T10:40:08Z","closed_at":"2022-10-31T10:35:30Z","merged_at":null,"user_id":17441062,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":954579311,"title":"Add dequantize-softmax option to TFL-to-TOSA pass","body":"This allows temporarily working around issues with quantized softmax as discussed in https://github.com/google/iree/issues/8974 .\r\n\r\nThis introduces a new boolean pass option, `dequantize_softmax`. The default `false` preserves current behavior. Setting it to `true` results in dequantizing Softmax ops, which breaks bit-for-bit compatibility but is the right compromise for certain downstreams (IREE). Also note that as Softmax isn't currently a TOSA op, the TOSA spec isn't mandating anything here -- so the bit-for-bit accuracy that we are breaking here is at most breaking only an invariant in the TFLite import pipeline, not in the TOSA spec.\r\n\r\nWhile the performance gap originally reported in https://github.com/google/iree/issues/8974 has shrunk as observed in https://github.com/google/iree/issues/9170, dequantizing softmax is still a 20% end-to-end speedup on a mobilebert benchmark even after that (used to be a > 2x speedup).  In addition to performance, other angles are being discussed in https://github.com/google/iree/issues/8974 around generally how to handle something like a quantized softmax, how early to introduce implementation details in the IR, etc. ","created_at":"2022-06-01T18:30:16Z","closed_at":"2022-06-03T20:53:30Z","merged_at":"2022-06-03T20:53:30Z","user_id":79535,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":952432795,"title":"Switch to Flatbuffer 2.0.5","body":"Update TFLite build rules to use Flatbuffer v2.0.5","created_at":"2022-05-31T21:03:32Z","closed_at":"2022-06-01T16:53:21Z","merged_at":null,"user_id":2908505,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":950501013,"title":"Converter for Comparison operators","body":"The existing converter for binary operators was slightly modified to handle the elementwise operators `Greater`, `Less`, `Equal`, `GreaterEqual` and `LessEqual` which have output tensors of type BOOL.\r\nThe implementation of converters for `GreaterEqual` and `LessEqual` operators is done via the inversion of the results for  `Less` and `Greater` operators, respectively.","created_at":"2022-05-30T04:34:01Z","closed_at":"2022-06-10T21:14:16Z","merged_at":"2022-06-10T21:14:16Z","user_id":32910461,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":948782704,"title":"Converter for GREATER, LESS and EQUAL operators","body":"The existing converter for binary operators was slightly modified to handle the elementwise operators `Greater`, `Less`, and `Equal.` which have output tensors of type BOOL.","created_at":"2022-05-26T22:37:19Z","closed_at":"2022-06-01T04:15:56Z","merged_at":null,"user_id":32910461,"sentiment":{"polarity":0.11111111111111112,"subjectivity":0.2722222222222222}}
{"_id":948469362,"title":"TF2XLA Bincount kernel","body":"TF2XLA test + dummy kerenel for `tf.bincount`\r\n\r\nhttps://github.com/tensorflow/tensorflow/issues/54479\r\n\r\n/cc @cheshire \r\n\r\n# TODO \r\n- [x] `axis= -1`\r\n- [x] `axis = 0`\r\n- [x] `axis = Null` \r\n - Doc claims that is identical to `axis=0` but [it is not the case](https://github.com/tensorflow/tensorflow/blob/v2.9.1/tensorflow/python/ops/bincount_ops.py#L137) and without binary outputs it calls a new kernel `Bincount` for GPU determinism of TF kernel. I am still not convinced by the python Ops logic as it is not checking the input tensor so it fail with non dense inputs.\r\n- [x] `binary_output`\r\n- [x] `weights`\r\n- [x] `input params check?`\r\n- [x] input shape or mini loop to profile (@cheshire @LukeWood)\r\n- [x] any other refactoring and optimizzation","created_at":"2022-05-26T16:41:38Z","closed_at":"2022-07-08T11:48:23Z","merged_at":null,"user_id":1710528,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":948417322,"title":"Fix SplitV implementation for big tensors","body":"When an input tensor meets specific conditions, runtime falls into ParallelSplitByInputData which has a little bug in implementation. This PR aims to fix this bug.","created_at":"2022-05-26T15:48:46Z","closed_at":"2022-07-27T16:29:31Z","merged_at":null,"user_id":19208897,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":948410984,"title":"Fix SplitV implementation for big input tensors","body":"When an input tensor meets specific conditions, runtime falls into ParallelSplitByInputData which has a little bug in implementation. This PR aims to fix this bug.","created_at":"2022-05-26T15:41:39Z","closed_at":"2022-05-26T15:43:20Z","merged_at":null,"user_id":19208897,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":948036805,"title":"update arm pypi project name","body":"Change name from `aws-tensorflow-cpu` to `tensorflow-cpu-aws`","created_at":"2022-05-26T09:03:02Z","closed_at":"2022-05-26T15:34:31Z","merged_at":"2022-05-26T15:34:31Z","user_id":22492939,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":948031722,"title":"Cache TRT device memory size","body":"ICudaEngine::getDeviceMemorySize() has a non-negligible latency. Since its value remains constant, we can store this value when EngineContext object is constructed.","created_at":"2022-05-26T08:56:56Z","closed_at":"2022-05-31T11:22:08Z","merged_at":"2022-05-31T11:22:08Z","user_id":3671106,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":948030348,"title":"update arm pypi project name","body":"Updating PyPI project name to\r\n- `tensorflow-cpu-aws` for releases\r\n- `tf-nightly-cpu-aws` for nightly wheels\r\n\r\nRemove apt repo/package that are not required\r\n\r\nUpdate skip-test list with latest failing tests","created_at":"2022-05-26T08:55:14Z","closed_at":"2022-05-27T17:58:29Z","merged_at":"2022-05-27T17:58:29Z","user_id":22492939,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":947780635,"title":"Update TFL_MINIMUM_OS_VERSION","body":"Updated TFL_MINIMUM_OS_VERSION to 10.0 from 9.0 and update the library file in CMakeLists.txt.\r\nRelated issues: https://github.com/tensorflow/tensorflow/issues/55322 \r\nhttps://github.com/tensorflow/tensorflow/issues/56250","created_at":"2022-05-26T01:56:36Z","closed_at":"2022-06-02T16:53:59Z","merged_at":null,"user_id":73069040,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":946748287,"title":"Fix legalization of SplitV by handling negative axis values","body":"The legalization for SplitV would not take negative values as axis at\r\nthe moment. Because no error is thrown, the rewrite will just discard\r\nthe operator resulting in a wrong MLIR.\r\n\r\nThis patch fixes the issue by adjusting the axis with a wrap around\r\napproach. Furthermore, if the axis value exceeds the size of the input\r\ntensor, an error is thrown so that the legalization does not take place\r\nallowing other rewrites to be performed.\r\n\r\nSigned-off-by: Michele Di Giorgio <michele.digiorgio@arm.com>\r\nChange-Id: I2b873ddce9685b9105a142c20fc032afc9863bf3","created_at":"2022-05-25T09:23:16Z","closed_at":"2022-07-02T01:35:05Z","merged_at":"2022-07-02T01:35:05Z","user_id":6378106,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":946110172,"title":"Skip flaky test for arm","body":"`tensorflow/python/keras/layers:convolutional_recurrent_test FAILED in 6 out of 13 in 25.7s`","created_at":"2022-05-24T20:39:09Z","closed_at":"2022-05-24T21:45:14Z","merged_at":"2022-05-24T21:45:14Z","user_id":22492939,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":945837350,"title":"Make cuda header version check flexible w.r.t. whitespace.","body":"Version macros in CUDA headers may include whitespace, which currently can cause cuda_configure to fail.\r\nThis PR makes the version regex in find_cuda_config more flexible.","created_at":"2022-05-24T16:14:01Z","closed_at":"2022-06-01T12:07:14Z","merged_at":"2022-06-01T12:07:14Z","user_id":1873655,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":945117981,"title":"protobuf-3.13.0","body":null,"created_at":"2022-05-24T03:43:33Z","closed_at":"2022-05-24T09:27:42Z","merged_at":null,"user_id":6395341,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":944808695,"title":"Update reviewers on RBE commits","body":null,"created_at":"2022-05-23T19:04:51Z","closed_at":"2022-05-23T20:36:54Z","merged_at":"2022-05-23T20:36:53Z","user_id":32465472,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":944428707,"title":"protobuf-3.13.0","body":null,"created_at":"2022-05-23T13:15:09Z","closed_at":"2022-05-23T22:42:44Z","merged_at":null,"user_id":6395341,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":944366875,"title":"Move `std::wstring_convert` under ifdef","body":"This moves the `std::wstring_convert` under the `_WIN32` ifdef for three small reasons (small on itself but together I thought it makes sense to do it):\r\n* It is only used within the `_WIN32` anyway, so this is cleaner.\r\n* This function is [deprecated under C++17 standard](https://www.reddit.com/r/cpp/comments/es9gt1/since_stdwstring_convert_is_deprecated_what_is/) so would be good to get it out of the way.\r\n* Clang cross-compilation with an older GCC (e.g. 4.9) could give the error `error: no template named 'wstring_convert' in namespace 'std'` (e.g. `clang++ --target=aarch64-linux-gnu --gcc-toolchain=/path/to/gcc-linaro-4.9.4-2017.01-x86_64_aarch64-linux-gnu -I. -c tensorflow/lite/delegates/external/external_delegate.cc`).","created_at":"2022-05-23T12:23:00Z","closed_at":"2022-08-08T15:39:05Z","merged_at":"2022-08-08T15:39:05Z","user_id":1162108,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":944333998,"title":"Remove debug logs from saver.py","body":"These logs were added by [https://github.com/tensorflow/tensorflow/commit/2a3b691394adbb19b4665e187f16358295122ae9] and have no meaning for user.\r\n\r\nI'm seeing now \r\n```\r\nINFO:tensorflow:/tmp/xxx/model.ckpt-00000200.meta\r\nINFO:tensorflow:2100\r\nINFO:tensorflow:/tmp/xxx/model.ckpt-00000200.data-00000-of-00001\r\nINFO:tensorflow:161900\r\nINFO:tensorflow:/tmp/xxx/model.ckpt-00000200.index\r\nINFO:tensorflow:161900\r\n```\r\nwhile saving checkpoint with TF 2.9.0. On TF 2.8.0 there was no such output.\r\n\r\nCC @monicadsong ","created_at":"2022-05-23T11:53:17Z","closed_at":"2022-05-25T19:04:42Z","merged_at":"2022-05-25T19:04:42Z","user_id":37601244,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":944226955,"title":"CMake Could not find source file of common.c","body":"build lite api for c, in cmake file not found common.c\r\n\r\nThe correct filename is common.cc","created_at":"2022-05-23T10:13:53Z","closed_at":"2022-05-23T13:47:42Z","merged_at":null,"user_id":7686068,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":944215370,"title":"Patch Compute Library to pass correctly arguments to activation function","body":"Fixes issue in Arm Compute Library when arguments are not passed correctly run activation function as post op after running GEMM through NEGEMMConv2D.","created_at":"2022-05-23T10:04:55Z","closed_at":"2022-07-21T22:35:12Z","merged_at":"2022-07-21T22:35:12Z","user_id":79916358,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":944211407,"title":"Use partial content of tensor as part of key to cache primitive","body":"Since we cannot update tensors in-place when using Arm Compute Library once the Mkl primitive is created and to get benefit of reusing the primitive when it is called again as part of hash function for caching the primitive we are using memory address where the tensors whose content can be updated is stored. Unfortunately, when a new primitive needs to be created where the only difference is content of tensors that is stored at the same memory address (like in tests tensorflow/core/kernels:matmul_op_test_cpu and tensorflow/core/kernels/conv_ops_test_cpu or in running BERT) we will retrieve from the cache wrong primitive with stale tensors.\r\n\r\nIn order to avoid this problem this patch takes hash of partial content of tensor and use that as part of key for caching primitives. Once Arm Compute Library enables in-place updates (expected in 22.08 release) this patch will be removed.","created_at":"2022-05-23T10:02:26Z","closed_at":"2022-08-05T00:28:49Z","merged_at":"2022-08-05T00:28:49Z","user_id":79916358,"sentiment":{"polarity":-0.05,"subjectivity":0.65}}
{"_id":943754370,"title":"Disable flaky tests","body":null,"created_at":"2022-05-22T22:28:16Z","closed_at":"2022-05-22T22:28:23Z","merged_at":"2022-05-22T22:28:23Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":943753744,"title":"Disable flaky tests","body":null,"created_at":"2022-05-22T22:24:24Z","closed_at":"2022-05-22T22:24:29Z","merged_at":"2022-05-22T22:24:29Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":943752219,"title":"Disable flaky tests","body":null,"created_at":"2022-05-22T22:16:03Z","closed_at":"2022-05-22T22:16:09Z","merged_at":"2022-05-22T22:16:09Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":943747128,"title":"Fix CMake build of TFLite C Library","body":"Following the [guide](https://www.tensorflow.org/lite/guide/build_cmake#build_tensorflow_lite_c_library) on how to build the TensorFlow Lite C library from source, I ran into an issue where the build was failing due to missing file `common.c`:\r\n\r\n```\r\nCMake Error at CMakeLists.txt:63 (add_library):\r\n  Cannot find source file:\r\n\r\n    common.c\r\n\r\n  Tried extensions .c .C .c++ .cc .cpp .cxx .cu .mpp .m .M .mm .ixx .cppm .h\r\n  .hh .h++ .hm .hpp .hxx .in .txx .f .F .for .f77 .f90 .f95 .f03 .hip .ispc\r\n\r\n\r\nCMake Error at CMakeLists.txt:63 (add_library):\r\n  No SOURCES given to target: tensorflowlite_c\r\n```\r\n\r\nI noticed that the file seems to have been renamed.\r\n\r\nThis PR updates the entry in `CMakeLists.txt` and fixes the issue with the build.","created_at":"2022-05-22T21:44:50Z","closed_at":"2022-05-23T13:45:03Z","merged_at":null,"user_id":4335849,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":943693758,"title":"Fix spelling mistakes","body":null,"created_at":"2022-05-22T16:32:52Z","closed_at":"2022-06-13T14:39:20Z","merged_at":"2022-06-13T14:39:20Z","user_id":62030101,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":943306384,"title":"update skip test list for ARM64 CI/CD","body":"Tests added to skip list:\r\ntensorflow/python/keras/engine:training_arrays_test (test was removed in master branch)\r\n\r\nTests removed from skip list:\r\ntensorflow/python:dequantize_op_test (passes in r2.9 branch)\r\ntensorflow/python:quantized_ops_test (passes in r2.9 branch)\r\ntensorflow/python/data/experimental/kernel_tests/service:cross_trainer_cache_test (not in r2.9 branch)\r\n\r\nAlso added new commits in r2.9 branch to trigger CD pipeline to upload wheel to PyPI.","created_at":"2022-05-21T00:31:02Z","closed_at":"2022-05-21T01:08:38Z","merged_at":"2022-05-21T01:08:38Z","user_id":22492939,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":943305183,"title":"PyTree: Pass node_data to tree walkers","body":"Add an optional argument to `PyTreeDef::Walk` which causes `node_data` to be passed to the node callback, allowing that callback to inspect the node type.\r\n\r\nIn particular, it allows the definition of custom printers (see https://github.com/google/jax/issues/5047), which can e.g. print a tree with path labels like:\r\n```\r\n/a1: leaf-a1\r\n/a2/b1/0: 111\r\n/a2/b1/1: 2\r\n/a2/b1/2: 3\r\n/a2/b2: [[1. 1. 1.]\\n [1. 1. 1.]]\r\n/a2/b3/c1: 33\r\n/a2/b3/c2/0: 44\r\n/a2/b3/c2/1: 55\r\n/a3/x1/x11: a\r\n/a3/x1/x12/y1/y11: ya\r\n/a3/x1/x12/y1/y12: yb\r\n/a3/x1/x13: b\r\n/a3/x2/x21: 2a\r\n/a3/x2/x22/y1/y11: ya\r\n/a3/x2/x22/y1/y12: yb\r\n/a4: fred\r\n```\r\ncorresponding to tree `obj` in the new tests (see below).\r\n\r\nHaving just seen the comment that `Walk` is to be deprecated, perhaps an alternative is to make `PyTreeDef`s a little more introspectable, e.g. add something like `treedef.child_names()`.\r\nThe downside of the latter idea is that it's not clear how to define it for Custom nodes, \r\nwhereas the node_data is exactly the auxiliary data supplied by the programmer.\r\n\r\nI would be happy to implement any proposal that enables printing as above.\r\n\r\n@hawkinsp you might be willing to offer a view?","created_at":"2022-05-21T00:25:35Z","closed_at":"2022-06-21T17:01:39Z","merged_at":"2022-06-21T17:01:39Z","user_id":128119,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":943304326,"title":"Add CI/CD for ARM64 using GitHub Actions","body":"Cherry-pick commit https://github.com/tensorflow/tensorflow/commit/7cb413895831f8bb9dbb8c694858844239ccd068\r\nMaster branch PR: #56097 (merged)\r\n\r\nTests added to skip list:\r\n`tensorflow/python/keras/engine:training_arrays_test` (test was removed in master branch)\r\n\r\nTests removed from skip list:\r\n`tensorflow/python:dequantize_op_test` (passes in r2.9 branch)\r\n`tensorflow/python:quantized_ops_test` (passes in r2.9 branch)\r\n`tensorflow/python/data/experimental/kernel_tests/service:cross_trainer_cache_test` (not in r2.9 branch)\r\n\r\nAdded new commits in r2.9 branch to trigger CD pipeline.","created_at":"2022-05-21T00:22:09Z","closed_at":"2022-05-21T00:23:33Z","merged_at":null,"user_id":22492939,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":943291096,"title":"Add upper bound to protobuf in setup.py.","body":"See also: https://github.com/tensorflow/tensorflow/issues/53234\r\nSee also: https://github.com/protocolbuffers/protobuf/issues/9954\r\nSee also: https://github.com/tensorflow/tensorflow/issues/56077\r\n\r\nPiperOrigin-RevId: 450054200","created_at":"2022-05-20T23:37:58Z","closed_at":"2022-05-20T23:38:48Z","merged_at":"2022-05-20T23:38:48Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":943289446,"title":"Add upper bound to protobuf in setup.py.","body":"See also: https://github.com/tensorflow/tensorflow/issues/53234\r\nSee also: https://github.com/protocolbuffers/protobuf/issues/9954\r\nSee also: https://github.com/tensorflow/tensorflow/issues/56077\r\n\r\nPiperOrigin-RevId: 450054200","created_at":"2022-05-20T23:32:08Z","closed_at":"2022-05-20T23:38:22Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":943288124,"title":"Merge pull request #56195 from tensorflow/r2.9-60d5bfbf024","body":null,"created_at":"2022-05-20T23:28:06Z","closed_at":"2022-05-20T23:28:34Z","merged_at":"2022-05-20T23:28:34Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":943270934,"title":"Add upper bound to protobuf in setup.py.","body":"See also: https://github.com/tensorflow/tensorflow/issues/53234\r\nSee also: https://github.com/protocolbuffers/protobuf/issues/9954\r\nSee also: https://github.com/tensorflow/tensorflow/issues/56077\r\n\r\nPiperOrigin-RevId: 450054200","created_at":"2022-05-20T22:42:25Z","closed_at":"2022-05-20T22:44:47Z","merged_at":"2022-05-20T22:44:47Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":943248082,"title":"Add upper bound to protobuf in setup.py.","body":"See also: https://github.com/tensorflow/tensorflow/issues/53234\r\nSee also: https://github.com/protocolbuffers/protobuf/issues/9954\r\nSee also: https://github.com/tensorflow/tensorflow/issues/56077\r\n\r\nPiperOrigin-RevId: 450054200","created_at":"2022-05-20T22:07:18Z","closed_at":"2022-05-20T22:13:14Z","merged_at":"2022-05-20T22:13:14Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":943212314,"title":"r2.9 cherry-pick: 60d5bfbf024 \"Add upper bound to protobuf in setup.py.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/60d5bfbf0241e00267884b0dc1723bbdfee1806a","created_at":"2022-05-20T21:42:56Z","closed_at":"2022-05-20T21:43:56Z","merged_at":"2022-05-20T21:43:56Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":943183653,"title":"Update version numbers for TensorFlow 2.6.5","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 6 -> 6\nPatch: 4 -> 5\n\nNo lingering old version strings \"2.6.4\" found in source directory \n\"tensorflow/\". Good.\nNo lingering old version strings \"2.6.4\" found in source directory \n\"tensorflow/\". Good.\n```","created_at":"2022-05-20T21:24:27Z","closed_at":"2022-05-20T21:35:50Z","merged_at":"2022-05-20T21:35:50Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":943183635,"title":"Update version numbers for TensorFlow 2.7.3","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 7 -> 7\nPatch: 2 -> 3\n\nNo lingering old version strings \"2.7.2\" found in source directory \n\"tensorflow/\". Good.\nNo lingering old version strings \"2.7.2\" found in source directory \n\"tensorflow/\". Good.\n```","created_at":"2022-05-20T21:24:26Z","closed_at":"2022-05-20T21:35:48Z","merged_at":"2022-05-20T21:35:48Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":943183374,"title":"Update version numbers for TensorFlow 2.9.1","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 9 -> 9\nPatch: 0 -> 1\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.9.0\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/tools/ci_build/release/requirements_common.txt:27:2.9.0\ntensorflow/tools/ci_build/release/requirements_common.txt:28:2.9.0\ntensorflow/tools/ci_build/release/requirements_common.txt:29:2.9.0\ntensorflow/tools/pip_package/setup.py:84:2.9.0\ntensorflow/tools/pip_package/setup.py:109:2.9.0\ntensorflow/tools/pip_package/setup.py:110:2.9.0\ntensorflow/tools/pip_package/setup.py:111:2.9.0\ntensorflow/tools/pip_package/setup.py:112:2.9.0\ntensorflow/lite/tools/versioning/runtime_version.cc:71:2.9.0\ntensorflow/lite/tools/versioning/runtime_version.cc:100:2.9.0\ntensorflow/lite/tools/versioning/runtime_version.cc:238:2.9.0\ntensorflow/lite/tools/versioning/runtime_version.cc:241:2.9.0\ntensorflow/lite/tools/versioning/runtime_version.cc:376:2.9.0\ntensorflow/lite/tools/versioning/runtime_version.cc:377:2.9.0\ntensorflow/lite/tools/versioning/runtime_version.cc:378:2.9.0\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.9.0\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/tools/ci_build/release/requirements_common.txt:27:2.9.0\ntensorflow/tools/ci_build/release/requirements_common.txt:28:2.9.0\ntensorflow/tools/ci_build/release/requirements_common.txt:29:2.9.0\ntensorflow/tools/pip_package/setup.py:84:2.9.0\ntensorflow/tools/pip_package/setup.py:109:2.9.0\ntensorflow/tools/pip_package/setup.py:110:2.9.0\ntensorflow/tools/pip_package/setup.py:111:2.9.0\ntensorflow/tools/pip_package/setup.py:112:2.9.0\ntensorflow/lite/tools/versioning/runtime_version.cc:71:2.9.0\ntensorflow/lite/tools/versioning/runtime_version.cc:100:2.9.0\ntensorflow/lite/tools/versioning/runtime_version.cc:238:2.9.0\ntensorflow/lite/tools/versioning/runtime_version.cc:241:2.9.0\ntensorflow/lite/tools/versioning/runtime_version.cc:376:2.9.0\ntensorflow/lite/tools/versioning/runtime_version.cc:377:2.9.0\ntensorflow/lite/tools/versioning/runtime_version.cc:378:2.9.0\n```","created_at":"2022-05-20T21:24:16Z","closed_at":"2022-05-20T21:35:44Z","merged_at":"2022-05-20T21:35:44Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":943183372,"title":"Update version numbers for TensorFlow 2.8.2","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 8 -> 8\nPatch: 1 -> 2\n\nNo lingering old version strings \"2.8.1\" found in source directory \n\"tensorflow/\". Good.\nNo lingering old version strings \"2.8.1\" found in source directory \n\"tensorflow/\". Good.\n```","created_at":"2022-05-20T21:24:16Z","closed_at":"2022-05-20T21:35:47Z","merged_at":"2022-05-20T21:35:46Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":943158817,"title":"Update release notes for TensorFlow 2.7.3","body":"This PR is intentionally incomplete. One of the Release Owners for 2.7.3\nneeds to fill in the internal release notes for this version before the PR gets\nsubmitted. Click on the :pencil2: icon in the header for `RELEASE.md` under\n\"Files Changed\" above.","created_at":"2022-05-20T21:08:26Z","closed_at":"2022-05-20T21:18:02Z","merged_at":"2022-05-20T21:18:02Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":943158362,"title":"Update release notes for TensorFlow 2.6.5","body":"This PR is intentionally incomplete. One of the Release Owners for 2.6.5\nneeds to fill in the internal release notes for this version before the PR gets\nsubmitted. Click on the :pencil2: icon in the header for `RELEASE.md` under\n\"Files Changed\" above.","created_at":"2022-05-20T21:08:09Z","closed_at":"2022-05-20T21:18:06Z","merged_at":"2022-05-20T21:18:06Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":943158214,"title":"Update release notes for TensorFlow 2.8.2","body":"This PR is intentionally incomplete. One of the Release Owners for 2.8.2\nneeds to fill in the internal release notes for this version before the PR gets\nsubmitted. Click on the :pencil2: icon in the header for `RELEASE.md` under\n\"Files Changed\" above.","created_at":"2022-05-20T21:08:03Z","closed_at":"2022-05-20T21:17:58Z","merged_at":"2022-05-20T21:17:58Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":943154221,"title":"Update release notes for TensorFlow 2.9.1","body":"This PR is intentionally incomplete. One of the Release Owners for 2.9.1\nneeds to fill in the internal release notes for this version before the PR gets\nsubmitted. Click on the :pencil2: icon in the header for `RELEASE.md` under\n\"Files Changed\" above.","created_at":"2022-05-20T21:05:35Z","closed_at":"2022-05-20T21:17:55Z","merged_at":"2022-05-20T21:17:55Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":941803141,"title":"Fix typo in `TfLiteRegistration::profiling_string` comment","body":null,"created_at":"2022-05-19T17:10:33Z","closed_at":"2022-05-20T05:47:06Z","merged_at":null,"user_id":5988771,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":941364210,"title":"Fix for incorrect type and size calculated in ctstring_test on s390x","body":"The `OffsetType` test fails on s390x as it returns 0 for type/size. This is happening because [TF_TString_ToInternalSizeT](https://github.com/tensorflow/tensorflow/blob/v2.8.0/tensorflow/core/platform/ctstring_internal.h#L158) returns 8 bytes(size_t is 8 bytes on s390x), however offset type has \"size\" which is uint32. Thus the data containing 'type' information is lost. This further causes wrong 'size' calculation [here](https://github.com/tensorflow/tensorflow/blob/v2.8.0/tensorflow/core/platform/ctstring_internal.h#L184).  \r\n\r\nThe mark and other calculations work for Large type strings as the 'size' is 8bytes.\r\nFixes #56046. More details in that issue.\r\n","created_at":"2022-05-19T10:30:11Z","closed_at":"2022-08-02T12:26:43Z","merged_at":"2022-08-02T12:26:43Z","user_id":21953668,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":941256977,"title":"[TF-TRT] Change default max workspace size to INT_MAX (fixed)","body":"#55665 had to be rolled back due to using `trt_utils.is_loaded_tensorrt_version_greater_equal` outside of any functions, which causes an error when importing TF without TRT.\r\n\r\nThe solution I found is to use a special value `None` for the default and call a function to get the default value for the loaded TRT. It's a bit redundant, if someone can think of a cleaner solution, please let me know.","created_at":"2022-05-19T08:45:19Z","closed_at":"2022-06-01T16:52:09Z","merged_at":"2022-06-01T16:52:09Z","user_id":17441062,"sentiment":{"polarity":0.1,"subjectivity":0.2}}
{"_id":940747958,"title":"Reimplementation of the Converter for Tile Operation.","body":"The converter for the Tile operation, originally implemented in [PR#54427](https://github.com/tensorflow/tensorflow/pull/54427) was disabled by [PR#56066](https://github.com/tensorflow/tensorflow/pull/56066) because it did not properly handle the tiling along the batch dimension.\r\nThis issue has been fixed by the current PR and two tests have been added for tiling along the batch dimension.","created_at":"2022-05-19T00:50:31Z","closed_at":"2022-06-30T22:26:42Z","merged_at":"2022-06-30T22:26:42Z","user_id":32910461,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":940622535,"title":"r2.9 cherry-pick: a6f9c7021a3 \"Update \"op_resolver_internal\" package visibility\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/a6f9c7021a3371abddc6abfb42e7baa4529a5c2b","created_at":"2022-05-18T23:30:09Z","closed_at":"2022-05-18T23:59:02Z","merged_at":"2022-05-18T23:59:02Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":940393799,"title":"Update the RBE images to the latest container versions","body":"This PR was created by a GitHub Actions workflow to update all the SIG Build-based RBE containers to the most recent containers. See:\n\n- https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/toolchains/remote_config/configs.bzl\n- https://github.com/tensorflow/tensorflow/blob/master/.github/workflows/update-rbe.yml","created_at":"2022-05-18T20:17:05Z","closed_at":"2022-05-18T23:01:39Z","merged_at":"2022-05-18T23:01:39Z","user_id":16359713,"sentiment":{"polarity":0.5,"subjectivity":0.9}}
{"_id":940020679,"title":"Fix build of hwloc for --config=numa","body":null,"created_at":"2022-05-18T14:04:09Z","closed_at":"2022-05-25T19:50:24Z","merged_at":"2022-05-25T19:50:24Z","user_id":96748782,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":940016368,"title":"Fix typo in GL converter error log","body":null,"created_at":"2022-05-18T14:00:26Z","closed_at":"2023-02-22T10:52:16Z","merged_at":"2023-02-22T10:52:16Z","user_id":96748782,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":939849286,"title":"Unbreak windows build","body":"Address two build problem when building jaxlib for windows.\r\n\r\n@hawkinsp ","created_at":"2022-05-18T11:34:46Z","closed_at":"2022-05-18T14:40:03Z","merged_at":"2022-05-18T14:40:03Z","user_id":1279292,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":939781470,"title":"Do not cache Mkl conv primitive on AArch64 when weights are not constant","body":"Disables caching on AArch64 of Mkl convolution primitive when weights in that primitive are not constant. If primitive is cached then it will get stale weights and not ones that were updated on backward pass.\r\n\r\nThis fixes failures for unit tests for nn_ops in kernel_tests when run on AArch64","created_at":"2022-05-18T10:23:46Z","closed_at":"2022-08-01T16:28:55Z","merged_at":null,"user_id":79916358,"sentiment":{"polarity":0.0,"subjectivity":0.3333333333333333}}
{"_id":939486724,"title":"Fixing typo","body":"Fixed typo in TF documentation.","created_at":"2022-05-18T04:17:01Z","closed_at":"2022-08-02T12:03:18Z","merged_at":"2022-08-02T12:03:18Z","user_id":84765720,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":939297661,"title":"Add data init funcs for TFLite Swift API","body":"As per #56144 it'd be nice if Interpreters could be initialized from `Data` instead of file paths like in the Android API. I added functions for this feature.\r\n\r\nI'm having trouble building this locally so I'm PR'ing it in hopes that I can build via PR. Locally, I see many messages like \r\n```\r\nerror: output 'tensorflow/lite/swift/TensorFlowLiteAllDelegates_objs/Sources/CoreMLDelegate.swift.partial_swiftmodule' was not created\r\nCompiling Swift module //tensorflow/lite/swift:TensorFlowLiteAllDelegates failed: not all outputs were created or valid\r\n```\r\nfrom Bazel. I'm using XCode 13.3.1  and Bazel 5.1.1\r\n\r\n","created_at":"2022-05-17T21:41:45Z","closed_at":"2022-12-21T18:41:08Z","merged_at":null,"user_id":577149,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":939218579,"title":"adding the SCF ops required for jit64 indexing","body":"A follow up PR to enable the mlir::scf ops and compile and execute kernels within the xla_legalize_tf_no_fallback pass. This is required to compile the jit 64 bit indexing.\r\ncc: @frgossen ","created_at":"2022-05-17T19:57:50Z","closed_at":"2022-06-30T23:31:23Z","merged_at":"2022-06-30T23:31:23Z","user_id":42385577,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":939106562,"title":"r2.9 cherry-pick: 7edee53b5be \"build: add ios_arm_64 configuration, fix build issues for TFLite\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/7edee53b5bee0f48d833bb6d3cee8021d461d475","created_at":"2022-05-17T17:46:06Z","closed_at":"2022-05-17T23:28:26Z","merged_at":"2022-05-17T23:28:26Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":939040020,"title":"[oneDNN] Shape inference fix for int8 convolutions.","body":"In current implementation of shape inference for convolution(fused with padding), padding dimensions are calculated only if explicit padding list is provided. For int8 convolutions (with fused paddings) we provide paddings through a padding list which is the same as explicit paddings but a different name. This PR includes padding list also into padding calculation if present.","created_at":"2022-05-17T16:30:41Z","closed_at":"2022-07-22T00:35:44Z","merged_at":"2022-07-22T00:35:44Z","user_id":39842562,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":938704746,"title":"Properly handle CUDA stream setting in GpuCudaMallocAsyncAllocator","body":"Fix #56134.\r\nSince each physical GPU device has a single compute CUDA stream and [GpuCudaMallocAsyncAllocator always uses the device's compute stream](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/common_runtime/gpu/gpu_device.cc#L1553) we can can bypass the repeated CUDA stream setting without throwing an error.","created_at":"2022-05-17T11:44:27Z","closed_at":"2022-08-01T21:20:28Z","merged_at":"2022-08-01T21:20:27Z","user_id":5624568,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":938335260,"title":"[oneDNN][tfg][remapper] Contraction + BiasAdd + <Activation> Fusion.","body":"This PR enables few fusions (contraction related):\r\n\r\n- Contraction (MatMul, Conv2D, Conv3D, and DepthwiseConv2DNative) + BiasAdd\r\n- Contraction + BiasAdd + Activation (Relu, Relu6, LeakyRelu, Tanh, and Sigmoid)\r\n\r\nNote: We are gradually renaming MKL to oneDNN.","created_at":"2022-05-17T05:36:56Z","closed_at":"2022-08-17T18:51:03Z","merged_at":"2022-08-17T18:51:03Z","user_id":27521767,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":938300211,"title":"Add fast int division for GPU kernels","body":"This PR introduces the fast integer division mainly for the GPU kernels, which substitutes the fast multiplication with the slow division instructions.\r\n\r\nThe implementation is based on the mathematical basis in this blog post:\r\nhttps://ridiculousfish.com/blog/posts/labor-of-division-episode-i.html\r\n\r\nThe fast int div alone can deliver up to ~20% and ~40% speedups in our benchmark for V100 and A100 GPUs respectively.\r\n\r\nBenchmark script: https://github.com/kaixih/depthwise_conv2d_benchmark\r\nBenchmark results of V100 and A100:\r\nhttps://docs.google.com/spreadsheets/d/14KPVP6ueN4Gkc3UEy94jGV2W9SN8VuVGA8S-gcKioU8/edit?usp=sharing\r\n\r\ncc. @nluehr","created_at":"2022-05-17T04:40:24Z","closed_at":"2022-06-17T18:41:18Z","merged_at":"2022-06-17T18:41:18Z","user_id":4001424,"sentiment":{"polarity":0.2,"subjectivity":0.6}}
{"_id":938011741,"title":"Update central crop doc string","body":"Added additional details to the doc string of central_crop.\r\nFixes: https://github.com/tensorflow/tensorflow/issues/55782","created_at":"2022-05-16T21:16:57Z","closed_at":"2022-05-19T14:45:35Z","merged_at":"2022-05-19T14:45:35Z","user_id":73069040,"sentiment":{"polarity":0.0,"subjectivity":0.25}}
{"_id":937499793,"title":"Add lamba var loop test","body":"Add a test to cover and then fix #56089\r\n\r\n\r\n~This is based on https://github.com/tensorflow/tensorflow/pull/56106 and it will be semplified/rebased when merged.~\r\n\r\n/cc @mdanatg  \r\nLet me know about the test design here and how we want to cover also the original case. \r\n\r\nWhen we are satisfied by the test coverage we could start to try some fixes.","created_at":"2022-05-16T13:26:37Z","closed_at":"2022-08-02T17:32:33Z","merged_at":"2022-08-02T17:32:33Z","user_id":1710528,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":936391255,"title":"[Autograph] Enable loop_scoping_test","body":"See https://github.com/tensorflow/tensorflow/issues/56089#issuecomment-1126575570\r\n\r\n/cc @mdanatg ","created_at":"2022-05-13T23:36:33Z","closed_at":"2022-05-16T23:34:54Z","merged_at":"2022-05-16T23:34:54Z","user_id":1710528,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":936174988,"title":"Update version numbers for TensorFlow 2.9.0","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 9 -> 9\nPatch: 0 -> 0\n\nNo lingering old version strings \"2.9.0-rc2\" found in source directory \n\"tensorflow/\". Good.\nNo lingering old version strings \"2.9.0rc2\" found in source directory \n\"tensorflow/\". Good.\n```","created_at":"2022-05-13T17:56:11Z","closed_at":"2022-05-13T18:05:15Z","merged_at":"2022-05-13T18:05:15Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":936143245,"title":"Fix build due to importlib-metadata/setuptools","body":"See https://github.com/pypa/setuptools/issues/3293","created_at":"2022-05-13T17:11:11Z","closed_at":"2022-05-13T17:11:30Z","merged_at":"2022-05-13T17:11:30Z","user_id":323199,"sentiment":{"polarity":-0.125,"subjectivity":0.375}}
{"_id":936131378,"title":"Update tensorflow dependency for TF-Estimator version 2.9.0","body":null,"created_at":"2022-05-13T16:55:25Z","closed_at":"2022-05-13T16:57:42Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":936012455,"title":"fix tflite cmakelist","body":"common.c was refactored to common.cc and the CMakeList wasn't updated","created_at":"2022-05-13T14:43:41Z","closed_at":"2022-05-16T09:11:58Z","merged_at":null,"user_id":33968313,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":935762596,"title":"Add CI/CD for ARM64 using GitHub Actions","body":"- Added GitHub workflows to build, test and upload ARM64 pip wheels for Python versions 3.7, 3.8, 3.9 and 3.10\r\n- Workflow jobs run on self-hosted runners on AWS Graviton instances\r\n- CI workflow uploads generated pip wheels to GitHub Actions and is triggered for:\r\n  - PR on `master` branch\r\n  - PR on branch name starting with `r2.`\r\n- CD workflow uploads generated pip wheels to PyPI and is triggered for:\r\n  - New tags starting with `v2.`\r\n  - Nightly on `master` branch at 8am UTC\r\n- Following 18 tests currently fail and are skipped:\r\n    ```\r\n    tensorflow/python:nn_grad_test_cpu\r\n    tensorflow/python:dequantize_op_test\r\n    tensorflow/python:quantized_ops_test\r\n    tensorflow/python/data/experimental/kernel_tests/service:cross_trainer_cache_test\r\n    tensorflow/python/eager:forwardprop_test_cpu\r\n    tensorflow/python/framework:node_file_writer_test_cpu\r\n    tensorflow/python/grappler:memory_optimizer_test\r\n    tensorflow/python/kernel_tests/linalg:linear_operator_householder_test_cpu\r\n    tensorflow/python/kernel_tests/linalg:linear_operator_inversion_test_cpu\r\n    tensorflow/python/kernel_tests/linalg:linear_operator_block_diag_test_cpu\r\n    tensorflow/python/kernel_tests/linalg:linear_operator_block_lower_triangular_test_cpu\r\n    tensorflow/python/kernel_tests/linalg:linear_operator_kronecker_test_cpu\r\n    tensorflow/python/kernel_tests/math_ops:batch_matmul_op_test_cpu\r\n    tensorflow/python/kernel_tests/nn_ops:conv_ops_test_cpu\r\n    tensorflow/python/kernel_tests/nn_ops:conv2d_backprop_filter_grad_test_cpu\r\n    tensorflow/python/kernel_tests/nn_ops:conv3d_backprop_filter_v2_grad_test_cpu\r\n    tensorflow/python/kernel_tests/nn_ops:atrous_conv2d_test_cpu\r\n    tensorflow/python/ops/parallel_for:math_test_cpu\r\n    ```","created_at":"2022-05-13T10:31:19Z","closed_at":"2022-05-20T21:51:01Z","merged_at":"2022-05-20T21:51:01Z","user_id":22492939,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":935668958,"title":"Typo, should be `virtual` instead of `virtial`","body":null,"created_at":"2022-05-13T09:07:46Z","closed_at":"2022-05-13T13:58:09Z","merged_at":null,"user_id":1551736,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":935518486,"title":"Fix typo error of foldl and foldr","body":"Updating correct API name in given example for `tf.foldl` and `tf.foldr` . Thanks!","created_at":"2022-05-13T05:54:29Z","closed_at":"2022-07-29T23:55:18Z","merged_at":"2022-07-29T23:55:18Z","user_id":99852755,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":935464671,"title":"fixed llvm-raw build issue","body":"newer llvm source included `third_party/llvm/fix_ppc64le.patch` so there\r\nis patch conflict which prevents build tensorflow related, e.g.,\r\n`bazel build --config opt //tensorflow/tools/pip_package:build_pip_package` failed","created_at":"2022-05-13T04:00:32Z","closed_at":"2022-05-13T15:07:35Z","merged_at":null,"user_id":3395998,"sentiment":{"polarity":0.1,"subjectivity":0.2}}
{"_id":935355073,"title":"[oneDNN] Bug fix: /tensorflow/python/grappler:remapper_test_gpu on GPU with oneDNN enabled","body":"A new test was added by the [commit](https://github.com/tensorflow/tensorflow/commit/4dbecb7c26feff4fc6bfd7ddb470494f3e9ab220) which was failing when oneDNN and CUDA are both enabled.\r\nThis PR enables shape inference for Conv+BiasAdd+Relu fusion when oneDNN is enabled.\r\nWithout this the shape for filter [here](https://github.com/intel-innersource/frameworks.ai.tensorflow.private-tensorflow/blob/master/tensorflow/core/grappler/optimizers/remapper.cc#L431) is 0 and fusion does not happen.","created_at":"2022-05-12T23:27:21Z","closed_at":"2022-05-13T00:13:18Z","merged_at":"2022-05-13T00:13:18Z","user_id":42224278,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":935093833,"title":"Update release notes with security updates","body":null,"created_at":"2022-05-12T17:24:30Z","closed_at":"2022-05-12T17:27:53Z","merged_at":"2022-05-12T17:27:53Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":935060856,"title":"Fix (de)quantisation scale factor formula in MKL kernels","body":"This patch that fixes formula for calculating scale factor when MKL quantization and dequantization primitives are called from TF. This updated formulas match results from Eigen library and makes tests //tensorflow/python:quantized_ops_test and //tensorflow/python:dequantize_op_test pass when TF_ENABLE_ONEDNN_OPTS is 1 .\r\n\r\nAdditionally:\r\n* it also adds correct memory layout when using tensor with different dimension to 4 in MKL dequantize operation, and\r\n* reverts to Eigen op when per slice dequantization is specified","created_at":"2022-05-12T16:44:01Z","closed_at":"2022-07-26T01:25:22Z","merged_at":"2022-07-26T01:25:21Z","user_id":79916358,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":934124927,"title":"Install dep as user","body":null,"created_at":"2022-05-11T20:35:48Z","closed_at":"2022-05-11T20:35:54Z","merged_at":"2022-05-11T20:35:54Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":934105978,"title":"[XNNPACK] Support quantized reshape","body":"[XNNPACK already supports quantized reshapes](https://github.com/google/XNNPACK/blob/99834b9a518e8ee9fb2c1405a61d1a21bfbde3a7/src/subgraph/static-reshape.c#L133-L268) so this PR allows the TFLite to delegate quantized reshape operations to XNNPACK.\r\n\r\n/cc @Maratyszcza","created_at":"2022-05-11T20:14:45Z","closed_at":"2023-01-10T14:57:54Z","merged_at":"2023-01-10T14:57:53Z","user_id":13285808,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":934032289,"title":"[TF-TRT] Unittest Logging Double Print Fix","body":"This PR fixes double prints in TF-TRT logging messages by stopping the propagation through all the registered handlers and only using the first one available.\r\n\r\nThis PR also removes absl logging and replace it with TF logging to avoid conflicts.\r\n","created_at":"2022-05-11T18:48:25Z","closed_at":"2022-06-17T17:40:34Z","merged_at":"2022-06-17T17:40:34Z","user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":934000503,"title":"Another attempt at fixing https://github.com/pypa/setuptools/issues/3293","body":null,"created_at":"2022-05-11T18:10:25Z","closed_at":"2022-05-11T18:10:32Z","merged_at":"2022-05-11T18:10:32Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":933991408,"title":"Merge pull request #56060 from yongtang:curl-7.83.1","body":"PiperOrigin-RevId: 448033540","created_at":"2022-05-11T18:00:51Z","closed_at":"2022-05-11T18:01:07Z","merged_at":"2022-05-11T18:01:07Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":933991399,"title":"Merge pull request #56060 from yongtang:curl-7.83.1","body":"PiperOrigin-RevId: 448033540","created_at":"2022-05-11T18:00:50Z","closed_at":"2022-05-11T18:01:06Z","merged_at":"2022-05-11T18:01:06Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":933991388,"title":"Merge pull request #56060 from yongtang:curl-7.83.1","body":"PiperOrigin-RevId: 448033540","created_at":"2022-05-11T18:00:50Z","closed_at":"2022-05-11T18:01:06Z","merged_at":"2022-05-11T18:01:06Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":933991372,"title":"Merge pull request #56060 from yongtang:curl-7.83.1","body":"PiperOrigin-RevId: 448033540","created_at":"2022-05-11T18:00:48Z","closed_at":"2022-05-11T18:01:04Z","merged_at":"2022-05-11T18:01:04Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":933966491,"title":"[TF:TRT] Temporarily disable tile conversion","body":"This change disables TF-TRT conversion of the `tile` operator. Currently the tile converter does not handle the batch dimension correctly, which can result in crashes and incorrect graph generation. Once a fix is in place, the tile converter can be re-enabled (with additional tests).","created_at":"2022-05-11T17:32:13Z","closed_at":"2022-05-17T16:15:53Z","merged_at":"2022-05-17T16:15:53Z","user_id":30323187,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":933953980,"title":"Fix pip install ordering","body":null,"created_at":"2022-05-11T17:19:49Z","closed_at":"2022-05-11T17:20:06Z","merged_at":"2022-05-11T17:20:06Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":933940282,"title":"Force install `importlib-metadata` to fix build","body":"See https://github.com/pypa/setuptools/issues/3293","created_at":"2022-05-11T17:05:09Z","closed_at":"2022-05-11T17:05:18Z","merged_at":"2022-05-11T17:05:18Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":933805097,"title":"Update curl to latest 7.83.1","body":"This PR updates curl to latest 7.83.1 to fix the following vulnerabilities in 7.83.0:\r\n- 121\tCVE-2022-30115: HSTS bypass via trailing dot\r\n- 120\tCVE-2022-27782: TLS and SSH connection too eager reuse\r\n- 119\tCVE-2022-27781: CERTINFO never-ending busy-loop\r\n- 118\tCVE-2022-27780: percent-encoded path separator in URL host\r\n- 117\tCVE-2022-27779: cookie for trailing dot TLD\r\n- 116\tCVE-2022-27778: curl removes wrong file on error\r\n\r\nSee https://curl.se/docs/security.html for details\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2022-05-11T14:53:38Z","closed_at":"2022-05-11T17:55:57Z","merged_at":"2022-05-11T17:55:57Z","user_id":6932348,"sentiment":{"polarity":0.5,"subjectivity":0.9}}
{"_id":932986101,"title":"TFTRT: Respect device placement requested by user","body":"Previously TRT engines would always default to running on GPU 0. On a multi GPU system, this does not make the best use of the available resources. This commit adds the ability to specify the GPU on which the TRT engine should run.\r\n\r\nSigned-off-by: Meenakshi Venkataraman <meenakshiv@nvidia.com>\r\n\r\nCC: @bixia1 @DEKHTIARJonathan @tfeher ","created_at":"2022-05-10T23:35:36Z","closed_at":"2022-05-16T16:10:36Z","merged_at":"2022-05-16T16:10:36Z","user_id":80416898,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":932928460,"title":"Increase the default workspace limit for Cudnn Convolution","body":"The TF32 cudnn kernels might need larger workspace to allow the rounding of fp32->tf32 on Ampere GPUs. This PR doubles up the 4GB limit to 8GB.\r\n\r\ncc. @nluehr ","created_at":"2022-05-10T22:05:33Z","closed_at":"2022-07-01T15:04:33Z","merged_at":"2022-07-01T15:04:33Z","user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":932649605,"title":"[TF:TRT] Add ability to persist timing cache to disk","body":"Drops compile time of models significantly (e.g. 240 sec -> 40 sec on object detection with TRT 8.2)","created_at":"2022-05-10T16:32:57Z","closed_at":"2022-10-12T04:41:53Z","merged_at":null,"user_id":30323187,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":932635051,"title":"[TF:TRT] Remove dead code from TrtEngineOp implementation","body":"Removes an unused type alias from the TrtEngineOp implementation source file.","created_at":"2022-05-10T16:17:09Z","closed_at":"2022-05-10T23:43:27Z","merged_at":"2022-05-10T23:43:27Z","user_id":30323187,"sentiment":{"polarity":-0.2,"subjectivity":0.4}}
{"_id":932609544,"title":"Update layer_test.py","body":"Removing nested functions to modularise the code and more readable","created_at":"2022-05-10T15:51:53Z","closed_at":"2022-05-10T16:18:06Z","merged_at":null,"user_id":4949778,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":932448259,"title":"[MHLO] add EliminateRedundantConvert canonicalize pattern","body":"add EliminateRedundantConvert canonicalize pattern: `convert(convert(x)) => convert(x)`","created_at":"2022-05-10T13:40:46Z","closed_at":"2022-05-27T12:12:45Z","merged_at":"2022-05-27T12:12:45Z","user_id":29956693,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":932187022,"title":"Fixed the typo in TF doc","body":"Changed the word from 'dispatchs' to 'dispatches'.","created_at":"2022-05-10T09:38:59Z","closed_at":"2022-05-10T14:43:18Z","merged_at":null,"user_id":84765720,"sentiment":{"polarity":0.1,"subjectivity":0.2}}
{"_id":931794745,"title":"Converter for Range operator.","body":"Similar to [**tf.range**](https://www.tensorflow.org/api_docs/python/tf/range) this converter creates a sequence of numbers defined by **(start, limit, delta)** any of which could be DT_FLOAT, DT_HALF, or DT_INT32. Like **tf.range** the output is a tensor of type DT_FLOAT unless all three **(start, limit, delta)** are of type DT_INT32. In this case, the output will also be a tensor of type DT_INT32.\r\nThe implementation is complete for parameters passed as the weights. When parameters are passed as tensors, **(start, limit, delta)** can only be non-negative DT_INT32 type.","created_at":"2022-05-09T23:49:24Z","closed_at":"2022-05-16T16:06:35Z","merged_at":"2022-05-16T16:06:35Z","user_id":32910461,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":931677285,"title":"r2.9 cherry-pick: Update RELEASE.md","body":"Add description about experimental oneDNN optimizations on Linux aarch64.","created_at":"2022-05-09T21:50:49Z","closed_at":"2022-05-09T23:25:47Z","merged_at":"2022-05-09T23:25:47Z","user_id":38085909,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":931626730,"title":"Update version numbers for TensorFlow 2.7.2","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 7 -> 7\nPatch: 1 -> 2\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.7.1\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/lite/examples/experimental_new_converter/keras_lstm.ipynb:229:2.7.1\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.7.1\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/lite/examples/experimental_new_converter/keras_lstm.ipynb:229:2.7.1\n```","created_at":"2022-05-09T20:41:34Z","closed_at":"2022-05-09T20:44:28Z","merged_at":"2022-05-09T20:44:28Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":931626727,"title":"Update version numbers for TensorFlow 2.8.1","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 8 -> 8\nPatch: 0 -> 1\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.8.0\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/tools/ci_build/install/install_centos_pip_packages.sh:106:2.8.0\ntensorflow/tools/ci_build/release/requirements_common.txt:27:2.8.0\ntensorflow/tools/ci_build/release/requirements_common.txt:28:2.8.0\ntensorflow/tools/ci_build/release/requirements_common.txt:29:2.8.0\ntensorflow/tools/pip_package/setup.py:96:2.8.0\ntensorflow/tools/pip_package/setup.py:113:2.8.0\ntensorflow/lite/tools/versioning/runtime_version.cc:98:2.8.0\ntensorflow/lite/tools/versioning/runtime_version.cc:160:2.8.0\ntensorflow/lite/tools/versioning/runtime_version.cc:367:2.8.0\ntensorflow/lite/tools/versioning/runtime_version.cc:368:2.8.0\ntensorflow/lite/tools/versioning/runtime_version.cc:369:2.8.0\ntensorflow/lite/tools/versioning/runtime_version.cc:370:2.8.0\ntensorflow/lite/tools/versioning/runtime_version.cc:371:2.8.0\ntensorflow/lite/tools/versioning/runtime_version.cc:372:2.8.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:102:2.8.0\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.8.0\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/tools/ci_build/install/install_centos_pip_packages.sh:106:2.8.0\ntensorflow/tools/ci_build/release/requirements_common.txt:27:2.8.0\ntensorflow/tools/ci_build/release/requirements_common.txt:28:2.8.0\ntensorflow/tools/ci_build/release/requirements_common.txt:29:2.8.0\ntensorflow/tools/pip_package/setup.py:96:2.8.0\ntensorflow/tools/pip_package/setup.py:113:2.8.0\ntensorflow/lite/tools/versioning/runtime_version.cc:98:2.8.0\ntensorflow/lite/tools/versioning/runtime_version.cc:160:2.8.0\ntensorflow/lite/tools/versioning/runtime_version.cc:367:2.8.0\ntensorflow/lite/tools/versioning/runtime_version.cc:368:2.8.0\ntensorflow/lite/tools/versioning/runtime_version.cc:369:2.8.0\ntensorflow/lite/tools/versioning/runtime_version.cc:370:2.8.0\ntensorflow/lite/tools/versioning/runtime_version.cc:371:2.8.0\ntensorflow/lite/tools/versioning/runtime_version.cc:372:2.8.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:102:2.8.0\n```","created_at":"2022-05-09T20:41:34Z","closed_at":"2022-05-09T20:44:32Z","merged_at":"2022-05-09T20:44:32Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":931626698,"title":"Update version numbers for TensorFlow 2.6.4","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 6 -> 6\nPatch: 3 -> 4\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.6.3\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/c/experimental/filesystem/plugins/posix/copy_file_linux.cc:25:2.6.3\ntensorflow/c/experimental/filesystem/plugins/posix/copy_file.h:24:2.6.3\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.6.3\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/c/experimental/filesystem/plugins/posix/copy_file_linux.cc:25:2.6.3\ntensorflow/c/experimental/filesystem/plugins/posix/copy_file.h:24:2.6.3\n```","created_at":"2022-05-09T20:41:31Z","closed_at":"2022-05-09T20:44:24Z","merged_at":"2022-05-09T20:44:24Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":931581433,"title":"Update release notes for TensorFlow 2.8.1","body":"This PR is intentionally incomplete. One of the Release Owners for 2.8.1\nneeds to fill in the internal release notes for this version before the PR gets\nsubmitted. Click on the :pencil2: icon in the header for `RELEASE.md` under\n\"Files Changed\" above.","created_at":"2022-05-09T19:52:53Z","closed_at":"2022-05-12T17:27:33Z","merged_at":"2022-05-12T17:27:33Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":931566879,"title":"Update release notes for TensorFlow 2.7.2","body":"This PR is intentionally incomplete. One of the Release Owners for 2.7.2\nneeds to fill in the internal release notes for this version before the PR gets\nsubmitted. Click on the :pencil2: icon in the header for `RELEASE.md` under\n\"Files Changed\" above.","created_at":"2022-05-09T19:34:12Z","closed_at":"2022-05-12T17:27:30Z","merged_at":"2022-05-12T17:27:30Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":931556750,"title":"Update release notes for TensorFlow 2.6.4","body":"This PR is intentionally incomplete. One of the Release Owners for 2.6.4\nneeds to fill in the internal release notes for this version before the PR gets\nsubmitted. Click on the :pencil2: icon in the header for `RELEASE.md` under\n\"Files Changed\" above.","created_at":"2022-05-09T19:23:22Z","closed_at":"2022-05-12T17:27:28Z","merged_at":"2022-05-12T17:27:27Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":931517391,"title":"r2.9 cherry-pick: Warn that oneDNN optimizations are experimental on aarch64","body":"cc: @cantonios \r\n\r\nPiperOrigin-RevId: 447508799","created_at":"2022-05-09T18:38:26Z","closed_at":"2022-05-09T23:24:09Z","merged_at":"2022-05-09T23:24:08Z","user_id":38085909,"sentiment":{"polarity":0.1,"subjectivity":0.4}}
{"_id":931495699,"title":"Bump up cudnn frontend to v0.6.2","body":"Cudnn frontend v0.6.2 fixes some compilation warnings:\r\n\r\nhttps://github.com/NVIDIA/cudnn-frontend/releases/tag/v0.6.2\r\n\r\ncc @nluehr ","created_at":"2022-05-09T18:17:05Z","closed_at":"2022-05-10T23:38:40Z","merged_at":"2022-05-10T23:38:40Z","user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":931297883,"title":"Disable timing out tests","body":null,"created_at":"2022-05-09T14:50:51Z","closed_at":"2022-05-09T14:50:58Z","merged_at":"2022-05-09T14:50:58Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":931281956,"title":"Fix error due to location of `batch_size`","body":null,"created_at":"2022-05-09T14:36:12Z","closed_at":"2022-05-09T14:36:20Z","merged_at":"2022-05-09T14:36:20Z","user_id":323199,"sentiment":{"polarity":-0.125,"subjectivity":0.375}}
{"_id":931086837,"title":"Add CI/CD for Aarch64 pip wheels using GitHub Actions","body":"Added GitHub workflow to build, test and publish Aarch64 pip wheels for Python versions 3.7, 3.8, 3.9 and 3.10\r\nWorkflow jobs run on a self-hosted runner on an AWS Graviton instance and triggers for:\r\n- Pull requests against `r2.9` branch\r\n- New commits to `r2.9` branch\r\n- New tags starting with `v2.`\r\n\r\nFollowing tests currently fail and are skipped:\r\n1. tensorflow/python:nn_grad_test_cpu\r\n2. tensorflow/python/eager:forwardprop_test_cpu\r\n3. tensorflow/python/framework:node_file_writer_test_cpu\r\n4. tensorflow/python/grappler:memory_optimizer_test\r\n5. tensorflow/python/keras/engine:training_arrays_test\r\n6. tensorflow/python/kernel_tests/linalg:linear_operator_householder_test_cpu\r\n7. tensorflow/python/kernel_tests/linalg:linear_operator_inversion_test_cpu\r\n8. tensorflow/python/kernel_tests/linalg:linear_operator_block_diag_test_cpu\r\n9. tensorflow/python/kernel_tests/linalg:linear_operator_block_lower_triangular_test_cpu\r\n10. tensorflow/python/kernel_tests/linalg:linear_operator_kronecker_test_cpu\r\n11. tensorflow/python/kernel_tests/math_ops:batch_matmul_op_test_cpu\r\n12. tensorflow/python/kernel_tests/nn_ops:conv_ops_test_cpu\r\n13. tensorflow/python/kernel_tests/nn_ops:conv2d_backprop_filter_grad_test_cpu\r\n14. tensorflow/python/kernel_tests/nn_ops:conv3d_backprop_filter_v2_grad_test_cpu\r\n15. tensorflow/python/kernel_tests/nn_ops:atrous_conv2d_test_cpu\r\n16. tensorflow/python/ops/parallel_for:math_test_cpu","created_at":"2022-05-09T12:09:40Z","closed_at":"2022-05-13T10:34:48Z","merged_at":null,"user_id":22492939,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930835824,"title":"Added iOS and Python Task Library Documentation","body":null,"created_at":"2022-05-09T07:46:22Z","closed_at":"2022-05-11T06:27:30Z","merged_at":null,"user_id":42828735,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930678685,"title":"Fix compilation due to double declaration caused by cherrypick","body":null,"created_at":"2022-05-09T03:47:05Z","closed_at":"2022-05-09T03:47:12Z","merged_at":"2022-05-09T03:47:12Z","user_id":323199,"sentiment":{"polarity":-0.0625,"subjectivity":0.1875}}
{"_id":930582149,"title":"Include stdlib.h instead of malloc.h","body":"This fixes build error on macOS.\r\n\r\nSigned-off-by: Cliffs Dover <cliffsdover90@gmail.com>","created_at":"2022-05-08T23:55:16Z","closed_at":"2022-06-27T16:23:18Z","merged_at":"2022-06-27T16:23:17Z","user_id":4423523,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930532868,"title":"r2.8 cherry-pick: 7ce184d43f7 \"[MLIR][KernelGen][JIT] Make JIT-compiled GPU kernels experimental\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/7ce184d43f78aa1b7ede5b8c6681a25894afb134","created_at":"2022-05-08T18:45:28Z","closed_at":"2022-05-08T18:46:48Z","merged_at":"2022-05-08T18:46:48Z","user_id":16359713,"sentiment":{"polarity":0.1,"subjectivity":0.4}}
{"_id":930531684,"title":"r2.8 cherry-pick: 1b85a28d395 \"Fix TensorKey hash function.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/1b85a28d395dc91f4d22b5f9e1e9a22e92ccecd6","created_at":"2022-05-08T18:37:17Z","closed_at":"2022-05-08T18:40:02Z","merged_at":"2022-05-08T18:40:02Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930531659,"title":"r2.9 cherry-pick: 1b85a28d395 \"Fix TensorKey hash function.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/1b85a28d395dc91f4d22b5f9e1e9a22e92ccecd6","created_at":"2022-05-08T18:37:10Z","closed_at":"2022-05-08T18:39:59Z","merged_at":"2022-05-08T18:39:59Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930531603,"title":"Bump zlib to 1.2.12.","body":"Due to security issue (a deflate bug when using the `Z_FIXED` strategy can result in out-of-bound accesses), zlib 1.2.11 seems to be yanked, so builds not using TF mirror will break.\r\n\r\nSee https://www.zlib.net/, https://www.openwall.com/lists/oss-security/2022/03/28/1, https://twitter.com/taviso/status/1508438583484452866 and https://twitter.com/perfinion/status/1508448580226322432?t=e3RC0-DuXNKaEwPnldjzzw&s=03\r\n\r\nPiperOrigin-RevId: 437843809","created_at":"2022-05-08T18:36:51Z","closed_at":"2022-05-08T18:37:43Z","merged_at":"2022-05-08T18:37:43Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930531595,"title":"Bump zlib to 1.2.12.","body":"Due to security issue (a deflate bug when using the `Z_FIXED` strategy can result in out-of-bound accesses), zlib 1.2.11 seems to be yanked, so builds not using TF mirror will break.\r\n\r\nSee https://www.zlib.net/, https://www.openwall.com/lists/oss-security/2022/03/28/1, https://twitter.com/taviso/status/1508438583484452866 and https://twitter.com/perfinion/status/1508448580226322432?t=e3RC0-DuXNKaEwPnldjzzw&s=03\r\n\r\nPiperOrigin-RevId: 437843809","created_at":"2022-05-08T18:36:47Z","closed_at":"2022-05-08T18:37:40Z","merged_at":"2022-05-08T18:37:40Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930530862,"title":"Merge pull request #55730 from graphcore:awf/issue-55530","body":"PiperOrigin-RevId: 445252025","created_at":"2022-05-08T18:31:50Z","closed_at":"2022-05-08T18:31:59Z","merged_at":"2022-05-08T18:31:59Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930530860,"title":"Merge pull request #55730 from graphcore:awf/issue-55530","body":"PiperOrigin-RevId: 445252025","created_at":"2022-05-08T18:31:49Z","closed_at":"2022-05-08T18:32:04Z","merged_at":"2022-05-08T18:32:04Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930530855,"title":"Merge pull request #55730 from graphcore:awf/issue-55530","body":"PiperOrigin-RevId: 445252025","created_at":"2022-05-08T18:31:47Z","closed_at":"2022-05-08T18:32:11Z","merged_at":"2022-05-08T18:32:11Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930530841,"title":"Merge pull request #55730 from graphcore:awf/issue-55530","body":"PiperOrigin-RevId: 445252025","created_at":"2022-05-08T18:31:44Z","closed_at":"2022-05-08T18:32:16Z","merged_at":"2022-05-08T18:32:16Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930530026,"title":"Update curl from curl-7.81.0 to curl-7.82.0.","body":"PiperOrigin-RevId: 445230515","created_at":"2022-05-08T18:26:27Z","closed_at":"2022-05-08T18:26:55Z","merged_at":"2022-05-08T18:26:55Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930529975,"title":"Update curl from curl-7.81.0 to curl-7.82.0.","body":"PiperOrigin-RevId: 445230515","created_at":"2022-05-08T18:26:08Z","closed_at":"2022-05-08T18:26:49Z","merged_at":"2022-05-08T18:26:49Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930529817,"title":"Update curl from curl-7.81.0 to curl-7.82.0.","body":"PiperOrigin-RevId: 445230515","created_at":"2022-05-08T18:25:00Z","closed_at":"2022-05-08T18:26:42Z","merged_at":"2022-05-08T18:26:41Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930529179,"title":"Merge pull request #55274 from yongtang:55263-tf.signal.rfft2d","body":"PiperOrigin-RevId: 436736690","created_at":"2022-05-08T18:20:49Z","closed_at":"2022-05-08T18:21:11Z","merged_at":"2022-05-08T18:21:11Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930529161,"title":"Merge pull request #55274 from yongtang:55263-tf.signal.rfft2d","body":"PiperOrigin-RevId: 436736690","created_at":"2022-05-08T18:20:40Z","closed_at":"2022-05-08T18:21:12Z","merged_at":"2022-05-08T18:21:12Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930529146,"title":"Merge pull request #55274 from yongtang:55263-tf.signal.rfft2d","body":"PiperOrigin-RevId: 436736690","created_at":"2022-05-08T18:20:33Z","closed_at":"2022-05-08T18:21:13Z","merged_at":"2022-05-08T18:21:13Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930528048,"title":"Validate `num_segments >= 0` in `unsorted_segment_join`","body":"Fixes #55305","created_at":"2022-05-08T18:14:09Z","closed_at":"2022-05-08T18:14:29Z","merged_at":"2022-05-08T18:14:29Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930528044,"title":"Validate `num_segments >= 0` in `unsorted_segment_join`","body":"Fixes #55305","created_at":"2022-05-08T18:14:08Z","closed_at":"2022-05-08T18:14:30Z","merged_at":"2022-05-08T18:14:30Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930528038,"title":"Validate `num_segments >= 0` in `unsorted_segment_join`","body":"Fixes #55305","created_at":"2022-05-08T18:14:06Z","closed_at":"2022-05-08T18:14:31Z","merged_at":"2022-05-08T18:14:31Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930527848,"title":"Validate `num_segments >= 0` in `unsorted_segment_join`","body":"Fixes #55305","created_at":"2022-05-08T18:13:05Z","closed_at":"2022-05-08T18:14:33Z","merged_at":"2022-05-08T18:14:33Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930525954,"title":"Fix security vulnerability with SpaceToBatchNDOp.","body":"PiperOrigin-RevId: 445527615","created_at":"2022-05-08T18:02:07Z","closed_at":"2022-05-08T18:02:30Z","merged_at":"2022-05-08T18:02:30Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930525952,"title":"Fix security vulnerability with SpaceToBatchNDOp.","body":"PiperOrigin-RevId: 445527615","created_at":"2022-05-08T18:02:06Z","closed_at":"2022-05-08T18:02:30Z","merged_at":"2022-05-08T18:02:30Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930525941,"title":"Fix security vulnerability with SpaceToBatchNDOp.","body":"PiperOrigin-RevId: 445527615","created_at":"2022-05-08T18:02:02Z","closed_at":"2022-05-08T18:02:32Z","merged_at":"2022-05-08T18:02:31Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930525919,"title":"Fix security vulnerability with SpaceToBatchNDOp.","body":"PiperOrigin-RevId: 445527615","created_at":"2022-05-08T18:01:55Z","closed_at":"2022-05-08T18:02:28Z","merged_at":"2022-05-08T18:02:28Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930524548,"title":"r2.6 cherry-pick: 11ced8467ec \"Fix UB in SparseTensorDenseAdd\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/11ced8467eccad9c7cb94867708be8fa5c66c730","created_at":"2022-05-08T17:52:59Z","closed_at":"2022-05-08T17:54:45Z","merged_at":"2022-05-08T17:54:45Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930524477,"title":"r2.9 cherry-pick: 11ced8467ec \"Fix UB in SparseTensorDenseAdd\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/11ced8467eccad9c7cb94867708be8fa5c66c730","created_at":"2022-05-08T17:52:34Z","closed_at":"2022-05-08T17:54:37Z","merged_at":"2022-05-08T17:54:37Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930524462,"title":"r2.8 cherry-pick: 11ced8467ec \"Fix UB in SparseTensorDenseAdd\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/11ced8467eccad9c7cb94867708be8fa5c66c730","created_at":"2022-05-08T17:52:30Z","closed_at":"2022-05-08T17:54:48Z","merged_at":"2022-05-08T17:54:48Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930524450,"title":"r2.7 cherry-pick: 11ced8467ec \"Fix UB in SparseTensorDenseAdd\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/11ced8467eccad9c7cb94867708be8fa5c66c730","created_at":"2022-05-08T17:52:26Z","closed_at":"2022-05-08T17:54:47Z","merged_at":"2022-05-08T17:54:47Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930523923,"title":"r2.6 cherry-pick: dbdd98c37bc \"Fix segfault from passing invalid input to tf.summary.flush()\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/dbdd98c37bc25249e8f288bd30d01e118a7b4498","created_at":"2022-05-08T17:48:58Z","closed_at":"2022-05-08T17:51:12Z","merged_at":"2022-05-08T17:51:12Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930523872,"title":"r2.9 cherry-pick: dbdd98c37bc \"Fix segfault from passing invalid input to tf.summary.flush()\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/dbdd98c37bc25249e8f288bd30d01e118a7b4498","created_at":"2022-05-08T17:48:42Z","closed_at":"2022-05-08T17:50:08Z","merged_at":"2022-05-08T17:50:08Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930523841,"title":"r2.7 cherry-pick: dbdd98c37bc \"Fix segfault from passing invalid input to tf.summary.flush()\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/dbdd98c37bc25249e8f288bd30d01e118a7b4498","created_at":"2022-05-08T17:48:33Z","closed_at":"2022-05-08T17:50:49Z","merged_at":"2022-05-08T17:50:49Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930523825,"title":"r2.8 cherry-pick: dbdd98c37bc \"Fix segfault from passing invalid input to tf.summary.flush()\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/dbdd98c37bc25249e8f288bd30d01e118a7b4498","created_at":"2022-05-08T17:48:27Z","closed_at":"2022-05-08T17:50:24Z","merged_at":"2022-05-08T17:50:24Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930523269,"title":"r2.6 cherry-pick: 803404044ae \"Fix security vulnerability with LSTMBlockCellOp\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/803404044ae7a1efac48ba82d74111fce1ddb09a","created_at":"2022-05-08T17:44:44Z","closed_at":"2022-05-08T17:47:38Z","merged_at":"2022-05-08T17:47:38Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930523235,"title":"r2.8 cherry-pick: 803404044ae \"Fix security vulnerability with LSTMBlockCellOp\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/803404044ae7a1efac48ba82d74111fce1ddb09a","created_at":"2022-05-08T17:44:33Z","closed_at":"2022-05-08T17:46:51Z","merged_at":"2022-05-08T17:46:51Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930523206,"title":"r2.9 cherry-pick: 803404044ae \"Fix security vulnerability with LSTMBlockCellOp\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/803404044ae7a1efac48ba82d74111fce1ddb09a","created_at":"2022-05-08T17:44:25Z","closed_at":"2022-05-08T17:46:18Z","merged_at":"2022-05-08T17:46:18Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930523183,"title":"r2.7 cherry-pick: 803404044ae \"Fix security vulnerability with LSTMBlockCellOp\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/803404044ae7a1efac48ba82d74111fce1ddb09a","created_at":"2022-05-08T17:44:16Z","closed_at":"2022-05-08T17:47:14Z","merged_at":"2022-05-08T17:47:14Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930522215,"title":"r2.8 cherry-pick: ea50a40e84f \"Fix failed check in SparseTensorToCSRSparseMatrix\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/ea50a40e84f6bff15a0912728e35b657548cef11","created_at":"2022-05-08T17:38:27Z","closed_at":"2022-05-08T17:39:17Z","merged_at":"2022-05-08T17:39:17Z","user_id":16359713,"sentiment":{"polarity":-0.5,"subjectivity":0.3}}
{"_id":930522193,"title":"r2.6 cherry-pick: ea50a40e84f \"Fix failed check in SparseTensorToCSRSparseMatrix\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/ea50a40e84f6bff15a0912728e35b657548cef11","created_at":"2022-05-08T17:38:20Z","closed_at":"2022-05-08T17:39:25Z","merged_at":"2022-05-08T17:39:25Z","user_id":16359713,"sentiment":{"polarity":-0.5,"subjectivity":0.3}}
{"_id":930522184,"title":"r2.9 cherry-pick: ea50a40e84f \"Fix failed check in SparseTensorToCSRSparseMatrix\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/ea50a40e84f6bff15a0912728e35b657548cef11","created_at":"2022-05-08T17:38:19Z","closed_at":"2022-05-08T17:40:02Z","merged_at":"2022-05-08T17:40:02Z","user_id":16359713,"sentiment":{"polarity":-0.5,"subjectivity":0.3}}
{"_id":930522172,"title":"r2.7 cherry-pick: ea50a40e84f \"Fix failed check in SparseTensorToCSRSparseMatrix\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/ea50a40e84f6bff15a0912728e35b657548cef11","created_at":"2022-05-08T17:38:14Z","closed_at":"2022-05-08T17:39:21Z","merged_at":"2022-05-08T17:39:21Z","user_id":16359713,"sentiment":{"polarity":-0.5,"subjectivity":0.3}}
{"_id":930521263,"title":"Fix tf.raw_ops.LoadAndRemapMatrix vulnerability with invalid `row_rem…","body":"…apping`.\r\n\r\nCheck that `row_remapping` has the correct dims().\r\n\r\nPiperOrigin-RevId: 445522800","created_at":"2022-05-08T17:32:49Z","closed_at":"2022-05-08T17:32:57Z","merged_at":"2022-05-08T17:32:57Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930520680,"title":"Fix tf.raw_ops.StagePeek vulnerability with invalid `index`.","body":"Check that input is actually a scalar before treating it as such.\r\n\r\nPiperOrigin-RevId: 445524908","created_at":"2022-05-08T17:29:08Z","closed_at":"2022-05-08T17:29:14Z","merged_at":"2022-05-08T17:29:14Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930519185,"title":"Include stdlib.h instead of malloc.h","body":"This PR fixes building error on macOS.\r\n\r\nSigned-off-by: Ming Jen Tai <mingjen_tai@realtek.com>","created_at":"2022-05-08T17:20:19Z","closed_at":"2022-05-08T17:30:21Z","merged_at":null,"user_id":24818418,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930519047,"title":"Always do safe parsing","body":"PiperOrigin-RevId: 433016287","created_at":"2022-05-08T17:19:19Z","closed_at":"2022-05-08T17:21:51Z","merged_at":"2022-05-08T17:21:51Z","user_id":323199,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":930518949,"title":"Always do safe parsing","body":"PiperOrigin-RevId: 433016287","created_at":"2022-05-08T17:18:39Z","closed_at":"2022-05-08T17:21:15Z","merged_at":"2022-05-08T17:21:15Z","user_id":323199,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":930108365,"title":"Remove duplicate code block in remapper","body":"While working on https://github.com/tensorflow/tensorflow/pull/55966, I found this code block is repeatedly called. Cleanup the code.\r\n\r\n\r\ncc. @nluehr ","created_at":"2022-05-06T21:45:04Z","closed_at":"2022-05-18T15:20:59Z","merged_at":"2022-05-18T15:20:59Z","user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930104184,"title":"r2.9 cherry-pick: Fix exploding memory usage issue in oneDNN AARCH64 build","body":"Fix exploding memory usage issue with high parallelism in https://github.com/tensorflow/tensorflow/issues/54979 by changing from per-thread oneDNN primitive caches to a global primitive cache.\r\nThis PR only affects AARCH64 oneDNN build.\r\n\r\nOriginal PR: https://github.com/tensorflow/tensorflow/pull/55925\r\nNote that the original PR has only been merged today (5/6) and hasn't gone through nightly tests yet.","created_at":"2022-05-06T21:37:22Z","closed_at":"2022-05-06T22:47:47Z","merged_at":"2022-05-06T22:47:47Z","user_id":38085909,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930073014,"title":"Enable the matmul autotune switch for matmul fusion ops","body":"This PR allow the matmul fusion ops to respect the `TF_MATMUL_AUTOTUNE_ENABLE`.\r\n\r\ncc. @nluehr ","created_at":"2022-05-06T20:45:00Z","closed_at":"2022-06-03T05:05:36Z","merged_at":"2022-06-03T05:05:36Z","user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":930039809,"title":"Support matmul+bias+gelu fusion on GPUs","body":"This PR enables the fusion pattern of MatMul+BiasAdd+Gelu on GPUs when CublasLt is enabled by `TF_USE_CUBLASLT=1`.\r\n\r\ncc. @nluehr ","created_at":"2022-05-06T19:49:30Z","closed_at":"2022-07-18T13:03:21Z","merged_at":"2022-07-18T13:03:21Z","user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":929999779,"title":"[XLA] Multi-worker add a warning feedback for the user","body":null,"created_at":"2022-05-06T18:48:17Z","closed_at":"2022-05-09T20:25:15Z","merged_at":"2022-05-09T20:25:14Z","user_id":1710528,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":929962939,"title":"r2.9 cherry-pick: 127415cc9a1 \"Adding multi-client initialization API\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/127415cc9a1eaad2fc59065c9e3b95e2df699b68","created_at":"2022-05-06T18:15:51Z","closed_at":"2022-05-06T22:47:14Z","merged_at":"2022-05-06T22:47:14Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":929948045,"title":"Fused MatMul Op test shouldn't use GPU for AMD/ROCm","body":"A recent PR added fused matmul op for GPU and updated the unit test to use GPU\r\nThis op isn't supported on AMD/ROCm and unit test should not try to execute the fused matmul op unit test ","created_at":"2022-05-06T17:55:06Z","closed_at":"2022-07-22T21:06:52Z","merged_at":null,"user_id":4212398,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":929465795,"title":"r2.9 cherry-pick: Change pybind11 version to 2.8.1.","body":"The reason for the downgrade is that v2.9.x is causing a segmentation fault in the TF Lite interpreter in TF Text conversion tests.\r\n\r\nThe original reason for the 2.9.0 upgrade was to include a thread-safety fix (https://github.com/pybind/pybind11/pull/3237, https://github.com/pybind/pybind11/commit/0e599589fe821f86d18635c13636f3042d4c06b9) for JAX that was added in 2.8.0 and above, so performing this downgrade is not problematic for its intention.\r\n\r\nPiperOrigin-RevId: 442586909","created_at":"2022-05-06T08:35:28Z","closed_at":"2022-05-06T17:18:04Z","merged_at":"2022-05-06T17:18:04Z","user_id":34356,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":929240431,"title":"Disable experimental_link_static_libraries_once to fix undefined reference issues due to symbols hidden by linker script","body":"Fixes #55942\r\n\r\n`experimental_link_static_libraries_once` attempts to prevent duplication of static libraries by loading them dynamically, however the linker scripts for libtensorflow_framework are hiding the symbols from those static libraries so they cannot be seen by libtensorflow_cc or pywrap_tensorflow_internal. This PR fixes it by disabling `experimental_link_static_libraries_once`. \r\n\r\nAlternatively, we could edit the linker scripts to no longer hide `*mlir*` and `libjpeg*` symbols, but that might have negative consequences when using tensorflow in other applications.","created_at":"2022-05-06T00:57:12Z","closed_at":"2022-06-03T22:41:34Z","merged_at":"2022-06-03T22:41:33Z","user_id":12981474,"sentiment":{"polarity":-0.14583333333333331,"subjectivity":0.35416666666666663}}
{"_id":929156257,"title":"Dynamic Pywrap - Refactor pywrap_tensorflow_internal to load TF symbols from libtensorflow_cc.so","body":"This PR adds a new build configuration which is tentatively called `dynamic_pywrap`. When enabled, `_pywrap_tensorflow_internal.so` will no longer contain any implementation for TensorFlow and will instead dynamically depend on `libtensorflow_cc.so` to load those symbols. `_pywrap_tensorflow_internal.so` will now a lightweight binary only containing the python bindings and other code/APIs which depends on python.\r\n\r\n## Goals of this PR\r\n\r\n* Reduce binary size when building both python and C++ libraries. Currently, both libraries contain about ~800mb of the same code, which can now be shared using the approach in this PR.\r\n* Improve parity between C++ and Python library. Many APIs, kernels, operators, grappler passes, etc. were not consistent between C++ and Python libraries since each library is a separate bazel target.\r\n* Improve modularity by separating python bindings from TensorFlow core library implementation. This will have to be enforced going forward, otherwise duplication errors will occur.\r\n* By separating the lightweight python bindings from the large TF implementation, it enables us to potentially build the python bindings for multiple python versions at once in order to build a non-version specific pip wheel.\r\n\r\n## Implementation details\r\n\r\nDependencies of `pywrap_tensorflow_internal` were updated to only depend on **headers** from TensorFlow, to avoid duplicating the implementation which is already in `libtensorflow_cc.so`. There was a lot of TensorFlow implementation which was not yet in `libtensorflow_cc.so`, so those will now be moved to `libtensorflow_cc.so` by way of `//tensorflow/python:tensorflow_impl`.\r\n\r\nRequires https://github.com/tensorflow/tensorflow/pull/55943 to fix a bug when building libtensorflow_cc.so","created_at":"2022-05-05T21:54:12Z","closed_at":"2022-10-19T01:22:00Z","merged_at":"2022-10-19T01:22:00Z","user_id":12981474,"sentiment":{"polarity":0.0,"subjectivity":0.16666666666666666}}
{"_id":929053750,"title":"[oneDNN] Fix conv3d_backprop_filter_v2_grad_test_cpu test failure when oneDNN …","body":"…is enabled\r\nThe commit https://github.com/intel-innersource/frameworks.ai.tensorflow.private-tensorflow/commit/174c5096f303d5be7ed2ca2662b08371bff4ab88 introduced a new test case ( testBadFilterShape) in the conv3d_backprop_filter_v2_grad_test.py. This test case has a bad filter shape and expects the corresponding kernel to check for this condition. Update the mkl kernel to add the check for invalid filter shape.","created_at":"2022-05-05T19:35:32Z","closed_at":"2022-05-06T00:05:46Z","merged_at":"2022-05-06T00:05:45Z","user_id":42156420,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":929034258,"title":"r2.9 cherry-pick: Update RELEASE.md","body":"Add an entry on turning on oneDNN by default in Linux 86x packages on CPUs with neural-network-focused hardware features.","created_at":"2022-05-05T19:12:20Z","closed_at":"2022-05-06T15:55:27Z","merged_at":"2022-05-06T15:55:27Z","user_id":38085909,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":928952192,"title":"Fix typo \"Unkown\" in `interpreter.py`","body":null,"created_at":"2022-05-05T17:33:25Z","closed_at":"2022-06-06T14:14:32Z","merged_at":"2022-06-06T14:14:31Z","user_id":24459435,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":928933051,"title":"r2.9 cherrypick: Restore the original r2.9 setting of `TF_RUN_EAGER_OP_AS_FUNCTION`","body":"The r2.9 cherrypick commit 653347ec2dedaee0c80693b2f029e513794c0759 let the change to enable `TF_RUN_EAGER_OP_AS_FUNCTION` from master into r2.9 by accident. This PR reverts it.\r\n\r\ncc: @atom00","created_at":"2022-05-05T17:10:34Z","closed_at":"2022-05-06T15:56:34Z","merged_at":"2022-05-06T15:56:34Z","user_id":38085909,"sentiment":{"polarity":0.375,"subjectivity":0.75}}
{"_id":928836709,"title":"Fix missed parameter of Keras AUC config","body":"Keras AUC metrics missed `from_logits` key in `get_config` method, which will cause a error when load from a saved model and `from_logits` is True.","created_at":"2022-05-05T15:33:25Z","closed_at":"2022-05-07T01:47:33Z","merged_at":null,"user_id":14052158,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":928718771,"title":"Update sparse_ops.py","body":"Update the name of the api from `tf.SparseTensor` to `tf.sparse.SparseTensor`","created_at":"2022-05-05T13:49:02Z","closed_at":"2022-07-29T23:40:04Z","merged_at":"2022-07-29T23:40:04Z","user_id":81610181,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":928178736,"title":"Update Tensorboard dependencies for 2.9.0 release.","body":"PiperOrigin-RevId: 446316186","created_at":"2022-05-04T23:40:27Z","closed_at":"2022-05-05T15:25:36Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":928177050,"title":"r2.9 cherry-pick: bcc8a63 \"Update Tensorboard dependencies for 2.9.0 release.\"","body":null,"created_at":"2022-05-04T23:35:22Z","closed_at":"2022-05-05T15:25:52Z","merged_at":"2022-05-05T15:25:52Z","user_id":8672809,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":928159911,"title":"Use global cache for MKL primitives","body":"This pull request uses global cache for MKL primitives instead of cache per TesnroFlow inter-thread. This is achieved by making access to LRUCache thread safe by introducing locks around get and set and making sure that execution of primitives is synchronized. The code is guarded to be only compiled for AArch64.\r\n\r\nCc @penpornk ","created_at":"2022-05-04T22:54:47Z","closed_at":"2022-05-06T20:41:25Z","merged_at":"2022-05-06T20:41:25Z","user_id":79916358,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":928152602,"title":"Update Tensorboard dependencies for 2.9.0 release.","body":"PiperOrigin-RevId: 446316186","created_at":"2022-05-04T22:37:58Z","closed_at":"2022-05-04T22:50:39Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":928103135,"title":"Fix GPU conv-bias-relu fusion","body":"This PR is to resolve this issue: https://github.com/tensorflow/tensorflow/issues/55792\r\n\r\ncc. @nluehr ","created_at":"2022-05-04T21:16:24Z","closed_at":"2022-05-10T00:48:31Z","merged_at":"2022-05-10T00:48:31Z","user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927905635,"title":"[TFTRT]: Revert \"Merge pull request #55655\"","body":"[TFTRT]: Revert device placement changes as it causes\r\nissues on graphs with nodes that are not runnable on\r\nGPUs.\r\n\r\nThis reverts commit 0842ad13ec13732c132f8b5bc8f6768adfdeef12, reversing\r\nchanges made to dd8983737842368dd4481a2e6ca5b6a66a1706c8.\r\n\r\nCC: @bixia1 , @DEKHTIARJonathan @nluehr ","created_at":"2022-05-04T18:01:57Z","closed_at":"2022-05-04T21:29:32Z","merged_at":"2022-05-04T21:29:32Z","user_id":80416898,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927854419,"title":"Support NHWC for Tensor_Float_32 + Ampere GPUs (Part 3)","body":"This PR enables the compute in NHWC/NDHWC for XLA. Should be the last PR for this serie.\r\n\r\nPart 1: https://github.com/tensorflow/tensorflow/pull/55761\r\nPart 2: https://github.com/tensorflow/tensorflow/pull/55806\r\n\r\ncc. @nluehr ","created_at":"2022-05-04T17:04:18Z","closed_at":"2022-06-07T11:45:06Z","merged_at":"2022-06-07T11:45:06Z","user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927848508,"title":"Adding quantization rewrite rules for spaghettinet","body":"SpaghettiNet has a unique connection pattern that leaves a standalone activation function. Under the current rule, it is not quantized and causes issue when performing quantization aware training. This change fixes the issue and allow proper QAT for SpaghettiNet.","created_at":"2022-05-04T16:57:03Z","closed_at":"2022-05-04T21:57:59Z","merged_at":null,"user_id":5199377,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927778034,"title":"Test gh actions","body":null,"created_at":"2022-05-04T15:39:06Z","closed_at":"2022-05-04T16:19:19Z","merged_at":null,"user_id":1437573,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927258772,"title":"r2.9 cherry-pick: 4f483ebaa0b \"Update curl from curl-7.81.0 to curl-7.82.0.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/4f483ebaa0b5be322b57ce530d6749e2f6f17e17","created_at":"2022-05-04T05:41:21Z","closed_at":"2022-05-04T16:05:10Z","merged_at":"2022-05-04T16:05:10Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927250523,"title":"r2.6 cherry-pick: e57fd691c7b \"Prevent crash when histogram is called with NaN values.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/e57fd691c7b0fd00ea3bfe43444f30c1969748b5","created_at":"2022-05-04T05:22:36Z","closed_at":"2022-05-04T16:05:23Z","merged_at":"2022-05-04T16:05:23Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927250384,"title":"r2.7 cherry-pick: e57fd691c7b \"Prevent crash when histogram is called with NaN values.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/e57fd691c7b0fd00ea3bfe43444f30c1969748b5","created_at":"2022-05-04T05:22:14Z","closed_at":"2022-05-04T16:05:39Z","merged_at":"2022-05-04T16:05:39Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927250336,"title":"r2.8 cherry-pick: e57fd691c7b \"Prevent crash when histogram is called with NaN values.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/e57fd691c7b0fd00ea3bfe43444f30c1969748b5","created_at":"2022-05-04T05:22:08Z","closed_at":"2022-05-04T16:05:54Z","merged_at":"2022-05-04T16:05:54Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927250173,"title":"r2.9 cherry-pick: e57fd691c7b \"Prevent crash when histogram is called with NaN values.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/e57fd691c7b0fd00ea3bfe43444f30c1969748b5","created_at":"2022-05-04T05:21:42Z","closed_at":"2022-05-04T16:06:10Z","merged_at":"2022-05-04T16:06:09Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927246872,"title":"r2.6 cherry-pick: bd4d5583ff9 \"Prevent denial of service in `tf.ragged.constant`\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/bd4d5583ff9c8df26d47a23e508208844297310e","created_at":"2022-05-04T05:12:48Z","closed_at":"2022-05-04T16:06:26Z","merged_at":"2022-05-04T16:06:26Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927246774,"title":"r2.9 cherry-pick: bd4d5583ff9 \"Prevent denial of service in `tf.ragged.constant`\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/bd4d5583ff9c8df26d47a23e508208844297310e","created_at":"2022-05-04T05:12:34Z","closed_at":"2022-05-04T16:06:41Z","merged_at":"2022-05-04T16:06:41Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927246766,"title":"r2.7 cherry-pick: bd4d5583ff9 \"Prevent denial of service in `tf.ragged.constant`\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/bd4d5583ff9c8df26d47a23e508208844297310e","created_at":"2022-05-04T05:12:33Z","closed_at":"2022-05-04T16:06:53Z","merged_at":"2022-05-04T16:06:52Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927246740,"title":"r2.8 cherry-pick: bd4d5583ff9 \"Prevent denial of service in `tf.ragged.constant`\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/bd4d5583ff9c8df26d47a23e508208844297310e","created_at":"2022-05-04T05:12:30Z","closed_at":"2022-05-04T16:07:09Z","merged_at":"2022-05-04T16:07:08Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927240970,"title":"r2.6 cherry-pick: 30721cf564c \"Fix tf.raw_ops.EditDistance vulnerability with negative indices.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/30721cf564cb029d34535446d6a5a6357bebc8e7","created_at":"2022-05-04T04:56:32Z","closed_at":"2022-05-04T16:07:24Z","merged_at":"2022-05-04T16:07:24Z","user_id":16359713,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":927240945,"title":"r2.8 cherry-pick: 30721cf564c \"Fix tf.raw_ops.EditDistance vulnerability with negative indices.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/30721cf564cb029d34535446d6a5a6357bebc8e7","created_at":"2022-05-04T04:56:29Z","closed_at":"2022-05-04T16:07:38Z","merged_at":"2022-05-04T16:07:38Z","user_id":16359713,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":927240892,"title":"r2.7 cherry-pick: 30721cf564c \"Fix tf.raw_ops.EditDistance vulnerability with negative indices.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/30721cf564cb029d34535446d6a5a6357bebc8e7","created_at":"2022-05-04T04:56:18Z","closed_at":"2022-05-04T16:07:56Z","merged_at":"2022-05-04T16:07:55Z","user_id":16359713,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":927240830,"title":"r2.9 cherry-pick: 30721cf564c \"Fix tf.raw_ops.EditDistance vulnerability with negative indices.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/30721cf564cb029d34535446d6a5a6357bebc8e7","created_at":"2022-05-04T04:56:04Z","closed_at":"2022-05-04T16:08:16Z","merged_at":"2022-05-04T16:08:16Z","user_id":16359713,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":927236905,"title":"r2.6 cherry-pick: 0f0b080ecde \"Fix undefined behavior in QuantizedConv2D\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/0f0b080ecde4d3dfec158d6f60da34d5e31693c4","created_at":"2022-05-04T04:44:43Z","closed_at":"2022-05-04T16:08:30Z","merged_at":"2022-05-04T16:08:30Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927236658,"title":"r2.7 cherry-pick: 0f0b080ecde \"Fix undefined behavior in QuantizedConv2D\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/0f0b080ecde4d3dfec158d6f60da34d5e31693c4","created_at":"2022-05-04T04:44:11Z","closed_at":"2022-05-04T16:08:47Z","merged_at":"2022-05-04T16:08:47Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927236616,"title":"r2.8 cherry-pick: 0f0b080ecde \"Fix undefined behavior in QuantizedConv2D\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/0f0b080ecde4d3dfec158d6f60da34d5e31693c4","created_at":"2022-05-04T04:44:03Z","closed_at":"2022-05-04T16:09:01Z","merged_at":"2022-05-04T16:09:01Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927236497,"title":"r2.9 cherry-pick: 0f0b080ecde \"Fix undefined behavior in QuantizedConv2D\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/0f0b080ecde4d3dfec158d6f60da34d5e31693c4","created_at":"2022-05-04T04:43:40Z","closed_at":"2022-05-04T16:09:16Z","merged_at":"2022-05-04T16:09:16Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927232219,"title":"r2.6 cherry-pick: 237822b59fc \"Fix tf.compat.v1.placeholder_with_default vulnerability with quantized types.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/237822b59fc504dda2c564787f5d3ad9c4aa62d9","created_at":"2022-05-04T04:32:07Z","closed_at":"2022-05-04T16:09:29Z","merged_at":"2022-05-04T16:09:29Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927231497,"title":"r2.9 cherry-pick: 237822b59fc \"Fix tf.compat.v1.placeholder_with_default vulnerability with quantized types.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/237822b59fc504dda2c564787f5d3ad9c4aa62d9","created_at":"2022-05-04T04:30:13Z","closed_at":"2022-05-04T16:09:42Z","merged_at":"2022-05-04T16:09:42Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927231415,"title":"r2.7 cherry-pick: 237822b59fc \"Fix tf.compat.v1.placeholder_with_default vulnerability with quantized types.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/237822b59fc504dda2c564787f5d3ad9c4aa62d9","created_at":"2022-05-04T04:30:00Z","closed_at":"2022-05-04T16:09:57Z","merged_at":"2022-05-04T16:09:57Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927231246,"title":"r2.8 cherry-pick: 237822b59fc \"Fix tf.compat.v1.placeholder_with_default vulnerability with quantized types.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/237822b59fc504dda2c564787f5d3ad9c4aa62d9","created_at":"2022-05-04T04:29:35Z","closed_at":"2022-05-04T16:10:13Z","merged_at":"2022-05-04T16:10:13Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927227745,"title":"r2.6 cherry-pick: a5b89cd68c0 \"Fix empty resource handle vulnerability.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/a5b89cd68c02329d793356bda85d079e9e69b4e7","created_at":"2022-05-04T04:20:30Z","closed_at":"2022-05-04T16:10:31Z","merged_at":"2022-05-04T16:10:31Z","user_id":16359713,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":927227422,"title":"r2.9 cherry-pick: a5b89cd68c0 \"Fix empty resource handle vulnerability.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/a5b89cd68c02329d793356bda85d079e9e69b4e7","created_at":"2022-05-04T04:19:37Z","closed_at":"2022-05-04T16:10:45Z","merged_at":"2022-05-04T16:10:45Z","user_id":16359713,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":927227395,"title":"r2.8 cherry-pick: a5b89cd68c0 \"Fix empty resource handle vulnerability.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/a5b89cd68c02329d793356bda85d079e9e69b4e7","created_at":"2022-05-04T04:19:32Z","closed_at":"2022-05-04T16:11:00Z","merged_at":"2022-05-04T16:11:00Z","user_id":16359713,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":927227389,"title":"r2.7 cherry-pick: a5b89cd68c0 \"Fix empty resource handle vulnerability.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/a5b89cd68c02329d793356bda85d079e9e69b4e7","created_at":"2022-05-04T04:19:32Z","closed_at":"2022-05-04T16:11:16Z","merged_at":"2022-05-04T16:11:16Z","user_id":16359713,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":927183892,"title":"[mhlo] Clean up C-API references to CPP","body":"remove std::string referencres in ```tensorflow/compiler/mlir/hlo/include/mlir-hlo-c/Attributes.h``` file.","created_at":"2022-05-04T02:05:48Z","closed_at":"2022-05-09T23:54:23Z","merged_at":"2022-05-09T23:54:23Z","user_id":22370779,"sentiment":{"polarity":0.3666666666666667,"subjectivity":0.7000000000000001}}
{"_id":927168720,"title":"r2.6 cherry-pick: 3796cc4fcd9 \"Fix tf.raw_ops.DepthwiseConv2dNativeBackpropInput vulnerability with large input sizes.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/3796cc4fcd93ae55812a457abc96dcd55fbb854b","created_at":"2022-05-04T01:16:05Z","closed_at":"2022-05-04T16:12:17Z","merged_at":"2022-05-04T16:12:17Z","user_id":16359713,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.42857142857142855}}
{"_id":927168506,"title":"r2.7 cherry-pick: 3796cc4fcd9 \"Fix tf.raw_ops.DepthwiseConv2dNativeBackpropInput vulnerability with large input sizes.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/3796cc4fcd93ae55812a457abc96dcd55fbb854b","created_at":"2022-05-04T01:15:28Z","closed_at":"2022-05-04T16:12:30Z","merged_at":"2022-05-04T16:12:30Z","user_id":16359713,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.42857142857142855}}
{"_id":927168378,"title":"r2.8 cherry-pick: 3796cc4fcd9 \"Fix tf.raw_ops.DepthwiseConv2dNativeBackpropInput vulnerability with large input sizes.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/3796cc4fcd93ae55812a457abc96dcd55fbb854b","created_at":"2022-05-04T01:15:04Z","closed_at":"2022-05-04T16:12:43Z","merged_at":"2022-05-04T16:12:43Z","user_id":16359713,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.42857142857142855}}
{"_id":927168308,"title":"r2.9 cherry-pick: 3796cc4fcd9 \"Fix tf.raw_ops.DepthwiseConv2dNativeBackpropInput vulnerability with large input sizes.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/3796cc4fcd93ae55812a457abc96dcd55fbb854b","created_at":"2022-05-04T01:14:49Z","closed_at":"2022-05-04T16:12:57Z","merged_at":"2022-05-04T16:12:57Z","user_id":16359713,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.42857142857142855}}
{"_id":927166025,"title":"r2.6 cherry-pick: 174c5096f30 \"Fix failed check in Conv3DBackpropFilterV2.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/174c5096f303d5be7ed2ca2662b08371bff4ab88","created_at":"2022-05-04T01:07:50Z","closed_at":"2022-05-04T16:13:11Z","merged_at":"2022-05-04T16:13:11Z","user_id":16359713,"sentiment":{"polarity":-0.5,"subjectivity":0.3}}
{"_id":927165838,"title":"r2.7 cherry-pick: 174c5096f30 \"Fix failed check in Conv3DBackpropFilterV2.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/174c5096f303d5be7ed2ca2662b08371bff4ab88","created_at":"2022-05-04T01:07:14Z","closed_at":"2022-05-04T16:13:28Z","merged_at":"2022-05-04T16:13:28Z","user_id":16359713,"sentiment":{"polarity":-0.5,"subjectivity":0.3}}
{"_id":927165809,"title":"r2.9 cherry-pick: 174c5096f30 \"Fix failed check in Conv3DBackpropFilterV2.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/174c5096f303d5be7ed2ca2662b08371bff4ab88","created_at":"2022-05-04T01:07:10Z","closed_at":"2022-05-04T16:13:41Z","merged_at":"2022-05-04T16:13:41Z","user_id":16359713,"sentiment":{"polarity":-0.5,"subjectivity":0.3}}
{"_id":927165779,"title":"r2.8 cherry-pick: 174c5096f30 \"Fix failed check in Conv3DBackpropFilterV2.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/174c5096f303d5be7ed2ca2662b08371bff4ab88","created_at":"2022-05-04T01:07:05Z","closed_at":"2022-05-04T16:13:55Z","merged_at":"2022-05-04T16:13:55Z","user_id":16359713,"sentiment":{"polarity":-0.5,"subjectivity":0.3}}
{"_id":927163509,"title":"r2.8 cherry-pick: 3150642acbb \"Fix tf.raw_ops.LoadAndRemapMatrix vulnerability with invalid `row_remapping`.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/3150642acbbe254e3c3c5d2232143fa591855ac9","created_at":"2022-05-04T01:00:41Z","closed_at":"2022-05-04T16:14:10Z","merged_at":"2022-05-04T16:14:10Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927163468,"title":"r2.7 cherry-pick: 3150642acbb \"Fix tf.raw_ops.LoadAndRemapMatrix vulnerability with invalid `row_remapping`.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/3150642acbbe254e3c3c5d2232143fa591855ac9","created_at":"2022-05-04T01:00:36Z","closed_at":"2022-05-04T16:14:23Z","merged_at":"2022-05-04T16:14:23Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927163375,"title":"r2.9 cherry-pick: 3150642acbb \"Fix tf.raw_ops.LoadAndRemapMatrix vulnerability with invalid `row_remapping`.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/3150642acbbe254e3c3c5d2232143fa591855ac9","created_at":"2022-05-04T01:00:18Z","closed_at":"2022-05-04T16:14:37Z","merged_at":"2022-05-04T16:14:37Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927162018,"title":"r2.6 cherry-pick: 13d38a07ce9 \"Fix tf.raw_ops.UnsortedSegmentJoin vulnerability with invalid num_segments.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/13d38a07ce9143e044aa737cfd7bb759d0e9b400","created_at":"2022-05-04T00:55:27Z","closed_at":"2022-05-04T16:15:09Z","merged_at":"2022-05-04T16:15:09Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927161835,"title":"Fix swapped cuda and cuDNN versions","body":"It seems clear to me that the cuda and cuDNN versions are reversed in this config. I don't know how to verify this change.","created_at":"2022-05-04T00:54:51Z","closed_at":"2022-05-09T19:15:20Z","merged_at":"2022-05-09T19:15:20Z","user_id":33532941,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927161809,"title":"r2.7 cherry-pick: 13d38a07ce9 \"Fix tf.raw_ops.UnsortedSegmentJoin vulnerability with invalid num_segments.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/13d38a07ce9143e044aa737cfd7bb759d0e9b400","created_at":"2022-05-04T00:54:45Z","closed_at":"2022-05-04T16:15:22Z","merged_at":"2022-05-04T16:15:22Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927161689,"title":"r2.8 cherry-pick: 13d38a07ce9 \"Fix tf.raw_ops.UnsortedSegmentJoin vulnerability with invalid num_segments.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/13d38a07ce9143e044aa737cfd7bb759d0e9b400","created_at":"2022-05-04T00:54:16Z","closed_at":"2022-05-04T16:15:34Z","merged_at":"2022-05-04T16:15:34Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927161385,"title":"r2.9 cherry-pick: 13d38a07ce9 \"Fix tf.raw_ops.UnsortedSegmentJoin vulnerability with invalid num_segments.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/13d38a07ce9143e044aa737cfd7bb759d0e9b400","created_at":"2022-05-04T00:53:16Z","closed_at":"2022-05-04T16:15:48Z","merged_at":"2022-05-04T16:15:48Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927158859,"title":"r2.7 cherry-pick: cebe3c45d76 \"Fix tf.raw_ops.StagePeek vulnerability with invalid `index`.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/cebe3c45d76357d201c65bdbbf0dbe6e8a63bbdb","created_at":"2022-05-04T00:44:42Z","closed_at":"2022-05-04T16:16:02Z","merged_at":"2022-05-04T16:16:02Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927158819,"title":"r2.8 cherry-pick: cebe3c45d76 \"Fix tf.raw_ops.StagePeek vulnerability with invalid `index`.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/cebe3c45d76357d201c65bdbbf0dbe6e8a63bbdb","created_at":"2022-05-04T00:44:35Z","closed_at":"2022-05-04T16:16:20Z","merged_at":"2022-05-04T16:16:20Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927157782,"title":"r2.9 cherry-pick: cebe3c45d76 \"Fix tf.raw_ops.StagePeek vulnerability with invalid `index`.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/cebe3c45d76357d201c65bdbbf0dbe6e8a63bbdb","created_at":"2022-05-04T00:41:17Z","closed_at":"2022-05-04T16:16:35Z","merged_at":"2022-05-04T16:16:35Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927154582,"title":"r2.7 cherry-pick: 48305e8ffe5 \"Fix tf.raw_ops.GetSessionTensor vulnerability with invalid handle.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/48305e8ffe5246d67570b64096a96f8e315a7281","created_at":"2022-05-04T00:32:56Z","closed_at":"2022-05-04T16:16:49Z","merged_at":"2022-05-04T16:16:49Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927154349,"title":"r2.6 cherry-pick: 48305e8ffe5 \"Fix tf.raw_ops.GetSessionTensor vulnerability with invalid handle.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/48305e8ffe5246d67570b64096a96f8e315a7281","created_at":"2022-05-04T00:32:46Z","closed_at":"2022-05-04T16:17:02Z","merged_at":"2022-05-04T16:17:02Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927153487,"title":"r2.8 cherry-pick: 48305e8ffe5 \"Fix tf.raw_ops.GetSessionTensor vulnerability with invalid handle.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/48305e8ffe5246d67570b64096a96f8e315a7281","created_at":"2022-05-04T00:32:00Z","closed_at":"2022-05-04T16:17:16Z","merged_at":"2022-05-04T16:17:16Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927153002,"title":"r2.9 cherry-pick: 48305e8ffe5 \"Fix tf.raw_ops.GetSessionTensor vulnerability with invalid handle.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/48305e8ffe5246d67570b64096a96f8e315a7281","created_at":"2022-05-04T00:31:40Z","closed_at":"2022-05-04T16:17:30Z","merged_at":"2022-05-04T16:17:30Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927148177,"title":"r2.6 cherry-pick: cff267650c6 \"Fix tf.raw_ops.DeleteSessionTensor vulnerability with invalid `handle`.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/cff267650c6a1b266e4b4500f69fbc49cdd773c5","created_at":"2022-05-04T00:25:31Z","closed_at":"2022-05-04T16:17:43Z","merged_at":"2022-05-04T16:17:43Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927148100,"title":"r2.7 cherry-pick: cff267650c6 \"Fix tf.raw_ops.DeleteSessionTensor vulnerability with invalid `handle`.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/cff267650c6a1b266e4b4500f69fbc49cdd773c5","created_at":"2022-05-04T00:25:20Z","closed_at":"2022-05-04T16:17:58Z","merged_at":"2022-05-04T16:17:58Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927148079,"title":"r2.8 cherry-pick: cff267650c6 \"Fix tf.raw_ops.DeleteSessionTensor vulnerability with invalid `handle`.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/cff267650c6a1b266e4b4500f69fbc49cdd773c5","created_at":"2022-05-04T00:25:17Z","closed_at":"2022-05-04T16:18:11Z","merged_at":"2022-05-04T16:18:11Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927147810,"title":"r2.9 cherry-pick: cff267650c6 \"Fix tf.raw_ops.DeleteSessionTensor vulnerability with invalid `handle`.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/cff267650c6a1b266e4b4500f69fbc49cdd773c5","created_at":"2022-05-04T00:24:40Z","closed_at":"2022-05-04T16:18:25Z","merged_at":"2022-05-04T16:18:25Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927141898,"title":"r2.6 cherry-pick: 098e7762d90 \"Fix tf.raw_ops.QuantizeAndDequantizeV4Grad vulnerability with invalid input_min or input_max.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/098e7762d909bac47ce1dbabe6dfd06294cb9d58","created_at":"2022-05-04T00:19:30Z","closed_at":"2022-05-04T16:18:41Z","merged_at":"2022-05-04T16:18:41Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927141811,"title":"r2.7 cherry-pick: 098e7762d90 \"Fix tf.raw_ops.QuantizeAndDequantizeV4Grad vulnerability with invalid input_min or input_max.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/098e7762d909bac47ce1dbabe6dfd06294cb9d58","created_at":"2022-05-04T00:19:16Z","closed_at":"2022-05-04T16:18:54Z","merged_at":"2022-05-04T16:18:54Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927141251,"title":"r2.8 cherry-pick: 098e7762d90 \"Fix tf.raw_ops.QuantizeAndDequantizeV4Grad vulnerability with invalid input_min or input_max.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/098e7762d909bac47ce1dbabe6dfd06294cb9d58","created_at":"2022-05-04T00:17:46Z","closed_at":"2022-05-04T16:19:08Z","merged_at":"2022-05-04T16:19:08Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927137471,"title":"r2.9 cherry-pick: 098e7762d90 \"Fix tf.raw_ops.QuantizeAndDequantizeV4Grad vulnerability with invalid input_min or input_max.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/098e7762d909bac47ce1dbabe6dfd06294cb9d58","created_at":"2022-05-04T00:09:20Z","closed_at":"2022-05-04T16:19:24Z","merged_at":"2022-05-04T16:19:24Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927132802,"title":"r2.6 cherry-pick: 290bb05c80c \"Fix tf.raw_ops.TensorSummaryV2 vulnerability with invalid serialized_summary_metadata.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/290bb05c80c327ed74fae1d089f1001b1e2a4ef7","created_at":"2022-05-04T00:01:52Z","closed_at":"2022-05-04T16:19:39Z","merged_at":"2022-05-04T16:19:39Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927132786,"title":"r2.7 cherry-pick: 290bb05c80c \"Fix tf.raw_ops.TensorSummaryV2 vulnerability with invalid serialized_summary_metadata.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/290bb05c80c327ed74fae1d089f1001b1e2a4ef7","created_at":"2022-05-04T00:01:49Z","closed_at":"2022-05-04T16:20:29Z","merged_at":"2022-05-04T16:20:29Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927132752,"title":"r2.8 cherry-pick: 290bb05c80c \"Fix tf.raw_ops.TensorSummaryV2 vulnerability with invalid serialized_summary_metadata.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/290bb05c80c327ed74fae1d089f1001b1e2a4ef7","created_at":"2022-05-04T00:01:45Z","closed_at":"2022-05-04T16:20:46Z","merged_at":"2022-05-04T16:20:46Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927131495,"title":"Test gh actions","body":null,"created_at":"2022-05-03T23:58:21Z","closed_at":"2022-05-04T15:37:37Z","merged_at":null,"user_id":1437573,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927131434,"title":"r2.9 cherry-pick: 290bb05c80c \"Fix tf.raw_ops.TensorSummaryV2 vulnerability with invalid serialized_summary_metadata.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/290bb05c80c327ed74fae1d089f1001b1e2a4ef7","created_at":"2022-05-03T23:58:08Z","closed_at":"2022-05-04T16:21:02Z","merged_at":"2022-05-04T16:21:01Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927091144,"title":"Test gh actions","body":null,"created_at":"2022-05-03T22:25:09Z","closed_at":"2022-05-03T23:57:08Z","merged_at":null,"user_id":1437573,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":927052512,"title":"r2.9 cherry-pick: 59ecbd0fa75 \"Ensure there are more elements in the dataset than twice CPU core count\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/59ecbd0fa753b0401ac7bb9f5ece0ba6f38b9cc8","created_at":"2022-05-03T21:42:58Z","closed_at":"2022-05-04T16:21:18Z","merged_at":"2022-05-04T16:21:18Z","user_id":16359713,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":926887916,"title":" Converter for LogicalOr and LogicalAnd operations.","body":"Implementation of the converters for LogicalOr and LogicalAnd operations.","created_at":"2022-05-03T18:42:16Z","closed_at":"2022-05-05T16:17:38Z","merged_at":"2022-05-05T16:17:38Z","user_id":32910461,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":926837979,"title":"Test gh actions","body":null,"created_at":"2022-05-03T17:58:59Z","closed_at":"2022-05-03T22:22:41Z","merged_at":null,"user_id":1437573,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":926817717,"title":"Test gh actions","body":null,"created_at":"2022-05-03T17:31:42Z","closed_at":"2022-05-03T17:58:16Z","merged_at":null,"user_id":1437573,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":926807857,"title":"r2.9 cherry-pick: c4840e9f15c \"Use a forward declaration to avoid tpu_system_interface depending on c_api.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/c4840e9f15cc734bfeab84c5c4642686af044956","created_at":"2022-05-03T17:19:30Z","closed_at":"2022-05-04T16:21:36Z","merged_at":"2022-05-04T16:21:36Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":926591464,"title":"Fix typo in MLIR-HLO's bazel BUILD file","body":"This fixes error from `bazel build //tensorflow/compiler/mlir/hlo:*`","created_at":"2022-05-03T13:43:40Z","closed_at":"2022-05-10T00:01:23Z","merged_at":"2022-05-10T00:01:23Z","user_id":79134656,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":926556754,"title":"Fix typo and build error in MLIR-HLO's bazel BUILD file.","body":"The previous version results in the following error:\r\n``` bash\r\nbazel build //tensorflow/compiler/mlir/hlo:*\r\n2022/05/03 22:11:15 Downloading https://releases.bazel.build/5.1.1/release/bazel-5.1.1-linux-x86_64...\r\nExtracting Bazel installation...\r\nStarting local Bazel server and connecting to it...\r\nINFO: Options provided by the client:\r\n  Inherited 'common' options: --isatty=1 --terminal_columns=116\r\nINFO: Reading rc options for 'build' from /home/jueonpark/PIMIR/tensorflow/.bazelrc:\r\n  Inherited 'common' options: --experimental_repo_remote_exec\r\nINFO: Reading rc options for 'build' from /home/jueonpark/PIMIR/tensorflow/.bazelrc:\r\n  'build' options: --define framework_shared_object=true --define=use_fast_cpp_protos=true --define=allow_oversize_protos=true --spawn_strategy=standalone -c opt --announce_rc --define=grpc_no_ares=true --noincompatible_remove_legacy_whole_archive --enable_platform_specific_config --define=with_xla_support=true --config=short_logs --config=v2 --define=no_aws_support=true --define=no_hdfs_support=true --experimental_cc_shared_library --experimental_link_static_libraries_once=true --deleted_packages=tensorflow/compiler/mlir/tfrt,tensorflow/compiler/mlir/tfrt/benchmarks,tensorflow/compiler/mlir/tfrt/jit/python_binding,tensorflow/compiler/mlir/tfrt/jit/transforms,tensorflow/compiler/mlir/tfrt/python_tests,tensorflow/compiler/mlir/tfrt/tests,tensorflow/compiler/mlir/tfrt/tests/ir,tensorflow/compiler/mlir/tfrt/tests/analysis,tensorflow/compiler/mlir/tfrt/tests/jit,tensorflow/compiler/mlir/tfrt/tests/lhlo_to_tfrt,tensorflow/compiler/mlir/tfrt/tests/tf_to_corert,tensorflow/compiler/mlir/tfrt/tests/tf_to_tfrt_data,tensorflow/compiler/mlir/tfrt/tests/saved_model,tensorflow/compiler/mlir/tfrt/transforms/lhlo_gpu_to_tfrt_gpu,tensorflow/core/runtime_fallback,tensorflow/core/runtime_fallback/conversion,tensorflow/core/runtime_fallback/kernel,tensorflow/core/runtime_fallback/opdefs,tensorflow/core/runtime_fallback/runtime,tensorflow/core/runtime_fallback/util,tensorflow/core/tfrt/common,tensorflow/core/tfrt/eager,tensorflow/core/tfrt/eager/backends/cpu,tensorflow/core/tfrt/eager/backends/gpu,tensorflow/core/tfrt/eager/core_runtime,tensorflow/core/tfrt/eager/cpp_tests/core_runtime,tensorflow/core/tfrt/gpu,tensorflow/core/tfrt/run_handler_thread_pool,tensorflow/core/tfrt/runtime,tensorflow/core/tfrt/saved_model,tensorflow/core/tfrt/graph_executor,tensorflow/core/tfrt/saved_model/tests,tensorflow/core/tfrt/tpu,tensorflow/core/tfrt/utils\r\nINFO: Found applicable config definition build:short_logs in file /home/jueonpark/PIMIR/tensorflow/.bazelrc: --output_filter=DONT_MATCH_ANYTHING\r\nINFO: Found applicable config definition build:v2 in file /home/jueonpark/PIMIR/tensorflow/.bazelrc: --define=tf_api_version=2 --action_env=TF2_BEHAVIOR=1\r\nINFO: Found applicable config definition build:linux in file /home/jueonpark/PIMIR/tensorflow/.bazelrc: --copt=-w --host_copt=-w --define=PREFIX=/usr --define=LIBDIR=$(PREFIX)/lib --define=INCLUDEDIR=$(PREFIX)/include --define=PROTOBUF_INCLUDE_PATH=$(PREFIX)/include --cxxopt=-std=c++14 --host_cxxopt=-std=c++14 --config=dynamic_kernels --distinct_host_configuration=false --experimental_guard_against_concurrent_changes\r\nINFO: Found applicable config definition build:dynamic_kernels in file /home/jueonpark/PIMIR/tensorflow/.bazelrc: --define=dynamic_loaded_kernels=true --copt=-DAUTOLOAD_DYNAMIC_KERNELS\r\nWARNING: Download from https://storage.googleapis.com/mirror.tensorflow.org/github.com/tensorflow/runtime/archive/9a169628cca6b05bfe465e6a6f9ec06dff08adea.tar.gz failed: class java.io.FileNotFoundException GET returned 404 Not Found\r\nINFO: Analyzed 413 targets (51 packages loaded, 5399 targets configured).\r\nINFO: Found 413 targets...\r\nERROR: /home/jueonpark/PIMIR/tensorflow/tensorflow/compiler/mlir/hlo/BUILD:12:14: //tensorflow/compiler/mlir/hlo:include/mlir-hlo/Dialect/mhlo/IR/clo_ops.td: missing input file '//tensorflow/compiler/mlir/hlo:include/mlir-hlo/Dialect/mhlo/IR/clo_ops.td'\r\nERROR: /home/jueonpark/PIMIR/tensorflow/tensorflow/compiler/mlir/hlo/BUILD:12:14: 1 input file(s) do not exist\r\nINFO: Elapsed time: 69.720s, Critical Path: 14.39s\r\nINFO: 987 processes: 279 internal, 708 local.\r\nFAILED: Build did NOT complete successfully\r\n```\r\n\r\nThis fixes build bug in `bazel build //tensorflow/compiler/mlir/hlo:*`.","created_at":"2022-05-03T13:20:59Z","closed_at":"2022-05-04T05:39:21Z","merged_at":null,"user_id":79134656,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":926283213,"title":"[mhlo] Clean up C-API references to CPP header","body":null,"created_at":"2022-05-03T07:18:45Z","closed_at":"2022-05-03T07:45:02Z","merged_at":null,"user_id":22370779,"sentiment":{"polarity":0.3666666666666667,"subjectivity":0.7000000000000001}}
{"_id":926279343,"title":"[mhlo] Clean up C-API references to CPP header","body":null,"created_at":"2022-05-03T07:12:08Z","closed_at":"2022-05-03T07:17:53Z","merged_at":null,"user_id":22370779,"sentiment":{"polarity":0.3666666666666667,"subjectivity":0.7000000000000001}}
{"_id":926081952,"title":"Test gh actions","body":null,"created_at":"2022-05-03T00:15:54Z","closed_at":"2022-05-03T17:30:33Z","merged_at":null,"user_id":1437573,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":926028634,"title":"Rename IsCudnnSupportedFilterSize for grouped convolution","body":"This PR is a follow-up to [this discussion](https://github.com/tensorflow/tensorflow/pull/55657#discussion_r853426849) with @reedwm on PR [55657](https://github.com/tensorflow/tensorflow/pull/55657). With hindsight, I realize that these changes ideally would have been included in that PR.","created_at":"2022-05-02T22:29:41Z","closed_at":"2022-05-05T16:50:33Z","merged_at":"2022-05-05T16:50:33Z","user_id":33532941,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":926027852,"title":"Test gh actions","body":null,"created_at":"2022-05-02T22:28:19Z","closed_at":"2022-05-03T00:15:36Z","merged_at":null,"user_id":1437573,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":926021641,"title":"Add missing NVIDIA repository key","body":null,"created_at":"2022-05-02T22:19:06Z","closed_at":"2022-05-09T18:52:27Z","merged_at":"2022-05-09T18:52:27Z","user_id":32465472,"sentiment":{"polarity":-0.1,"subjectivity":0.525}}
{"_id":925998814,"title":"Test gh actions","body":null,"created_at":"2022-05-02T21:44:25Z","closed_at":"2022-05-02T22:13:57Z","merged_at":null,"user_id":1437573,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":925997472,"title":"Test gh actions","body":null,"created_at":"2022-05-02T21:42:15Z","closed_at":"2022-05-02T21:43:07Z","merged_at":null,"user_id":1437573,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":925928168,"title":"Test gh actions","body":null,"created_at":"2022-05-02T20:16:28Z","closed_at":"2022-05-02T21:41:09Z","merged_at":null,"user_id":1437573,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":925924770,"title":"Fix Autograph crashing on windows","body":"Added fix to prevent autograph crashing on windows.\r\nFixes: https://github.com/tensorflow/tensorflow/issues/55795","created_at":"2022-05-02T20:12:21Z","closed_at":"2022-05-04T14:51:27Z","merged_at":"2022-05-04T14:51:27Z","user_id":73069040,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":925884061,"title":"Develop upstream sync 220502","body":"https://github.com/ROCmSoftwarePlatform/frameworks-internal/issues/1563","created_at":"2022-05-02T19:32:35Z","closed_at":"2022-05-02T19:32:55Z","merged_at":null,"user_id":4212398,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":925780533,"title":"[oneDNN] Dummy change 2, do not merge","body":"DO NOT MERGE! This dummy PR is created to check/test the auto labeling feature to see if this Intel-originated PR passes the trusted-partners check and automatically gets \"ready to pull\" label assigned.","created_at":"2022-05-02T17:30:47Z","closed_at":"2022-05-05T16:24:25Z","merged_at":null,"user_id":57962524,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":925747705,"title":"Update version numbers for TensorFlow 2.9.0-rc2","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 9 -> 9\nPatch: 0 -> 0\n\nNo lingering old version strings \"2.9.0-rc1\" found in source directory \n\"tensorflow/\". Good.\nNo lingering old version strings \"2.9.0rc1\" found in source directory \n\"tensorflow/\". Good.\n```","created_at":"2022-05-02T16:49:03Z","closed_at":"2022-05-02T16:59:04Z","merged_at":"2022-05-02T16:59:03Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":925512043,"title":"Dummy Update (Do not Merge)","body":null,"created_at":"2022-05-02T12:35:04Z","closed_at":"2022-05-02T13:09:49Z","merged_at":null,"user_id":1437573,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":925456354,"title":"Force ops without inputs to the start of the pseudo-topological order in `lift_to_graph`","body":"This is a temporary fix to make some models affected by the bug described in #55736 work.\r\nIn models with loops, when the topological order isn't defined, I have observed cases where an op appeared before its inputs in the topological order, despite those inputs being constants. Performing a stable sort based on whether an op has inputs or not conserves a topological order, and can improve a non-topological order and in many cases prevent the exceptions I have observed. Note that this isn't a proper fix for the aforementioned issue.","created_at":"2022-05-02T11:22:37Z","closed_at":"2022-05-06T15:07:20Z","merged_at":"2022-05-06T15:07:20Z","user_id":17441062,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":924568144,"title":"Disable where ops in xla auto-clustering","body":"This PR mainly aims at excluding where op in XLA auto-clustering. A possible issue caused by where being included in auto-clustering is [here](https://github.com/tensorflow/tensorflow/issues/55610). A TF_XLA_FLAGS, called `tf_xla_cluster_exclude_ops` is added, which can only take string values from `Where`, and some_others_ops in the future(separate by comma). By default, where op is included from auto-clustering. The way to disable it from auto-clustering looks like,\r\n`TF_XLA_FLAGS=--tf_xla_cluster_exclude_ops=Where` .","created_at":"2022-04-30T03:50:59Z","closed_at":"2022-07-11T10:12:37Z","merged_at":"2022-07-11T10:12:37Z","user_id":25590028,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":924538150,"title":"Remove no_oss tag for depthwise conv tests","body":"This PR is a follow-up to [this conversation](https://github.com/tensorflow/tensorflow/pull/55657#issuecomment-1105605034) with @reedwm in PR [55657](https://github.com/tensorflow/tensorflow/pull/55657).","created_at":"2022-04-30T00:58:32Z","closed_at":"2022-05-10T00:12:26Z","merged_at":"2022-05-10T00:12:26Z","user_id":33532941,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":924526823,"title":"Support NHWC for Tensor_Float_32 + Ampere GPUs (Part 2)","body":"This PR enables the compute in NHWC/NDHWC for each of the conv.\r\n\r\nThis is the PART 2 of https://github.com/tensorflow/tensorflow/pull/55761\r\n\r\ncc. @nluehr ","created_at":"2022-04-30T00:04:22Z","closed_at":"2022-05-10T00:51:16Z","merged_at":"2022-05-10T00:51:16Z","user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":924415394,"title":"[TF-TRT] Calling garbage collector in `tearDown()` to unittest base function.","body":"This PR force the call on the garbage collector after each unittest. This fixes GPU memory not being cleared between tests.","created_at":"2022-04-29T20:41:06Z","closed_at":"2022-05-16T16:24:44Z","merged_at":"2022-05-16T16:24:44Z","user_id":10923599,"sentiment":{"polarity":-0.8,"subjectivity":1.0}}
{"_id":924410917,"title":"[TF-TRT] Various Cleanups & Python Debugging Assertion Improvements","body":"This PR cleans a few spots in the code base, improves the debuggability of assertion messages in unittests. And replace `distutils.version.LooseVersion` (deprecated) with `packaging.version.Version` (new recommended API).","created_at":"2022-04-29T20:34:29Z","closed_at":"2022-08-13T16:42:01Z","merged_at":null,"user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.5}}
{"_id":924327697,"title":"Cherrypick doc fix for SupportsTracingProtocol","body":"r2.9 cherry-pick: Show doc for SupportsTracingProtocol","created_at":"2022-04-29T18:45:09Z","closed_at":"2022-05-02T16:59:17Z","merged_at":"2022-05-02T16:59:17Z","user_id":22532191,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":924295636,"title":"Update the RBE images to the latest container versions","body":"This PR was created by a GitHub Actions workflow to update all the SIG Build-based RBE containers to the most recent containers. See:\n\n- https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/toolchains/remote_config/configs.bzl\n- https://github.com/tensorflow/tensorflow/blob/master/.github/workflows/update-rbe.yml","created_at":"2022-04-29T18:01:53Z","closed_at":"2022-04-29T22:49:50Z","merged_at":"2022-04-29T22:49:50Z","user_id":16359713,"sentiment":{"polarity":0.5,"subjectivity":0.9}}
{"_id":922348381,"title":"[oneDNN] Dummy change, do not merge","body":"DO NOT MERGE! This dummy PR is created to check/test the auto labeling feature to see if this Intel-originated PR passes the trusted-partners check and automatically gets \"ready to pull\" label assigned. ","created_at":"2022-04-28T21:05:38Z","closed_at":"2022-05-02T17:27:21Z","merged_at":null,"user_id":57962524,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":922245458,"title":"[tf-mlir-translate] patch for handling data types with subtypes","body":"As mentioned in this issue: https://github.com/tensorflow/tensorflow/issues/50521#issuecomment-871579698, tf-mlir-translate didn't have a mechanism for handling data type with subtypes such as DT_RESOURCE. This patch adds support for handling types that might have subtypes to tf-mlir-translate and it's python wrapper.","created_at":"2022-04-28T19:30:59Z","closed_at":"2022-05-18T20:04:09Z","merged_at":"2022-05-18T20:04:09Z","user_id":35123665,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":922117433,"title":"Ensure there are more elements in the dataset than twice CPU core count","body":"Fixes //tensorflow/python/data/experimental/kernel_tests/service:fault_tolerance_test on machines with more than 50 CPU cores\r\nThis test reads half of the elements and assumes that the amount left\r\nis more than will be prefectched which can be equal to the number\r\nof CPU cores. For high CPU core count machines (>50) this is not\r\ntrue when there are only 100 elements in the dataset.\r\nSo instead set the size of the dataset based on the CPU core count\r\nto ensure that the remaining elements in the dataset are always\r\nmore than will be prefetched.","created_at":"2022-04-28T17:15:38Z","closed_at":"2022-05-02T17:01:37Z","merged_at":"2022-05-02T17:01:37Z","user_id":10442001,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":921729929,"title":"[ROCm] Reenable previously disabled subtests for ROCm in triangular_solve_te…","body":"…st_suite.\r\n\r\n/cc @chsigg @cheshire @jurahul ","created_at":"2022-04-28T11:32:11Z","closed_at":"2022-06-13T19:40:38Z","merged_at":"2022-06-13T19:40:38Z","user_id":70280935,"sentiment":{"polarity":-0.2,"subjectivity":0.3}}
{"_id":921237302,"title":"[ROCm] Fix to enable many BEF executable unit tests to build.","body":"@chsigg @hanbinyoon @cheshire @jurahul ","created_at":"2022-04-28T00:38:43Z","closed_at":"2022-06-14T11:00:20Z","merged_at":"2022-06-14T11:00:20Z","user_id":70280935,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":921186245,"title":"Fix device index issue with XLA + Horovod","body":"The PR is to fix the issue that the XLA always iterates the devices from 0 when creating stream executor on the multi-GPU environment (e.g. Horovod), which might cause none of the devices is picked. For example:\r\n\r\nGPU 0: allowed_device=0, device_count=1 => iterate 0 and pick device 0, exceed device_count and exit\r\nGPU 1: allowed_device=1, device_count=1 => iterate 0 (not in allowed_device), exceed device_count and exit (This is wrong!)\r\n\r\nWe fix this issue by iterating the device indices from the allowed_devices if provided.\r\n\r\nGPU 0: allowed_device=0, device_count=1 => iterate 0 and pick device 0, exceed device_count and exit\r\nGPU 1: allowed_device=1, device_count=1 => iterate 1 and pick device 1, exceed device_count and exit\r\n\r\ncc. @nluehr ","created_at":"2022-04-27T23:13:57Z","closed_at":"2022-06-28T12:41:07Z","merged_at":"2022-06-28T12:41:07Z","user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":921172142,"title":"Remove ROCm specific casing in nextafter_op impl.","body":"This commit removes ROCm specific #if that are no longer needed on ROCm platform","created_at":"2022-04-27T22:46:14Z","closed_at":"2022-10-13T20:44:41Z","merged_at":"2022-10-13T20:44:41Z","user_id":4212398,"sentiment":{"polarity":0.0,"subjectivity":0.125}}
{"_id":921096745,"title":"Add AMD/ROCm build dependency for grapper/optimizer","body":null,"created_at":"2022-04-27T20:51:38Z","closed_at":"2022-07-22T21:43:16Z","merged_at":null,"user_id":4212398,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":920898894,"title":"build: add `ios_arm_64` configuration, fix build issues for TFLite","body":"This patch makes it possible to build `TensorFlowLiteC_framework` for arm64-simulator using the command `bazel-5.0.0-darwin-arm64 build --config=ios_sim_arm64 -c opt  //tensorflow/lite/ios:TensorFlowLiteC_framework`","created_at":"2022-04-27T17:05:36Z","closed_at":"2022-05-09T22:39:26Z","merged_at":"2022-05-09T22:39:26Z","user_id":1633229,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":920886117,"title":"mlir-hlo: add erf op (Gauss error function)","body":"Also add lowering to linalg (with math.erf).\r\n\r\nNote that although mathematically, the Gauss error function\r\nis defined for both real and complex values, the math.erf op\r\nis only available for floating-point operands.\r\nTherefore, this op is also restricted to floating-point\r\noperands in mhlo and lhlo.\r\n\r\n","created_at":"2022-04-27T16:50:43Z","closed_at":"2022-06-10T19:36:22Z","merged_at":null,"user_id":9328006,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":920831347,"title":"Fix some typos for the, to, futher, indicies, ouput, retrive, in.","body":"Fix some typos for the, to, futher, indicies, ouput, retrive, in.","created_at":"2022-04-27T15:59:56Z","closed_at":"2022-05-06T17:14:54Z","merged_at":"2022-05-06T17:14:54Z","user_id":34329208,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":920826116,"title":"Fix some typos for is, for, have, one, from, to, ouput.","body":"Fix some typos for is, for, have, one, from, to, ouput.","created_at":"2022-04-27T15:55:28Z","closed_at":"2022-04-28T03:40:03Z","merged_at":"2022-04-28T03:40:03Z","user_id":34329208,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":920820866,"title":"Fix some typos for the, for, recieve, retrive.","body":"Fix some typos for the, for, recieve, retrive.","created_at":"2022-04-27T15:51:13Z","closed_at":"2022-05-05T18:02:56Z","merged_at":"2022-05-05T18:02:56Z","user_id":34329208,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":920818607,"title":"Update curl to 7.83 for security fixes","body":"This PR updates curl to 7.83 in order to fix the following (exists in 7.82 or earlier):\r\n- CVE-2022-27776\tCWE-522: Insufficiently Protected Credentials\r\n- CVE-2022-27775\tCWE-200: Exposure of Sensitive Information to an Unauthorized Actor\r\n- CVE-2022-27774\tCWE-522: Insufficiently Protected Credentials\r\n- CVE-2022-22576\tCWE-305: Authentication Bypass by Primary Weakness\r\n\r\nSee https://curl.se/docs/security.html for details.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2022-04-27T15:49:27Z","closed_at":"2022-04-28T17:34:31Z","merged_at":null,"user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":920815028,"title":"Fix some typos for modle, accross, recieve, seperate, the, occured, s…","body":"Fix some typos for modle, accross, recieve, seperate, the, occured, seperate, atleast, probabilites, one, to, begining, retrive.","created_at":"2022-04-27T15:45:58Z","closed_at":"2022-08-02T16:58:45Z","merged_at":"2022-08-02T16:58:45Z","user_id":34329208,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":920806717,"title":"Fix some typos for occurence, the, in, environment, recieve.","body":"Fix some typos for occurence, the, in, environment, recieve.","created_at":"2022-04-27T15:37:57Z","closed_at":"2022-04-28T16:42:28Z","merged_at":"2022-04-28T16:42:28Z","user_id":34329208,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":920797056,"title":"Fix typos for atleast, ouput, Retrive, indicies, is, seperate, to, re…","body":"Fix typos for atleast, ouput, Retrive, indicies, is, seperate, to, recieve, attrbute, the, in, succesful, begining.","created_at":"2022-04-27T15:28:58Z","closed_at":"2022-05-17T19:20:49Z","merged_at":"2022-05-17T19:20:49Z","user_id":34329208,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":920782963,"title":"Fix typos for occured, appearence, this, is, a, for, agressiveness, t…","body":"Fix typos for occured, appearence, this, is, a, for, agressiveness, to, instrution, on.","created_at":"2022-04-27T15:16:36Z","closed_at":"2022-05-13T09:26:14Z","merged_at":"2022-05-13T09:26:14Z","user_id":34329208,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":920769628,"title":"Fix some typos for do, the, for, to.","body":null,"created_at":"2022-04-27T15:04:52Z","closed_at":"2022-04-28T15:45:09Z","merged_at":"2022-04-28T15:45:09Z","user_id":34329208,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":920758602,"title":"Fix Succesful to Successful.","body":null,"created_at":"2022-04-27T14:55:01Z","closed_at":"2022-08-27T12:44:16Z","merged_at":null,"user_id":34329208,"sentiment":{"polarity":0.75,"subjectivity":0.95}}
{"_id":920086261,"title":"Refactoring of the converter for Activation operators","body":"This PR refactors the converter for Activation operators. It also replaces the special implemented converters for Relu6 and LeakyRelu operator with the activation operator implementation.\r\n\r\nA new check and corresponding sub-tests for Validation were added: at least 1 dimension is required for input of any Activation operation.","created_at":"2022-04-27T03:01:15Z","closed_at":"2022-05-03T23:46:57Z","merged_at":"2022-05-03T23:46:57Z","user_id":32910461,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":919942444,"title":"Support NHWC for Tensor_Float_32 + Ampere GPUs","body":"To better utilize the Tensor Cores of TF32 dtype on Ampere GPUs, NHWC data format is recommended. This PR allows the grappler layout optimizer to enforce a target=NHWC optimization when TF32 + Ampere is detected.\r\n\r\ncc. @nluehr ","created_at":"2022-04-26T22:38:38Z","closed_at":"2022-07-11T19:09:35Z","merged_at":"2022-07-11T19:09:35Z","user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":919925438,"title":"r2.9 cherry-pick: [oneDNN] Avoid fusing MatMul+Add with >1D bias until properly tested","body":"The MatMul + Add fusion pattern was accidentally enabled with PR https://github.com/tensorflow/tensorflow/pull/53299, which adds support for Conv3D + Add fusion. This cherry-pick disables it back until it is properly tested.\r\n\r\nOriginal PR: https://github.com/tensorflow/tensorflow/pull/55687","created_at":"2022-04-26T22:11:30Z","closed_at":"2022-04-26T22:15:50Z","merged_at":"2022-04-26T22:15:50Z","user_id":38085909,"sentiment":{"polarity":-0.375,"subjectivity":0.55}}
{"_id":919916164,"title":"r2.9 cherry-pick: Fix bazel error when building mkl_aarch64 build on Arm","body":"Fix bazel multiple-match error when building `//tensorflow/core/kernels:eigen_contraction_kernel` with `--config=mkl_aarch64` on aarch64. \r\n\r\nRoot cause: \r\n`--config=mkl_aarch64` defines a build option that explicitly disable oneDNN usage in `eigen_contraction_kernel` when it doesn't need to because it's already disabled by default on Arm CPUs (the duplicate matches are from defining the flag and from being on Arm architecture).\r\n\r\nError message:\r\n```\r\n//tensorflow/core/kernels:no_mkldnn_contraction_kernel\r\nMultiple matches are not allowed unless one is unambiguously more specialized.\r\n```\r\n\r\nOriginal PR: https://github.com/tensorflow/tensorflow/pull/55700","created_at":"2022-04-26T21:58:48Z","closed_at":"2022-04-26T22:00:22Z","merged_at":"2022-04-26T22:00:22Z","user_id":38085909,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":919739041,"title":"[TF:TRT] Binary op converter formatting and code style cleanup","body":"Converts various `typedef`s in `convert_nodes.h` to C++ type aliases.\r\n\r\nApplies `clang-format` to `convert/ops/binary_ops.cc`.\r\n\r\nChanges use of C-style array to C++ `std::array` in `convert/ops/binary_ops.cc`.","created_at":"2022-04-26T18:20:59Z","closed_at":"2022-05-13T14:30:20Z","merged_at":"2022-05-13T14:30:19Z","user_id":30323187,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":919012743,"title":"[mhlo] modify rng algrothim attr declare as enum ","body":"[modify rng algrothim attr declare as enum](https://github.com/tensorflow/tensorflow/pull/55752/commits/6cfd66fc0d53f9e4a27aea1f8671bd65ce7394d6)","created_at":"2022-04-26T06:54:07Z","closed_at":"2022-05-04T22:12:56Z","merged_at":"2022-05-04T22:12:56Z","user_id":22370779,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":918981446,"title":"Improve the depthwise Conv2DBackpropFilterNCHW GPU kernel","body":"This PR redesigned the Conv2DBackpropFilterNCHW CUDA kernel to improve the perf by using a more reasonable task partition.\r\n\r\nBelow is some benchmarking results:\r\n\r\nhttps://docs.google.com/spreadsheets/d/1xKv4QFh2_dzKvf-T2kCJ1qq_ZKd5LW-63Af2nAoS4fw/edit?usp=sharing\r\n\r\ncc. @nluehr ","created_at":"2022-04-26T06:15:31Z","closed_at":"2022-05-04T21:43:46Z","merged_at":"2022-05-04T21:43:46Z","user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":918692882,"title":"Fix TF Lite Windows build.","body":" Fix TF Lite Windows build.\r\n\r\n* TF Lite was failing to compile on Windows as math constants like\r\n  `_M_PI` were used but `_USE_MATH_DEFINES` was not defined. This\r\n  adds the definition `_USE_MATH_DEFINES` to the `tensorflow-lite`\r\n  target on Windows.\r\n* Also, fixed use of C99 / C++20 in\r\n  `lite/delegates/external/external_delegate.cc`.\r\n\r\nFixes #55745","created_at":"2022-04-25T22:31:51Z","closed_at":"2022-08-23T17:54:58Z","merged_at":null,"user_id":6042948,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":918652236,"title":"r2.9 cherry-pick: c5bb3d909fb \"Remove deadlinks in docstrings.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/c5bb3d909fbe7f52aa539c5a6a2d0491379d1dac","created_at":"2022-04-25T21:34:52Z","closed_at":"2022-04-26T14:55:38Z","merged_at":"2022-04-26T14:55:38Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":918543716,"title":"Improve cuDNN (and XLA) deterministic convolution testing","body":"This PR improves the cuDNN (and XLA) deterministic convolution testing in the following ways:\r\n* Because the existing tests evolved from TF1 API code but are now running on the TF2 eager API, they are operating such that they test nothing. They always pass, regardless of the state of the functionality that they intend to test. Specifically, code that would previously run a graph-op twice using the TF1 API and compare the results is instead running the op once using the TF2 eager API and then comparing the numerical result to itself, which always matches. This PR changes the test infrastructure to compare the result of a python function that is run twice in eager mode.\r\n* The non-dilated convolution backprop tests are not exercising nondeterminism (when op-determinism is disabled) when using XLA JIT compilation. This PR adjusts the configurations such that nondeterminism is exercised (when op-determinism is disabled) both with and without XLA.\r\n* This PR modifies some of the existing test cases to make them smaller, and therefore possibly makes them run faster, whilst robustly exercising nondeterminism (when op-determinism is disabled).\r\n* This PR adds tests for `tf.nn.conv2d_transpose`.\r\n* This PR adds a test that exercises forward nondeterminism (when op-determinism is disabled) for 3D convolution when using XLA JIT compilation.","created_at":"2022-04-25T19:28:16Z","closed_at":"2022-05-05T15:20:44Z","merged_at":"2022-05-05T15:20:44Z","user_id":33532941,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":918450930,"title":"r2.9 cherry-pick: Fix `linalg:self_adjoint_eig_op_test` on Linux aarch64","body":"The tolerance on self_adjoint_eig_op_test seems a bit tight. The test is currently failing\r\non aarch64 (#52544).\r\n\r\nPlaying around with small perturbations of the inputs and step size `delta` on x86_64,\r\nthe max error seems to be in the range 0.008-0.016. Increasing the test tolerance therefore\r\nseems reasonable to account for this error range.\r\n\r\nFixes #52544.\r\n\r\nPiperOrigin-RevId: 439758034","created_at":"2022-04-25T17:52:31Z","closed_at":"2022-04-25T18:33:32Z","merged_at":"2022-04-25T18:33:32Z","user_id":38085909,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":918438205,"title":"r2.9 cherry-pick: Fix `//tensorflow/python/distribute/failure_handling:failure_handler_test` failure on Linux aarch64","body":"Fix `//tensorflow/python/distribute/failure_handling:failure_handler_test` failure on Linux aarch64 by increasing timeout on join for preemption test.\r\n\r\nOriginal PR: https://github.com/tensorflow/tensorflow/pull/55409","created_at":"2022-04-25T17:36:46Z","closed_at":"2022-04-25T18:34:29Z","merged_at":"2022-04-25T18:34:29Z","user_id":38085909,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":918434796,"title":"r2.9 cherry-pick: Fix `prepare-tf.mlir.test` failure on Linux aarch64","body":"Fix test failure in `//tensorflow/compiler/mlir/lite/tests:prepare-tf.mlir.test` on Linux aarch64 due to precision loss from re-calculation of reciprocal.\r\n\r\nOriginal PR: https://github.com/tensorflow/tensorflow/pull/55310\r\n","created_at":"2022-04-25T17:32:23Z","closed_at":"2022-04-25T18:33:17Z","merged_at":"2022-04-25T18:33:17Z","user_id":38085909,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":918392910,"title":"r2.9 cherry-pick: Fixing node_file_writer_test","body":"Fix the failure in `node_file_writer_test` when oneDNN is on.\r\n\r\nOriginal PR: https://github.com/tensorflow/tensorflow/pull/55673","created_at":"2022-04-25T16:45:20Z","closed_at":"2022-04-25T16:45:45Z","merged_at":"2022-04-25T16:45:45Z","user_id":38085909,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":918386236,"title":"r2.9 cherry-pick: Update oneDNN for x86 build from v2.6-rc to v2.6","body":"Update oneDNN for the x86 build from v2.6-rc to v2.6. v2.6 has [several additional fixes](https://github.com/oneapi-src/oneDNN/compare/v2.6-rc...v2.6).\r\n\r\nOriginal PR: https://github.com/tensorflow/tensorflow/pull/55694","created_at":"2022-04-25T16:37:25Z","closed_at":"2022-04-25T16:37:58Z","merged_at":"2022-04-25T16:37:58Z","user_id":38085909,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":918249205,"title":"Fix `size_t` vs int logic in `CHECK_OP`","body":"Previously, there was custom logic for `size_t` vs `int` instances of `CHECK_OP`.\r\n\r\nHowever the logic was correct only for equality ops, not != or greater/less than.\r\n\r\nExample: Before\r\n```\r\nbazel  test --jobs=40  --config=dbg --verbose_failures //tensorflow/core:__tensorflow_core_lib_math_math_util_test\r\n...\r\n-----------------------------------------------------------------------------\r\n[==========] Running 5 tests from 1 test suite.\r\n[----------] Global test environment set-up.\r\n[----------] 5 tests from MathUtil\r\n[ RUN      ] MathUtil.CeilOfRatio\r\n2022-04-25 13:53:45.485294: F ./tensorflow/core/lib/math/math_util.h:123] Check failed: 0 != denominator (0 vs. 18446744073709551615)Division by zero is not supported.\r\n*** Received signal 6 ***\r\n```\r\n\r\nAfter: test passes.\r\n\r\nFixes #55530","created_at":"2022-04-25T14:40:18Z","closed_at":"2022-04-28T21:42:08Z","merged_at":"2022-04-28T21:42:08Z","user_id":128119,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":918205847,"title":"Fix size_t vs int logic in CHECK_OP","body":"[cancelling to rebase]","created_at":"2022-04-25T14:05:01Z","closed_at":"2022-04-25T14:20:33Z","merged_at":null,"user_id":128119,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":917528834,"title":"Missing `f` prefix on f-strings fix","body":"Fixes #55723","created_at":"2022-04-24T21:14:46Z","closed_at":"2022-04-26T15:56:00Z","merged_at":"2022-04-26T15:56:00Z","user_id":72647856,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":917288247,"title":"Fix bug in lowering mhlo.dot_general to linalg","body":"The patch fixes a minor bug when constructing affine maps in `DotGeneralOpConversion`.  A unit test has been added to check the intended functionality","created_at":"2022-04-23T20:05:31Z","closed_at":"2022-05-11T16:03:47Z","merged_at":null,"user_id":50210727,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":916738186,"title":"r2.9 cherry-pick: 586ffe056a6 \"Add some missing docstrings.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/586ffe056a69cb1bdf5012c027f63729fd6d6df1","created_at":"2022-04-22T19:19:07Z","closed_at":"2022-04-25T16:11:16Z","merged_at":"2022-04-25T16:11:16Z","user_id":16359713,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":916681219,"title":"Refactoring of the converter for Activation operators","body":"This PR refactors the converter for Activation operators. It also replaces the special implemented converters for `Relu6` and `LeakyRelu` operator with the activation operator implementation.\r\n\r\nA new check and corresponding sub-tests for Validation were added: at least 1 dimension is required for input of any Activation operation.","created_at":"2022-04-22T17:51:27Z","closed_at":"2022-04-27T03:03:49Z","merged_at":null,"user_id":32910461,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":916321248,"title":"[compiler/mhlo] fix lib/CAPI cmake when using python binding","body":"There are some problems which are import to discuss:\r\n1. There is a spelling mistake `AllMhLoPasses ` => `AllMhloPasses`\r\n2. `AllMhloPasses` is a library `interface` which not defined by `add_mlir_library`. This causes that `AllMhloPasses` doesn't has property `MLIR_AGGREGATE_DEPS`. Without  `MLIR_AGGREGATE_DEPS` property, the python binding compiling process will failed with many `undefined reference`.\r\n3. I think this PR may not be the best fixing method. If you have more suitable method, tell me please.","created_at":"2022-04-22T11:01:47Z","closed_at":"2022-04-26T16:02:07Z","merged_at":null,"user_id":29956693,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":915872563,"title":"r2.9 cherry-pick: Fix tf.config.set_visible_device for PluggableDevice","body":"`tf.config.set_visible_device()` currently doesn't work for PluggableDevice. This cherry-pick fixes it.\r\n\r\nMore details in the original PR: https://github.com/tensorflow/tensorflow/pull/55552 (merged into master on 4/19)","created_at":"2022-04-21T23:41:54Z","closed_at":"2022-04-22T15:38:39Z","merged_at":"2022-04-22T15:38:39Z","user_id":38085909,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":915707151,"title":"r2.9 cherry-pick: 39e53cf4f21 \"Remove deployment details from DTensor docstrings\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/39e53cf4f212f53ac9d9f845d355304c8d596a1d","created_at":"2022-04-21T19:15:10Z","closed_at":"2022-04-22T15:38:06Z","merged_at":"2022-04-22T15:38:06Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":915683468,"title":"Make it explicit that TRTEngineOp names have three digits","body":"TRTEngineOp names have three digits. Change the tests to rely on this fact in looking for TRTEngineOp.","created_at":"2022-04-21T18:47:13Z","closed_at":"2022-06-10T21:11:10Z","merged_at":"2022-06-10T21:11:10Z","user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":915183975,"title":"Removes unnecessary MKL contraction kernel flag from mkl_aarch64 build","body":null,"created_at":"2022-04-21T10:34:06Z","closed_at":"2022-04-25T21:25:42Z","merged_at":"2022-04-25T21:25:42Z","user_id":32057673,"sentiment":{"polarity":-0.4,"subjectivity":0.9}}
{"_id":914766898,"title":"[oneDNN] Upgrade oneDNN to v2.6","body":"This PR updates oneDNN from v2.6-rc to v2.6.","created_at":"2022-04-20T23:56:00Z","closed_at":"2022-04-21T23:31:36Z","merged_at":"2022-04-21T23:31:36Z","user_id":43043975,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":914636088,"title":"r2.9 cherry-pick: Fix crash in TF Lite Java API on Android API <= 19","body":"Work around crash in dlsym when trying to check for the presence of a XNNPACK\r\ndelegate symbols on Android API <= 19 by detecting the respective Android\r\nversions and opting out of XNNPack inference.\r\n\r\nPiperOrigin-RevId: 441825578","created_at":"2022-04-20T20:34:12Z","closed_at":"2022-04-21T17:30:05Z","merged_at":"2022-04-21T17:30:05Z","user_id":1093985,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":914603998,"title":"Fix Windows build break in mhlo","body":"`ShapedType::getRank()` returns an `int64_t`, so no reason to use `uint` which is not a supported type on Windows.","created_at":"2022-04-20T19:56:32Z","closed_at":"2022-05-03T03:57:40Z","merged_at":null,"user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":914583234,"title":"Enable gpu compat memory on for output allocation dataset ops","body":"This MR is a follow up to [55594](https://github.com/tensorflow/tensorflow/pull/55594), and the potential merge should happen afterwards. The goal is to activate the use_gpu_compat_allocator attribute to allocate gpu compatible memory directly prior to the prefetch_to_device op. The list of affected ops are:\r\nRepeatDataset, MapDataset, ParallelMapDataset, ParallelMapDatasetV2, InterleaveDataset, ParallelInterleaveDatasetV2, ParallelInterleaveDatasetV3, ParallelInterleaveDatasetV4, FilterDataset, ParallelFilterDataset, BatchDataset, BatchDatasetV2, ParallelBatchDataset, ShardDataset, PaddedBatchDataset, PaddedBatchDatasetV2, RangeDataset\r\nAttn: @changhuilin","created_at":"2022-04-20T19:29:09Z","closed_at":"2022-09-28T18:11:26Z","merged_at":null,"user_id":42385577,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":914547547,"title":"[oneDNN] Blocking MatMul+Add(bias) fusion until it is properly tested","body":"This PR blocks the fusion of Matmul + Add when bias dims are more than one. This fusion was enabled earlier by a change that was meant to enable Conv3D + Add (PR https://github.com/tensorflow/tensorflow/pull/53299) which updated common code [here](https://github.com/tensorflow/tensorflow/pull/53299/files#diff-65c38c4abfc2cbfc01ab06f743b296203cc20a630919f65fd003b4e74632370cR518-R537) that enabled fusion for MatMul as well. we are blocking that fusion until it is properly tested.","created_at":"2022-04-20T18:47:27Z","closed_at":"2022-04-25T18:38:07Z","merged_at":"2022-04-25T18:38:07Z","user_id":24963061,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":914535954,"title":"[TF-TRT] Adding Graph Visualization Export Instrumentation","body":"This PR introduces a  TF-TRT graph visualization export tool in `graphviz` format.\r\n\r\nThe user can then convert the `graphviz` file in `.dot` format to a more commonly readable format like `PNG`.\r\n\r\nUsage: `TF_TRT_EXPORT_GRAPH_VIZ_PATH=/path/to/mymodel.dot python main.py`","created_at":"2022-04-20T18:33:01Z","closed_at":"2022-05-18T16:37:37Z","merged_at":"2022-05-18T16:37:36Z","user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":914532215,"title":"Integrating cuBLASLt into TF","body":"Adds support for the cuBLASLt library for GEMM operations to TF native. The library can be activated by setting the environment variable `TF_USE_CUBLASLT=1`.\r\n\r\nContinuation of PR #55518 which integrated cuBLASLt into XLA.","created_at":"2022-04-20T18:28:20Z","closed_at":"2022-05-17T22:25:49Z","merged_at":"2022-05-17T22:25:49Z","user_id":80296164,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":914523856,"title":"[oneDNN] Fix Windows MSVC compiler errors","body":"This PR fixes a Windows build break. See the CI logs here: https://tensorflow-ci.intel.com/job/tf-test-win2/49/artifact/test_run.log/*view*/","created_at":"2022-04-20T18:23:23Z","closed_at":"2022-04-20T18:39:27Z","merged_at":null,"user_id":57962524,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":914506842,"title":"Update version numbers for TensorFlow 2.9.0-rc1","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 9 -> 9\nPatch: 0 -> 0\n\nNo lingering old version strings \"2.9.0-rc0\" found in source directory \n\"tensorflow/\". Good.\nWARNING: Below are potentially instances of lingering old version string \n\"2.9.0rc0\" in source directory \"tensorflow/\" that are not updated by this \nscript. Please check them manually!\ntensorflow/tools/pip_package/setup.py:109:2.9.0rc0\ntensorflow/tools/pip_package/setup.py:111:2.9.0rc0\n```","created_at":"2022-04-20T18:05:47Z","closed_at":"2022-04-20T18:14:02Z","merged_at":"2022-04-20T18:14:01Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":913991133,"title":"Add a validate_shape argument to `TF_AssignVariable`","body":"The `TF_AssignVariable` function is missing a `validate_shape` argument that is available for native devices. Adding this argument breaks backward compatibility of the API, but this is necessary since C doesn't support function overloads. Since the header is still in an experimental state, I believe now is the right time to add those kind of arguments.","created_at":"2022-04-20T09:29:05Z","closed_at":"2022-04-26T15:56:00Z","merged_at":"2022-04-26T15:56:00Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":913987808,"title":"Return an error code for `TF_GetInputTensorFromVariable`","body":"Currently, because of `OP_REQUIRES_OK` calls, we always return early from the function before setting the error code when something goes wrong. This is non intuitive as it makes the `status` argument to always be `Status::OK()`, while the status of the context will have an error. This also forces the user to check the status of the context after returning from this function, but checking the value of the status argument itself should be enough.","created_at":"2022-04-20T09:25:50Z","closed_at":"2022-10-15T19:38:43Z","merged_at":"2022-10-15T19:38:43Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":913731280,"title":"Converter for Range operation","body":"Similar to [`tf.range`](https://www.tensorflow.org/api_docs/python/tf/range) this converter creates a sequence of numbers defined by **(start, limit, delta)** any of which could be DT_FLOAT, DT_HALF or DT_INT32. Like  [`tf.range`](https://www.tensorflow.org/api_docs/python/tf/range) the output is a tensor of type DT_FLOAT unless all three   **(start, limit, delta)** are of type  DT_INT32. In this case, the output will also be a tensor of type DT_INT32.\r\n","created_at":"2022-04-20T03:02:42Z","closed_at":"2022-05-09T23:50:25Z","merged_at":null,"user_id":32910461,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":913637384,"title":"[oneDNN] Fixing a failure in node_file_writer_test","body":"This PR fixes a failure in //tensorflow/python/framework/node_file_writer_test by removing [this workaround ](https://github.com/tensorflow/tensorflow/commit/fdf2cc845fdfbafe0395bf9b389e4a056dea4f84)and setting the op device properly. Test was failing because it expected different op name to be logged (_MklNativeConv2D vs Conv2D) based on whether the op gets rewritten. As this test runs multiple times with and without eager_op_as_function feature, op was not going through the rewrite in the first case.","created_at":"2022-04-19T23:46:19Z","closed_at":"2022-04-23T00:12:53Z","merged_at":"2022-04-23T00:12:53Z","user_id":24963061,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":913585105,"title":"[oneDNN] Fixes inconsistency in semantics of check for oneDNN opts in python and C++","body":"After oneDNN was made default [ https://github.com/tensorflow/tensorflow/commit/0a63b9da132f2160411312af72de9e733e73dd65 ], the semantics of the check for oneDNN optimizations in python no longer matched the C++ checks. This fix will make sure python and c++ have the same semantics. The fix requires reshuffling the code and moving the IsMKLEnabled() implementation into onednn_env_vars.cc file.\r\n\r\nThis PR fixes following unit test failures\r\n\r\n//tensorflow/python/client:timeline_test_cpu,\r\n//tensorflow/c/eager:c_api_distributed_test_cpu,\r\n//tensorflow/python/eager:context_test_cpu,\r\n//tensorflow/python/framework:config_test_cpu,\r\n//tensorflow/python/framework:config_test_tpu,\r\n//tensorflow/python/framework:node_file_writer_test_cpu","created_at":"2022-04-19T22:19:36Z","closed_at":"2022-04-28T03:24:37Z","merged_at":null,"user_id":65728957,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":913537768,"title":"r2.9 cherry-pick: 6b5c0f09eed \"Add missing doc strings for 4 methods under layout.py.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/6b5c0f09eedf2a840cef7e7de73b7a6d5e3ee6cb","created_at":"2022-04-19T21:06:48Z","closed_at":"2022-04-20T17:04:19Z","merged_at":"2022-04-20T17:04:19Z","user_id":16359713,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":913483712,"title":"ppc64le: eigen: using the new flag to enable MMA dynamic dispatch","body":"Eigen removed the dynamic dispatch by default. Now, it's necessary to add\r\nEIGEN_ALTIVEC_ENABLE_MMA_DYNAMIC_DISPATCH=1 to enable this feature.\r\n\r\nhttps://gitlab.com/libeigen/eigen/-/commit/7b10795e3939518f1be24f5799e01dbaa1e0c04e\r\nhttps://gitlab.com/libeigen/eigen/-/commit/591906477bc8c8102dbefceefe10d81648865394","created_at":"2022-04-19T19:55:45Z","closed_at":"2022-05-25T21:14:46Z","merged_at":"2022-05-25T21:14:46Z","user_id":2990132,"sentiment":{"polarity":0.06818181818181818,"subjectivity":0.3106060606060606}}
{"_id":913378900,"title":"Update LATEST_BAZEL_VERSION from 5.1.0 to 5.1.1","body":".bazelversion was updated but LATEST_BAZEL_VERSION was not.","created_at":"2022-04-19T17:42:50Z","closed_at":"2022-04-20T16:16:25Z","merged_at":"2022-04-20T16:16:25Z","user_id":8660918,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":913289619,"title":"[ROCm] Rocm unit test fixes","body":"/cc @chsigg @cheshire @jurahul ","created_at":"2022-04-19T15:59:00Z","closed_at":"2022-06-09T16:03:14Z","merged_at":"2022-06-09T16:03:14Z","user_id":70280935,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":913268601,"title":"[TF-TRT] Change default max workspace size to INT_MAX, as recommended by TRT","body":"Advice from the TRT team is to set the max workspace size to the maximum possible integer. However, in some versions, this prevented some models from working. It has been fixed in TRT 8.4, so this PR raises the max workspace size for TRT >= 8.4.","created_at":"2022-04-19T15:37:40Z","closed_at":"2022-04-27T22:06:47Z","merged_at":"2022-04-27T22:06:46Z","user_id":17441062,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":912633771,"title":"Addressing #55510 and comments from PR:  https://github.com/keras-team/keras/pull/16417","body":"As @fchollet  & @chenmoneygithub  mentioned, replacing deprecated tensorflow/python/keras dependency  with keras packaging works. \r\nAlso there are dependencies on python/keras for other modules.\r\n@gbaned I guess this change should be from the tf side? \r\nPrevious PR: #55593","created_at":"2022-04-19T05:31:00Z","closed_at":"2022-12-29T16:53:46Z","merged_at":null,"user_id":30946547,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":912459332,"title":"Add GPU-determinism to tf.nn.depthwise_conv2d","body":"This PR adds GPU-determinism (with cuDNN version 7.6.3 or newer) to `tf.nn.depthwise_conv2d` backprop to `filter` (and therefore also `tf.keras.layers.DepthwiseConv2D`; and `tf.errors.UnimplementedError` is no longer thrown) when op-determinism is enabled via `tf.config.experimental.enable_op_determinism`.\r\n\r\nIncluded in the update to the release notes is the statement, \"This closes issue [47174](https://github.com/tensorflow/tensorflow/issues/47174)\", which is to be confirmed, but is almost certainly true.\r\n\r\ncc @reedwm ","created_at":"2022-04-18T22:50:07Z","closed_at":"2022-04-26T15:56:00Z","merged_at":"2022-04-26T15:56:00Z","user_id":33532941,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":912261638,"title":"TFTRT: Respect device placement requested by user","body":"Previously TRT engines would always default to running on GPU 0. On a multi GPU system, this does not make the best use of the available resources. This PR adds the ability to specify the GPU on which the TRT engine should run.\r\n","created_at":"2022-04-18T18:17:25Z","closed_at":"2022-05-02T18:37:30Z","merged_at":"2022-05-02T18:37:30Z","user_id":80416898,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":912231132,"title":"Always do safe parsing","body":"PiperOrigin-RevId: 433016287","created_at":"2022-04-18T17:35:54Z","closed_at":"2022-04-19T16:23:36Z","merged_at":"2022-04-19T16:23:36Z","user_id":88513897,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":911313876,"title":"[PluggableDevice] Add TF_AddNVariant and TF_ZerosLikeVariant","body":"Support for TF_VARIANT is not really available for pluggable devices through the API since it's very hard (or even impossible) to read the content of a C++ object through ABIs. Even if we were to use the exact same headers as TensorFlow uses for all C++ objects, we would most likely need to use the exact same compiler.\r\n\r\nSince some models depend heavily on variant tensors which contain `TensorList` objects, we'd like to propose 2 new APIs that address this issue:\r\n\r\n```cpp\r\nTF_CAPI_EXPORT extern void TF_AddNVariant(\r\n    TF_OpKernelContext* ctx,\r\n    void (*binaryAddFunc)(TF_OpKernelContext* ctx, const TF_Tensor* a, const TF_Tensor* b, TF_Tensor* out),\r\n    TF_Status* status);\r\n\r\nTF_CAPI_EXPORT extern void TF_ZerosLikeVariant(\r\n    TF_OpKernelContext* ctx,\r\n    void (*zerosLikeFunc)(TF_OpKernelContext* ctx, const TF_Tensor* input, TF_Tensor* out),\r\n    TF_Status* status);\r\n```\r\n\r\nLike the `TF_AssignVariable` and `TF_AssignUpdateVariable` functions currently available in `kernels_experimental.h`, the goal of `TF_AddNVariant` and `TF_ZerosLikeVariant` is to allow plugins to implement those 2 key operations by treating the Variant objects as a black box. The Variant objects are unwrapped within TensorFlow core, which then call the binary_add_func or zeros_like_func callbacks provided by the user, which are guaranteed to contain tensors of primitives (e.g. `TF_FLOAT`).","created_at":"2022-04-16T18:05:04Z","closed_at":"2022-07-27T17:55:07Z","merged_at":"2022-07-27T17:55:07Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":911182088,"title":"Add TF_AssignRefVariable","body":"The [Kernel Extension for Variable Operations API](https://github.com/tensorflow/community/blob/master/rfcs/20210504-kernel-extension-variable-ops.md) added pluggable device support for resource variables and incomplete support for ref variables (TF_OpKernelContext_ForwardRefInputToRefOutput), but it misses one endpoint to make ref variables usable: TF_AssignRefVariable.\r\n\r\nThis change attempts to fill the gaps in the RFC by adding TF_AssignRefVariable, which is analogous to TF_AssignVariable but for ref variables instead of resource variables. It uses the same semantics where the user has to pass a copy function to be called when copying the value tensor to the ref tensor.\r\n\r\n**Note: This is a remake of a [previous PR that got reverted](https://github.com/tensorflow/tensorflow/pull/55379), with a fix for the `DCHECK` on line 77 in ref_var.cc that should have been a `CHECK`.**","created_at":"2022-04-16T02:26:25Z","closed_at":"2022-04-19T22:31:33Z","merged_at":"2022-04-19T22:31:33Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":910952872,"title":"r2.9 cherry-pick: Disable oneDNN by default on Windows","body":"We would like to perform a thorough performance testing on Windows first.\r\n\r\nPiperOrigin-RevId: 438869077","created_at":"2022-04-15T16:22:40Z","closed_at":"2022-04-18T18:38:54Z","merged_at":"2022-04-18T18:38:54Z","user_id":38085909,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":910843409,"title":"Added Conv2DGRU layer","body":"Implementation of ConvGRU2D layer in tensorflow keras. \r\n\r\nExample:\r\n```python\r\nimport tensorflow as tf\r\n\r\nsteps = 10\r\nheight = 32\r\nwidth = 32\r\ninput_channels = 3\r\noutput_channels = 6\r\n\r\ninputs = tf.keras.Input(shape=(steps, height, width, input_channels))\r\nlayer = tf.keras.layers.ConvGRU2D(filters=output_channels, kernel_size=3)\r\noutputs = layer(inputs)\r\n\r\n\r\nmodel = tf.keras.Model(inputs=inputs, outputs=outputs, name=\"convgru_model\")\r\nmodel.summary()\r\n```\r\n","created_at":"2022-04-15T13:15:01Z","closed_at":"2022-04-18T10:25:04Z","merged_at":null,"user_id":12774462,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":910704523,"title":"add tensorrt 8.4 support","body":"nvidia Jetson JetPack 5.0 includes TensorRT 8.4 [1], which is not\r\nsupported now. Use TensorRT 8.2 interface for now.\r\n\r\n[1] https://docs.nvidia.com/deeplearning/tensorrt/release-notes/tensorrt-8.html#rel-8-4-0-EA","created_at":"2022-04-15T09:02:01Z","closed_at":"2022-06-06T19:34:18Z","merged_at":"2022-06-06T19:34:18Z","user_id":3395998,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":910442754,"title":"r2.8 cherry-pick: 70b7ef24ee8 \"Bump zlib to 1.2.12.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/70b7ef24ee8ea830d93f8ce8a38e6f34ad0257be","created_at":"2022-04-14T23:09:58Z","closed_at":"2022-04-18T18:39:22Z","merged_at":"2022-04-18T18:39:22Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":910432890,"title":"r2.6 cherry-pick: a989426ee13 \"Improve to cover scale value greater than one\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/a989426ee1346693cc015792f11d715f6944f2b8","created_at":"2022-04-14T22:45:31Z","closed_at":"2022-04-18T18:39:56Z","merged_at":"2022-04-18T18:39:56Z","user_id":16359713,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":910432853,"title":"r2.7 cherry-pick: a989426ee13 \"Improve to cover scale value greater than one\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/a989426ee1346693cc015792f11d715f6944f2b8","created_at":"2022-04-14T22:45:25Z","closed_at":"2022-04-18T18:39:52Z","merged_at":"2022-04-18T18:39:52Z","user_id":16359713,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":910432694,"title":"r2.8 cherry-pick: a989426ee13 \"Improve to cover scale value greater than one\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/a989426ee1346693cc015792f11d715f6944f2b8","created_at":"2022-04-14T22:44:58Z","closed_at":"2022-04-18T18:40:09Z","merged_at":"2022-04-18T18:40:09Z","user_id":16359713,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":910368878,"title":"Support GPU fusion of matmal+bias+(activation)","body":"This PR enables the remapping optimization for fusion patterns of matmal+bias and matmul+bias+relu on GPUs.\r\n\r\nThis optimization needs to be turned on by `TF_USE_CUBLASLT`.\r\n\r\ncc. @nluehr ","created_at":"2022-04-14T21:27:36Z","closed_at":"2022-05-02T13:32:25Z","merged_at":"2022-05-02T13:32:25Z","user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":910151956,"title":"Delete 60-tflite-converter-issue.md","body":null,"created_at":"2022-04-14T16:48:05Z","closed_at":"2022-04-14T23:04:33Z","merged_at":"2022-04-14T23:04:33Z","user_id":43972606,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":909704637,"title":"Use faster sort in TopK kernel when num_rows==1","body":"`DeviceSegmentedRadixSort` is very slow when `num_segments=1` because it only uses 1 SM per segment. Calling the un-segmented version is much faster (3-5x) in this case (i.e., for 1D input).\r\n\r\nNo functional change besides the improved performance.\r\n\r\ncc @nluehr ","created_at":"2022-04-14T08:24:52Z","closed_at":"2022-05-27T18:43:46Z","merged_at":"2022-05-27T18:43:46Z","user_id":3979096,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":909536579,"title":"keep restore and save op for functaion_optimizer","body":"Keep save and restore op in function optimizer. \r\nCurrently, function optimizer will make restore op inlined, if restore op is StatefulPartitionedCall.\r\nif we use tf_optimizer.OptimizeGraph to optimize a saved_model, the restore op will be replaced.\r\nWhen use session to restore this optimized saved model, it will report an error.","created_at":"2022-04-14T03:34:31Z","closed_at":"2023-02-07T16:25:14Z","merged_at":"2023-02-07T16:25:14Z","user_id":39154010,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":909456543,"title":"Store PTX for highest compute capability only, when using old x.y format","body":"It is common practice for CUDA applications to include native cubin for all arches, and PTX for the highest arch only (for forward combability). This PR makes this desirable behavior the default when using the old x.y format for `TF_CUDA_COMPUTE_CAPABILITIES`. Currently in TensorFlow, if a user sets `TF_CUDA_COMPUTE_CAPABILITIES=5.2,6.0,6.1,7.0,7.5,8.0,8.6`, both cubin and ptx is generated for ALL of the arches which results in a huge binary size.\r\n\r\nThis change reduces the size of the tensorflow binaries with no downsides.\r\n\r\nIf a user wanted to generate PTX for a different arch besides the highest, they can use the new format of sm_xy,compute_xy.","created_at":"2022-04-14T00:15:18Z","closed_at":"2022-05-18T21:45:20Z","merged_at":"2022-05-18T21:45:20Z","user_id":12981474,"sentiment":{"polarity":0.05,"subjectivity":0.6000000000000001}}
{"_id":909446306,"title":"[oneDNN] Fix for some unit test failures","body":"This PR fixes some unit test failures\r\n\r\n//tensorflow/python/client:timeline_test_cpu,\r\n\r\n//tensorflow/c/eager:c_api_distributed_test_cpu,\r\n\r\n//tensorflow/python/eager:context_test_cpu,\r\n\r\n//tensorflow/python/framework:config_test_cpu,\r\n\r\n//tensorflow/python/framework:config_test_tpu,\r\n\r\n//tensorflow/python/framework:node_file_writer_test_cpu\r\n\r\nThis fix makes sure that python code can query correctly if oneDNN is enabled or not","created_at":"2022-04-13T23:49:43Z","closed_at":"2022-04-19T01:49:08Z","merged_at":null,"user_id":65728957,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":909437326,"title":"Avoid redundant PTX generation during nvcc compilation","body":"In nvcc, we currently use the following two options to specify we want to store both PTX and cubin for arch xy in the resulting binary. This will cause PTX to be generated twice; first to store the PTX directly in the binary (backend = compute_xy) and then second to be compiled to cubin (backend = sm_xy). \r\n\r\n```\r\n-gencode=arch=compute_xy,code=compute_xy\r\n-gencode=arch=compute_xy,code=sm_xy\r\n```\r\n\r\nInstead, we can use the following which combines both steps, so that the PTX is only generated once.\r\n\r\n```\r\n-gencode=arch=compute_xy,code=\\\"compute_xy,sm_xy\\\"\r\n```\r\n\r\nThis change should reduce compilation time.","created_at":"2022-04-13T23:26:55Z","closed_at":"2022-04-18T21:27:29Z","merged_at":"2022-04-18T21:27:29Z","user_id":12981474,"sentiment":{"polarity":-0.2,"subjectivity":0.2}}
{"_id":909178272,"title":"[TF-TRT] Support resource variables (ReadVariableOp)","body":"This PR adds support for `ReadVariableOp` nodes. For that, it adds a converter, as well as support for resource inputs in TRT segments (but not TRT engines, which ontain the variables as weights similarly to constants). `TRT_TensorOrWeights` is adapted to take resource values too.\r\n\r\nTodo items are mostly solved in the follow-up PR #56050 ","created_at":"2022-04-13T17:25:09Z","closed_at":"2022-08-19T23:26:37Z","merged_at":"2022-08-19T23:26:37Z","user_id":17441062,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":908535669,"title":"Add reference to ResourceVariables","body":"Added Reference to resource variable.\r\nFixes: https://github.com/tensorflow/tensorflow/issues/49614","created_at":"2022-04-13T06:18:31Z","closed_at":"2022-04-14T15:02:13Z","merged_at":"2022-04-14T15:02:12Z","user_id":73069040,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":908277646,"title":"Mention DTensor in 2.9 release notes","body":null,"created_at":"2022-04-12T23:18:37Z","closed_at":"2022-04-12T23:35:15Z","merged_at":"2022-04-12T23:35:15Z","user_id":138060,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":908216495,"title":"r2.9 cherry-pick: 755d37a53d8 \"Update documentation for `Mesh` and `Layout`.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/755d37a53d89d7f080a8c8129e8e2251e70324f3","created_at":"2022-04-12T22:11:15Z","closed_at":"2022-04-12T23:34:51Z","merged_at":"2022-04-12T23:34:51Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":908097226,"title":"adding the enable_gpu_compatible_memory pass","body":"The purpose for this PR is to add a data grappler pass to enable GPU compatible mode for tensors which will be staged downstream using prefetch_to_device. This is in accordance with recent efforts to parallelize the fetch and execute (commit #s: 9a8772d, ad60111, 2803dfc, 4111779, ecc3db7).\r\nNote that the purpose for this PR would be to enable the pass. There would be a subsequent PR to implement the \"UseGpuAllocator\" potentially within the following data ops: RepeatDataset, MapDataset, ParallelMapDataset, ParallelMapDatasetV2, InterleaveDataset, ParallelInterleaveDatasetV2, ParallelInterleaveDatasetV3, ParallelInterleaveDatasetV4, FilterDataset, ParallelFilterDataset, BatchDataset, BatchDatasetV2, ParallelBatchDataset, ShardDataset, PaddedBatchDataset, PaddedBatchDatasetV2, RangeDataset\r\nAttn: @changhuilin","created_at":"2022-04-12T19:52:47Z","closed_at":"2022-08-31T20:21:17Z","merged_at":null,"user_id":42385577,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":908080401,"title":"replace learning_rate_schedule with tensorflow.keras.optimizers.schedules.","body":"Addressing #55510\r\n","created_at":"2022-04-12T19:32:06Z","closed_at":"2022-04-13T09:56:07Z","merged_at":null,"user_id":30946547,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":907911944,"title":"Link to Resource Variables","body":"Added hyperlink to Resource Variables.\r\n\r\nFixes: https://github.com/tensorflow/tensorflow/issues/49614","created_at":"2022-04-12T16:48:48Z","closed_at":"2022-05-31T11:24:12Z","merged_at":"2022-05-31T11:24:12Z","user_id":74177924,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":907877514,"title":"lite: Update tflite_runtime builds","body":"Switch to Makefile method which is easy to maintain and less dependent to TensorFlow scripts.\r\n\r\nPiperOrigin-RevId: 427943932\r\nChange-Id: I0aff1caaf34a890566ad8a745e8a1d417828c20a","created_at":"2022-04-12T16:12:55Z","closed_at":"2022-04-12T16:18:48Z","merged_at":null,"user_id":2908505,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":907744308,"title":"Fix wrong source file name when building Tensorflow Lite C using CMake","body":"fix wrong source file name","created_at":"2022-04-12T14:15:26Z","closed_at":"2022-04-18T09:01:03Z","merged_at":null,"user_id":8536950,"sentiment":{"polarity":-0.5,"subjectivity":0.9}}
{"_id":906431987,"title":"Remove TF_CAPI_EXPORT from TF_InitGraph","body":"`TF_InitGraph` should be implemented by the plugin, not by core TensorFlow. Removing `TF_CAPI_EXPORT` gets rid of warning `C4273`.","created_at":"2022-04-11T20:11:59Z","closed_at":"2022-08-03T02:33:07Z","merged_at":"2022-08-03T02:33:07Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":906261967,"title":"Bump up cudnn frontend to v0.6.1","body":"This PR bumps up the cudnn frontend version to v0.6.1 which includes some new features and an important fix for the potential crash with  CUDNN_HEUR_MODE_B in multiple threads and on Ampere GPUs.\r\n\r\nRelnote: https://github.com/NVIDIA/cudnn-frontend/releases/tag/v0.6.1\r\n\r\ncc. @nluehr ","created_at":"2022-04-11T17:08:28Z","closed_at":"2022-04-20T12:28:32Z","merged_at":"2022-04-20T12:28:32Z","user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":906207497,"title":"Fix for adapting to the moved FuncOp.","body":"/cc @chsigg @hanbinyoon \r\n\r\nFor some reason, this got missed in my original PR.\r\n","created_at":"2022-04-11T16:17:03Z","closed_at":"2022-04-14T04:49:29Z","merged_at":"2022-04-14T04:49:28Z","user_id":70280935,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":905247616,"title":"Fix issue with tf.ragged.constant when empty pylist is provided","body":"`tf.ragged.constant` when provided empty `pylist` is provided as an input , all RAM is consumed, causing the notebook to crash. Below is the reference issue:\r\n\r\nFixes https://github.com/tensorflow/tensorflow/issues/55199","created_at":"2022-04-10T15:16:23Z","closed_at":"2022-04-15T16:38:24Z","merged_at":null,"user_id":43972606,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":904986722,"title":"[Pfor] Improve the fallback cause","body":"This will try to improve the feedback to the user when we need fallback in a `while_loop`.\r\n\r\nFixes https://github.com/tensorflow/tensorflow/issues/55425","created_at":"2022-04-09T15:47:58Z","closed_at":"2022-04-12T14:36:19Z","merged_at":"2022-04-12T14:36:18Z","user_id":1710528,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":904908597,"title":"Fix some typos.","body":null,"created_at":"2022-04-09T13:29:41Z","closed_at":"2022-04-27T07:33:43Z","merged_at":null,"user_id":34329208,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":904262360,"title":"[oneDNN] Windows CI Set python path env vars if not already set","body":"resubmit of https://github.com/tensorflow/tensorflow/pull/55523","created_at":"2022-04-08T22:21:01Z","closed_at":"2022-04-11T15:09:20Z","merged_at":"2022-04-11T15:09:20Z","user_id":57962524,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":904227594,"title":"Add DEVICE_DEFAULT registration for DataFormatDimMap and DataFormatVecPermute","body":"`DataFormatDimMap` and `DataFormatVecPermute` are necessary for pluggable devices with the `GPU` type that want to leverage existing grappler optimizations.","created_at":"2022-04-08T21:14:49Z","closed_at":"2022-07-28T04:12:09Z","merged_at":"2022-07-28T04:12:09Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":904212995,"title":"[PluggableDevice] Add TF_KernelBuilder_Label","body":"Setting a label on a kernel allows us to choose which version to choose at runtime and avoid GPU<->CPU copies, e.g. with `DataFormatPermute` or `DataFormatDimMap`.","created_at":"2022-04-08T20:49:29Z","closed_at":"2022-08-03T10:34:10Z","merged_at":"2022-08-03T10:34:10Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":904108811,"title":"Added support for big tensor pooling","body":"Cudnn legacy API only supports int32 indexing and can handle a maximum of 2^31-1 elements. This PR added support of pooling operations over big tensor. In particular, we split the big tensor along the batch axis when necessary and call cudnn API sequentially.\r\n\r\ncc. @nluehr ","created_at":"2022-04-08T18:19:17Z","closed_at":"2022-06-24T21:10:19Z","merged_at":"2022-06-24T21:10:19Z","user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":903998462,"title":"Revert \"[oneDNN] Windows CI Set python path env vars if not already set\"","body":"Reverts tensorflow/tensorflow#55523\r\n\r\nIt was accidentally merged and now breaks everything in the sync between internal and external","created_at":"2022-04-08T15:54:19Z","closed_at":"2022-04-08T15:54:25Z","merged_at":"2022-04-08T15:54:25Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":903969619,"title":"Fix crash in GPU SparseToDense when validate_indices is false.","body":"This essentially extends the fix from commit 23c6926c4e4 to the\r\nvalidate_indices=false code path.\r\n\r\nCC: @reedwm ","created_at":"2022-04-08T15:22:07Z","closed_at":"2022-04-27T20:51:32Z","merged_at":null,"user_id":1873655,"sentiment":{"polarity":-0.4000000000000001,"subjectivity":0.6}}
{"_id":903959844,"title":"Typo fix","body":"Changed from `explict` to `explicit`","created_at":"2022-04-08T15:13:50Z","closed_at":"2022-04-12T14:26:48Z","merged_at":"2022-04-12T14:26:48Z","user_id":74177924,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":903907881,"title":"[PluggableDevice] Fix tf.config.set_visible_device for PluggableDevice","body":"tf.config.set_visible_device() is not work for PluggableDevice but can work normally through tf.ConfigProto()\r\nwork example:\r\n```\r\nconfig = tf.ConfigProto()\r\nconfig.gpu_options.visible_device_list = \"1\"\r\nwith tf.Session(config) as sess:\r\n```\r\nnot work example:\r\n```\r\ndevs = tf.config.list_physical_devices('XPU')\r\ntf.config.set_visible_devices(devs[1], 'XPU')\r\n```\r\n The root cause is currently python implementation in v2 API will filter out non-gpu devices in GPUOptions, this PR will enable it if the device is GPU or PluggableDevice.","created_at":"2022-04-08T14:24:05Z","closed_at":"2022-04-20T02:50:45Z","merged_at":"2022-04-20T02:50:45Z","user_id":6346853,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":903446740,"title":"Converter for LogicalOr and LogicalAnd operations.","body":"Implementation of the converters for LogicalOr and LogicalAnd operations.","created_at":"2022-04-08T05:42:38Z","closed_at":"2022-05-03T18:45:56Z","merged_at":null,"user_id":32910461,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":903444231,"title":"Fix typos in core/data/service","body":"Fix typos in `tensorflow/core/data/service` directory.","created_at":"2022-04-08T05:36:55Z","closed_at":"2022-04-12T15:20:24Z","merged_at":"2022-04-12T15:20:24Z","user_id":14370937,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":903386373,"title":"[PluggableDevice] Make graph_buf argument in TF_NewFunctionLibraryDefinition constant","body":"`TF_NewFunctionLibraryDefinition` doesn't modify anything in `graph_buf`, and having it as non-const makes it impossible to use the graph buffer passed to the `Optimize` function without making a copy.","created_at":"2022-04-08T03:26:07Z","closed_at":"2022-08-03T18:09:15Z","merged_at":"2022-08-03T18:09:15Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.3333333333333333}}
{"_id":903337641,"title":"Cherrypick coreml memory issue","body":"Cherrypick integrate of fix coreml delegate tmp peak memory issue https://github.com/tensorflow/tensorflow/commit/9f2e9d1e58f85a2b603baa1e682c0987fa49b203\r\nFixes https://github.com/tensorflow/tensorflow/issues/55503","created_at":"2022-04-08T01:35:23Z","closed_at":"2022-04-08T18:19:27Z","merged_at":null,"user_id":73069040,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":903281946,"title":"Converter for LogicalNot operation","body":"- Converter for LogicalNot operation is using the same base class (ConvertUnaryImpl) as other Unary operations.\r\n- The special converter for Rsqrt was removed and now for this operation regular Unary Op converter is used.\r\n- New templated class implemented for testing ConvertUnary, ConvertBooleanUnary, ConvertActivation.\r\n- A new check and corresponding subtests were added to Validate: at least 1 dimension is required for input of any Unary and UnaryBoolean operation. (Similar subtest for ConvertActivation operations is blocked and after refactoring of ConvertActivation it will be activated)\r\n","created_at":"2022-04-07T23:22:50Z","closed_at":"2022-04-26T19:12:13Z","merged_at":"2022-04-26T19:12:13Z","user_id":32910461,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":903275112,"title":"r2.9 cherry-pick: 85a6eab2899 \"Use tf_kernel_library instead of cc_library to pass the correct copts. Add necessary compatible_with tags to DTensor files.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/85a6eab2899b6c6ab2a2f812f13bbd9639443369","created_at":"2022-04-07T23:07:07Z","closed_at":"2022-04-12T23:04:54Z","merged_at":"2022-04-12T23:04:54Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":1.0}}
{"_id":903241036,"title":"[TF:TRT] Make default dynamic shape profile strategy to implicit batch compatible","body":"In implicit batch mode, a TRT engine can handle a range of batch sizes. If the model was built with shape [N, C, H, W], then any batch size between 1..N will be compatible with the engine. In contrast, in dynamic shape mode we use optimization profiles to define the expected input shapes for the engine.\r\n\r\nThe goal of this PR is to change the default profile generation strategy (which is enabled when the `dynamic_shape_profile_strategy` converter arg is `None`) to be `'ImplicitBatchModeCompatible'`.\r\n\r\nThis way, the shapes that a TRT engine accepts in dynamic shape mode will be the same as in implicit batch mode, unless the user explicitly specifies a different profile strategy.","created_at":"2022-04-07T22:00:44Z","closed_at":"2022-04-20T16:16:25Z","merged_at":"2022-04-20T16:16:25Z","user_id":3671106,"sentiment":{"polarity":0.0,"subjectivity":0.16666666666666666}}
{"_id":903236307,"title":"r2.9 cherry-pick: 296cdc612c7 \"Fix pylint violations in dtensor_device.py.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/296cdc612c7652dee05e2e31bd67c465f73cdda2","created_at":"2022-04-07T21:52:05Z","closed_at":"2022-04-12T23:04:32Z","merged_at":"2022-04-12T23:04:32Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":903145695,"title":"r2.9 cherry-pick: b5948699e20 \"Update documentation for DTensor's `pack`, `unpack` and `fetch_layout` functions.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/b5948699e2057c71171b0acc65e56e8071888f20","created_at":"2022-04-07T19:52:36Z","closed_at":"2022-04-12T23:04:10Z","merged_at":"2022-04-12T23:04:10Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":903105189,"title":"xla cpu backend enhancements","body":"This PR implements \r\n1. batch dot emitter with eigen runtime\r\n2. ACL (Arm Compute Library) runtime for dot and conv emitters","created_at":"2022-04-07T19:05:08Z","closed_at":"2022-06-30T00:27:05Z","merged_at":"2022-06-30T00:27:05Z","user_id":87143774,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":902967098,"title":"r2.9 cherry-pick: 8ea604d4c2c \"Don't build nightly wheels on macos release\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/8ea604d4c2c911e8957e45e0a67293b961316ff2","created_at":"2022-04-07T16:35:23Z","closed_at":"2022-04-07T16:50:03Z","merged_at":"2022-04-07T16:50:03Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":902512524,"title":"Register Not differentiable RandomShuffle","body":"https://github.com/tensorflow/tensorflow/issues/6269#issuecomment-267615674","created_at":"2022-04-07T09:33:16Z","closed_at":"2022-04-18T14:28:49Z","merged_at":null,"user_id":1710528,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":902160242,"title":"[oneDNN] Windows CI Set python path env vars if not already set","body":null,"created_at":"2022-04-07T00:50:00Z","closed_at":"2022-04-08T15:40:17Z","merged_at":"2022-04-08T15:40:17Z","user_id":57962524,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":901928582,"title":"Integrating cuBLASLt into XLA","body":"Adds support for the cuBLASLt library for GEMM operations to XLA. The library can be activated by setting the XLA flag `xla_gpu_enable_cublaslt=true`.\r\n\r\n@SandSnip3r can you run the test _before_ merging?","created_at":"2022-04-06T19:36:20Z","closed_at":"2022-04-18T14:18:41Z","merged_at":null,"user_id":80296164,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":901733276,"title":"Update README.md","body":"Removed two unnecessary commas","created_at":"2022-04-06T16:52:13Z","closed_at":"2022-04-06T23:59:59Z","merged_at":null,"user_id":50906187,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":901717243,"title":"r2.9 cherry-pick: c2c81d8a45f \"call_with_layout shall pin to the mesh of the layout.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/c2c81d8a45f17f4d83adf7872f925c46a9302bac","created_at":"2022-04-06T16:35:16Z","closed_at":"2022-04-12T23:03:38Z","merged_at":"2022-04-12T23:03:38Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":901527648,"title":"[Pfor] Fix string format","body":null,"created_at":"2022-04-06T13:39:47Z","closed_at":"2022-04-07T18:08:18Z","merged_at":"2022-04-07T18:08:18Z","user_id":1710528,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":901218302,"title":"R0.7","body":null,"created_at":"2022-04-06T08:49:00Z","closed_at":"2022-04-06T08:50:39Z","merged_at":null,"user_id":87687829,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":901157199,"title":"Ggadde 1 15 rc3 version","body":null,"created_at":"2022-04-06T07:55:49Z","closed_at":"2022-04-06T15:45:10Z","merged_at":null,"user_id":87687829,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":901091706,"title":"Fix Issue #53164 : Multiple matches are not allowed unless one is unambiguously more specialized","body":"Fix Issue #53164 : Multiple matches are not allowed unless one is unambiguously more specialized\r\n\r\n    Fix 'Illegal ambiguous match' on s390x with --config=nogcp\r\n\r\nSigned-off-by: potula-chandra <chpotula@in.ibm.com>","created_at":"2022-04-06T07:03:30Z","closed_at":"2022-04-11T18:58:30Z","merged_at":"2022-04-11T18:58:30Z","user_id":10830725,"sentiment":{"polarity":0.25,"subjectivity":0.25}}
{"_id":901080037,"title":"Added space to make bullet point visible","body":null,"created_at":"2022-04-06T06:47:13Z","closed_at":"2022-04-07T14:52:04Z","merged_at":null,"user_id":63838746,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":901064281,"title":"Remove empty bullet point","body":"I removed an empty bullet point","created_at":"2022-04-06T06:29:08Z","closed_at":"2022-04-06T06:33:25Z","merged_at":null,"user_id":63838746,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":900862308,"title":"Enable XLA test of tf.tensor_scatter_nd_update","body":"See [this conversation](https://github.com/tensorflow/tensorflow/pull/55460#discussion_r842286085) with @reedwm. XLA JIT compiled functions that utilize the `Scatter` HLO are deterministic since 2.8.0, which I have confirmed for `array_ops.tensor_scatter_update`, the entry point used for this test.","created_at":"2022-04-06T00:53:44Z","closed_at":"2022-04-06T19:54:26Z","merged_at":"2022-04-06T19:54:26Z","user_id":33532941,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":900448028,"title":"Tweak the lower bound for the keras to include Rc0","body":"Adjusting the lower bound for the keras to also include Rc0","created_at":"2022-04-05T16:09:59Z","closed_at":"2022-04-05T16:10:38Z","merged_at":"2022-04-05T16:10:38Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":899922920,"title":" Adding option `--output_filepath` for tflite benchmark","body":"- Exporting output tensors to a file in raw data format.\r\n- Supposed to be helpful for automating on-device(e.g. android-arm64 target) runtime validation of tflite models.","created_at":"2022-04-05T08:40:14Z","closed_at":"2022-07-28T20:50:58Z","merged_at":"2022-07-28T20:50:58Z","user_id":502758,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":899628833,"title":"[TF-TRT] Cast Converter Re-Engineered","body":"This PR changes the way TF-TRT deal with `Cast` nodes. TensorRT engineers advised us to treat `Cast` as an Identity node and let TensorRT decides on which compute precision to use according to `precision_mode=...`.\r\n\r\nThis behavior can be deactivated using `TF_TRT_EXPERIMENTAL_FEATURES=reject_fp32_fp16_cast` if needed to work around any unforeseen issue\r\n\r\nThis PR also adds `converter.summary()` to TF-TRT test files in order to ease test debugability","created_at":"2022-04-05T00:53:04Z","closed_at":"2022-05-06T00:47:14Z","merged_at":"2022-05-06T00:47:14Z","user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":899618162,"title":"r2.9 cherry-pick: 4f736fe226f \"Add mesh_util and tpu_util functions to public dtensor API.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/4f736fe226f910cbc5bb9767df1408148e824945","created_at":"2022-04-05T00:35:46Z","closed_at":"2022-04-05T15:47:32Z","merged_at":"2022-04-05T15:47:32Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.06666666666666667}}
{"_id":899597622,"title":"Update lower bound for estimator to also include RC0","body":"Updating the version for estimator lower bound for 2.9 release","created_at":"2022-04-04T23:53:26Z","closed_at":"2022-04-04T23:55:06Z","merged_at":"2022-04-04T23:55:06Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":899444248,"title":"Update versions for estimator and Keras","body":"Updating the setup.py to update estimator and keras versions for 2.9 release-","created_at":"2022-04-04T20:15:12Z","closed_at":"2022-04-04T20:32:03Z","merged_at":"2022-04-04T20:32:03Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":898649236,"title":"Typo fix in LSTM docstring.","body":"Replaced a dot with a space.","created_at":"2022-04-04T07:12:47Z","closed_at":"2022-04-04T14:26:00Z","merged_at":null,"user_id":56216861,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":898602926,"title":"Avoid unnecessary instantiations in DispatchToVectorized","body":"- This avoids unnecessary template instantiations when vectorizing with 16-bit and larger data types, significantly reducing compile times for some kernels.\r\n- It should also help with the Windows compilation issue discussed here:\r\n  https://github.com/tensorflow/tensorflow/issues/54276#issuecomment-1032186006\r\n- No functional change.\r\n\r\ncc @nluehr","created_at":"2022-04-04T06:11:44Z","closed_at":"2022-04-22T04:05:15Z","merged_at":"2022-04-22T04:05:15Z","user_id":3979096,"sentiment":{"polarity":-0.4,"subjectivity":0.9}}
{"_id":897926729,"title":"Rename pylintrc file back to \"pylintrc\".","body":"It is currently named \"Pylint revert W + TODO for outdated chwcks\".\r\nLooks like it has been mistakenly renamed in 801aa9fcc2d7aeb0524a4bff72b16dbf370b53e8.","created_at":"2022-04-02T02:18:19Z","closed_at":"2022-04-02T02:19:31Z","merged_at":null,"user_id":14329563,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":897900893,"title":"[ROCm] Fix for BEF executable test failure for //tensorflow/compiler/xla/tes…","body":"…ts:matrix_ops_simple_test_gpu.\r\n\r\n/cc @chsigg @hanbinyoon ","created_at":"2022-04-02T00:11:50Z","closed_at":"2022-04-07T11:22:12Z","merged_at":null,"user_id":70280935,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":897764663,"title":"[ROCm] Switch ROCm TF builds to use ROCm 5.1.0","body":"/cc @cheshire @chsigg ","created_at":"2022-04-01T19:59:50Z","closed_at":"2022-04-05T14:50:20Z","merged_at":"2022-04-05T14:50:20Z","user_id":36858332,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":897669174,"title":"r2.9 cherry-pick: 2d9de8e62c3 \"Insert new blurb for new release notes.\"","body":"Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/2d9de8e62c30e606e817d1dec9ee1f546dcf19ba","created_at":"2022-04-01T17:52:14Z","closed_at":"2022-04-01T17:52:50Z","merged_at":null,"user_id":16359713,"sentiment":{"polarity":0.13636363636363635,"subjectivity":0.45454545454545453}}
{"_id":897394635,"title":"[hotfix] rename pylintrc","body":"https://github.com/tensorflow/tensorflow/pull/55453\r\nThe test fails because the name of pylintrc has changed to an incorrect name.\r\n\r\n`pylintrc` is correct name.\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/500065b9806bd7eff874841142ae0fb4f3e57d9c/.github/workflows/pylint-presubmit.yml#L48","created_at":"2022-04-01T13:22:35Z","closed_at":"2022-04-04T20:53:44Z","merged_at":"2022-04-04T20:53:44Z","user_id":14047309,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":897209245,"title":"Fixing syntax","body":"Fixing syntax of the documentation from colon to full stop for much better readability. This is just the start for me to contribute to tensorflow, expect much more PRs in the future.","created_at":"2022-04-01T10:23:20Z","closed_at":"2022-04-01T16:01:03Z","merged_at":null,"user_id":76823502,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":896855779,"title":"Fix tf.scatter_nd documentation","body":"I experienced quite a lot of confusion while trying to understand this documentation. The part that confused me the most was \"`indices` is an integer of shape `shape`\", which is definitely not true. I ended up scrubbing through and fixing or improving the documentation in several other ways.","created_at":"2022-04-01T03:02:41Z","closed_at":"2022-04-06T19:54:26Z","merged_at":"2022-04-06T19:54:26Z","user_id":33532941,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":896680439,"title":"Create cherry-pick helper GA workflow","body":"This creates a new helper workflow that can create a cherry-pick PR for\r\nOwners on the repository. Here's an example: https://github.com/angerson/tensorflow/pull/10","created_at":"2022-03-31T22:49:17Z","closed_at":"2022-03-31T23:30:58Z","merged_at":"2022-03-31T23:30:58Z","user_id":32465472,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":896603332,"title":"Update version numbers for TensorFlow 2.9.0-rc0","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 9 -> 9\nPatch: 0 -> 0\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.9.0\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/tools/pip_package/setup.py:48:2.9.0\ntensorflow/tools/pip_package/setup.py:84:2.9.0\ntensorflow/tools/pip_package/setup.py:108:2.9.0\ntensorflow/tools/pip_package/setup.py:110:2.9.0\ntensorflow/tools/pip_package/setup.py:112:2.9.0\ntensorflow/tools/ci_build/release/requirements_common.txt:27:2.9.0\ntensorflow/tools/ci_build/release/requirements_common.txt:28:2.9.0\ntensorflow/tools/ci_build/release/requirements_common.txt:29:2.9.0\ntensorflow/tensorflow.bzl:59:2.9.0\ntensorflow/workspace2.bzl:840:2.9.0\ntensorflow/workspace2.bzl:842:2.9.0\ntensorflow/lite/tools/versioning/runtime_version.cc:71:2.9.0\ntensorflow/lite/tools/versioning/runtime_version.cc:100:2.9.0\ntensorflow/lite/tools/versioning/runtime_version.cc:238:2.9.0\ntensorflow/lite/tools/versioning/runtime_version.cc:241:2.9.0\ntensorflow/lite/tools/versioning/runtime_version.cc:376:2.9.0\ntensorflow/lite/tools/versioning/runtime_version.cc:377:2.9.0\ntensorflow/lite/tools/versioning/runtime_version.cc:378:2.9.0\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.9.0\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/tools/pip_package/setup.py:48:2.9.0\ntensorflow/tools/pip_package/setup.py:84:2.9.0\ntensorflow/tools/pip_package/setup.py:108:2.9.0\ntensorflow/tools/pip_package/setup.py:110:2.9.0\ntensorflow/tools/pip_package/setup.py:112:2.9.0\ntensorflow/tools/ci_build/release/requirements_common.txt:27:2.9.0\ntensorflow/tools/ci_build/release/requirements_common.txt:28:2.9.0\ntensorflow/tools/ci_build/release/requirements_common.txt:29:2.9.0\ntensorflow/tensorflow.bzl:59:2.9.0\ntensorflow/workspace2.bzl:840:2.9.0\ntensorflow/workspace2.bzl:842:2.9.0\ntensorflow/lite/tools/versioning/runtime_version.cc:71:2.9.0\ntensorflow/lite/tools/versioning/runtime_version.cc:100:2.9.0\ntensorflow/lite/tools/versioning/runtime_version.cc:238:2.9.0\ntensorflow/lite/tools/versioning/runtime_version.cc:241:2.9.0\ntensorflow/lite/tools/versioning/runtime_version.cc:376:2.9.0\ntensorflow/lite/tools/versioning/runtime_version.cc:377:2.9.0\ntensorflow/lite/tools/versioning/runtime_version.cc:378:2.9.0\n```","created_at":"2022-03-31T22:03:25Z","closed_at":"2022-04-01T15:39:00Z","merged_at":"2022-04-01T15:39:00Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":896544300,"title":"Update release notes for TensorFlow 2.9.0","body":"This PR is intentionally incomplete. One of the Release Owners for 2.9.0\nneeds to fill in the internal release notes for this version before the PR gets\nsubmitted. Click on the :pencil2: icon in the header for `RELEASE.md` under\n\"Files Changed\" above.","created_at":"2022-03-31T21:29:48Z","closed_at":"2022-04-01T14:56:38Z","merged_at":"2022-04-01T14:56:38Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":896503396,"title":"Add release notes for manylinux2014 and libcxx ABI change","body":"PiperOrigin-RevId: 438633589","created_at":"2022-03-31T21:05:46Z","closed_at":"2022-03-31T21:42:09Z","merged_at":"2022-03-31T21:42:09Z","user_id":32465472,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":895899066,"title":"Pylint: Revert W + TODO","body":"https://github.com/tensorflow/tensorflow/issues/55442","created_at":"2022-03-31T13:43:02Z","closed_at":"2022-04-01T06:48:51Z","merged_at":"2022-04-01T06:48:51Z","user_id":1710528,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":895029414,"title":"Create `tensorflow_issue_template.yaml`","body":"Create generic template for all type of issues and auto label based on issue type selection","created_at":"2022-03-30T23:15:38Z","closed_at":"2022-04-18T20:12:53Z","merged_at":"2022-04-18T20:12:52Z","user_id":43972606,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":894802590,"title":"[ROCm] Rocm bef executable fixes","body":"/cc @chsigg @cheshire @jurahul @hanbinyoon ","created_at":"2022-03-30T19:06:06Z","closed_at":"2022-04-05T13:01:33Z","merged_at":"2022-04-05T13:01:33Z","user_id":70280935,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":894066671,"title":"Updates mkl_aarch64 build to use oneDNN v2.6.","body":null,"created_at":"2022-03-30T07:31:24Z","closed_at":"2022-03-30T18:23:41Z","merged_at":"2022-03-30T18:23:40Z","user_id":32057673,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":893476378,"title":"[TF-TRT] Slice Instance_OP Bug Fix and Cleaning","body":"This PR increase code readability around the `op_instance` mechanism and fix a name collision bug inside `Converter::DynamicReshape`.","created_at":"2022-03-29T20:04:33Z","closed_at":"2022-04-04T19:03:34Z","merged_at":"2022-04-04T19:03:34Z","user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":893348766,"title":"Add ndmin check","body":"Added ndmin check to allow maximum 32 ndmin to make same behavior as numpy.\r\nCurrently it is crashing when very large ndmin is passed.\r\nCloses:  https://github.com/tensorflow/tensorflow/issues/55292","created_at":"2022-03-29T17:44:48Z","closed_at":"2022-04-01T09:06:12Z","merged_at":"2022-04-01T09:06:12Z","user_id":73069040,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":893341998,"title":"Removing the static tpu initializer for JAX altogether, and returning Status when it is not successful.","body":"Removing the static initializer for JAX tpu use. We only call libtpu initializer when there is a need for it. Here is the third PR dependent on the previous two PRs: [PR1](https://github.com/tensorflow/tensorflow/pull/55413) and [PR2](https://github.com/tensorflow/tensorflow/pull/55415)","created_at":"2022-03-29T17:37:20Z","closed_at":"2022-05-04T22:58:58Z","merged_at":"2022-05-04T22:58:58Z","user_id":7341711,"sentiment":{"polarity":0.0625,"subjectivity":0.925}}
{"_id":893287165,"title":"Converter for LogicalNot operation","body":"- Converter for LogicalNot operation is using the same base class (ConvertUnaryImpl) as other Unary operations.\r\n- The special converter for Rsqrt was removed and now for this operation regular Unary Op converter is used.\r\n- New templated class implemented for testing ConvertUnary, ConvertBooleanUnary, ConvertActivation.\r\n- A new check and corresponding subtests were added to Validate: at least 1 dimension is required for input of any Unary and UnaryBoolean operation. (Similar subtest for ConvertActivation operations is blocked and after refactoring of ConvertActivation it will be activated)","created_at":"2022-03-29T16:39:44Z","closed_at":"2022-04-07T23:28:59Z","merged_at":null,"user_id":32910461,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":892551168,"title":"Fix typos in data_adapter.py","body":" Fix typos in data_adapter.py ","created_at":"2022-03-29T04:35:00Z","closed_at":"2022-03-29T14:29:31Z","merged_at":null,"user_id":1371383,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":892432927,"title":"[INTEL MKL] Fix oneDNN Ubuntu partials and Dockerfiles and remove support for Ubuntu 16.04","body":"Signed-off-by: Abolfazl Shahbazi <abolfazl.shahbazi@intel.com>","created_at":"2022-03-29T00:46:24Z","closed_at":"2023-03-01T21:10:01Z","merged_at":null,"user_id":12436063,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":892425780,"title":"Fixes for TF v2.8.0 oneDNN containers and remove support for Ubuntu 16.04","body":null,"created_at":"2022-03-29T00:30:04Z","closed_at":"2022-03-29T00:33:21Z","merged_at":null,"user_id":12436063,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":892407954,"title":"Removing the executor file and link jax to use tpu_api_dlsym_initializer","body":"Because tpu_profiler dependency already pulls in the full tpu_api_dlsym_initializer dependency, so there's no point maintaining this smaller executor dependency.","created_at":"2022-03-28T23:53:55Z","closed_at":"2022-04-20T12:28:33Z","merged_at":"2022-04-20T12:28:33Z","user_id":7341711,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":892383309,"title":"Refactoring tpu_api_dlsym_initializer","body":"We want to remove the static initializer of the TPU for JAX, which stays in the tpu_api_dlsym_initializer file. However, The functions and links in this file are needed to be called and linked in the correct places if we remove the static initializer. Therefore, we are only keeping the static initializer in this file, and have the tpu_initializer_helper file to have the rest of the functions and links. So there is no need to link this file in any place that does not need the static initializer. This PR does not change the behavior of anything, and is only refactoring functions. ","created_at":"2022-03-28T23:08:40Z","closed_at":"2022-04-07T11:27:48Z","merged_at":null,"user_id":7341711,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":892366299,"title":"[TF-TRT] Fix two problems in python tests.","body":"This PR fixes two problems in the test.\r\n\r\n1. `saved_model.load.load` only exists with `bazel run ...`\r\n2. Enable multi GPU support for `binary_tensor_weight_broadcast_test.py`","created_at":"2022-03-28T22:40:04Z","closed_at":"2022-04-18T16:20:41Z","merged_at":"2022-04-18T16:20:41Z","user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":892325023,"title":"[oneDNN] Enable Softmax with oneDNN library","body":"This PR enables softmax forward op using oneDNN library. It uses in-place computation whenever possible. It improves performance of some models wherein the softmax takes up significant time.\r\n\r\nThe following are performance data on some micro-benchmarks. The performance data were collected on Intel Xeon CPUs using Eigen ThreadPool.\r\n\r\n## Microbenchmarks\r\n\r\nTensor Dims | Numeric Type | Intra-op Threads | HW | oneDNN (ns) | Eigen (ns) | Speedup\r\n-- | -- | -- | -- | -- | -- | --\r\n1x16x384x384 | FLOAT32 | 4 | Xeon 28 core | 435505 | 849837 | 1.95x\r\n16x16x384x384 | FLOAT32 | 4 | Xeon 28 core | 30608250 | 39503349 | 1.29x\r\n32x1008 | FLOAT32 | 1 | Xeon 28 core | 28455 | 33078 | 1.16x\r\n128x1008 | FLOAT32 | 1 | Xeon 28 core | 83065 | 123516 | 1.49x\r\n32x1008 | FLOAT32 | 4 | Xeon 28 core | 30585 | 32165 | 1.05x\r\n128x1008 | FLOAT32 | 4 | Xeon 28 core | 41348 | 127743 | 3.09x\r\n1x16x384x384 | BFLOAT16 | 4 | Xeon 26 core | 430448 | 867489 | 2.02x\r\n16x16x384x384 | BFLOAT16 | 4 | Xeon 26 core | 17430198 | 25598959 | 1.47x\r\n32x1008 | BFLOAT16 | 1 | Xeon 26 core | 31498 | 49853 | 1.58x\r\n128x1008 | BFLOAT16 | 1 | Xeon 26 core | 91812 | 159045 | 1.73x\r\n32x1008 | BFLOAT16 | 4 | Xeon 26 core | 29836 | 49224 | 1.65x\r\n128x1008 | BFLOAT16 | 4 | Xeon 26 core | 43047 | 122662 | 2.85x\r\n\r\nThis PR improves inference performance by 12% on some models that use softmax.","created_at":"2022-03-28T21:47:41Z","closed_at":"2023-01-10T18:35:59Z","merged_at":"2023-01-10T18:35:59Z","user_id":27521767,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":892168529,"title":"Use `_shape` annotation in ReadVariableOp shape inference if found","body":"This PR is a workaround to fix the shape inference of `ReadVariableOp` nodes when a graph gets resource inputs and we can't infer the shapes of the variables. The nodes need to be annotated beforehand with an attribute `_shape`. This is only a temporary solution, ideally, shape inference should handle resource inputs (similarly to how it can get shapes of the inputs when `assume_valid_feeds == true`).\r\n\r\nThis is a clone of #54591 which couldn't be merged due to CLA issues.","created_at":"2022-03-28T18:53:27Z","closed_at":"2022-03-29T01:34:54Z","merged_at":"2022-03-29T01:34:54Z","user_id":17441062,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":892059657,"title":"Increase timeout on join for preemption test","body":"The use of less powerful machines for testing can result in //tensorflow/python/distribute/failure_handling:failure_handler_test failing with an internal timeout while waiting for threads to join(). Add a timeout of 300s to override the default 200s in this case.","created_at":"2022-03-28T17:02:40Z","closed_at":"2022-04-06T23:09:10Z","merged_at":"2022-04-06T23:09:10Z","user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":892051399,"title":"[oneDNN] Softmax with oneDNN library.","body":"This PR enables softmax forward op using oneDNN library. It uses in-place computation whenever possible. It improves performance of BERT/Transformer like models wherein the softmax is used for self-attention.\r\n\r\nThe following are performance data on some micro-benchmarks and BERT inference. The performance data were collected on Intel Xeon CPUs using Eigen ThreadPool.\r\n\r\n## Microbenchmarks\r\n\r\nTensor Dims | Numeric Type | Intra-op Threads | HW | oneDNN (ns) | Eigen (ns) | Speedup\r\n-- | -- | -- | -- | -- | -- | --\r\n1x16x384x384 | FLOAT32 | 4 | Xeon 28 core | 435505 | 849837 | 1.95x\r\n16x16x384x384 | FLOAT32 | 4 | Xeon 28 core | 30608250 | 39503349 | 1.29x\r\n32x1008 | FLOAT32 | 1 | Xeon 28 core | 28455 | 33078 | 1.16x\r\n128x1008 | FLOAT32 | 1 | Xeon 28 core | 83065 | 123516 | 1.49x\r\n32x1008 | FLOAT32 | 4 | Xeon 28 core | 30585 | 32165 | 1.05x\r\n128x1008 | FLOAT32 | 4 | Xeon 28 core | 41348 | 127743 | 3.09x\r\n1x16x384x384 | BFLOAT16 | 4 | Xeon 26 core | 430448 | 867489 | 2.02x\r\n16x16x384x384 | BFLOAT16 | 4 | Xeon 26 core | 17430198 | 25598959 | 1.47x\r\n32x1008 | BFLOAT16 | 1 | Xeon 26 core | 31498 | 49853 | 1.58x\r\n128x1008 | BFLOAT16 | 1 | Xeon 26 core | 91812 | 159045 | 1.73x\r\n32x1008 | BFLOAT16 | 4 | Xeon 26 core | 29836 | 49224 | 1.65x\r\n128x1008 | BFLOAT16 | 4 | Xeon 26 core | 43047 | 122662 | 2.85x\r\n\r\n\r\nThis PR improves performance by 12% for some models that use softmax.\r\n","created_at":"2022-03-28T16:54:17Z","closed_at":"2022-03-28T21:32:33Z","merged_at":null,"user_id":27521767,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":891935796,"title":"Develop upstream sync 220328","body":"https://github.com/ROCmSoftwarePlatform/frameworks-internal/issues/1334","created_at":"2022-03-28T15:10:19Z","closed_at":"2022-03-28T15:10:38Z","merged_at":null,"user_id":8660918,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":891753436,"title":"Fix training accuracy on AArch64 in FC layers","body":"This patch fixes training accuracy on AArch64. When training on AArch64 using Compute Library as backend in oneDNN we need to inform Compute Library’s fully connected layer that weights are not constant so that they can be updated. This information now is propagated from MklDnnMatMulFwdPrimitive as a new parameter.","created_at":"2022-03-28T12:34:24Z","closed_at":"2022-03-28T17:22:45Z","merged_at":"2022-03-28T17:22:45Z","user_id":79916358,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":891681853,"title":"TFLite evaluation utils: Fix `elinux_armhf` build","body":"On `master` building the evaluation utils for `elinux_armhf` using\r\n```\r\nbazel build tensorflow/lite/tools/delegates:hexagon_delegate_provider -c opt --config=elinux_armhf\r\n```\r\nfails with\r\n```\r\nERROR: /code/tensorflow/lite/tools/delegates/BUILD:113:11: Compiling tensorflow/lite/tools/delegates/hexagon_delegate_provider.cc failed: undeclared inclusion(s) in rule '//tensorflow/lite/tools/delegates:hexagon_delegate_provider':\r\nthis rule is missing dependency declarations for the following files included by 'tensorflow/lite/tools/delegates/hexagon_delegate_provider.cc':\r\n  'tensorflow/lite/delegates/xnnpack/xnnpack_delegate.h'\r\nTarget //tensorflow/lite/tools/delegates:hexagon_delegate_provider failed to build\r\n```\r\n\r\nThis PR fixes the issue by effectively reverting 44c05422ee00000472f1abc2611ea46b3093f93f. The workaround is not needed anymore since the `elinux_armhf` XNNPACK build has been properly fixed in 4ec84aa99372ca7899fb12715edd2bfe3c947c88.\r\n\r\n/cc @terryheo","created_at":"2022-03-28T11:23:31Z","closed_at":"2022-05-16T09:09:08Z","merged_at":"2022-05-16T09:09:08Z","user_id":13285808,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":891679771,"title":"Removes third_party/mkl_dnn/onednn-acl-bf16.patch","body":"Since the release of oneDNN 2.5, the onednn-acl-bf16.patch\r\npatch is no longer required to enable bf16 for matmul and ip.","created_at":"2022-03-28T11:21:34Z","closed_at":"2022-03-28T17:16:45Z","merged_at":"2022-03-28T17:16:45Z","user_id":32057673,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":891180241,"title":"Grammar Correction","body":"Corrected \"The width the output...\" to \"The width of the output...\"","created_at":"2022-03-28T00:12:51Z","closed_at":"2022-04-05T15:24:38Z","merged_at":"2022-04-05T15:24:38Z","user_id":69980967,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":891129045,"title":"Enable pylint warnings","body":"It is quite annoying to check some warning only with the internal CI (Kokoro).\r\n\r\nThis is going to slowdown the review rate, increase reviewers noise/rounds and wasting CI cycles (as currently we cannot invoke isolated CI Linting jobs).\r\n\r\nE.g. see https://github.com/tensorflow/tensorflow/pull/55363#pullrequestreview-922485535\r\n\r\n/cc @mdanatg","created_at":"2022-03-27T20:13:40Z","closed_at":"2022-03-30T15:26:34Z","merged_at":"2022-03-30T15:26:34Z","user_id":1710528,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":890986359,"title":"[PluggableDevice] Add TF_IsRefInput","body":"This change attemps to fill some gaps in the [Kernel Extension for Variable Operations API](https://github.com/tensorflow/community/blob/master/rfcs/20210504-kernel-extension-variable-ops.md) by adding a `TF_IsRefInput` function to the pluggable device API in order to make it easier for plugins to implement operators that use ref variables. Since ref variables must be retrieved by the `TF_GetInputTensorFromVariable` function instead of `TF_GetInput`, being able to know whether an input is a normal tensor, a resource tensor or a ref tensor makes it easier for plugins to implement operators in a generic way and while reducing code duplication.","created_at":"2022-03-27T09:56:01Z","closed_at":"2022-03-30T09:10:35Z","merged_at":"2022-03-30T09:10:35Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":890961167,"title":"tanh float32 over 1.","body":"issues: https://github.com/tensorflow/tensorflow/issues/55390 [-9.0, 9.0] is too precise causing tanh function overflow \r\n in float32. \r\n","created_at":"2022-03-27T08:26:21Z","closed_at":"2022-12-22T12:30:27Z","merged_at":"2022-12-22T12:30:27Z","user_id":33950866,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":890946113,"title":"[PluggableDevice] Move Max DEVICE_DEFAULT registration outside of CUDA ifdef","body":null,"created_at":"2022-03-27T07:52:42Z","closed_at":"2022-03-28T06:22:39Z","merged_at":"2022-03-28T06:22:39Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.05}}
{"_id":890946065,"title":"[PluggableDevice] Move Min DEVICE_DEFAULT registration outside of CUDA ifdef","body":null,"created_at":"2022-03-27T07:52:38Z","closed_at":"2022-03-28T06:12:22Z","merged_at":"2022-03-28T06:12:22Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.05}}
{"_id":890911932,"title":"Fixed bug that the return value of tanh over 1 in xla .","body":"https://github.com/tensorflow/tensorflow/issues/55390","created_at":"2022-03-27T06:32:47Z","closed_at":"2022-03-27T08:23:38Z","merged_at":null,"user_id":33950866,"sentiment":{"polarity":0.1,"subjectivity":0.2}}
{"_id":890179418,"title":"[PluggableDevice] Move Unpack DEVICE_DEFAULT registration outside of CUDA ifdef","body":null,"created_at":"2022-03-26T07:53:12Z","closed_at":"2022-03-28T06:19:36Z","merged_at":"2022-03-28T06:19:36Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.05}}
{"_id":890178134,"title":"[PluggableDevice] Move ZerosLike DEVICE_DEFAULT registration outside of CUDA ifdef","body":null,"created_at":"2022-03-26T07:47:17Z","closed_at":"2022-03-28T06:26:56Z","merged_at":"2022-03-28T06:26:56Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.05}}
{"_id":890177203,"title":"[PluggableDevice] Add DEVICE_DEFAULT int32 registration for Concat and ConcatV2","body":null,"created_at":"2022-03-26T07:43:13Z","closed_at":"2022-03-28T06:31:34Z","merged_at":"2022-03-28T06:31:34Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":890176306,"title":"[PluggableDevice] Add DEVICE_DEFAULT int32 registration for Slice","body":null,"created_at":"2022-03-26T07:39:28Z","closed_at":"2022-03-28T06:16:14Z","merged_at":"2022-03-28T06:16:14Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":890171527,"title":"Print error message when failed to load external delegate.","body":"Improve error message when failed to load external TFLite delegate.\r\n\r\nBefore:\r\n```\r\nINFO: Initialized TensorFlow Lite runtime.\r\nINFO: Unable to load external delegate from : /data/local/tmp/libvx_delegate.so\r\nEXTERNAL delegate created.\r\n```\r\n\r\nAfter:\r\n```\r\nINFO: Initialized TensorFlow Lite runtime.\r\nINFO: Unable to load external delegate from : /data/local/tmp/libvx_delegate.so (dlopen failed: library \"libtim-vx.so\" not found)\r\nEXTERNAL delegate created.\r\n```","created_at":"2022-03-26T07:20:50Z","closed_at":"2023-01-19T23:26:19Z","merged_at":"2023-01-19T23:26:19Z","user_id":51623,"sentiment":{"polarity":-0.25,"subjectivity":0.19999999999999998}}
{"_id":890165974,"title":"[PluggableDevice] Add DEVICE_DEFAULT int32 registration for strided slice ops","body":null,"created_at":"2022-03-26T06:59:43Z","closed_at":"2022-04-20T17:40:49Z","merged_at":null,"user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":890154994,"title":"[PluggableDevice] Add DEVICE_DEFAULT int32 registration for Pack","body":null,"created_at":"2022-03-26T06:33:56Z","closed_at":"2022-03-28T06:09:52Z","merged_at":"2022-03-28T06:09:52Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":890092971,"title":"Add error handling to TF_GetInputTensorFromVariable","body":null,"created_at":"2022-03-26T02:47:30Z","closed_at":"2022-04-01T12:03:58Z","merged_at":"2022-04-01T12:03:58Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":890086873,"title":"Add TF_AssignRefVariable","body":"The [Kernel Extension for Variable Operations API](https://github.com/tensorflow/community/blob/master/rfcs/20210504-kernel-extension-variable-ops.md) added pluggable device support for resource variables and incomplete support for ref variables (`TF_OpKernelContext_ForwardRefInputToRefOutput`), but it misses one endpoint to make ref variables usable: `TF_AssignRefVariable`.\r\n\r\nThis change attempts to fill the gaps in the RFC by adding `TF_AssignRefVariable`, which is analogous to `TF_AssignVariable` but for ref variables instead of resource variables. It uses the same semantics where the user has to pass a copy function to be called when copying the value tensor to the ref tensor.","created_at":"2022-03-26T02:31:34Z","closed_at":"2022-04-04T16:17:03Z","merged_at":"2022-04-04T16:17:03Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":889875429,"title":"Update the RBE images to the latest container versions","body":"This PR was created by a GitHub Actions workflow to update all the SIG Build-based RBE containers to the most recent containers. See:\n\n- https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/toolchains/remote_config/configs.bzl\n- https://github.com/tensorflow/tensorflow/blob/master/.github/workflows/update-rbe.yml","created_at":"2022-03-25T20:19:59Z","closed_at":"2022-03-25T21:20:01Z","merged_at":"2022-03-25T21:20:00Z","user_id":16359713,"sentiment":{"polarity":0.5,"subjectivity":0.9}}
{"_id":888909853,"title":"removing tpu_executor_dlsym_initializer ","body":null,"created_at":"2022-03-24T22:40:20Z","closed_at":"2022-04-12T21:17:25Z","merged_at":null,"user_id":7341711,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":888789872,"title":"Update GPU details for ctc_loss","body":"Updated GPU details for ctc_loss which supports dense padded labels and SparseTensor.\r\nCloses #55290 ","created_at":"2022-03-24T19:57:42Z","closed_at":"2022-09-02T05:08:00Z","merged_at":"2022-09-02T05:08:00Z","user_id":73069040,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":888448879,"title":"[Autograph] add min max builtins","body":"This will try to add min/max builtins in Autograph.\n\n/cc @mdanatg ","created_at":"2022-03-24T14:29:14Z","closed_at":"2022-04-08T02:40:27Z","merged_at":"2022-04-08T02:40:26Z","user_id":1710528,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":888158740,"title":"Add error handling to TF_GetInputTensorFromVariable","body":null,"created_at":"2022-03-24T09:54:24Z","closed_at":"2022-03-24T10:39:44Z","merged_at":null,"user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":887863284,"title":"\"lengh\" -> \"length\"","body":"Fix tiny typo","created_at":"2022-03-24T02:30:36Z","closed_at":"2022-03-28T16:04:17Z","merged_at":null,"user_id":444769,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":887840037,"title":"[oneDNN] Upgrade oneDNN to 2.6-rc","body":"Update oneDNN from 2.5.1 to 2.6-rc","created_at":"2022-03-24T01:32:38Z","closed_at":"2022-03-25T23:12:17Z","merged_at":"2022-03-25T23:12:17Z","user_id":43043975,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":887830230,"title":"[TF-TRT] Slice OP BugFix","body":"@bixia1 for review\r\n\r\nThis PR fixes a bug where TF-TRT rejects a Slice OP in the conversion phase instead of the validation phase","created_at":"2022-03-24T01:08:14Z","closed_at":"2022-03-31T22:50:17Z","merged_at":"2022-03-31T22:50:17Z","user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":887776042,"title":"Update oneDNN version for mkl_dnn_acl_compatible.","body":"Updates the mkl_dnn_acl_compatible for oneDNN 2.6.","created_at":"2022-03-23T23:06:39Z","closed_at":"2022-03-26T00:45:35Z","merged_at":"2022-03-26T00:45:35Z","user_id":32057673,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":887668456,"title":"Integrating cuBLASLt into XLA","body":"Adds support for the cuBLASLt library for GEMM operations to XLA. The library can be activated by setting the XLA flag `xla_gpu_enable_cublaslt=true`.\r\n\r\nAttn: @SandSnip3r","created_at":"2022-03-23T20:36:23Z","closed_at":"2022-04-04T21:52:20Z","merged_at":"2022-04-04T21:52:20Z","user_id":80296164,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":887642598,"title":"Fix pfor defunc issue","body":"This is trying to fix the indirect defunc case with a vectorized_map","created_at":"2022-03-23T20:09:34Z","closed_at":"2022-03-30T18:38:47Z","merged_at":"2022-03-30T18:38:47Z","user_id":1710528,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":886648773,"title":"fix typos","body":"I hope it helps.","created_at":"2022-03-23T01:01:44Z","closed_at":"2022-03-29T18:32:59Z","merged_at":"2022-03-29T18:32:59Z","user_id":23271922,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":886527526,"title":"[TF-TRT] Make TF-TRT respect TF32 ON/OFF TF Flag","body":"@bixia1 for review.\r\n\r\nAllow TF-TRT to respect TensorFlow flag for disable/enable TF32","created_at":"2022-03-22T21:25:06Z","closed_at":"2022-03-29T23:48:11Z","merged_at":"2022-03-29T23:48:11Z","user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":886496111,"title":"[TF-TRT] Add support for non-frozen models with legacy reference variables (VariableV2)","body":"This is the first step of upstreaming full support of non-frozen models in TF-TRT (in order to avoid the 2GB Protobuf limit that prevents freezing large models). We start with reference variables because it is a smaller change than resource variables.\r\n\r\nThis PR adds:\r\n\r\n- A `VariableV2` converter that outputs weights (i.e for TRT it is similar to a constant)\r\n- An environment variable to disable freezing (cf #55332)\r\n- A Python integration test and a C++ unit test","created_at":"2022-03-22T20:48:44Z","closed_at":"2022-06-06T16:11:47Z","merged_at":"2022-06-06T16:11:47Z","user_id":17441062,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":886344249,"title":"[TF-TRT] Fix `quantization_ops_test` build error","body":"@bixia1 for review\r\n\r\nThis PR fixes a dependency bug introduced by #53082","created_at":"2022-03-22T17:58:48Z","closed_at":"2022-03-25T13:46:53Z","merged_at":"2022-03-25T13:46:53Z","user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":886314644,"title":"[TF-TRT] Adding `TF_TRT_EXPERIMENTAL_FEATURES` environment variable controller","body":"This PR adds the APIs to query if an experimental feature is activated and the test utility necessary to test these features.\r\nExample: `TF_TRT_EXPERIMENTAL_FEATURES=feature_name1,feature_name2`","created_at":"2022-03-22T17:27:38Z","closed_at":"2022-04-12T16:09:16Z","merged_at":"2022-04-12T16:09:16Z","user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":886275385,"title":"Fix nondeterminstic crash when initializing xnnpack tensors","body":null,"created_at":"2022-03-22T16:49:59Z","closed_at":"2022-12-16T22:05:17Z","merged_at":null,"user_id":8881667,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":885495317,"title":"[TF-TRT] Remove dependency on einsum kernel","body":"Previously, TF-TRT op converter for einsum used a helper function from the actual einsum kernel implementation in `tensorflow/core/kernels/linalg/einsum_op_impl.h` and had a dependency on einsum_op. This PR moves the helper function (`ParseEquation`) to `tensorflow/core/util/einsum_op_util.h` and remove such a dependency.\r\n\r\nThis change makes both the einsum kernel and TF-TRT more modular, which is helpful if we want to move either of them to a separate binary (dynamic kernel library for example).\r\n\r\nSummary of changes:\r\n* Rename `ParseEinsumEquation()` to `ValidateEinsumEquation()` in  `tensorflow/core/utils/einsum_op_util.h`\r\n* Rename `EinsumHelper::ParseEquation()` to  `ParseEinsumEquation()` and move from `tensorflow/core/kernels/linalg/einsum_kernel_impl.h` to `tensorflow/core/utils/einsum_op_util.h`.\r\n* Update TF-TRT to use new `ParseEinsumEquation()` in `tensorflow/core/utils/einsum_op_util.h` and remove dependency on `tensorflow/core/kernels/linalg/einsum_kernel_impl.h`.\r\n* Rename `EinsumHelper::DimensionType` to `EinsumDimensionType`.\r\n","created_at":"2022-03-22T01:24:25Z","closed_at":"2022-03-30T19:41:08Z","merged_at":"2022-03-30T19:41:08Z","user_id":12981474,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":885477969,"title":"Refactoring of the converter for Activation operators.","body":"This PR Refactors the converter for Activation operators. It also replaces the special implemented converters for `Relu6` and `LeakyRelu`  operator with the activation operator implementation.\r\n\r\nAdd a new check and corresponding subtests for Validation: at least 1 dimension is required for input of any Activation operation.","created_at":"2022-03-22T00:42:48Z","closed_at":"2022-04-22T17:54:29Z","merged_at":null,"user_id":32910461,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":885388893,"title":"2","body":"workflows","created_at":"2022-03-21T22:32:27Z","closed_at":"2022-03-22T17:43:56Z","merged_at":null,"user_id":80124251,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":885367577,"title":"Default EQUALITY_OPERATORS in Autograph","body":"fix https://github.com/tensorflow/tensorflow/issues/55278\r\n\r\n/cc @mdanatg  Let me know where do you want to move the test so that I write it like an integration test as where is now it will go to fail for missing variable conversion (`ag__.ld`).","created_at":"2022-03-21T22:07:03Z","closed_at":"2022-04-04T20:05:50Z","merged_at":null,"user_id":1710528,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":885324662,"title":"Fix eigen's headers to use 'std' instead of Eigen::internals","body":"A recent commit on Eigen replaced many type metaprogramming with corresponding std types.\r\nhttps://gitlab.com/libeigen/eigen/-/commit/421cbf08660fdf9458ea64ca6ceb197e75c6e698\r\n\r\nThis patch prepares the code to build properly when the Eigen commit id is updated.","created_at":"2022-03-21T21:17:35Z","closed_at":"2022-04-13T16:31:31Z","merged_at":"2022-04-13T16:31:31Z","user_id":2990132,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":885144743,"title":"[oneDNN] bug fix in optimize_for_inference","body":"For some model, I see this error :\r\ntensorflow/python/tools/optimize_for_inference_lib.py\", line 341, in fold_batch_norms\r\nmean_value = mean_value - values_from_const(bias)\r\nValueError: operands could not be broadcast together with shapes (0,) (96,)\r\n\r\nWith the fix in this PR, I am checking the values before using them. If the shapes don't match, it will now throw a warning & continue. \r\nThis will make sure optimize_for_inference doesn't crash & other optimizations are effective.\r\n","created_at":"2022-03-21T18:00:33Z","closed_at":"2022-07-22T05:44:40Z","merged_at":"2022-07-22T05:44:40Z","user_id":42224728,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":884930482,"title":"Avoid loss of precision from using reciprocal","body":"Taking the reciprocal of the calculated value results in a loss of precision. This causes the unit test prepare-tf.mlir.test to fail on AARCH64. So instead of taking the reciprocal of the calculated nudged_scale to get the inv_nudged_scale, calculate this value from the input values.","created_at":"2022-03-21T14:49:33Z","closed_at":"2022-03-28T06:06:12Z","merged_at":"2022-03-28T06:06:12Z","user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":884552019,"title":"Ppc build fix","body":null,"created_at":"2022-03-21T08:45:07Z","closed_at":"2022-04-05T23:47:08Z","merged_at":"2022-04-05T23:47:08Z","user_id":14196089,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":884137321,"title":"Update BUILD","body":null,"created_at":"2022-03-20T09:56:26Z","closed_at":"2022-03-21T21:36:45Z","merged_at":null,"user_id":97528629,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":884118100,"title":"Applearning","body":null,"created_at":"2022-03-20T07:51:03Z","closed_at":"2022-03-21T21:43:02Z","merged_at":null,"user_id":80124251,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":883789683,"title":"Update the RBE images to the latest container versions","body":"Automated PR created once per week to get the latest Docker images.\nSee https://github.com/tensorflow/tensorflow/blob/master/.github/workflows/update-rbe.yml","created_at":"2022-03-18T20:51:56Z","closed_at":"2022-03-19T00:04:41Z","merged_at":"2022-03-19T00:04:41Z","user_id":16359713,"sentiment":{"polarity":0.5,"subjectivity":0.9}}
{"_id":883715885,"title":"Update the RBE images to the latest container versions","body":"Automated PR created once per week to get the latest Docker images.\nSee https://github.com/tensorflow/tensorflow/blob/master/.github/workflows/update-rbe.yml","created_at":"2022-03-18T18:56:13Z","closed_at":"2022-03-18T19:36:27Z","merged_at":null,"user_id":16359713,"sentiment":{"polarity":0.5,"subjectivity":0.9}}
{"_id":883655056,"title":"[oneDNN] Fix gru_v2_test_gpu and layer_correctness_test_gpu tests","body":"Add device check to make sure the fusions available for oneDNN only happen for CPU.","created_at":"2022-03-18T17:31:48Z","closed_at":"2022-03-30T05:41:39Z","merged_at":"2022-03-30T05:41:39Z","user_id":42224278,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":883056895,"title":"Simplify the DoPoolForward/Backward","body":"This PR simplifies the code base for the pooling ops by following the style set by the `DoConvolve()`. This can also help reducing the duplicate code for our ongoing PR that supports big tensors.\r\n\r\ncc. @nluehr ","created_at":"2022-03-18T02:35:10Z","closed_at":"2022-04-07T21:07:32Z","merged_at":"2022-04-07T21:07:32Z","user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":883055936,"title":"Implemented RaggedTensor.from_sparse for multi-dimensional SparseTensor","body":"Implemented a more general version of `RaggedTensor.from_sparse`, now allowing conversion from multi-dimensional `SparseTensor`s to `RaggedTensors`.\r\n\r\nTo compare the performance with the original implementation specifically for the case of 2D sparse matrices, I simulated a random (1000, 1000) sparse tensor, with 50% sparsity. Under eager mode, the run time for the original implementation is 17.1  ms +/- 589 us, and the new implementation is 15.4 ms +/- 420 us. The performance wasn't worse.","created_at":"2022-03-18T02:33:26Z","closed_at":"2022-03-24T01:09:37Z","merged_at":null,"user_id":3713023,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":882835767,"title":"Converter for LogicalOr and LogicalAnd operations","body":"Implement  converters for LogicalOr and LogicalAnd operations.","created_at":"2022-03-17T20:06:42Z","closed_at":"2022-04-08T05:46:59Z","merged_at":null,"user_id":32910461,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":882706784,"title":"Add necessary check in fft ops to fix crash","body":"This PR tries to address the issue raised in #55263 where\r\ntf.single.rfft2d will crash when length contains negative value.\r\n\r\nThis PR fixes #55263\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2022-03-17T17:51:27Z","closed_at":"2022-03-23T14:56:16Z","merged_at":"2022-03-23T14:56:15Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":1.0}}
{"_id":882690808,"title":"EIGEN_DEVICE_FUNC annotation cleanup","body":"Fix some compiler warnings, and reduce chance of future bugs being introduced where device functions call host-only functions.","created_at":"2022-03-17T17:33:01Z","closed_at":"2022-05-06T19:03:48Z","merged_at":"2022-05-06T19:03:48Z","user_id":1873655,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":882620321,"title":"Enabling Bazelisk to be used when Bazel is not present during install build from source","body":"Update Configure.py @55218, Last commit failed at CICD for seemly unrelated issue. This patch is just to re run the same CICD and validate","created_at":"2022-03-17T16:28:43Z","closed_at":"2022-03-29T18:52:17Z","merged_at":"2022-03-29T18:52:16Z","user_id":5415574,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":882534977,"title":"Update literal_comparison.h - Returns a comparison function","body":"Returns a comparison function using the provided key function on each value","created_at":"2022-03-17T15:01:30Z","closed_at":"2022-07-18T18:20:33Z","merged_at":null,"user_id":4949778,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":882387311,"title":"[ROCm] Correcting the output size for the RFFT call in `//tensorflow/compiler/xla/service/gpu/tests:mlir_fft_test`","body":"The `//tensorflow/compiler/xla/service/gpu/tests:mlir_fft_test` was added via this commit https://github.com/tensorflow/tensorflow/commit/58740928fff82a6193a6cc89f09b732e061764c7\r\n\r\nThe test\r\n* calls RFFT transform on an input buffer of type `4 x f32` with values `[1,0,1,0]`\r\n* expects the resulting output buffer to be of type `4 x complex<f32>` ... this is incorrect\r\n\r\nThe correct size for the output buffer should be `3 x complex<f32>`.  This can be verfied via numpy doc and example\r\n\r\nFrom https://numpy.org/doc/stable/reference/generated/numpy.fft.rfft.html\r\n\r\n```\r\n...\r\nReturns\r\n\r\n    out : complex ndarray\r\n\r\n        The truncated or zero-padded input, transformed along the axis indicated by axis,\r\n\tor the last one if axis is not specified.\r\n\r\n\tIf n is even, the length of the transformed axis is (n/2)+1.\r\n\tIf n is odd, the length is (n+1)/2.\r\n...\r\n```\r\n\r\nIn the testcase n is 4, and hence output size should be 4/2 + 1 = 3\r\n\r\nnp version on testcase\r\n\r\n```\r\n# python3 -c \"import numpy as np; print (np.fft.rfft([1,0,1,0]))\"\r\n[2.+0.j 0.+0.j 2.+0.j]\r\n```\r\n\r\nThe incorrect output size was causing this test to fail on ROCm (elems 7 & 8 had junk data and hence mismatching)\r\n\r\nThis commit updates to testcase to have the correct return size, and now the test passes on the ROCm platform\r\n\r\n-----------------------\r\n\r\n\r\n/cc @cheshire @chsigg ","created_at":"2022-03-17T12:00:36Z","closed_at":"2022-03-28T07:57:27Z","merged_at":"2022-03-28T07:57:27Z","user_id":36858332,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":882241773,"title":"[tflite] replace non-ASCII single quote","body":"Non-ASCII single quotes prevent the code from successful\r\ncompilation on windows 10 + vs 2019 + msys2","created_at":"2022-03-17T09:18:25Z","closed_at":"2022-08-25T23:41:39Z","merged_at":null,"user_id":3395998,"sentiment":{"polarity":-0.07142857142857142,"subjectivity":0.21428571428571427}}
{"_id":881856073,"title":"Update Compute Library to version 22.02","body":"This PR updates the Compute Library verion from 21.11 to 22.02 and updates the build to supports Arm-v8 in addition to Arm-v8.2a and above.","created_at":"2022-03-16T22:19:37Z","closed_at":"2022-03-18T17:08:25Z","merged_at":"2022-03-18T17:08:25Z","user_id":32057673,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":881697511,"title":"[INTEL oneDNN] Resubmitting scratch pad optimization for matmul primitive : PR number :54381","body":"This PR has changes from PR [54381 ](https://github.com/tensorflow/tensorflow/pull/54381)(reverted back) + fix for Windows build failure.\r\nChanges to add user scratch pad for matmul primitive to fix OOM issue in Transformer LT.\r\n\r\nThis reduces memory footprint of the primitive. It fixes an out of memory issue when running Transformer LT with multiple instances and total thread count is large. Managing scratch pad for the primitive from the framework, fixes the out of memory issue, reduces memory footprint and does not affect performance. The changes :\r\nCreates a new struct that hold the Tensor for scratch pad arg.\r\nAllocates memory based on scratch pad size queried from primitive description.\r\nSets user scratch pad in post ops for the primitive.","created_at":"2022-03-16T18:55:44Z","closed_at":"2022-03-25T18:30:42Z","merged_at":"2022-03-25T18:30:42Z","user_id":14943401,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":881616685,"title":"Remove calls to `rules_cc_toolchains`","body":"There was a previous plan was to move Bazel toolchain configuration to\r\n`@rules_cc`, but that plan isn't progressing and `@rules_cc` is\r\ncurrently just an outdated copy of the toolchain configuration\r\nmechanism. Amongst other issues, the outdated copy does not support\r\n`layering_check`. The Bazel team recommended removing this override.\r\nSee https://github.com/bazelbuild/bazel/issues/15004","created_at":"2022-03-16T17:18:56Z","closed_at":"2022-03-22T20:18:24Z","merged_at":"2022-03-22T20:18:24Z","user_id":5732088,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":881297136,"title":"Updates Error log in  `subprocess.cc`","body":"Updated Error log as per Author's suggestion in  #48089","created_at":"2022-03-16T12:25:33Z","closed_at":"2022-03-25T15:50:18Z","merged_at":"2022-03-25T15:50:18Z","user_id":86464649,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":881241758,"title":"Allow some tolerance in equality test by using EXPECT_FLOAT_EQ","body":"Float values on AARCH64 fail the plain EXPECT_EQ check with a difference of 1.42109e-14 which is negligible so use the more tolerant EXPECT_FLOAT_EQ form instead.","created_at":"2022-03-16T11:25:26Z","closed_at":"2022-03-23T13:54:49Z","merged_at":"2022-03-23T13:54:49Z","user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":881059586,"title":"Add mhlo.transpose splat constant folding","body":"This PR is for splat constant folding.  \r\nShould we fold a nonsplat constant? (need to manipulate constant's value)","created_at":"2022-03-16T08:15:40Z","closed_at":"2022-06-09T00:56:46Z","merged_at":"2022-06-09T00:56:46Z","user_id":29956693,"sentiment":{"polarity":0.0,"subjectivity":0.3333333333333333}}
{"_id":880833589,"title":"[conv3d_transpose] Fix dim check for bias","body":"Per discussion with @thaink in https://github.com/tensorflow/tensorflow/commit/38a77f4bc1c897c75560a0beb53426f20b883f6e#r68775543 , the previous way to do the dim check for bias is not correct. So, we need this change.","created_at":"2022-03-16T01:00:14Z","closed_at":"2022-03-21T13:18:04Z","merged_at":"2022-03-21T13:18:04Z","user_id":9998726,"sentiment":{"polarity":0.1,"subjectivity":0.5}}
{"_id":880794971,"title":"[TF-TRT] Einsum debug message moved to VLOG(2)","body":"@bixia1 \r\n\r\nCleanup logging","created_at":"2022-03-15T23:41:21Z","closed_at":"2022-03-16T22:33:55Z","merged_at":"2022-03-16T22:33:55Z","user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":880483280,"title":"Refactoring of the Converter for Binary Operations","body":"Refactor converters and tests for binary operations to prepare for the implementation of the converter for `LogicalOr` and `LogicalAnd` operations.","created_at":"2022-03-15T18:17:22Z","closed_at":"2022-03-28T17:16:46Z","merged_at":"2022-03-28T17:16:46Z","user_id":32910461,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":880472088,"title":"Updating config.py fixes #55218","body":"Updating config.py fixes #55218","created_at":"2022-03-15T18:04:20Z","closed_at":"2022-03-29T14:16:18Z","merged_at":null,"user_id":5415574,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":880202481,"title":"Updating config.py for #55218","body":"#55218 Updating config.py for #55218,\r\nAccommodating PyLint #1555","created_at":"2022-03-15T13:45:50Z","closed_at":"2022-03-29T14:17:36Z","merged_at":null,"user_id":5415574,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":880164626,"title":"Fix to enable mlir unit tests to run with BEF thunk/executable.","body":"The //tensorflow/compiler/xla/service/gpu/tests:mlir_gemm_test test was not running on BEF thunk when it was specified as such.\r\n\r\nThe reason is that it was ignoring XLA_FLAGS=--xla_gpu_bef_thunk.\r\n\r\nThese changes should fix that.\r\n\r\n/cc @chsigg @hanbinyoon","created_at":"2022-03-15T13:09:54Z","closed_at":"2022-03-24T18:25:00Z","merged_at":"2022-03-24T18:25:00Z","user_id":70280935,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":879734856,"title":"[INTEL oneDNN] user mode scratchpad implementation for inner-product","body":"Enable user mode scratchpad for inner-product (matmul fused & quantized matmul) for better memory usage control.\r\n\r\nNote: code change with mkl_util.h is NOT needed once PR\r\n\r\n  https://github.com/tensorflow/tensorflow/pull/55256\r\n\r\nis merged.","created_at":"2022-03-15T04:03:12Z","closed_at":"2022-03-29T00:22:05Z","merged_at":null,"user_id":29215195,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":879705249,"title":"[INTEL oneDNN] user mode scratchpad implementation for conv op","body":"Enable user mode scratchpad for conv ops (2d, 3d, etc) for better memory usage control.\r\n\r\nNote: code change with mkl_util.h is NOT needed once PR\r\n\r\n  https://github.com/tensorflow/tensorflow/pull/55256\r\n\r\nis merged.","created_at":"2022-03-15T02:53:05Z","closed_at":"2022-03-25T23:49:45Z","merged_at":"2022-03-25T23:49:44Z","user_id":29215195,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":879558437,"title":"Enhancements to allow BEF unit tests to work on CUDA and ROCm.","body":"In the BEF config, it is necessary to specify CUDA stubs to make it work for ROCm.\r\n\r\nIf there is a better way to do this so that we can avoid a doubling of things in .bazelrc for CUDA and ROCm, please let me know.\r\n\r\n/cc @chsigg @hanbinyoon ","created_at":"2022-03-14T21:52:08Z","closed_at":"2022-03-16T09:09:22Z","merged_at":"2022-03-16T09:09:22Z","user_id":70280935,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":879534306,"title":"[ROCm] Fixes for vector data type collision in BEF thunk for ROCm.","body":"/cc @chsigg @cheshire @jurahul ","created_at":"2022-03-14T21:25:12Z","closed_at":"2022-03-23T18:10:48Z","merged_at":"2022-03-23T18:10:48Z","user_id":70280935,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":879469292,"title":"Fix softmax bug for ragged tensors","body":"The current implementation of softmax for ragged tensors is numerically unstable. In particular, the `exp()` function is computed on the raw logits. This causes an overflow when the logits are large positive. When the logits are large negative, this leads to an underflow and division by zero. The problem manifests through `nan` entries in the ragged tensor.\r\n\r\nIn this PR I (hopefully) fix the ragged tensor implementation and implement a corresponding test.\r\n\r\nFor reference of a numerically stable implementation, consider the [numpy implementation](https://github.com/maresb/tensorflow/blob/8e75354bae33d10bd43091534ed5e1c1062d85db/tensorflow/python/ops/nn_test.py#L97-L104) in the test suite.\r\n\r\n(Recall that the softmax function is invariant under adding an overall constant to the input logits. Before applying `exp()` it is advantageous to subtract the max so that one logit component is zero and the rest are negative. This ensures that the denominator is numerically finite.)","created_at":"2022-03-14T20:08:23Z","closed_at":"2022-05-30T14:55:10Z","merged_at":"2022-05-30T14:55:10Z","user_id":15216687,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":879337669,"title":"Converter for LogicalNot operation","body":"- Converter for LogicalNot operation is using the same base class (`ConvertUnaryImpl`) as other Unary operations. \r\n- The special converter for `Rsqrt\r\n` was removed and now for this operation regular Unary Op converter is used.\r\n- New templated class implemented for testing `ConvertUnary`, `ConvertBooleanUnary`, `ConvertActivation`.\r\n- A new check and corresponding subtests were added to Validate: at least 1 dimension is required for input of any `Unary` and `UnaryBoolean` operation. (Similar subtest for `ConvertActivation` operations is blocked and after refactoring of `ConvertActivation` it will be activated)\r\n","created_at":"2022-03-14T17:34:37Z","closed_at":"2022-03-29T16:07:44Z","merged_at":null,"user_id":32910461,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":879278401,"title":"Add zero point check for kTfLiteInt16 and scale check for multiple operators","body":"Hello, have added zero point checks and scale checks to the following operators\r\n- arg_min_max.cc\r\n- gather.cc\r\n- gather_nd.cc\r\n- mul.cc\r\n- pack.cc\r\n- pad.cc\r\n- pooling.cc\r\n- resize_bilinear.cc\r\n- resize_nearest_neighbor.cc \r\n- select.cc\r\n- slice.cc\r\n- transpose.cc\r\n- unpack.cc","created_at":"2022-03-14T16:34:48Z","closed_at":"2022-03-16T10:33:40Z","merged_at":null,"user_id":63923521,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":879063358,"title":"Minor fix to mlir function name symbol lookup for BEF lowering.","body":"/cc @chsigg @cheshire @jurahul ","created_at":"2022-03-14T13:30:55Z","closed_at":"2022-03-16T09:21:05Z","merged_at":"2022-03-16T09:21:05Z","user_id":70280935,"sentiment":{"polarity":-0.05,"subjectivity":0.2}}
{"_id":878832441,"title":"Fix invalid examples for `tf.RaggedTensor.__abs__`","body":"This PR tries to address the issue raised in [#53828](https://github.com/tensorflow/tensorflow/issues/53828) where\r\ntf.tensor Examples was added to tf.RaggedTensor __abs__\r\nReplacing the tensor examples with tf.RaggedTensor examples\r\nThis PR fixes [#53828](https://github.com/tensorflow/tensorflow/issues/53828).","created_at":"2022-03-14T09:42:10Z","closed_at":"2022-09-09T01:01:26Z","merged_at":null,"user_id":99852755,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":878758009,"title":"fix: incorrect sample_weight pass to metric_obj.update_state","body":"Should pass `sw` to metric_obj.update_state, or the sample_weight from test_step will not be used when metric_obj.update_state.","created_at":"2022-03-14T08:19:39Z","closed_at":"2022-03-14T08:28:12Z","merged_at":null,"user_id":68363665,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":878497785,"title":"Update config.py to fix ##55218","body":"Update config.py to fix ##55218","created_at":"2022-03-13T23:23:15Z","closed_at":"2022-03-29T14:17:53Z","merged_at":null,"user_id":5415574,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":878068429,"title":"Fix invalid input for `tf.gather_nd` with `batch_dims`","body":"This PR tries to address the issue raised in #55203 where\r\ninvalid batch_dim (bool) was passed to  tf.gather_nd\r\nwith error output returned silently.\r\nThe reason was that `int()` was applied incorrectly, which always cast\r\nany value to integer.\r\nThis PR fixes #55203.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2022-03-12T02:45:12Z","closed_at":"2022-09-09T01:01:24Z","merged_at":null,"user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":877682255,"title":"Saving Resource Variables without Copy","body":"Provides a solution for the increase in memory usage when saving models with large sparsely accessed resource variables by avoiding the copying of the variables. The kernel of `ReadVariableOp` is modified to convert variables that were sparsely accessed from copy-on-read mode to copy-on-write mode under an exclusive lock. The conversion is disabled in the default setting and only occurs when the Python function `_read_variable_op` is called from class `ResourceVariableSaveable` during the saving of resource variables.\r\n\r\nSee issue [#54104](https://github.com/tensorflow/tensorflow/issues/54105).","created_at":"2022-03-11T17:55:11Z","closed_at":"2022-04-08T21:38:48Z","merged_at":"2022-04-08T21:38:48Z","user_id":80296164,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":877657442,"title":"QAT model conversion adds extra RESHAPE layers compared to PTQ","body":"Hello,\r\n\r\nWhen converting a QAT FullyConnected model to TFLite, the Reshape layers before and after the FullyConnected layer remain. This is due to the fact that there are Quant/Dequant stat nodes before and after the Reshapes therefore the patterns do not match.\r\nThe solution to this is to run  the CreateOptimizePass after the Quantization passes.\r\nAdded test to verify this.\r\n\r\nCode to reproduce: \r\n```\r\nimport tensorflow as tf\r\nimport tensorflow_model_optimization as tfmot\r\n\r\ninp = tf.keras.Input(shape=(8, 4), batch_size=1)\r\nout = tf.keras.layers.Dense(16)(inp)\r\nmodel = tf.keras.Model(inp,out)\r\n\r\ndef representative_dataset():\r\n    for _ in range(100):\r\n        yield [tf.random.uniform(shape=(1, 8, 4))]\r\n\r\nconverter = tf.lite.TFLiteConverter.from_keras_model(model)\r\nconverter.optimizations = [tf.lite.Optimize.DEFAULT]\r\nconverter.representative_dataset = representative_dataset\r\nconverter.target_spec.supported_ops = [tf.lite.OpsSet.TFLITE_BUILTINS_INT8]\r\nconverter.inference_input_type = tf.int8\r\nconverter.inference_output_type = tf.int8\r\ntflite_model = converter.convert()\r\nwith open('./dense_ptq.tflite', 'wb') as f:\r\n    f.write(tflite_model)\r\n\r\ntf.keras.backend.clear_session()\r\n\r\ninp = tf.keras.Input(shape=(8, 4), batch_size=1)\r\nout = tfmot.quantization.keras.quantize_annotate_layer(tf.keras.layers.Dense(16))(inp)\r\nmodel = tfmot.quantization.keras.quantize_apply(tf.keras.Model(inp,out))\r\n\r\nconverter = tf.lite.TFLiteConverter.from_keras_model(model)\r\nconverter.optimizations = [tf.lite.Optimize.DEFAULT]\r\nconverter.inference_input_type = tf.int8\r\nconverter.inference_output_type = tf.int8\r\ntflite_model = converter.convert()\r\nwith open('./dense_qat.tflite', 'wb') as f:\r\n    f.write(tflite_model)\r\n```\r\nModel produced: \r\n![image-2021-12-08-09-57-17-159](https://user-images.githubusercontent.com/44364573/157916054-36d8404f-1e91-4f4d-8606-02db189b586d.png)","created_at":"2022-03-11T17:21:50Z","closed_at":"2022-08-04T22:37:48Z","merged_at":null,"user_id":44364573,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":877614778,"title":"Minor fix in XLIR gated code region of gpu_compiler.","body":"/cc @chsigg @cheshire @jurahul ","created_at":"2022-03-11T16:30:38Z","closed_at":"2022-03-12T16:30:56Z","merged_at":null,"user_id":70280935,"sentiment":{"polarity":-0.05,"subjectivity":0.2}}
{"_id":877457451,"title":"Test to cover the `import_meta_graph` error on MutableHashTable","body":"https://github.com/tensorflow/tensorflow/issues/24439\r\n\r\nAs this wasn't fixed since 2018 I think it is better to cover it with a test.","created_at":"2022-03-11T13:51:38Z","closed_at":"2022-04-08T17:19:34Z","merged_at":"2022-04-08T17:19:34Z","user_id":1710528,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":876976153,"title":"[TF-TRT] Add engine device to `converter.summary()`","body":"This PR adds the TRTEngineOP device to the `converter.summary()` report.","created_at":"2022-03-11T00:52:17Z","closed_at":"2022-03-21T17:48:45Z","merged_at":"2022-03-21T17:48:45Z","user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":876580889,"title":"[oneDNN] Fix to some benchmark tests when GPU is not available","body":"Currently, the following test `//tensorflow/core/kernels:nn_ops_test_cpu` has GPU related tests that need to be skipped. This PR fixes two issues on CPU with the current benchmark test:\r\n\r\n1. A plain `return` statement in the benchmark function does not truly return, rather the system remains unresponsive.  So `state.SkipWithError(..)` is added in this PR for truely skipping the test when GPU is not available.\r\n\r\n2. Some of the benchmark tests missed the skipping code when GPU is not available. This PR fixes those cases.","created_at":"2022-03-10T16:06:38Z","closed_at":"2022-04-05T14:21:07Z","merged_at":"2022-04-05T14:21:07Z","user_id":27521767,"sentiment":{"polarity":-0.2,"subjectivity":0.4}}
{"_id":876415779,"title":"Add a root cause arg to the fallback converter","body":"Please check https://github.com/keras-team/keras-cv/pull/146#issuecomment-1063974863\r\n\r\nAny improvement feedback on the `root_cause` message description and fix hints to the developer is appreciated.\r\n\r\nSide note: I am going to \"abuse\" the CI here a little bit as I'am not compiling and testing this locally cause the build overhead on every PR with the daily [LLVM updates](https://discuss.tensorflow.org/t/llvm-updates-and-bazel-cache/2060) and cause [I cannot use the nightly remote cache](https://github.com/tensorflow/build/issues/72)","created_at":"2022-03-10T13:31:07Z","closed_at":"2022-04-05T14:28:07Z","merged_at":"2022-04-05T14:28:07Z","user_id":1710528,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":876382671,"title":"split and fix exception message corresponding to each condition","body":"The message does not reflect the entire condition. Giving a more specific message to each part of the condition is more accurate.","created_at":"2022-03-10T13:01:18Z","closed_at":"2022-03-25T15:54:37Z","merged_at":"2022-03-25T15:54:37Z","user_id":61057090,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":875224128,"title":"[oneDNN] Fuse conv2d+biasAdd/FusedBatchNorm+sigmoid+mul into fusedConv2D","body":"This PR fuses following patterns into FusedConv2D for oneDNN backend :\r\na) Conv2d + BiasAdd + Sigmoid + Mul\r\nb) Conv2d + FusedBatchNorm/V2/V3 + Sigmoid + Mul\r\n\r\nThis fusion shows up to 15% improvement for models with above patterns.","created_at":"2022-03-09T11:56:36Z","closed_at":"2023-01-04T19:07:14Z","merged_at":"2023-01-04T19:07:14Z","user_id":43043975,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":874907722,"title":"[TF:TRT] Update test helpers to handle bool tensors and weights","body":"Enable the handling of bool tensors for TF-TRT test helper subroutines.\r\n","created_at":"2022-03-09T04:39:04Z","closed_at":"2022-03-22T11:26:13Z","merged_at":null,"user_id":32910461,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":874891016,"title":"Fix out size eqn in atrous_conv2d doc","body":"The following code can be found in [this colab notebook](https://colab.research.google.com/drive/1g9FNR-3g4KIxWdUw8q5hGJATFMAhKElU?usp=sharing). It shows that the equation for the height and width of the output of `tf.nn.atrous_conv2d` reported in the documentation is incorrect when `padding` is `'VALID'`, and demonstrates the correct equation, which this PR provides.\r\n\r\n```python\r\nimport tensorflow as tf\r\n\r\ndef out_size(in_size, filter_size, rate, padding):\r\n  value = tf.ones((1, in_size, in_size, 1))\r\n  filters = tf.ones((filter_size, filter_size, 1, 1))\r\n  actual_out = tf.nn.atrous_conv2d(value, filters, rate, padding)\r\n  actual_out_size = tf.shape(actual_out)[1]\r\n  if padding == 'VALID':\r\n    current_doc = in_size - 2 * (filter_size - 1)\r\n    proposed_doc = in_size - rate * (filter_size - 1)\r\n  else: # padding == 'SAME'\r\n    current_doc = in_size\r\n    proposed_doc = in_size\r\n  return actual_out_size, current_doc, proposed_doc\r\n  \r\nfor padding in ('VALID', 'SAME'):\r\n  for in_size in (8, 9, 10, 11):\r\n    for filter_size in (1, 2, 3):\r\n      for rate in (1, 2, 3):\r\n        actual, current, proposed = out_size(in_size, filter_size, rate,\r\n                                             padding)\r\n        print(\"pad: %-5s, in: %2d, f: %d, r: %d / \"\r\n              \"actual: %2d, current doc: %2d, proposed doc: %2d\" %\r\n              (padding, in_size, filter_size, rate, actual, current, proposed))\r\n```\r\n\r\nOutput:\r\n```\r\npad: VALID, in:  8, f: 1, r: 1 / actual:  8, current doc:  8, proposed doc:  8\r\npad: VALID, in:  8, f: 1, r: 2 / actual:  8, current doc:  8, proposed doc:  8\r\npad: VALID, in:  8, f: 1, r: 3 / actual:  8, current doc:  8, proposed doc:  8\r\npad: VALID, in:  8, f: 2, r: 1 / actual:  7, current doc:  6, proposed doc:  7\r\npad: VALID, in:  8, f: 2, r: 2 / actual:  6, current doc:  6, proposed doc:  6\r\npad: VALID, in:  8, f: 2, r: 3 / actual:  5, current doc:  6, proposed doc:  5\r\npad: VALID, in:  8, f: 3, r: 1 / actual:  6, current doc:  4, proposed doc:  6\r\npad: VALID, in:  8, f: 3, r: 2 / actual:  4, current doc:  4, proposed doc:  4\r\npad: VALID, in:  8, f: 3, r: 3 / actual:  2, current doc:  4, proposed doc:  2\r\npad: VALID, in:  9, f: 1, r: 1 / actual:  9, current doc:  9, proposed doc:  9\r\npad: VALID, in:  9, f: 1, r: 2 / actual:  9, current doc:  9, proposed doc:  9\r\npad: VALID, in:  9, f: 1, r: 3 / actual:  9, current doc:  9, proposed doc:  9\r\npad: VALID, in:  9, f: 2, r: 1 / actual:  8, current doc:  7, proposed doc:  8\r\npad: VALID, in:  9, f: 2, r: 2 / actual:  7, current doc:  7, proposed doc:  7\r\npad: VALID, in:  9, f: 2, r: 3 / actual:  6, current doc:  7, proposed doc:  6\r\npad: VALID, in:  9, f: 3, r: 1 / actual:  7, current doc:  5, proposed doc:  7\r\npad: VALID, in:  9, f: 3, r: 2 / actual:  5, current doc:  5, proposed doc:  5\r\npad: VALID, in:  9, f: 3, r: 3 / actual:  3, current doc:  5, proposed doc:  3\r\npad: VALID, in: 10, f: 1, r: 1 / actual: 10, current doc: 10, proposed doc: 10\r\npad: VALID, in: 10, f: 1, r: 2 / actual: 10, current doc: 10, proposed doc: 10\r\npad: VALID, in: 10, f: 1, r: 3 / actual: 10, current doc: 10, proposed doc: 10\r\npad: VALID, in: 10, f: 2, r: 1 / actual:  9, current doc:  8, proposed doc:  9\r\npad: VALID, in: 10, f: 2, r: 2 / actual:  8, current doc:  8, proposed doc:  8\r\npad: VALID, in: 10, f: 2, r: 3 / actual:  7, current doc:  8, proposed doc:  7\r\npad: VALID, in: 10, f: 3, r: 1 / actual:  8, current doc:  6, proposed doc:  8\r\npad: VALID, in: 10, f: 3, r: 2 / actual:  6, current doc:  6, proposed doc:  6\r\npad: VALID, in: 10, f: 3, r: 3 / actual:  4, current doc:  6, proposed doc:  4\r\npad: VALID, in: 11, f: 1, r: 1 / actual: 11, current doc: 11, proposed doc: 11\r\npad: VALID, in: 11, f: 1, r: 2 / actual: 11, current doc: 11, proposed doc: 11\r\npad: VALID, in: 11, f: 1, r: 3 / actual: 11, current doc: 11, proposed doc: 11\r\npad: VALID, in: 11, f: 2, r: 1 / actual: 10, current doc:  9, proposed doc: 10\r\npad: VALID, in: 11, f: 2, r: 2 / actual:  9, current doc:  9, proposed doc:  9\r\npad: VALID, in: 11, f: 2, r: 3 / actual:  8, current doc:  9, proposed doc:  8\r\npad: VALID, in: 11, f: 3, r: 1 / actual:  9, current doc:  7, proposed doc:  9\r\npad: VALID, in: 11, f: 3, r: 2 / actual:  7, current doc:  7, proposed doc:  7\r\npad: VALID, in: 11, f: 3, r: 3 / actual:  5, current doc:  7, proposed doc:  5\r\npad: SAME , in:  8, f: 1, r: 1 / actual:  8, current doc:  8, proposed doc:  8\r\npad: SAME , in:  8, f: 1, r: 2 / actual:  8, current doc:  8, proposed doc:  8\r\npad: SAME , in:  8, f: 1, r: 3 / actual:  8, current doc:  8, proposed doc:  8\r\npad: SAME , in:  8, f: 2, r: 1 / actual:  8, current doc:  8, proposed doc:  8\r\npad: SAME , in:  8, f: 2, r: 2 / actual:  8, current doc:  8, proposed doc:  8\r\npad: SAME , in:  8, f: 2, r: 3 / actual:  8, current doc:  8, proposed doc:  8\r\npad: SAME , in:  8, f: 3, r: 1 / actual:  8, current doc:  8, proposed doc:  8\r\npad: SAME , in:  8, f: 3, r: 2 / actual:  8, current doc:  8, proposed doc:  8\r\npad: SAME , in:  8, f: 3, r: 3 / actual:  8, current doc:  8, proposed doc:  8\r\npad: SAME , in:  9, f: 1, r: 1 / actual:  9, current doc:  9, proposed doc:  9\r\npad: SAME , in:  9, f: 1, r: 2 / actual:  9, current doc:  9, proposed doc:  9\r\npad: SAME , in:  9, f: 1, r: 3 / actual:  9, current doc:  9, proposed doc:  9\r\npad: SAME , in:  9, f: 2, r: 1 / actual:  9, current doc:  9, proposed doc:  9\r\npad: SAME , in:  9, f: 2, r: 2 / actual:  9, current doc:  9, proposed doc:  9\r\npad: SAME , in:  9, f: 2, r: 3 / actual:  9, current doc:  9, proposed doc:  9\r\npad: SAME , in:  9, f: 3, r: 1 / actual:  9, current doc:  9, proposed doc:  9\r\npad: SAME , in:  9, f: 3, r: 2 / actual:  9, current doc:  9, proposed doc:  9\r\npad: SAME , in:  9, f: 3, r: 3 / actual:  9, current doc:  9, proposed doc:  9\r\npad: SAME , in: 10, f: 1, r: 1 / actual: 10, current doc: 10, proposed doc: 10\r\npad: SAME , in: 10, f: 1, r: 2 / actual: 10, current doc: 10, proposed doc: 10\r\npad: SAME , in: 10, f: 1, r: 3 / actual: 10, current doc: 10, proposed doc: 10\r\npad: SAME , in: 10, f: 2, r: 1 / actual: 10, current doc: 10, proposed doc: 10\r\npad: SAME , in: 10, f: 2, r: 2 / actual: 10, current doc: 10, proposed doc: 10\r\npad: SAME , in: 10, f: 2, r: 3 / actual: 10, current doc: 10, proposed doc: 10\r\npad: SAME , in: 10, f: 3, r: 1 / actual: 10, current doc: 10, proposed doc: 10\r\npad: SAME , in: 10, f: 3, r: 2 / actual: 10, current doc: 10, proposed doc: 10\r\npad: SAME , in: 10, f: 3, r: 3 / actual: 10, current doc: 10, proposed doc: 10\r\npad: SAME , in: 11, f: 1, r: 1 / actual: 11, current doc: 11, proposed doc: 11\r\npad: SAME , in: 11, f: 1, r: 2 / actual: 11, current doc: 11, proposed doc: 11\r\npad: SAME , in: 11, f: 1, r: 3 / actual: 11, current doc: 11, proposed doc: 11\r\npad: SAME , in: 11, f: 2, r: 1 / actual: 11, current doc: 11, proposed doc: 11\r\npad: SAME , in: 11, f: 2, r: 2 / actual: 11, current doc: 11, proposed doc: 11\r\npad: SAME , in: 11, f: 2, r: 3 / actual: 11, current doc: 11, proposed doc: 11\r\npad: SAME , in: 11, f: 3, r: 1 / actual: 11, current doc: 11, proposed doc: 11\r\npad: SAME , in: 11, f: 3, r: 2 / actual: 11, current doc: 11, proposed doc: 11\r\npad: SAME , in: 11, f: 3, r: 3 / actual: 11, current doc: 11, proposed doc: 11\r\n```","created_at":"2022-03-09T04:03:36Z","closed_at":"2022-04-01T09:06:12Z","merged_at":"2022-04-01T09:06:12Z","user_id":33532941,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":874850468,"title":"Add link to padding notes to depthwise_conv2d doc","body":null,"created_at":"2022-03-09T02:23:22Z","closed_at":"2022-04-01T18:35:50Z","merged_at":"2022-04-01T18:35:49Z","user_id":33532941,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":874569653,"title":"[PluggableDevice] Add DEVICE_DEFAULT registration for ZerosLike and OnesLike","body":null,"created_at":"2022-03-08T20:40:35Z","closed_at":"2022-03-14T22:10:50Z","merged_at":"2022-03-14T22:10:50Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":874519797,"title":"Expose xla custom_call op to tensorFlow","body":"Expose xla custom_call op to tensorFlow\n\nCurrently xla custom_call op can only be created indirectly from some tf ops.\nThis patch exposed this op to tensorflow directly and added the xla kernel to\nconvert to the xla custom call. This is an useful feature to preserve the high\nlevel tensorflow ops when tf2xla is applied.\n","created_at":"2022-03-08T19:33:27Z","closed_at":"2022-03-09T18:01:23Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":874514687,"title":"Add dtensor to the build tree of TensorFlow.","body":"Add dtensor to the build tree of TensorFlow.\n","created_at":"2022-03-08T19:26:53Z","closed_at":"2022-03-08T20:09:22Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":874512919,"title":"[mhlo] Give names to RngBitGenerator outputs","body":"[mhlo] Give names to RngBitGenerator outputs\n","created_at":"2022-03-08T19:24:31Z","closed_at":"2022-03-09T02:04:14Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":874511165,"title":"Fixing naming of metric to be consistent with style","body":"Fixing naming of metric to be consistent with style\n","created_at":"2022-03-08T19:22:17Z","closed_at":"2022-03-09T19:15:01Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.25,"subjectivity":0.25}}
{"_id":874506926,"title":"Change xprof field \"time\" to \"time_fraction\", since that's what it represents.","body":"Change xprof field \"time\" to \"time_fraction\", since that's what it represents.\n\nThis avoids confusing code that references time but is unit-less.\n","created_at":"2022-03-08T19:17:12Z","closed_at":"2022-03-31T22:26:13Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":874495537,"title":"Add captured_function.cc to libtensorflow.so.","body":"Add captured_function.cc to libtensorflow.so.\n","created_at":"2022-03-08T19:02:50Z","closed_at":"2022-03-31T22:26:12Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":874493691,"title":"[TF:TRT] INT8 calibration in dynamic shape mode","body":"This PR enables INT8 conversion with calibration in dynamic shape mode.\r\n\r\n- The profile collection logic is moved before the calibration step in TRTEngineOP, because TRT optimization profiles have to be defined before we can calibrate an engine.\r\n- INT8 test are now enabled in V2 mode both with and without dynamic shapes.\r\n\r\nTracker: #45481","created_at":"2022-03-08T19:00:17Z","closed_at":"2022-04-26T18:52:01Z","merged_at":"2022-04-26T18:52:01Z","user_id":3671106,"sentiment":{"polarity":0.0,"subjectivity":0.16666666666666666}}
{"_id":874492719,"title":"Avoid cached definition and signature in __init__ of eagerly created function","body":"Avoid cached definition and signature in __init__ of eagerly created function\n\nWhen a concrete function is created but never called from Python, this change\nsaves us an extra copy of fdef. This tends to happen frequenctly in functions\nloaded from a saved model, where only the top-level 'inference' concrete\nfunctions are directly called from Python, whilst other supporting functions\nare called as part of the graph execution.\n","created_at":"2022-03-08T18:58:52Z","closed_at":"2022-03-11T00:05:15Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":874486746,"title":"Add GetReallyOpaqueDelegateCreators method to OpResolver.","body":"Add GetReallyOpaqueDelegateCreators method to OpResolver.\nThis is like GetDelegateCreators except that it creates an opaque type TfLiteReallyOpaqueDelegate rather than TfLiteDelegate.\n","created_at":"2022-03-08T18:50:19Z","closed_at":"2022-03-31T22:24:32Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":874477536,"title":"lite: Add C API to support custom op","body":"lite: Add C API to support custom op\n\nAdded new experimental C API to support custom op.\n\n- Since TfLiteRegistration has new field, make sure all code uses\n  TfLiteRegistration with initializer likes \"TfLiteRegistration reg{};\".\n  It makes \".registration_external' field initialized as nullptr.\n\n- 'custom_sinh.bin' is a simple graph with custom op \"Sinh\" which is generated\n  as the following.\n\n  @tf.function(\n    input_signature=[tf.TensorSpec(shape=[1], dtype=tf.float32)])\n  def sin(x):\n    return tf.sinh(x)\n\n  converter = tf.lite.TFLiteConverter.from_concrete_functions([sin.get_concrete_function()], sin)\n  converter.allow_custom_ops = True\n  tflite_model = converter.convert()\n","created_at":"2022-03-08T18:36:44Z","closed_at":"2022-03-31T22:24:19Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":874474209,"title":"Implement parser/printer as member methods.","body":"Implement parser/printer as member methods.\n\nSee https://reviews.llvm.org/D121090.\n","created_at":"2022-03-08T18:32:06Z","closed_at":"2022-03-31T22:26:14Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":874471518,"title":"Implement concatenate3","body":"Implement concatenate3\n\nIntroduce helper xnn_define_concatenate_n to check and set up opdata for concatenate nodes of various number of inputs.\n","created_at":"2022-03-08T18:28:16Z","closed_at":"2022-03-31T22:24:13Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":874462456,"title":"[XLA:SPACE_TO_BATCH] Propagate trivial slices in transformed spatial","body":"[XLA:SPACE_TO_BATCH] Propagate trivial slices in transformed spatial\ndimensions.\n","created_at":"2022-03-08T18:16:38Z","closed_at":"2022-03-31T22:24:05Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":874462033,"title":"Mieosis","body":null,"created_at":"2022-03-08T18:16:06Z","closed_at":"2022-03-08T18:16:21Z","merged_at":null,"user_id":5065977,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":874461979,"title":"Revert back a change that runs CreateGuaranteeAllFuncsOneUsePass pass unconditionally.","body":"Revert back a change that runs CreateGuaranteeAllFuncsOneUsePass pass unconditionally.\n","created_at":"2022-03-08T18:16:02Z","closed_at":"2022-03-08T19:02:42Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":874457165,"title":"Fix Reference Type Part 2","body":"Fix Reference Type Part 2\n","created_at":"2022-03-08T18:10:05Z","closed_at":"2022-03-08T20:26:14Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":874456816,"title":"[XNNPACK] Change ConcatenationTester to be able to take multiple input shapes","body":"[XNNPACK] Change ConcatenationTester to be able to take multiple input shapes\n\nThis will allow us to test concatenation with more than 2 inputs.\n","created_at":"2022-03-08T18:09:44Z","closed_at":"2022-03-31T22:26:20Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.25,"subjectivity":0.3125}}
{"_id":874455979,"title":"[XNNPACK] Rename concatenation tests to include number of ouputs in name","body":"[XNNPACK] Rename concatenation tests to include number of ouputs in name\n\nAlso introduce a helper to create shapes that match in all dimensions except the axis.\n","created_at":"2022-03-08T18:08:41Z","closed_at":"2022-03-31T22:26:18Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":874453858,"title":"Bump the number of samples for MultinomialOpTestSuite.NonDeterministicOutputWithSeedsEqualToZero to 30","body":"Bump the number of samples for MultinomialOpTestSuite.NonDeterministicOutputWithSeedsEqualToZero to 30\n\nThis matches the number of samples used in MultinomialOpTestSuite.DeterministicOutputWithNonZeroSeeds and also makes the test less flaky. Previously, running the test 100 times will result in some failures.\n","created_at":"2022-03-08T18:05:58Z","closed_at":"2022-03-09T01:01:52Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":874449797,"title":"1. Stop the service in the event of heartbeat failure if there is no server-side connection.","body":"1. Stop the service in the event of heartbeat failure if there is no server-side connection.\n\n2. Log other errors if there is no server-side connection.\n","created_at":"2022-03-08T18:01:06Z","closed_at":"2022-03-09T00:43:16Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":874449419,"title":"[KernelGen][JIT] Do not apply CL options when JIT-compiling","body":"[KernelGen][JIT] Do not apply CL options when JIT-compiling\n\nWhen CL options are not available, i.e. when compilation is invoked through the\nJIT, do not try to apply them. This eliminates a redundant warning observed\nwhen running JIT-compiled kernels.\n\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/tensorflow/tensorflow/pull/55031 from wamuir:worker-proto-unused-import 3a84bebfbb72ba837102305e203d741c365ba40f\n","created_at":"2022-03-08T18:00:37Z","closed_at":"2022-03-09T21:05:10Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":874447747,"title":"Canonicalize CPU device name used in tfrt_fallback_async.corert_tensorhandle_to_fallback_tensor","body":"Canonicalize CPU device name used in tfrt_fallback_async.corert_tensorhandle_to_fallback_tensor\n\nCoreRT library only recoganize the default CPU device name \"/job:localhost/replica:0/task:0/device:CPU:0\" and it cannot recoganize other variants like \"/device:CPU:0\".\n","created_at":"2022-03-08T17:58:32Z","closed_at":"2022-03-09T00:51:17Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":874446169,"title":"Tag `tf.keras.preprocessing` as deprecated when generating docs.","body":"Tag `tf.keras.preprocessing` as deprecated when generating docs.\n\nAdd a \"status:deprecated\" to `tf.keras.preprocessing` in the tensorflow.org TOC, just like for contrib here:\n\nhttps://www.tensorflow.org/versions/r1.15/api_docs/python/tf/contrib\n","created_at":"2022-03-08T17:56:38Z","closed_at":"2022-03-11T00:34:21Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":874433370,"title":"[KernelGen][JIT] Set target triple for GPU kernels","body":"[KernelGen][JIT] Set target triple for GPU kernels\n\nSet target triple explicitly for GPU kernels and do not rely on it being linked\nin through the devicelib. For kernels that to no require the devicelib, the\ntriple was missing, causing a warning at compile time, and at runtime for\njitted kernels.\n\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/tensorflow/tensorflow/pull/55031 from wamuir:worker-proto-unused-import 3a84bebfbb72ba837102305e203d741c365ba40f\n","created_at":"2022-03-08T17:41:19Z","closed_at":"2022-03-15T15:45:59Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":874394363,"title":"[XLA:CPU] Add support for spmd partioning","body":"[XLA:CPU] Add support for spmd partioning\n\n- Run StatefulRngSpmdPartitioner\n- Implement PartitionId\n- Pass use_global_device_ids down to allreduce\n- Enable multireplica allreduce when there is 1 replica but multiple partitions\n- Fix AllToAll when there are multiple partitions by using device ids instead\n  of replica ids\n","created_at":"2022-03-08T16:56:12Z","closed_at":"2022-03-08T17:42:57Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":874371935,"title":"Cwolf22 patch 1","body":"something here","created_at":"2022-03-08T16:31:34Z","closed_at":"2022-03-08T16:31:54Z","merged_at":null,"user_id":5065977,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":874366729,"title":"[KernelGen][JIT] Re-enable JIT kernels by default","body":"[KernelGen][JIT] Re-enable JIT kernels by default\n\nRe-enable the kernels by default after fixing the Windows-specific issues in\n21264a552155922ec9db03e2b025a6fbea676560.\n","created_at":"2022-03-08T16:26:26Z","closed_at":"2022-03-15T08:49:28Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":874323345,"title":"[XLA] Add IsDead method to hlo_instruction and use it. NFCI","body":"[XLA] Add IsDead method to hlo_instruction and use it. NFCI\n","created_at":"2022-03-08T15:42:17Z","closed_at":"2022-03-08T18:23:53Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":874297579,"title":"[XLA] Move GPU SPMD Partitioner into a generic place","body":"[XLA] Move GPU SPMD Partitioner into a generic place\n\nThis has nothing GPU-specific, so rename it to StatefulRngSpmdPartitioner. I'm\nplanning to use this on CPU too.\n","created_at":"2022-03-08T15:17:31Z","closed_at":"2022-03-08T16:53:25Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":874295662,"title":"[XLA] Cleanup / optimize `HloValueSet` and make it more \"set-like\".","body":"[XLA] Cleanup / optimize `HloValueSet` and make it more \"set-like\".\n","created_at":"2022-03-08T15:15:50Z","closed_at":"2022-03-31T22:26:22Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":874110589,"title":"[ROCm] Fixes to enable triangular solve and cholesky BEF thunk unit tests for ROCm.","body":"/cc @chsigg @hanbinyoon \r\n\r\nCreating a new PR based on previous one due to git rebase error.","created_at":"2022-03-08T11:55:47Z","closed_at":"2022-03-11T16:20:57Z","merged_at":"2022-03-11T16:20:56Z","user_id":70280935,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":874086765,"title":"Parser.h has moved inside llvm_project","body":"Fixes https://github.com/tensorflow/tensorflow/issues/55133","created_at":"2022-03-08T11:25:08Z","closed_at":"2022-03-08T15:22:29Z","merged_at":null,"user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":874038465,"title":"Fixes undefined behavior caused by usage of std::uniform_int_distribution<uint8_t>.","body":"Fixes undefined behavior caused by usage of std::uniform_int_distribution<uint8_t>.\n","created_at":"2022-03-08T10:29:04Z","closed_at":"2022-03-08T19:05:02Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":874031045,"title":"Fix header include.","body":"Fix header include.\n","created_at":"2022-03-08T10:21:05Z","closed_at":"2022-03-08T14:40:23Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":874001679,"title":"Removed references to g-no-augmented-assignment in pylint directives","body":"Removed references to g-no-augmented-assignment in pylint directives\n","created_at":"2022-03-08T09:48:25Z","closed_at":"2022-03-08T19:31:47Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":873955627,"title":"Stage data on gpu pinned memory during transfer","body":"Stage data on gpu pinned memory during transfer\n","created_at":"2022-03-08T08:55:31Z","closed_at":"2022-03-08T20:44:28Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":873864728,"title":"Enhance summary for ResourceHandle to output shapes as well.","body":"Enhance summary for ResourceHandle to output shapes as well.\n","created_at":"2022-03-08T06:40:03Z","closed_at":"2022-03-10T01:29:34Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":873856458,"title":"Change call sites from deprecated `mlir::parseSourceFile()` to `mlir::parseSourceFile<::mlir::ModuleOp>()`.","body":"Change call sites from deprecated `mlir::parseSourceFile()` to `mlir::parseSourceFile<::mlir::ModuleOp>()`.\n","created_at":"2022-03-08T06:23:50Z","closed_at":"2022-03-31T22:26:25Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":873840627,"title":"[NNAPI] Allow dequantizing fp16 scalar input","body":"[NNAPI] Allow dequantizing fp16 scalar input\n","created_at":"2022-03-08T05:58:23Z","closed_at":"2022-03-31T22:27:51Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":873807498,"title":"Set print_operand_shape=false for HloPrintOptions::Fingerprint(). This reduces fingerprint computation time by 10-100x.","body":"Set print_operand_shape=false for HloPrintOptions::Fingerprint(). This reduces fingerprint computation time by 10-100x.\n","created_at":"2022-03-08T04:44:44Z","closed_at":"2022-03-31T22:27:51Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":873780212,"title":"[NFC] Reformat shape_inference.mlir test to only check for partial types of dataset functions.","body":"[NFC] Reformat shape_inference.mlir test to only check for partial types of dataset functions.\n","created_at":"2022-03-08T03:42:28Z","closed_at":"2022-03-08T18:10:26Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":-0.05,"subjectivity":0.6499999999999999}}
{"_id":873760442,"title":"Add optimization method enum to select quantization algorithm","body":"Add optimization method enum to select quantization algorithm\n\nCurrently, the static range quantization is enabled in the TF quantization.\nLater, automatic quantization and dynamic range quantization will be\nimplemented.\n","created_at":"2022-03-08T02:57:15Z","closed_at":"2022-03-08T06:39:10Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":873749429,"title":"[tf][tfg] Control-Flow Sink","body":"[tf][tfg] Control-Flow Sink\n\nIntroduce a control-flow sink pass for TFG region-based control-flow operations. Control-flow sink moves operations whose only users are in a region into that region so that they aren't executed on paths where their results are not needed.\n","created_at":"2022-03-08T02:29:01Z","closed_at":"2022-03-08T18:34:33Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":873742617,"title":"Update PyYAML dependency version to 6.0 for Python 3.10 compatibility","body":"Update PyYAML dependency version to 6.0 for Python 3.10 compatibility\n","created_at":"2022-03-08T02:14:44Z","closed_at":"2022-03-08T03:45:16Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":873740899,"title":"[JAX] Update ann to use XLA based fallback ApproxTopK.","body":"[JAX] Update ann to use XLA based fallback ApproxTopK.\nAlso polished the document.\n","created_at":"2022-03-08T02:10:54Z","closed_at":"2022-03-31T22:26:23Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":873737022,"title":"[XLA:TPU] Pull ApproxTopK shape inference to its own file.","body":"[XLA:TPU] Pull ApproxTopK shape inference to its own file.\nAlso implemented a dummy fallback function for non-TPU ApproxTopK,\nso that both Jax and TF can use the same fallback instead of re-implementing\nthe fallback in python/TF-kernel.\nThis is a precursor to support ApproxTopK in TF.\n","created_at":"2022-03-08T02:02:32Z","closed_at":"2022-03-14T19:29:30Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.6,"subjectivity":1.0}}
{"_id":873723202,"title":"[XLA] Simplify `ShapeIndex` and `ShapeIndexView`.","body":"[XLA] Simplify `ShapeIndex` and `ShapeIndexView`.\n\nThe encapsulation doesn't really gain anything except more code.\n","created_at":"2022-03-08T01:30:54Z","closed_at":"2022-03-31T22:26:11Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":873718859,"title":"Export Ftrl optimizer.","body":"Export Ftrl optimizer.\n","created_at":"2022-03-08T01:20:55Z","closed_at":"2022-03-09T00:27:46Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":873710299,"title":"mutate xplane for kernel launch flows, not enabled in OSS, because missing event and json support.","body":"mutate xplane for kernel launch flows, not enabled in OSS, because missing event and json support.\n","created_at":"2022-03-08T01:01:19Z","closed_at":"2022-03-31T22:26:17Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":873709290,"title":"Create parameterized test for future implementation of PjRT client using coordination service.","body":"Create parameterized test for future implementation of PjRT client using coordination service.\n","created_at":"2022-03-08T00:58:46Z","closed_at":"2022-03-14T17:54:21Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.125}}
{"_id":873708409,"title":"Turn on OptimizationBarrierExpander passes for GPU and CPU.","body":"Turn on OptimizationBarrierExpander passes for GPU and CPU.\n","created_at":"2022-03-08T00:56:33Z","closed_at":"2022-03-08T02:18:11Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":873708343,"title":"Change absl::flat_hash_map to std::unordered_map.","body":"Change absl::flat_hash_map to std::unordered_map.\n","created_at":"2022-03-08T00:56:24Z","closed_at":"2022-03-31T22:27:51Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":873704301,"title":"Update container hash for manylinux2014 RBE container.","body":"Update container hash for manylinux2014 RBE container.\n","created_at":"2022-03-08T00:47:22Z","closed_at":"2022-03-08T04:23:46Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":873698490,"title":"Add XlaOptimizationBarrier tensorflow op.","body":"Add XlaOptimizationBarrier tensorflow op.\n\nSee https://www.tensorflow.org/xla/operation_semantics#optimizationbarrier.\n\nThe use case for this is to support the new XLA remat op in jax2tf.\n","created_at":"2022-03-08T00:36:55Z","closed_at":"2022-03-31T22:24:28Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":873695382,"title":"[tf][tfg] Control-Flow Sink","body":"[tf][tfg] Control-Flow Sink\n\nIntroduce a control-flow sink pass for TFG region-based control-flow operations. Control-flow sink moves operations whose only users are in a region into that region so that they aren't executed on paths where their results are not needed.\n","created_at":"2022-03-08T00:30:46Z","closed_at":"2022-03-08T01:17:41Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":873687728,"title":"Rename quantized concatenation tests to include quantization in test name","body":"Rename quantized concatenation tests to include quantization in test name\n","created_at":"2022-03-08T00:16:57Z","closed_at":"2022-03-08T18:26:56Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":873680292,"title":"fix broken microcontroller link.","body":null,"created_at":"2022-03-08T00:02:36Z","closed_at":"2022-03-29T18:06:58Z","merged_at":"2022-03-29T18:06:58Z","user_id":30309,"sentiment":{"polarity":-0.4,"subjectivity":0.4}}
{"_id":873679845,"title":"Wrap CclCreate()'s lambda captures in tfrt::gpu::DestroyCapturesOnInvoke().","body":"Wrap CclCreate()'s lambda captures in tfrt::gpu::DestroyCapturesOnInvoke().\n","created_at":"2022-03-08T00:01:44Z","closed_at":"2022-03-09T00:24:13Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":873673857,"title":"Adds use_auto_spmd_partitioning and propagate its value down the stack","body":"Adds use_auto_spmd_partitioning and propagate its value down the stack\n","created_at":"2022-03-07T23:48:07Z","closed_at":"2022-03-31T22:27:50Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":-0.15555555555555559,"subjectivity":0.2888888888888889}}
{"_id":873671159,"title":"Update tf.py_function and tf.numpy_function docstring.","body":"Update tf.py_function and tf.numpy_function docstring.\n","created_at":"2022-03-07T23:42:17Z","closed_at":"2022-03-31T22:27:50Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":873655594,"title":"Turn on OptimizationBarrierExpander passes for GPU and CPU.","body":"Turn on OptimizationBarrierExpander passes for GPU and CPU.\n","created_at":"2022-03-07T23:17:33Z","closed_at":"2022-03-08T00:17:03Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":873643316,"title":"Set the incarnation within the service instead of the rpc handler.","body":"Set the incarnation within the service instead of the rpc handler.\n","created_at":"2022-03-07T22:59:37Z","closed_at":"2022-03-08T00:12:24Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":873641296,"title":"[oneDNN] Fix Windows build failure due to OpenMP linking error in Bazel 5","body":"Prior to this PR, Windows builds were failing with this error:\r\nomp_dll.def : error LNK2001: unresolved external symbol __kmp_invoke_microtask bazel-out/x64_windows-opt/bin/external/llvm_openmp/libiomp5md.dll.if.lib : fatal error LNK1120: 1 unresolved externals\r\n\r\nIt was root caused to a commit# 8871926 fails (needs bazel 5.0 to run).\r\nThe immediately previous commit# e135db1 passes (needs bazel 4.2.2).\r\nWe also noticed that Bazel 5.0 was not adding some symbol defines in the z_Windows_NT-586_asm.obj.params file when assembling the file z_Windows_NT-586_asm.S\r\n\r\nIt was further analyzed and it seems Bazel 5 behaves differently than Bazel 4 in this linking context. We made a successful build with Bazel 4.x on commit# e135db1. Changed to Bazel 5.x. Build failed. Then added a 'defines' field under cc_binary in the ...\\third_party\\llvm_openmp\\openmp.bzl file. The assembler picked up the correct Windows specific defines. So it appears, in Bazel 5.x copts options are only used for C/C++ compilations, but not for assembler (unlike in Bazel 4.x).","created_at":"2022-03-07T22:55:49Z","closed_at":"2022-03-11T14:02:59Z","merged_at":"2022-03-11T14:02:59Z","user_id":57962524,"sentiment":{"polarity":-0.22083333333333335,"subjectivity":0.3375}}
{"_id":873629426,"title":"Deprecate most_specific_compatible_type for most_specific_common_supertype","body":"Deprecate most_specific_compatible_type for most_specific_common_supertype\n","created_at":"2022-03-07T22:41:56Z","closed_at":"2022-03-10T00:34:26Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":873620621,"title":"[XNNPACK] Support split into 3 outputs","body":"[XNNPACK] Support split into 3 outputs\n\nUpdate delegate to support splitting to 3 outputs. Tests are updated to specify number of splits. Added some more helpers to check a range of number of outputs for each node.\n","created_at":"2022-03-07T22:29:03Z","closed_at":"2022-03-09T20:33:58Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":873616243,"title":"Refactor device propagation to use a barrier internally.","body":"Refactor device propagation to use a barrier internally.\n","created_at":"2022-03-07T22:23:29Z","closed_at":"2022-03-08T00:55:57Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":873615981,"title":"Create a generation_id for HLO modules that is unique across restarts of a process","body":"Create a generation_id for HLO modules that is unique across restarts of a process\n","created_at":"2022-03-07T22:23:11Z","closed_at":"2022-03-31T22:27:49Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.375,"subjectivity":1.0}}
{"_id":873604265,"title":"wip: add stack trace to variable","body":"wip: add stack trace to variable\n","created_at":"2022-03-07T22:08:06Z","closed_at":"2022-03-31T22:27:49Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":873596774,"title":"Add Gradient Op for Einsum","body":"Add Gradient Op for Einsum\n","created_at":"2022-03-07T21:58:25Z","closed_at":"2022-03-07T23:14:46Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":873590219,"title":"lite: Use dynamic tensors for large tensors","body":"lite: Use dynamic tensors for large tensors\n\nThis change introduces a way to use dynamic tensors for large tensors\nto optimize memory usage.\nThanks to new API `EnsureDynamicTensorsAreReleased`, now memory of dynamic\ntensors are deallocated when they are not needed and it helps to improve\nthe overall memory usage.\n","created_at":"2022-03-07T21:48:54Z","closed_at":"2022-03-08T00:38:57Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.10714285714285714,"subjectivity":0.2976190476190476}}
{"_id":873578774,"title":"[ST] Add a pattern to fold tensor.cast inside gml_st.loop.","body":"[ST] Add a pattern to fold tensor.cast inside gml_st.loop.\n","created_at":"2022-03-07T21:32:22Z","closed_at":"2022-03-07T22:28:58Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":873573269,"title":"PSS Test: Handling more errors to avoid chief failures","body":"PSS Test: Handling more errors to avoid chief failures\n","created_at":"2022-03-07T21:25:21Z","closed_at":"2022-03-31T22:27:49Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":873572055,"title":"Use most_specific_common_supertype in nest","body":"Use most_specific_common_supertype in nest\n","created_at":"2022-03-07T21:23:37Z","closed_at":"2022-03-07T23:16:12Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":873556604,"title":"Allow the converter to optionally preserve `TF::AssertOp`.","body":"Allow the converter to optionally preserve `TF::AssertOp`.\n\nAssert will be essential for training use case (Brella), e.g when validating the checksum. In the past, Assert is directly removed.\n","created_at":"2022-03-07T21:04:37Z","closed_at":"2022-03-08T01:52:17Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":873554243,"title":"[mlir][mhlo][sparse] account for sparse tensor outputs in mhlo to linalg lowering","body":"[mlir][mhlo][sparse] account for sparse tensor outputs in mhlo to linalg lowering\n","created_at":"2022-03-07T21:01:59Z","closed_at":"2022-03-08T18:41:58Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":873508040,"title":"Use the new libstdcxx abi in devtoolset-9","body":"Use the new libstdcxx abi in devtoolset-9\n","created_at":"2022-03-07T20:06:54Z","closed_at":"2022-03-07T23:49:29Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.13636363636363635,"subjectivity":0.45454545454545453}}
{"_id":873502525,"title":"Implement split3","body":"Implement split3\n\nSome refactoring in xnn_define_split_even2 to extract all the checks for valid output dimensions so that we can reuse those checks. Also define a more generic xnn_define_split_even_n that is used by xnn_define_split_even2 and xnn_define_split_even3.\n","created_at":"2022-03-07T20:00:29Z","closed_at":"2022-03-31T22:27:48Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":873496507,"title":"Refactoring of ConvertUnary","body":"ConvertUnary is rewritten using OpConverterBase","created_at":"2022-03-07T19:52:08Z","closed_at":"2022-03-08T17:39:19Z","merged_at":"2022-03-08T17:39:19Z","user_id":32910461,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":873486530,"title":"test visibility changes","body":"test visibility changes\n\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/tensorflow/tensorflow/pull/54810 from Intel-tensorflow:gyshi/fiex_remapper_bug 42191f04e6b6880cd50f4f3f43be3c79e5d42dc7\n","created_at":"2022-03-07T19:38:41Z","closed_at":"2022-03-31T22:27:48Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":873481564,"title":"Introduce TensorArray most_specific_common_supertype","body":"Introduce TensorArray most_specific_common_supertype\n","created_at":"2022-03-07T19:32:30Z","closed_at":"2022-03-07T19:57:30Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":873468412,"title":"Internal only changes","body":"Internal only changes\n","created_at":"2022-03-07T19:17:49Z","closed_at":"2022-03-31T22:27:47Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.5}}
{"_id":873463485,"title":"[KernelGen][JIT] Register malloc and free symbols to fix Windows","body":"[KernelGen][JIT] Register malloc and free symbols to fix Windows\n\nRegister malloc/free to avoid using some unintended version from a shared\nlibrary. W/o this, the `ExecutionEngine` will try to resolve the missing symbol\nfrom shared libraries and from the current process. This can lead to using an\nincompatible pair of malloc and free, causing crashes on Windows.\n","created_at":"2022-03-07T19:12:35Z","closed_at":"2022-03-07T20:40:08Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.4,"subjectivity":0.8}}
{"_id":873448077,"title":"[mlir][mhlo] provide mechanism to register mhlo pass from python","body":"[mlir][mhlo] provide mechanism to register mhlo pass from python\n","created_at":"2022-03-07T18:54:53Z","closed_at":"2022-03-11T23:48:10Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":873438703,"title":". . . . . . . . . . . . . . .. . .","body":". . . . . . . . . . . . . . .. . .\n","created_at":"2022-03-07T18:41:59Z","closed_at":"2022-03-08T18:55:39Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":873427722,"title":"Add a few properties to ShardedVariable to support Keras saving and loading.","body":"Add a few properties to ShardedVariable to support Keras saving and loading.\n","created_at":"2022-03-07T18:27:49Z","closed_at":"2022-03-18T15:12:20Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":-0.2,"subjectivity":0.1}}
{"_id":873405826,"title":"Add flatbuffer conversions for while operator.","body":"Add flatbuffer conversions for while operator.\n","created_at":"2022-03-07T18:03:39Z","closed_at":"2022-03-07T19:04:49Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":873399614,"title":"Fix fuchsia build errors.","body":"Fix fuchsia build errors.\n\nThis command now succeeds: `blaze build //third_party/tensorflow/core/kernels/data/experimental:assert_prev_dataset_op --config=force_compact_protos --config=portable_proto_force_google3_compact --config=no_whole_archive --config=no_whole_archive --config=fuchsia --compilation_mode=opt --strip=never --copt=-fvisibility=hidden`.\n","created_at":"2022-03-07T17:56:46Z","closed_at":"2022-03-07T19:51:28Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":873397243,"title":"Refactor logic to create and setup split operators to allow them to be reused by split3/split4 in the future","body":"Refactor logic to create and setup split operators to allow them to be reused by split3/split4 in the future\n","created_at":"2022-03-07T17:53:47Z","closed_at":"2022-03-31T22:27:47Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.125}}
{"_id":873379458,"title":"Add flatbuffer conversions for while operator.","body":"Add flatbuffer conversions for while operator.\n","created_at":"2022-03-07T17:34:19Z","closed_at":"2022-03-31T22:27:46Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":873282313,"title":"Transpose modified to support uint/int tensors.","body":"Transpose modified to support uint/int tensors.\n","created_at":"2022-03-07T16:00:42Z","closed_at":"2022-03-09T11:10:16Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":873266746,"title":"MaxUnpooling kernel updated to support more input tensor types.","body":"MaxUnpooling kernel updated to support more input tensor types.\n","created_at":"2022-03-07T15:45:48Z","closed_at":"2022-03-09T10:03:53Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":873204283,"title":"[tfrt:jit] Move signless conversion right after HLO->Linalg.","body":"[tfrt:jit] Move signless conversion right after HLO->Linalg.\n","created_at":"2022-03-07T14:49:04Z","closed_at":"2022-03-14T14:56:05Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.2857142857142857,"subjectivity":0.5357142857142857}}
{"_id":873199480,"title":"More add tests for int/uint types.","body":"More add tests for int/uint types.\n","created_at":"2022-03-07T14:44:26Z","closed_at":"2022-03-09T08:01:06Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":873163635,"title":"TensorDescriptor Read/Write improved to support all conversions.","body":"TensorDescriptor Read/Write improved to support all conversions.\n","created_at":"2022-03-07T14:11:39Z","closed_at":"2022-03-07T23:52:26Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":873125960,"title":"Improve to cover scale value greater than one","body":"Improve to cover scale value greater than one\n","created_at":"2022-03-07T13:35:09Z","closed_at":"2022-03-07T23:36:15Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":873017368,"title":"TestExecutionEnvironment extended to provide info about storages that support in/uint types.","body":"TestExecutionEnvironment extended to provide info about storages that support in/uint types.\n","created_at":"2022-03-07T11:39:36Z","closed_at":"2022-03-07T14:14:01Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":872940768,"title":"Add GPU implementation of SparseSliceGrad","body":"cc @nluehr ","created_at":"2022-03-07T10:22:14Z","closed_at":"2022-04-04T16:26:37Z","merged_at":"2022-04-04T16:26:37Z","user_id":3979096,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":872936452,"title":"Migrates all `tf_python_pybind_extension` targets to the `cc_shared_library` implementation.","body":"Migrates all `tf_python_pybind_extension` targets to the `cc_shared_library` implementation.\n","created_at":"2022-03-07T10:17:53Z","closed_at":"2022-03-31T22:27:46Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":872740752,"title":"[XLA] Fix the bug in Literal storage: make it consistent with on-device buffer representation","body":"[XLA] Fix the bug in Literal storage: make it consistent with on-device buffer representation\n\nOtherwise, copies using TransferManager may result in OOB read/writes. As a\nbonus, the resulting code is also considerably simpler.\n\nWe have to over-allocate Literals (always allocate the \"margin\" for the dynamic\nsizes), but given that this allocation is tiny and is not used on\nperformance-critical path, this should not be an issue.\n","created_at":"2022-03-07T06:12:37Z","closed_at":"2022-03-09T06:18:34Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.25,"subjectivity":0.25}}
{"_id":872724002,"title":"Adding executable code for `tf.sparse.softmax`","body":"Changed the documentation of tf.sparse.softmax with executable example code.\r\nThe values passed to tf.sparse.SparseTensor must be a rank-1 tensor instead of a rank-3 tensor.\r\n\r\nFixes #[55035](https://github.com/tensorflow/tensorflow/issues/55035)","created_at":"2022-03-07T05:39:22Z","closed_at":"2022-12-29T05:05:20Z","merged_at":null,"user_id":84765720,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":872641161,"title":"Remove the sample add quantization recipe","body":"Remove the sample add quantization recipe\n\nThe add quantization recipe is a demo implementation of the new quantization\nflow. It should be removed and the related tests should be updated with either\nmatmul or convolution cases.\n","created_at":"2022-03-07T03:02:24Z","closed_at":"2022-03-08T05:12:09Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":872530910,"title":"Apply clang-tidy fixes for llvm-header-guard in test_passes.h (NFC)","body":"Apply clang-tidy fixes for llvm-header-guard in test_passes.h (NFC)\n","created_at":"2022-03-06T20:19:53Z","closed_at":"2022-03-13T01:14:09Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":872522338,"title":"Change call sites from deprecated `mlir::parseSourceFile()` to `mlir::parseSourceFile<::mlir::ModuleOp>()`.","body":"Change call sites from deprecated `mlir::parseSourceFile()` to `mlir::parseSourceFile<::mlir::ModuleOp>()`.\n","created_at":"2022-03-06T19:27:18Z","closed_at":"2022-03-31T22:27:45Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":872516808,"title":"Test Change rdff","body":"Test Change rdff\n","created_at":"2022-03-06T18:54:24Z","closed_at":"2022-03-07T17:44:58Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":872511706,"title":"Update comments on literal.h.","body":"Update comments on literal.h.\n","created_at":"2022-03-06T18:23:06Z","closed_at":"2022-03-07T20:09:22Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":872511676,"title":"Add HLO module name to gpu_compiler VLOGs.","body":"Add HLO module name to gpu_compiler VLOGs.\n\nThis way when we say that a module uses Xmb of temp memory, we can see *which*\nmodule it is.\n","created_at":"2022-03-06T18:22:55Z","closed_at":"2022-03-07T23:08:54Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":872511596,"title":"Disable dumping of dynamic-shaped args.","body":"Disable dumping of dynamic-shaped args.\n\nThis is broken due to memory corruption, b/223010622.\n","created_at":"2022-03-06T18:22:25Z","closed_at":"2022-03-31T22:27:45Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":872418998,"title":"NN API delegate: Provide an API that either successfully creates a complete","body":"NN API delegate: Provide an API that either successfully creates a complete\nNnApi structure, which has all its functions pointers set to a non-null address,\nor fails.\n","created_at":"2022-03-06T09:15:31Z","closed_at":"2022-03-31T22:26:21Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.42500000000000004,"subjectivity":0.6749999999999999}}
{"_id":872415751,"title":"Check that the Support lib struct functions are not null.","body":"Check that the Support lib struct functions are not null.\n","created_at":"2022-03-06T08:55:43Z","closed_at":"2022-03-31T22:27:45Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":872376923,"title":"Update the RBE images to the latest container versions","body":"Automated PR created once per week to get the latest Docker images.\nSee https://github.com/tensorflow/tensorflow/blob/master/.github/workflows/update-rbe.yml","created_at":"2022-03-06T03:05:39Z","closed_at":"2022-03-09T16:40:08Z","merged_at":"2022-03-09T16:40:08Z","user_id":16359713,"sentiment":{"polarity":0.5,"subjectivity":0.9}}
{"_id":872317258,"title":"[XLA:GPU] Unify vectorization logic for single instructions and for fusions","body":"[XLA:GPU] Unify vectorization logic for single instructions and for fusions\n\nUse \"fusion\" logic for both cases.\n","created_at":"2022-03-05T18:57:06Z","closed_at":"2022-03-07T19:54:28Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":-0.07142857142857142,"subjectivity":0.21428571428571427}}
{"_id":872299325,"title":"[XLA] Simplify `ShapeIndex` and `ShapeIndexView`.","body":"[XLA] Simplify `ShapeIndex` and `ShapeIndexView`.\n\nThe encapsulation doesn't really gain anything except more code.\n","created_at":"2022-03-05T17:02:30Z","closed_at":"2022-03-07T18:34:12Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":872296464,"title":"Fix build failure for absl::StrContains()","body":"Fix build failure for absl::StrContains()\n","created_at":"2022-03-05T16:44:34Z","closed_at":"2022-03-05T23:56:09Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":872288885,"title":"[XLA] Cleanup `ShapeTree`.","body":"[XLA] Cleanup `ShapeTree`.\n","created_at":"2022-03-05T16:00:14Z","closed_at":"2022-03-15T23:43:59Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":872274913,"title":"Remove unused proto import","body":"PR removes import of `coordination_config.proto` from `worker.proto`.  This import is unused since b2f1fd1.  Protoc warns/complains.","created_at":"2022-03-05T14:36:53Z","closed_at":"2022-03-08T17:57:45Z","merged_at":"2022-03-08T17:57:45Z","user_id":17497234,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":872219027,"title":"No public commit message needed for presubmit.","body":"No public commit message needed for presubmit.\n","created_at":"2022-03-05T09:25:13Z","closed_at":"2022-03-31T22:27:44Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.06666666666666667}}
{"_id":872211605,"title":"trying to print the fusing decisions.","body":"trying to print the fusing decisions.\n","created_at":"2022-03-05T08:35:40Z","closed_at":"2022-03-31T22:27:44Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":872183702,"title":"[ROCm] Enable ROCm support for the batched potrm functions for the cholesky …","body":"…op in XLA.\r\n\r\nFor ROCm >= 4.5, this uses hipsolver and for ROCm < 4.5 this uses rocblas/rocsolver.","created_at":"2022-03-05T05:47:30Z","closed_at":"2022-03-14T14:15:00Z","merged_at":null,"user_id":70280935,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":872153261,"title":"[tf.numpy] Fixes linspace's rounding to follow numpy 1.20 .","body":"[tf.numpy] Fixes linspace's rounding to follow numpy 1.20 .\n","created_at":"2022-03-05T03:35:10Z","closed_at":"2022-03-05T04:02:25Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":872149965,"title":"[XLIR] Support bf16 type for gemm.","body":"[XLIR] Support bf16 type for gemm.\n","created_at":"2022-03-05T03:18:36Z","closed_at":"2022-03-31T22:26:14Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":872129494,"title":"[XLA] Speed up WhileLoopSimplifier for large shapes.","body":"[XLA] Speed up WhileLoopSimplifier for large shapes.\n","created_at":"2022-03-05T02:02:56Z","closed_at":"2022-03-05T05:26:19Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.42857142857142855}}
{"_id":872129398,"title":"Add map<string, FulltypeDef> for function-dependent ForwardTypeInferenceFn","body":"Add map<string, FulltypeDef> for function-dependent ForwardTypeInferenceFn\n\nUse\n\n  std::function<StatusOr<FullTypeDef>(\n      const std::vector<std::reference_wrapper<const FullTypeDef>>&,\n      const std::map<std::string, std::reference_wrapper<const FullTypeDef>>&\n  )>\n\nas the function signature for ForwardTypeInferenceFn to support function-dependent types.\n","created_at":"2022-03-05T02:02:17Z","closed_at":"2022-03-16T17:48:31Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":872121071,"title":"Internal changes only.","body":"Internal changes only.\n","created_at":"2022-03-05T01:23:46Z","closed_at":"2022-03-10T02:57:11Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.5}}
{"_id":872117369,"title":"Rename convenience methods for blocking and non-blocking calls.","body":"Rename convenience methods for blocking and non-blocking calls.\n\nChange method_name to method_name_async for async calls that return a future.\nChange method_name_blocking to method_name for synchronous calls that return value.\n","created_at":"2022-03-05T01:12:25Z","closed_at":"2022-03-31T22:27:43Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":872115651,"title":"Update naming for TensorFlow Lite in Google Play services","body":"Update naming for TensorFlow Lite in Google Play services\n","created_at":"2022-03-05T01:04:59Z","closed_at":"2022-03-22T17:40:37Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":872113187,"title":"Reorganizing TF Lite website navigation","body":"Reorganizing TF Lite website navigation\n","created_at":"2022-03-05T00:56:04Z","closed_at":"2022-03-31T22:27:43Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":872100672,"title":"Turns off pfor warning about legacy RNGs.","body":"Turns off pfor warning about legacy RNGs.\n","created_at":"2022-03-05T00:25:17Z","closed_at":"2022-03-07T23:56:46Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":872093441,"title":"Roll back broken change.","body":"Roll back broken change.\n","created_at":"2022-03-05T00:03:05Z","closed_at":"2022-03-07T20:29:12Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":-0.2,"subjectivity":0.2}}
{"_id":872092937,"title":"[XLA/GPU] Add an option to enable constant sharing between GPU executables.","body":"[XLA/GPU] Add an option to enable constant sharing between GPU executables.\n- The option is enabled by default, so this should not change existing behavior.\n","created_at":"2022-03-05T00:01:34Z","closed_at":"2022-03-05T01:49:49Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.3333333333333333}}
{"_id":872092392,"title":"Split tpu_embedding_v2_test and tpu_embedding_v2_correctness_test into multiple files.","body":"Split tpu_embedding_v2_test and tpu_embedding_v2_correctness_test into multiple files.\n","created_at":"2022-03-04T23:59:52Z","closed_at":"2022-03-09T22:56:58Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":872090565,"title":"[XLA:GPU] Cache large constants in the executor and share them between modules","body":"[XLA:GPU] Cache large constants in the executor and share them between modules\n\nThis removes some (large) global constants from the LLVM/PTX entirely so they can be allocated and initialized entirely within XLA. Only globals without any other references in the generated code can be removed in this way.\n","created_at":"2022-03-04T23:53:36Z","closed_at":"2022-03-05T00:18:35Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.42857142857142855}}
{"_id":872081139,"title":"Internal only changes","body":"Internal only changes\n","created_at":"2022-03-04T23:23:28Z","closed_at":"2022-03-31T22:27:43Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.5}}
{"_id":872072316,"title":"Always do safe parsing","body":"Always do safe parsing\n","created_at":"2022-03-04T23:00:23Z","closed_at":"2022-03-07T21:51:20Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":872045663,"title":"[XLA] Handles a special case in HloReshapeInstruction dynamic dimension inference.","body":"[XLA] Handles a special case in HloReshapeInstruction dynamic dimension inference.\n\nIf the input tensor is a 1D tensor and has a dynamic dimension as index 0 with size 1, then sets the output dynamic dimension as index 0.\n\nIn this case, the input dynamic dimension can both be considered as the first dimension (most-major) or the last dimension (most-minor). We prefer to set the output dynamic dimension as the first dimension.\n","created_at":"2022-03-04T22:05:19Z","closed_at":"2022-03-05T01:24:59Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.17857142857142858,"subjectivity":0.369047619047619}}
{"_id":872044079,"title":"Don't allow multi-output fusion when the \"producer\" op is in-place","body":"Don't allow multi-output fusion when the \"producer\" op is in-place\n\nFusion in this case is dangerous. Without in-depth analysis of the consumer we can't know whether or not it will treat the producer's in-place operands safely.\n","created_at":"2022-03-04T22:02:05Z","closed_at":"2022-03-15T02:19:35Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":872025058,"title":"Factor out function for getting xla::ExecutableBuildOptions.","body":"Factor out function for getting xla::ExecutableBuildOptions.\n","created_at":"2022-03-04T21:25:45Z","closed_at":"2022-03-07T19:28:50Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":872021712,"title":"Factor out function for getting vector<xla::Shape*> from vector<xla::Shape>.","body":"Factor out function for getting vector<xla::Shape*> from vector<xla::Shape>.\n","created_at":"2022-03-04T21:19:24Z","closed_at":"2022-03-08T19:54:24Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":871996557,"title":"Generalize einsum to dot_general lowering to allow transposed results.","body":"Generalize einsum to dot_general lowering to allow transposed results.\n\nThis allows ops like this to be lowered properly (was generated\nillegal dot_general ops):\n\n```\n\"mhlo.einsum\"(%424, %298) {einsum_config = \"abd,abc->cd\"} :\n  (tensor<1x512x768xf32>, tensor<1x512x3072xf32>) ->\n     tensor<3072x768xf32>\n```\n\nI found the existing lowering quite buggy, and I believe that two of the tests are incorrect, generating dot_general ops that are actually illegal. MHLO is so under-specified and under-verified, though, so that it is next to impossible to say, so I am just applying best judgment.\n","created_at":"2022-03-04T20:37:02Z","closed_at":"2022-03-04T23:39:09Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":871990359,"title":"Enhance shape inference for ReduceDatasetOp.","body":"Enhance shape inference for ReduceDatasetOp.\n\nSpecifically, trace upwards the IdentityOp chains to get to the op that defines the dataset.\n","created_at":"2022-03-04T20:26:55Z","closed_at":"2022-03-08T03:26:04Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":871970765,"title":"Replace (deprecated) StrEnumAttr with EnumAttr.","body":"Replace (deprecated) StrEnumAttr with EnumAttr.\n\nAlso, move dialect definition into the td file, to allow EnumAttr to generate\nthe necessary attribute parser/printer.\n","created_at":"2022-03-04T19:55:36Z","closed_at":"2022-03-08T15:47:05Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":871959718,"title":"Extract a function for parsing operator BROADCAST_ARGS and BROADCAST_TO","body":"Extract a function for parsing operator BROADCAST_ARGS and BROADCAST_TO\n\nExtract the parsing out of a switch statement case to create a standalone function which can be called by the micro op resolver, following steps on https://github.com/tensorflow/tflite-micro/blob/main/tensorflow/lite/micro/docs/porting_reference_ops.md#3-extract-lites-code-for-parsing-op-parameters-to-a-function-pr1\n","created_at":"2022-03-04T19:43:46Z","closed_at":"2022-03-04T21:57:29Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":871951837,"title":"Add Rank as a synonym for NumDimensions","body":"Add Rank as a synonym for NumDimensions\n\nRank is a common terminology, there are operators (tf.rank) that do the same thing, it is shorter than NumDimensions too.\n\nThis does not yet change any callers to use it. But I plan to use it in the XNNPACK delegate.\n","created_at":"2022-03-04T19:35:37Z","closed_at":"2022-03-04T22:04:32Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":-0.8,"subjectivity":0.9}}
{"_id":871944520,"title":"Disable tensorflow.asan for saved_model_cli_test.","body":"Disable tensorflow.asan for saved_model_cli_test.\n","created_at":"2022-03-04T19:26:14Z","closed_at":"2022-03-04T19:59:36Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":871942679,"title":"Use kernel utils helper to get number of dimensions and size","body":"Use kernel utils helper to get number of dimensions and size\n","created_at":"2022-03-04T19:23:21Z","closed_at":"2022-03-07T20:12:38Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":871940282,"title":"...text exposed to open source public git repo...","body":"...text exposed to open source public git repo...\n","created_at":"2022-03-04T19:19:25Z","closed_at":"2022-03-31T22:27:42Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.2833333333333333}}
{"_id":871934485,"title":"[mhlo] Import tuple-return from mhlo::mapOp's reducer-block to flattened return-val.","body":"[mhlo] Import tuple-return from mhlo::mapOp's reducer-block to flattened return-val.\n\nDuring import (from HLO to MHLO) we flatten the tuple return-type of\nregion-blocks. MHLO mapOp::verifier ensures that the flattened return-type is\ncomaptible with the op-specification.\n\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/tensorflow/tensorflow/pull/54954 from tensorflow:create-pull-request/patch 21bd86102af243cfe92ee6af538ac9070bd35fa0\n","created_at":"2022-03-04T19:11:52Z","closed_at":"2022-03-11T00:12:33Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":871908026,"title":"Add EagerContext option to rewrite jit_compile functions.","body":"Add EagerContext option to rewrite jit_compile functions.\n\nJust adding an option to enable this.  Not used yet.\n","created_at":"2022-03-04T18:28:36Z","closed_at":"2022-03-04T23:18:39Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":871881601,"title":"Provide more helpful messages for some errors when using DistributedValues by registering a custom tensor conversion function for PerReplica. The conversion function first checks the distribution context and raises an error if it's not a per-replica context, instructing the user to enter one. Otherwise, returns the Tensor from PerReplica `values`.","body":"Provide more helpful messages for some errors when using DistributedValues by registering a custom tensor conversion function for PerReplica. The conversion function first checks the distribution context and raises an error if it's not a per-replica context, instructing the user to enter one. Otherwise, returns the Tensor from PerReplica `values`.\n","created_at":"2022-03-04T17:48:54Z","closed_at":"2022-03-09T17:15:10Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.375,"subjectivity":0.41666666666666663}}
{"_id":871873735,"title":"[mhlo] Restrict the op-regions of mhlo::scatterOp from returning tuple-types.","body":"[mhlo] Restrict the op-regions of mhlo::scatterOp from returning tuple-types.\n\nDuring import (from HLO) we flatten the tuple return-types of region-blocks.\n","created_at":"2022-03-04T17:36:44Z","closed_at":"2022-03-08T15:25:54Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":871801804,"title":"Added new syntax constructions to abstract types.","body":"Added new syntax constructions to abstract types.\nSupport of different types in single high level kernel representation.\n","created_at":"2022-03-04T16:07:08Z","closed_at":"2022-03-07T10:54:05Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.13636363636363635,"subjectivity":0.45454545454545453}}
{"_id":871787089,"title":"Introduced optional type argument for tensor Write selector.","body":"Introduced optional type argument for tensor Write selector.\nAllow to use tensors with different types for the same kernel source file.\n","created_at":"2022-03-04T15:49:25Z","closed_at":"2022-03-07T10:26:10Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":871778053,"title":"Support lowering depth-wise convolution with non-zero padding.","body":"Support lowering depth-wise convolution with non-zero padding.\n","created_at":"2022-03-04T15:38:41Z","closed_at":"2022-03-09T00:55:25Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":871738299,"title":"Add FFT lowering.","body":"Add FFT lowering.\n","created_at":"2022-03-04T14:52:42Z","closed_at":"2022-03-08T20:06:26Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":871653203,"title":"Fix TrivialBufferForwarding pass.","body":"Fix TrivialBufferForwarding pass.\n\nIt didn't stop when it already found an input buffer that can be forwarded.\n","created_at":"2022-03-04T13:13:00Z","closed_at":"2022-03-04T13:43:56Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":871573639,"title":"[mhlo] Unbreak the CMake build after the Standard->Func rename","body":"[mhlo] Unbreak the CMake build after the Standard->Func rename\n","created_at":"2022-03-04T11:26:31Z","closed_at":"2022-03-04T11:55:38Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":871540356,"title":"Migrate mhlo bufferization patterns to BufferizableOpInterface implementations","body":"Migrate mhlo bufferization patterns to BufferizableOpInterface implementations\n","created_at":"2022-03-04T10:44:04Z","closed_at":"2022-03-11T12:55:10Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":871498593,"title":"Add a patch to fix LLVM build.","body":"Add a patch to fix LLVM build.\n","created_at":"2022-03-04T09:53:59Z","closed_at":"2022-03-04T12:03:21Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":871478652,"title":"Rename MLIRStandardOpsTransforms to MLIRFuncTransforms","body":"Rename MLIRStandardOpsTransforms to MLIRFuncTransforms\n\nThis reflects the change in LLVM.\n","created_at":"2022-03-04T09:28:28Z","closed_at":"2022-03-04T10:30:56Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":871441321,"title":"Update get_started_low_level.md","body":"Fixed broken link for \"version.h \" I which is included the library headers","created_at":"2022-03-04T08:38:49Z","closed_at":"2022-03-14T14:15:57Z","merged_at":"2022-03-14T14:15:57Z","user_id":59822926,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":871394355,"title":"Replace insecure `tempfile.mktemp` with `tempfile.mkstemp`","body":"This PR replace insecure tempfile.mktemp with tempfile.mkstemp,\r\nas the former are insecure and deprecated:\r\nhttps://docs.python.org/3/library/tempfile.html#tempfile.mktemp\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2022-03-04T07:26:34Z","closed_at":"2022-06-03T00:59:46Z","merged_at":null,"user_id":6932348,"sentiment":{"polarity":-0.5,"subjectivity":0.875}}
{"_id":871376541,"title":"Allow the `root` argument of `Checkpoint` to be a weakref.","body":"Allow the `root` argument of `Checkpoint` to be a weakref.\n","created_at":"2022-03-04T06:56:16Z","closed_at":"2022-03-07T22:16:37Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":871369933,"title":"Add float16 and bfloat16 support for tf.image.rgb_to_hsv/tf.image.hsv_to_rgb","body":"This PR addresses the issue raised in #54855 where there was no float16\r\nand bfloat16 support for tf.image.rgb_to_hsv/tf.image.hsv_to_rgb\r\n\r\nThis PR fixes #54855.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2022-03-04T06:42:52Z","closed_at":"2022-03-07T18:20:10Z","merged_at":"2022-03-07T18:20:09Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":871332242,"title":"Update Eigen to commit:0ae94456a0e6dd5e20ca65ba2f405964f6931faf","body":"Update Eigen to commit:0ae94456a0e6dd5e20ca65ba2f405964f6931faf\n\nCHANGELOG\n=========\n0ae94456a - Remove duplicate IsRowMajor declaration.\n0e6f4e43f - Fix a few confusing comments in psincos_float.\nf1b9692d6 - Removed EIGEN_UNUSED decorations from many functions that are in fact used\n27d8f29be - Update vectorization_logic tests for all platforms.\nc9ff739af - Fix JacobiSVD_LAPACKE bindings\nd0b1aef6f - Speed lscg by using .noalias\n55c7400db - Fix enum conversion warnings in BooleanRedux.\n711803c42 - Skip denormal test if `Cond` is false.\nd819a33bf - Remove poor non-convergence checks in NonLinearOptimization.\n9c07e201f - Modified sqrt/rsqrt for denormal handling.\n1c2690ed2 - Adjust tolerance of matrix_power test for MSVC.\nb48922cb5 - Fix SVD for MSVC+CUDA.\nbf6726a0c - Fix any/all reduction in the case of row-major layout\nf03df0df5 - Fix SVD for MSVC.\n19c39bea2 - Fix mixingtypes for g++-11.\n2ed4bee78 - Fix frexp packetmath tests for MSVC.\nd58e62913 - Disable deprecated warnings for SVD tests on MSVC.\n3d7e2d0e3 - Fix packetmath compilation error.\n897071977 - Fix gcc-5 packetmath_12 bug.\nf0b81fefb - Disable deprecated warnings in SVD tests.\n8b875dbef - Changes to fast SQRT/RSQRT\nf9b7564fa - E2K: initial support of LCC MCST compiler for the Elbrus 2000 CPU architecture\nae86a146b - Modify test expression to avoid numerical differences (#2402).\ncd80e04ab - Add assert for edge case if Thin U Requested at runtime\n35727928a - Fix test macro conflicts with STL headers in C++20\n2dd879d4b - [SYCL] Fix CMake for SYCL support\n550af3938 - Fix for crash bug in SPQRSupport: Initialize pointers to nullptr to avoid free() calls of invalid pointers.\n58a90c746 - Use fixed-sized U/V for fixed-sized inputs.\nc367ed26a - Make FixedInt constexpr, fix ODR of fix<N>\n766087329 - Re-add `svd::compute(Matrix, options)` method to avoid breaking external projects.\na58af20d6 - Add descriptions to Matrix typedefs.\n28e008b99 - Fix sqrt/rsqrt for NEON.\n23755030c - Fix MSVC+NVCC 9.2 pragma error.\n7197b577f - Remove unused macros in AVX packetmath.\nbded5028a - Fix ODR failures in TensorRandom.\n18eab8f99 - Add convenience method `constexpr std::size_t size() const` to `Eigen::IndexList`\nfbc62f7df - Complete doc with MatrixXNt and MatrixNXt\ncb5ca1c90 - Cleanup compiler warnings, etc from recent changes in GEMM & GEMV for PowerPC\ncec0005c7 - Return alphas() and betas() by const reference\n92d0026b7 - Provide a definition for numeric_limits static data members\nb94bddcde - Typo in COD's doc: matrixR() -> matrixT()\n94bed2b80 - Fix collision with resolve.h.\nb88de3f24 - Update MPL2 with https.\n9441d94dc - Revert \"Make fixed-size Matrix and Array trivially copyable after C++20\"\n979fdd58a - Add generic fast psqrt and prsqrt impls and make them correct for 0, +Inf, NaN, and negative arguments.\n4bffbe84f - Restrict GCC<6.3 maxpd workaround to only gcc.\ne7f4a901e - Define EIGEN_HAS_AVX512_MATH in PacketMath.\n6b60bd675 - Fix 32-bit arm int issue.\n96da541cb - Fix AVX512 math function consistency, enable for ICC.\ncafeadffe - Fix ODR violations.\n18b50458b - Update SVD Module with Options template parameter\n89c6ab238 - removed some documentation referencing c++98 behaviour\n66464bd2a - Fix number of block columns to NOT overflow the cache (PowerPC) abnormally in GEMV\n","created_at":"2022-03-04T05:24:58Z","closed_at":"2022-03-09T19:57:24Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":871331517,"title":"Added bazel build event logging in protobuf format to build scripts.","body":"Added bazel build event logging in protobuf format to build scripts.\n","created_at":"2022-03-04T05:23:22Z","closed_at":"2022-03-04T23:06:30Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":871272271,"title":"[tf:tfrt] Warm up JitRt kernels in benchmarks","body":"[tf:tfrt] Warm up JitRt kernels in benchmarks\n","created_at":"2022-03-04T02:56:55Z","closed_at":"2022-03-04T19:06:13Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.6,"subjectivity":0.6}}
{"_id":871271763,"title":"Expose the on-demand checkpointing API.","body":"Expose the on-demand checkpointing API.\n","created_at":"2022-03-04T02:55:38Z","closed_at":"2022-03-31T22:27:42Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":871265330,"title":"Fix naming of layers when building with symbolic tensors","body":"https://github.com/tensorflow/tensorflow/issues/27298","created_at":"2022-03-04T02:39:00Z","closed_at":"2022-03-04T05:58:51Z","merged_at":null,"user_id":10225468,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":871251136,"title":"Add ContainerMap forward type inference function","body":"Add ContainerMap forward type inference function\n\nHelper for ops with semantics of changing the content of a container,\ne.g. changing the batch size of a dataset.\n\n`T[PRODUCT[U1, ..., Un]] -> T[PRODUCT[V1, ..., Vm]]`\n\nwhere the i'th input is the input container and its type is T, and m is determined and V is obtained from an \"map\" mapping U -> V.\nBoth the \"map\" mapping is parameterized by this factory.\nNote that when the \"map\" function is the identity function, this becomes equivalent to ReplicateInput.\n","created_at":"2022-03-04T02:04:10Z","closed_at":"2022-03-31T22:27:41Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":871244768,"title":"[XLA] Change default dump format of HLO modules to ShortParsable, adding an option to use the old behavior.","body":"[XLA] Change default dump format of HLO modules to ShortParsable, adding an option to use the old behavior.\n","created_at":"2022-03-04T01:47:05Z","closed_at":"2022-03-04T05:05:20Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.1,"subjectivity":0.2}}
{"_id":871240872,"title":"Fix Reference Type Supertype","body":"Fix Reference Type Supertype\n","created_at":"2022-03-04T01:36:26Z","closed_at":"2022-03-07T20:25:08Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":871220377,"title":"Remove weekly invocation","body":"Remove weekly invocation\n","created_at":"2022-03-04T00:47:03Z","closed_at":"2022-03-09T00:48:10Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":871220059,"title":"Check in MLIR quantization dialect.","body":"Check in MLIR quantization dialect.\n\nThis change contains a forked version of LLVM project's MLIR based on the\ndiscussion at https://discourse.llvm.org/t/rfc-removing-the-quant-dialect/3643\n","created_at":"2022-03-04T00:46:11Z","closed_at":"2022-03-31T22:28:19Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":871191847,"title":"[XLA:SPMD] Fix SPMD logger.","body":"[XLA:SPMD] Fix SPMD logger.\n\nIt should output the original HLO in the beginning of each entry\n","created_at":"2022-03-03T23:59:39Z","closed_at":"2022-03-04T05:16:09Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":871189526,"title":"[mhlo] Verifier for mhlo.reduce_precision","body":"[mhlo] Verifier for mhlo.reduce_precision\n","created_at":"2022-03-03T23:54:04Z","closed_at":"2022-03-07T20:53:47Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":871181292,"title":"logging warning for experimental_deterministic","body":"logging warning for experimental_deterministic\n","created_at":"2022-03-03T23:36:00Z","closed_at":"2022-03-31T22:28:18Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":871181235,"title":"[tf.data] Create `AssertPrevDatasetOp`.","body":"[tf.data] Create `AssertPrevDatasetOp`.\n\nThis is a sister op to `AssertNextDatasetOp`.  Both ops can assert dataset names, but `AssertPrevDatasetOp` can additionally assert other attributes.\n","created_at":"2022-03-03T23:35:54Z","closed_at":"2022-03-05T00:26:08Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":871119035,"title":"Update multi_signatures.bin test data file to support `shape_signature` field in the tensors.","body":"Update multi_signatures.bin test data file to support `shape_signature` field in the tensors.\n","created_at":"2022-03-03T22:57:00Z","closed_at":"2022-03-08T20:22:52Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":871089087,"title":"Update the RBE images to the latest container versions","body":"Automated PR created once per week to get the latest Docker images.\nSee https://github.com/tensorflow/tensorflow/blob/master/.github/workflows/update-rbe.yml","created_at":"2022-03-03T22:30:53Z","closed_at":"2022-03-04T19:26:46Z","merged_at":"2022-03-04T19:26:46Z","user_id":16359713,"sentiment":{"polarity":0.5,"subjectivity":0.9}}
{"_id":871065474,"title":"[XNNPACK] Support SPLIT operator with 2 outputs","body":"[XNNPACK] Support SPLIT operator with 2 outputs\n","created_at":"2022-03-03T22:12:49Z","closed_at":"2022-03-07T19:17:10Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":871063001,"title":"Expand test coverage of `ConvertPyObjectToAttributeType` which can be used to speed up `apply_op_helper`","body":"Expand test coverage of `ConvertPyObjectToAttributeType` which can be used to speed up `apply_op_helper`\n","created_at":"2022-03-03T22:10:40Z","closed_at":"2022-03-04T18:05:39Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":871058955,"title":"Add TPUHardwareFeature in the tpu topology proto and populate it based on the tpu version (variant) during configuration.","body":"Add TPUHardwareFeature in the tpu topology proto and populate it based on the tpu version (variant) during configuration.\n","created_at":"2022-03-03T22:06:57Z","closed_at":"2022-03-03T22:40:45Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":871050889,"title":"Wait for unfinished nodes before deleting the executor","body":"Wait for unfinished nodes before deleting the executor\n","created_at":"2022-03-03T21:58:22Z","closed_at":"2022-03-05T00:22:48Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":871035785,"title":"Removes extra call to native.genrule() because underlying bugs requiring the call are now resolved.  This cleans up the code and reduces Forge impact a tiny bit.","body":"Removes extra call to native.genrule() because underlying bugs requiring the call are now resolved.  This cleans up the code and reduces Forge impact a tiny bit.\n","created_at":"2022-03-03T21:36:14Z","closed_at":"2022-03-07T22:14:48Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.3}}
{"_id":871035760,"title":"[lite]Fix for missing uint16 in supported types.","body":"[lite]Fix for missing uint16 in supported types.\n","created_at":"2022-03-03T21:36:12Z","closed_at":"2022-03-03T22:28:43Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":871025791,"title":"Use tensorflow-jenkins token to create pull requests","body":"Use tensorflow-jenkins token to create pull requests\n","created_at":"2022-03-03T21:21:35Z","closed_at":"2022-03-03T21:45:54Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":871022158,"title":"Flesh out DistributedValues documentation: add details on PerReplica and Mirrored types, show return values in examples, and add a PerReplica page.","body":"Flesh out DistributedValues documentation: add details on PerReplica and Mirrored types, show return values in examples, and add a PerReplica page.\n","created_at":"2022-03-03T21:15:52Z","closed_at":"2022-03-30T16:24:14Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":871019702,"title":"Use TraceType for experimental_relax_shapes","body":"Use TraceType for experimental_relax_shapes\n","created_at":"2022-03-03T21:12:08Z","closed_at":"2022-03-22T22:10:35Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":871015917,"title":"Cleanup legacy Python2 compatibility on targets under tensorflow/lite/.","body":"Cleanup legacy Python2 compatibility on targets under tensorflow/lite/.\n\nThese targets were migrated away from \"PY2AND3\" to \"PY3\" in\nhttps://github.com/tensorflow/tensorflow/commit/034633f23b6a7f535c95810dd51f2061040417b9.\n\n- Remove usage of `six` package.\n- Remove lint directive for `enum` package import.\n- Remove unecessary explicit `object` inheritance for classes.\n","created_at":"2022-03-03T21:06:36Z","closed_at":"2022-03-31T22:28:18Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":871007895,"title":"Update the RBE images to the latest container versions","body":"Automated PR created once per week to get the latest Docker images.\nSee https://github.com/tensorflow/tensorflow/blob/master/.github/workflows/update-rbe.yml","created_at":"2022-03-03T20:54:55Z","closed_at":"2022-03-03T21:08:34Z","merged_at":null,"user_id":41898282,"sentiment":{"polarity":0.5,"subjectivity":0.9}}
{"_id":870999691,"title":"* Define a new \"CompositeTensorGradientProtocol\", which can be used by CompositeTensors to indicate how gradients should be computed.","body":"* Define a new \"CompositeTensorGradientProtocol\", which can be used by CompositeTensors to indicate how gradients should be computed.\n* Extend tf.GradientTape.gradient and tf.gradients to support CompositeTensor sources (xs) and targets (ys) that implement the CompositeTensorGradientProtocol.\n* Update RaggedTensor to implement the CompositeTensorGradientProtocol.\n","created_at":"2022-03-03T20:42:22Z","closed_at":"2022-03-17T18:23:56Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.13636363636363635,"subjectivity":0.45454545454545453}}
{"_id":870990441,"title":"Enable tensorflow.msan for `tensor_util_test`.","body":"Enable tensorflow.msan for `tensor_util_test`.\n","created_at":"2022-03-03T20:29:04Z","closed_at":"2022-03-03T21:42:39Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870984596,"title":"[mhlo] Verifier for mhlo.ScatterOP.","body":"[mhlo] Verifier for mhlo.ScatterOP.\n","created_at":"2022-03-03T20:21:20Z","closed_at":"2022-03-08T01:31:34Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870966699,"title":"[tf:tfrt] Add transpose benchmarks for large tensors","body":"[tf:tfrt] Add transpose benchmarks for large tensors\n\nThis patch adds large variants of the transpose benchmarks.\n\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/tensorflow/tensorflow/pull/52007 from benbarsdell:gpu-SparseSliceGrad-cpu-refactor 4199f642ceb75852e4e8bca36b2b2af5cf6fadf2\n","created_at":"2022-03-03T20:00:48Z","closed_at":"2022-03-09T21:53:41Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.42857142857142855}}
{"_id":870962867,"title":"Try setting the commit author to tensorflow-jenkins","body":"Try setting the commit author to tensorflow-jenkins\n","created_at":"2022-03-03T19:55:16Z","closed_at":"2022-03-03T20:41:11Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870948854,"title":"[tf][tfg] Add a dialect interface to the TF op registry","body":"[tf][tfg] Add a dialect interface to the TF op registry\n\nAdds a dialect interface to the TFG dialect for querying the TF op registry.\nPasses should be querying the op registry through this interface instead of\ndirectly querying the global registry. The default implementation of the registry interface returns conservative values for op properties. A concrete implementation using an op registry must be injected by the user. This is to avoid having the TFG dialect depend on the TF framework library.\n","created_at":"2022-03-03T19:34:43Z","closed_at":"2022-03-03T22:17:38Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870937522,"title":"When fixing fdef, reuse the imported graph.","body":"When fixing fdef, reuse the imported graph.\n\nThis change avoids creating extra copies of FunctionDef during the import,\nand saves peak memory usage.\n\nWe also observed that this change reduces the memory usage immediately after\na model is loaded. The hypothesis is something is holding a reference to the\nGraphDef message which contains all FunctionDef messages, and the extra copies from\nfix_fdef at least doubles the memory usage of FunctionDef messages.\n\nIt is likely that reference to the GraphDef message is via a submessage of\nGraphDef -- Unfortunately we were never able to find it.\n","created_at":"2022-03-03T19:19:17Z","closed_at":"2022-03-03T19:55:54Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870920450,"title":"#tf-data-service Add streamz to measure dataset initilization time.","body":"#tf-data-service Add streamz to measure dataset initilization time.\n\nThis CL tries to collect data to measure the dataset initialization\ntime for `experimental_distribute_dataset`.\n","created_at":"2022-03-03T18:57:03Z","closed_at":"2022-03-08T19:18:49Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870914651,"title":"Update TFLite C API test to delete model after interpreter destruction.","body":"Update TFLite C API test to delete model after interpreter destruction.\n","created_at":"2022-03-03T18:49:54Z","closed_at":"2022-03-03T19:41:42Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870905662,"title":"Update the RBE images to the latest container versions","body":"Automated PR created once per week to get the latest Docker images.\nSee https://github.com/tensorflow/tensorflow/blob/master/.github/workflows/update-rbe.yml","created_at":"2022-03-03T18:40:36Z","closed_at":"2022-03-03T20:09:42Z","merged_at":null,"user_id":41898282,"sentiment":{"polarity":0.5,"subjectivity":0.9}}
{"_id":870905438,"title":"Add warning in test base for when reference literal is all zeros.","body":"Add warning in test base for when reference literal is all zeros.\n","created_at":"2022-03-03T18:40:21Z","closed_at":"2022-03-31T22:28:18Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":-0.8,"subjectivity":1.0}}
{"_id":870878371,"title":"(lite) Use tflite::internal::VerifyFlatBufferAndGetModel from JNI code.","body":"(lite) Use tflite::internal::VerifyFlatBufferAndGetModel from JNI code.\n\n1. Add a shim function for tflite::internal::VerifyFlatBufferAndGetModel\nas a restricted visibility internal API.\n2. When checking the validity of the model flatbuffer in\nthe Java API implementation, use the new shim function\nrather than just directly calling the FlatBuffer routines.\n","created_at":"2022-03-03T18:10:43Z","closed_at":"2022-03-31T22:28:17Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870877619,"title":"(lite) Add shim function tflite_shims::internal::VerifyFlatBufferAndGetModel.","body":"(lite) Add shim function tflite_shims::internal::VerifyFlatBufferAndGetModel.\n\nAdd a shim function for tflite::internal::VerifyFlatBufferAndGetModel\nas a restricted visibility internal API.\n\nThis change is in anticipation of changing the Java API code to\nuse the new shims function, rather than just directly calling the\nFlatBuffer routines.\n","created_at":"2022-03-03T18:09:47Z","closed_at":"2022-03-31T22:28:17Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870875813,"title":"Update TFRT dependency to use revision","body":"Update TFRT dependency to use revision\nhttp://github.com/tensorflow/runtime/commit/f745b2e92122060ec7fdcf1ccb4a77e90d5519f9.\n","created_at":"2022-03-03T18:07:33Z","closed_at":"2022-03-31T22:28:16Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870831786,"title":"Move LiftAsFunctionCall to a util library","body":"Move LiftAsFunctionCall to a util library\n","created_at":"2022-03-03T17:20:27Z","closed_at":"2022-03-04T07:43:23Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870827115,"title":"Add XNNPACK delegate per operator profiling to TFLite","body":"Add XNNPACK delegate per operator profiling to TFLite\n","created_at":"2022-03-03T17:15:50Z","closed_at":"2022-03-31T22:28:16Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870795446,"title":"[ROCm] ROCm bef thunk blasgemm refactor","body":"/cc @chsigg @hanbinyoon ","created_at":"2022-03-03T16:46:27Z","closed_at":"2022-03-07T10:41:21Z","merged_at":"2022-03-07T10:41:21Z","user_id":70280935,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870718513,"title":"Add Arm Ltd to AUTHORS","body":"Adding Arm Ltd to AUTHORS file.","created_at":"2022-03-03T15:30:42Z","closed_at":"2022-03-09T16:35:48Z","merged_at":"2022-03-09T16:35:48Z","user_id":15377492,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870660758,"title":"Fix a few minor formatting issues in the new bug template for TF Lite in Play Services.","body":"Fix a few minor formatting issues in the new bug template for TF Lite in Play Services.\n","created_at":"2022-03-03T14:40:23Z","closed_at":"2022-03-03T14:55:09Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":-0.03787878787878788,"subjectivity":0.2515151515151515}}
{"_id":870655087,"title":"Avoid including the same .cc file in srcs of multiple rules.","body":"Avoid including the same .cc file in srcs of multiple rules.\n\nEnsure that the .cc files for variable ops kernels are only included in\nthe \"srcs\" of one rule (\"variable_ops_kernels\"), and change the other\nrule that had them listed in srcs (\"builtin_ops_kernels\") to instead just\nhave a dependency on variable_ops_kernels. This is cleaner and avoids link\nerrors if you try to link both builtin_op_kernels and variable_op_kernels\ninto the same target.\n","created_at":"2022-03-03T14:34:41Z","closed_at":"2022-03-04T09:27:22Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0625}}
{"_id":870555489,"title":"Fixed Input check in #54849","body":"Added a ValueError for checking whether splits[0] is 0 or not.","created_at":"2022-03-03T12:48:15Z","closed_at":"2022-03-04T16:35:28Z","merged_at":null,"user_id":86464649,"sentiment":{"polarity":0.1,"subjectivity":0.2}}
{"_id":870524439,"title":"Disable failing test on TFRT","body":"Disable failing test on TFRT\n","created_at":"2022-03-03T12:10:23Z","closed_at":"2022-03-03T12:22:08Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870479774,"title":"Added function to convert DataType to Glsl shader type.","body":"Added function to convert DataType to Glsl shader type.\n","created_at":"2022-03-03T11:15:46Z","closed_at":"2022-03-04T14:32:09Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870470680,"title":"Visibility changes for the internal builds","body":"Visibility changes for the internal builds\n","created_at":"2022-03-03T11:06:23Z","closed_at":"2022-03-05T08:19:08Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870438772,"title":"Reduce the dependencieson dtypes.py","body":"Reduce the dependencieson dtypes.py\n","created_at":"2022-03-03T10:30:35Z","closed_at":"2022-03-31T22:28:16Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870383864,"title":"Added GpuInfo argument to virtual GPUObjectDescriptor::PerformConstExpr.","body":"Added GpuInfo argument to virtual GPUObjectDescriptor::PerformConstExpr.\n","created_at":"2022-03-03T09:29:35Z","closed_at":"2022-03-03T21:19:20Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870368329,"title":"Added resolver of const expressions for GpuObjects.","body":"Added resolver of const expressions for GpuObjects.\n","created_at":"2022-03-03T09:11:30Z","closed_at":"2022-03-03T22:51:42Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870337655,"title":"FIXES github issue #47546","body":"FIXES github issue #47546\n","created_at":"2022-03-03T08:32:43Z","closed_at":"2022-03-04T19:24:41Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870330381,"title":"Stage data on gpu pinned memory during transfer","body":"Stage data on gpu pinned memory during transfer\n","created_at":"2022-03-03T08:23:03Z","closed_at":"2022-03-08T20:41:54Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870324817,"title":"Stage data on gpu pinned memory during transfer","body":"Stage data on gpu pinned memory during transfer\n","created_at":"2022-03-03T08:15:11Z","closed_at":"2022-03-31T22:28:15Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870273431,"title":"Minor internal changes","body":"Minor internal changes\n","created_at":"2022-03-03T06:55:40Z","closed_at":"2022-03-31T22:28:15Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":-0.025,"subjectivity":0.1}}
{"_id":870273237,"title":"Accept default attributes in quantized composite functions","body":"Accept default attributes in quantized composite functions\n","created_at":"2022-03-03T06:55:19Z","closed_at":"2022-03-03T12:04:51Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870262168,"title":"This is just for testing","body":"This is just for testing\n","created_at":"2022-03-03T06:34:28Z","closed_at":"2022-03-31T22:28:14Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870242302,"title":"[TF:TRT] Enable out-of-tree op converter registration","body":"This change moves the static registration system symbols for TF-TRT into `libtensorflow_framework.so`. This enables users to register custom op converters with TF-TRT without requiring TF to be integrated into their build system. Users will only need a C++ compiler and a `pip` installed Tensorflow package to register a custom converter. It also adds utilities to print out the list of op converters registered with TF-TRT.","created_at":"2022-03-03T05:58:37Z","closed_at":"2022-04-20T18:37:17Z","merged_at":"2022-04-20T18:37:17Z","user_id":30323187,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870210433,"title":"Added additional compiler `-mfp16-format=ieee`","body":"For successful cross-compilation for ARM using CMake, we should add `-mfp16-format=ieee` an additional compiler option to fix `unknown type name 'float16x8_t'`. For more  details please refer [this issue](https://github.com/tensorflow/tensorflow/issues/54337#issuecomment-1057618003).Thanks!","created_at":"2022-03-03T04:51:31Z","closed_at":"2022-03-25T15:25:25Z","merged_at":"2022-03-25T15:25:25Z","user_id":74177924,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870206294,"title":"Update the CMake ARM compilation note when enabling XNNPACK, i.e. suggesting adding \"-mfp16-format=ieee\" as an additional compiler flag.","body":"Update the CMake ARM compilation note when enabling XNNPACK, i.e. suggesting adding \"-mfp16-format=ieee\" as an additional compiler flag.\n","created_at":"2022-03-03T04:40:29Z","closed_at":"2022-03-03T04:52:22Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870203166,"title":"Use correct dimensions when legalizing tf.IRFFT to mhlo","body":"Use correct dimensions when legalizing tf.IRFFT to mhlo\n\nThis fixes a bug in tf legalization: While we need to calculate the sizes of tensor slices using after running the IRFFT, the fft_length before running the non-inverse FFT is the argument to mhlo.fft, according to the HLO specification.\n\nThis fix unblocks merging the mhlo.fft verifier.\n","created_at":"2022-03-03T04:32:26Z","closed_at":"2022-03-04T17:44:02Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870193656,"title":"[mhlo] Verifier for mhlo.cholesky","body":"[mhlo] Verifier for mhlo.cholesky\n","created_at":"2022-03-03T04:14:06Z","closed_at":"2022-03-04T17:55:50Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870160438,"title":"Internal document update","body":"Internal document update\n\nOn the TFLite 16x8 quantization operator coverage.\n","created_at":"2022-03-03T02:50:34Z","closed_at":"2022-03-03T03:11:54Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870136712,"title":"PR #54504: [ROCm] Syncing contents of the rocm configuration files with the ROCm fork","body":"PR #54504: [ROCm] Syncing contents of the rocm configuration files with the ROCm fork\n\nImported from GitHub PR https://github.com/tensorflow/tensorflow/pull/54504\n\nThis commit syncs the contents of the rocm configuration files (in the `third_party/gpus/` directory) from the ROCm TF fork.\n\nThe changes mostly involves updates asssociated with the newer ROCm reelases (4.5, 5.0), like\n* addition of new libs (hipBlas, hipSolver)\n* new location for rocm version information, + new routine to provide access to it\n* explicitly adding `-lstdc++` linker flag as the last option to the linker command\n  * see this PR for more details - https://github.com/ROCmSoftwarePlatform/tensorflow-upstream/pull/1311\n\n-------------------------\n\n/cc @cheshire @chsigg \nCopybara import of the project:\n\n--\n74e9961ac19004143f23ff7fa5a0cb0d447066de by Deven Desai <deven.desai.amd@gmail.com>:\n\n[ROCm] Syncing contents of the rocm configuration files with the ROCm fork\n\nThis commit syncs the contents of the rocm configuration files (in the `third_party/gpus/` directory) from the ROCm TF fork.\n\nThe changes mostly involves updates asssociated with the newer ROCm reelases (4.5, 5.0), like\n* addition of new libs (hipBlas, hipSolver)\n* new location for rocm version information, + new routine to provide access to it\n* explicitly adding `-lstdc++` linker flag as the last option to the linker command\n  * see this PR for more details - https://github.com/ROCmSoftwarePlatform/tensorflow-upstream/pull/1311\n\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/tensorflow/tensorflow/pull/54504 from ROCmSoftwarePlatform:deven/upstream_rocm_config_changes 74e9961ac19004143f23ff7fa5a0cb0d447066de\n","created_at":"2022-03-03T01:55:08Z","closed_at":"2022-03-31T22:28:14Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":-0.75,"subjectivity":1.0}}
{"_id":870128911,"title":"Internal document update","body":"Internal document update\n\nOn the TFLite full int quantization operator coverage.\n","created_at":"2022-03-03T01:34:24Z","closed_at":"2022-03-03T01:49:58Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870127241,"title":"[tf.data] The main purpose of this CL is to allow `Prefetch` legacy autotuner to check for memory consumption before increasing the `Prefetch` buffer. In order to do this, it saves the `cpu_budget` and `ram_budget` in `Model`. It also creates a `maximum_buffered_bytes_` that is updated after every iteration of Autotune optimization, which is done to prevent having to create a snapshot of the `Model` and compute the maximum buffered bytes in the `Prefetch` legacy autotuner.","body":"[tf.data] The main purpose of this CL is to allow `Prefetch` legacy autotuner to check for memory consumption before increasing the `Prefetch` buffer. In order to do this, it saves the `cpu_budget` and `ram_budget` in `Model`. It also creates a `maximum_buffered_bytes_` that is updated after every iteration of Autotune optimization, which is done to prevent having to create a snapshot of the `Model` and compute the maximum buffered bytes in the `Prefetch` legacy autotuner.\n","created_at":"2022-03-03T01:30:02Z","closed_at":"2022-03-09T18:21:49Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.16666666666666666,"subjectivity":0.3333333333333333}}
{"_id":870123607,"title":"Introduce experimental_placeholder_value to enable supertype tracing","body":"Introduce experimental_placeholder_value to enable supertype tracing\n","created_at":"2022-03-03T01:21:51Z","closed_at":"2022-03-22T20:50:28Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870119429,"title":"Internal experimental code change.","body":"Internal experimental code change.\n","created_at":"2022-03-03T01:12:36Z","closed_at":"2022-03-03T20:38:05Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.05,"subjectivity":0.2}}
{"_id":870117891,"title":"\"Expose compilability_check_util to friend packages of tensorflow/compiler/jit.\"","body":"\"Expose compilability_check_util to friend packages of tensorflow/compiler/jit.\"\n\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/tensorflow/tensorflow/pull/54504 from ROCmSoftwarePlatform:deven/upstream_rocm_config_changes 74e9961ac19004143f23ff7fa5a0cb0d447066de\n","created_at":"2022-03-03T01:09:05Z","closed_at":"2022-03-03T21:30:45Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870114590,"title":"Fix the race condition issue in asynchronous checkpoint.","body":"Fix the race condition issue in asynchronous checkpoint.\n","created_at":"2022-03-03T01:01:55Z","closed_at":"2022-03-04T08:54:19Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870106541,"title":"[XNNPACK] Support CONCATENATION operator with 2 inputs","body":"[XNNPACK] Support CONCATENATION operator with 2 inputs\n","created_at":"2022-03-03T00:41:51Z","closed_at":"2022-03-03T18:25:05Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870105169,"title":"RFFT is the mode that expands dims, not IRFFT","body":"RFFT is the mode that expands dims, not IRFFT\n","created_at":"2022-03-03T00:39:00Z","closed_at":"2022-03-03T01:30:29Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870095777,"title":"Use InferTensorType instead","body":"Use InferTensorType instead\n","created_at":"2022-03-03T00:21:28Z","closed_at":"2022-03-31T22:28:13Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870089297,"title":"Increase compression_utils_test memory limit to 24g and re-enable msan.","body":"Increase compression_utils_test memory limit to 24g and re-enable msan.\n","created_at":"2022-03-03T00:09:34Z","closed_at":"2022-03-03T17:07:40Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870083558,"title":"[mhlo] Verifier for mhlo.fft","body":"[mhlo] Verifier for mhlo.fft\n","created_at":"2022-03-02T23:57:59Z","closed_at":"2022-03-17T22:31:26Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870063875,"title":"Create workflow to automate RBE image updates","body":"This creates a new workflow that runs once per week or can be triggered manually to create a PR that automatically updates the list of sha256 hashes for the RBE docker containers to the latest versions available (for the SIG Build containers.)\n","created_at":"2022-03-02T23:22:01Z","closed_at":"2022-03-03T17:25:59Z","merged_at":"2022-03-03T17:25:59Z","user_id":32465472,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870057718,"title":"[oneDNN] Redesigning the API of quantized convolution ops/fusions","body":"This PR consolidates many existing Convolution ops/fusions into few. With the new ops API, single op will cover several fusions. In this PR we introduce 2 ops that replaces about 16 existing ops. The plan is to get rid of the old ops at some point in the future.\r\nFor example all below existing ops/fusions are covered under the new op `_QuantizedConv2D`:\r\n_MklQuantizedConv2D\r\n_MklQuantizedConv2DAndRequantize\r\n_MklQuantizedConv2DWithBias\r\n_MklQuantizedConv2DWithBiasAndRequantize\r\n_MklQuantizedConv2DAndRelu\r\n_MklQuantizedConv2DAndReluAndRequantize\r\n_MklQuantizedConv2DWithBiasAndRelu\r\n_MklQuantizedConv2DWithBiasAndReluAndRequantize\r\n_MklQuantizedConv2DWithBiasSumAndRelu\r\n_MklQuantizedConv2DWithBiasSumAndReluAndRequantize\r\n_MklQuantizedConv2DWithBiasSignedSumAndReluAndRequantize\r\n_MklQuantizedConv2DPerChannel","created_at":"2022-03-02T23:09:48Z","closed_at":"2022-09-15T01:24:50Z","merged_at":"2022-09-15T01:24:50Z","user_id":24963061,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870048191,"title":"Dynamic bounds storage.","body":"Dynamic bounds storage.\n\nThis adds bounds.{cc,h}, which allow to store dynamic bound information\nin the \"encoding\" attribute of RankedTensorType, via either function call\nor by attaching an (external) attribute interface to IntegerSetAttr.\n","created_at":"2022-03-02T22:51:13Z","closed_at":"2022-03-31T22:28:13Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.16666666666666666}}
{"_id":870041790,"title":"Fix dependencies for random_index_shuffle.","body":"Fix dependencies for random_index_shuffle.\n","created_at":"2022-03-02T22:40:06Z","closed_at":"2022-03-02T23:33:54Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870026771,"title":"Reimplement tf2xla ResizeBilinearOp using gather.","body":"Reimplement tf2xla ResizeBilinearOp using gather.\n\nPrior to this change, the `ResizeBilinearOp` was marked slow and skipped during XLA autoclustering. This change unmarks it so it can be clustered.\n","created_at":"2022-03-02T22:15:54Z","closed_at":"2022-03-04T15:21:34Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870025612,"title":"Remove 'reachability_' as a member in InstructionFusion","body":"Remove 'reachability_' as a member in InstructionFusion\n\nIt was only being used as a shortcut for accessing a loop variable, instead of just directly passing it as a parameter to where it's used. This makes it difficult to see where it is and is not used, mutated, etc.\n","created_at":"2022-03-02T22:14:04Z","closed_at":"2022-03-09T20:01:01Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870022270,"title":"Add a unit test for single core TPU jit compile with outside compilation.","body":"Add a unit test for single core TPU jit compile with outside compilation.\n\nThis test currently fails but should work in the future once the TF2XLA rewrite passes are enabled for this flow.\n","created_at":"2022-03-02T22:08:34Z","closed_at":"2022-03-04T18:51:10Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":-0.03571428571428571,"subjectivity":0.13214285714285715}}
{"_id":870017790,"title":"Export Tracing Protocol","body":"Export Tracing Protocol\n","created_at":"2022-03-02T22:01:28Z","closed_at":"2022-03-31T22:28:13Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870014594,"title":"Support 2-output split nodes using copy operators","body":"Support 2-output split nodes using copy operators\n\nA 2-output split is implemented as 2 strided copy operators.\n","created_at":"2022-03-02T21:56:13Z","closed_at":"2022-03-31T22:28:12Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870009236,"title":"Remove the unused 'module_' member from InstructionFusion","body":"Remove the unused 'module_' member from InstructionFusion\n","created_at":"2022-03-02T21:48:03Z","closed_at":"2022-03-03T00:18:05Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":870009082,"title":"Support Keras saving/loading for ShardedVariables with arbitrary partitions.","body":"Support Keras saving/loading for ShardedVariables with arbitrary partitions.\n","created_at":"2022-03-02T21:47:47Z","closed_at":"2022-03-31T22:28:12Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":-0.1,"subjectivity":0.6}}
{"_id":869998758,"title":"Change VLOG(0) -> VLOG(1) in nvptx_compiler.cc to reduce log spam at the default vlog level.","body":"Change VLOG(0) -> VLOG(1) in nvptx_compiler.cc to reduce log spam at the default vlog level.\n","created_at":"2022-03-02T21:32:41Z","closed_at":"2022-03-02T22:30:51Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":869990465,"title":"[XLA] Add a utility function to hoist entry program parameters.","body":"[XLA] Add a utility function to hoist entry program parameters.\n\nHoisting these to the beginning of the computation increase opportunities to\nprefetch them. This does not increase the amount of memory needed since these\nbuffers are live throughout the program.\n","created_at":"2022-03-02T21:21:42Z","closed_at":"2022-03-04T19:02:43Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":869968951,"title":"Removing unused `ctx` argument.","body":"Removing unused `ctx` argument.\n","created_at":"2022-03-02T20:54:27Z","closed_at":"2022-03-03T00:51:26Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":869962083,"title":"[tf.data] The main purpose of this CL is to allow `Prefetch` legacy autotuner to check for memory consumption before increasing the `Prefetch` buffer. In order to do this, it saves the `cpu_budget` and `ram_budget` in `Model`. It also creates a `cached_maximum_buffered_bytes_` that is updated after every iteration of Autotune optimization, which is done to prevent having to create a snapshot of the `Model` and compute the maximum buffered bytes in the `Prefetch` legacy autotuner.","body":"[tf.data] The main purpose of this CL is to allow `Prefetch` legacy autotuner to check for memory consumption before increasing the `Prefetch` buffer. In order to do this, it saves the `cpu_budget` and `ram_budget` in `Model`. It also creates a `cached_maximum_buffered_bytes_` that is updated after every iteration of Autotune optimization, which is done to prevent having to create a snapshot of the `Model` and compute the maximum buffered bytes in the `Prefetch` legacy autotuner.\n","created_at":"2022-03-02T20:45:58Z","closed_at":"2022-03-02T23:44:59Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.16666666666666666,"subjectivity":0.3333333333333333}}
{"_id":869949936,"title":"Fix default_types most_specific_common_supertype","body":"Fix default_types most_specific_common_supertype\n","created_at":"2022-03-02T20:30:30Z","closed_at":"2022-03-02T20:55:01Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":869948310,"title":"Disable tensorflow.msan for compression_utils_test.","body":"Disable tensorflow.msan for compression_utils_test.\n","created_at":"2022-03-02T20:28:17Z","closed_at":"2022-03-02T21:21:01Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":869940948,"title":"Disable tensorflow.msan for `tensor_util_test`.","body":"Disable tensorflow.msan for `tensor_util_test`.\n","created_at":"2022-03-02T20:17:39Z","closed_at":"2022-03-02T21:14:57Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":869914256,"title":"Add FusedSparseConvGpuV2 to AllowList ops in FP16","body":"Add FusedSparseConvGpuV2 to AllowList ops in FP16\n","created_at":"2022-03-02T19:51:50Z","closed_at":"2022-03-31T22:28:11Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":869912922,"title":"[mlir/tfg] Avoid name collision for identity node in the const dedupe hoist pass.","body":"[mlir/tfg] Avoid name collision for identity node in the const dedupe hoist pass.\n\nAdding an Identity node with the same name as a constant makes the MLIR TFG export to the GraphDef fail.\nLet the name have `const_dedupe_hoist/` prefix followed by the const name. There is still a chance that this will lead to collision, but the surface is very limited.\nIt might worth to consider better unique name generation to avoid collisions, I left a TODO to address this.\n","created_at":"2022-03-02T19:50:33Z","closed_at":"2022-03-04T19:28:46Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":869910285,"title":"Internal experimental change.","body":"Internal experimental change.\n","created_at":"2022-03-02T19:46:38Z","closed_at":"2022-03-02T20:03:02Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.05,"subjectivity":0.2}}
{"_id":869906277,"title":"[mhlo] Verifier for mhlo.BatchNormGradOp","body":"[mhlo] Verifier for mhlo.BatchNormGradOp\n","created_at":"2022-03-02T19:40:39Z","closed_at":"2022-03-02T21:38:40Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":869903104,"title":"WIP fix random_index_shuffle_ops","body":"WIP fix random_index_shuffle_ops\n","created_at":"2022-03-02T19:36:02Z","closed_at":"2022-03-31T22:28:10Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":869901237,"title":"Add set_tpu_infeed_layout.h and set_tpu_infeed_layout.cc.","body":"Add set_tpu_infeed_layout.h and set_tpu_infeed_layout.cc.\n","created_at":"2022-03-02T19:33:28Z","closed_at":"2022-03-31T22:28:10Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":869899212,"title":"Change Redzone space limit for XLA GPU","body":"This PR changes how the redzone space limit is set in the XLA gpu conv algorithm picker.\r\n1. It sets the numeric max of int64 for the input/output allocator. So, we can have consistent behavior with the gemm picker.\r\n2. It allows the adjustment of the space limit for the scratch allocator via an env var. So, users can adjust it via `XLA_FLAGS=--xla_gpu_redzone_scratch_max_megabytes=6144`.\r\n\r\ncc. @nluehr ","created_at":"2022-03-02T19:30:43Z","closed_at":"2022-03-14T14:11:03Z","merged_at":null,"user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":869886390,"title":"Export more missing pybind simbols from op_def_util for windows builds.","body":"Export more missing pybind simbols from op_def_util for windows builds.\n","created_at":"2022-03-02T19:13:17Z","closed_at":"2022-03-02T21:00:18Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.15000000000000002,"subjectivity":0.275}}
{"_id":869884208,"title":"Inference output shape for tfl.reshape if `shape` is constant","body":"Inference output shape for tfl.reshape if `shape` is constant\n","created_at":"2022-03-02T19:10:18Z","closed_at":"2022-03-04T19:55:57Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.3333333333333333}}
{"_id":869850145,"title":"[TF:TRT] Fix shape values profile handling","body":"This PR fixes two issues with TRT profile handling for shape tensors:\r\n- Recognize if input tensor changes size, and mark it as non-shape tensor,\r\n- Do not check shape value profiles for tensors that are not shape value.","created_at":"2022-03-02T18:25:25Z","closed_at":"2023-03-02T16:28:08Z","merged_at":"2023-03-02T16:28:08Z","user_id":3671106,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":869846578,"title":"Check that the Support lib struct functions are not null.","body":"Check that the Support lib struct functions are not null.\n","created_at":"2022-03-02T18:20:37Z","closed_at":"2022-03-31T22:28:09Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":869845051,"title":"Add tests to ensure that all cc_library rules are self-contained,","body":"Add tests to ensure that all cc_library rules are self-contained,\ni.e. don't have any references to undefined symbols,\nunless they are tagged with 'allow_undefined_symbols'.\n","created_at":"2022-03-02T18:18:34Z","closed_at":"2022-03-04T09:39:37Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":869831981,"title":"Add SetTypeConstructor to \"Const\" op and fix \"Merge\" forward type inference","body":"Add SetTypeConstructor to \"Const\" op and fix \"Merge\" forward type inference\n\nThe \"Merge\" op has two outputs. The second output is an int32 \"value_index\". (See core/ops/control_flow_ops.cc) Add this second output to the fulltype created by the full_type::Merge() forward type inference function. (Now that \"Const\" has a fulltype, core/grappler/optimizers:constant_folding_test uses the forward type inference function of \"Merge\".)\n\nThe `dtype` attribute is now required by the type constructor. Update the Const_ShapeFn test in array_ops_text.cc so that the \"Const\" op it creates has a `dtype` attribute.\n\nUpdate TestAddShapes in ops_test.py to expect \"Const\" op to have fulltype.\n","created_at":"2022-03-02T18:01:19Z","closed_at":"2022-03-31T22:28:09Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":869824801,"title":"Make \"cc_api_stable\" target self-contained.","body":"Make \"cc_api_stable\" target self-contained.\n\nIn particular, move core/subgraph.cc from \"srcs\" of \"cc_api_experimental\" to\n\"srcs\" of \"cc_api_stable\" (which cc_api_experimental depends on).  This is\nneeded since interpreter.cc and interpreter_builder.cc in \"cc_api_stable\"\ncall methods that are defined in core/subgraph.cc.\n","created_at":"2022-03-02T17:51:53Z","closed_at":"2022-03-03T14:24:56Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":869817624,"title":"Add tf.random.experimental.index_shuffle().","body":"Add tf.random.experimental.index_shuffle().\n\nIt maps an index in [0, maxval] to a new random index in [0, maxval]. This allows users to suffle a list {0, 1, ..., n} without materializing the full list in memory.\n\nThe operation is stateless and does not use the global random seed. The current implementation only works on CPU.\n","created_at":"2022-03-02T17:44:43Z","closed_at":"2022-03-02T23:39:25Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":869815605,"title":"Remove `AsGraphDef` friend declaration in `DatasetBase`.","body":"Remove `AsGraphDef` friend declaration in `DatasetBase`.\n\nThis is unnecessary since cl/365597208 and obsolete since cl/431944979.\n","created_at":"2022-03-02T17:43:15Z","closed_at":"2022-03-02T20:39:22Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":869777356,"title":"[XLA] Write Log2Ceiling in a more symmetric way","body":"[XLA] Write Log2Ceiling in a more symmetric way\n","created_at":"2022-03-02T17:04:31Z","closed_at":"2022-03-03T03:34:30Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":869755868,"title":"[tf.data] Remove unused `ctx` parameter from `AsGraphDef`.","body":"[tf.data] Remove unused `ctx` parameter from `AsGraphDef`.\n\nThis is unused as of cl/240419515 (then in third_party/tensorflow/core/kernels/data/dataset_utils.cc).\n","created_at":"2022-03-02T16:42:20Z","closed_at":"2022-03-02T20:09:01Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":869743472,"title":"[XLA] Cache both positive and negative instruction reuse information, and update it online as fusions occur (roll forward):","body":"[XLA] Cache both positive and negative instruction reuse information, and update it online as fusions occur (roll forward):\n\nThe object of this change is to avoid quadratic behaviors in computing operand reuse: after this change, we should not repeatedly revisit operators in fusion computations.\n\nThe previous version of this change unintentionally changed the semantics, when it was supposed to be a pure optimization. The issue stemmed from a misreading of the semantics. The XLA fusion logic does not consider an argument to be reused if it appears on two different paths.\n\nInstead the definition is: \"an operand to a fusion is reused if an operator that reuses its arguments appears on any path from the root of the fusion to that operand\".\n","created_at":"2022-03-02T16:29:10Z","closed_at":"2022-03-02T18:02:44Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":-0.1790909090909091,"subjectivity":0.5781818181818181}}
{"_id":869615128,"title":"Enable test that is passing now.","body":"Enable test that is passing now.\n","created_at":"2022-03-02T14:30:53Z","closed_at":"2022-03-02T14:52:02Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":869590281,"title":"[tf.data] Remove unused `ctx` parameter from `AsGraphDef`.","body":"[tf.data] Remove unused `ctx` parameter from `AsGraphDef`.\n\nThis is unused as of cl/240419515 (then in third_party/tensorflow/core/kernels/data/dataset_utils.cc).\n","created_at":"2022-03-02T14:06:45Z","closed_at":"2022-03-02T16:28:55Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":869580039,"title":"Wrap cuFFT/hipFFT enums in `wrapper::Enum<>`.","body":"Wrap cuFFT/hipFFT enums in `wrapper::Enum<>`.\n\nAdd `hipfftSetAutoAllocation()`.\n\nRemove dead code.\n","created_at":"2022-03-02T13:56:02Z","closed_at":"2022-03-31T22:28:09Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":869574341,"title":"Clarified TensorDescriptor::CanCreateTensorWithShape to handle more data types.","body":"Clarified TensorDescriptor::CanCreateTensorWithShape to handle more data types.\n","created_at":"2022-03-02T13:49:35Z","closed_at":"2022-03-04T12:07:28Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":869541824,"title":"Always copy result of DynamicBroadcastInDimOp","body":"Always copy result of DynamicBroadcastInDimOp\n","created_at":"2022-03-02T13:22:24Z","closed_at":"2022-03-31T22:28:08Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":869507812,"title":"[mhlo][ShapeAnalysis] Don't drop static knowledge when creating an expand_shape","body":"[mhlo][ShapeAnalysis] Don't drop static knowledge when creating an expand_shape\n\nI missed the static info from the input when propagating ones to the output shape.\n","created_at":"2022-03-02T12:49:09Z","closed_at":"2022-03-02T14:21:29Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.5,"subjectivity":0.9}}
{"_id":869502006,"title":"Split RNG pattern to HLO->Arith pass.","body":"Split RNG pattern to HLO->Arith pass.\n\nIt does not allocate anything. It creates a bunch of arithmetic operations and\nloads/stores from a global memref.\n","created_at":"2022-03-02T12:42:46Z","closed_at":"2022-03-02T14:40:47Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":869485648,"title":"[mhlo] Phase II: Remove tuples from mhlo Infeed/Outfeed Ops.","body":"[mhlo] Phase II: Remove tuples from mhlo Infeed/Outfeed Ops.\n\nThe CL does the following:\n1. Added mhlo verifiers to ascertain that the imported structure of the layout is as expected.\n2. Modified the tf lowering (new/old bridge) or jax lowering for infeed/outfeed op in this CL to generate the non-tuple variant of infeed op.\n","created_at":"2022-03-02T12:26:22Z","closed_at":"2022-03-04T18:40:13Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":869393778,"title":"Added support of short/ushort/char/uchar textures in MetalArguments.","body":"Added support of short/ushort/char/uchar textures in MetalArguments.\n","created_at":"2022-03-02T10:52:23Z","closed_at":"2022-03-04T11:20:19Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":869354423,"title":"Add regression test demonstrating a codegen bug.","body":"Add regression test demonstrating a codegen bug.\n","created_at":"2022-03-02T10:14:22Z","closed_at":"2022-03-02T11:20:11Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":869048326,"title":"Update pybind11_bazel from 26973c0ff320cb4b39e45bc3e4297b82bc3a6c09 to 72cbbf1fbc830e487e3012862b7b720001b70672.","body":"Update pybind11_bazel from 26973c0ff320cb4b39e45bc3e4297b82bc3a6c09 to 72cbbf1fbc830e487e3012862b7b720001b70672.\n","created_at":"2022-03-02T07:24:39Z","closed_at":"2022-03-02T07:44:47Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":869047728,"title":"Update TensorRT-{commit} from 9ec6eb6db39188c9f3d25f49c8ee3a9721636b56 to 97c5b58092859ffe9c2353d09ca3eca461539cc6.","body":"Update TensorRT-{commit} from 9ec6eb6db39188c9f3d25f49c8ee3a9721636b56 to 97c5b58092859ffe9c2353d09ca3eca461539cc6.\n","created_at":"2022-03-02T07:24:17Z","closed_at":"2022-03-02T07:44:42Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":869045759,"title":"Update libjpeg_turbo from 2.1.0 to 2.1.3.","body":"Update libjpeg_turbo from 2.1.0 to 2.1.3.\n","created_at":"2022-03-02T07:23:07Z","closed_at":"2022-03-02T07:44:37Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":869041022,"title":"Update highwayhash from fd3d9af80465e4383162e4a7c5e2f406e82dd968 to 8e7cfe476f67e865b2be62b5a60a75014a631c9a.","body":"Update highwayhash from fd3d9af80465e4383162e4a7c5e2f406e82dd968 to 8e7cfe476f67e865b2be62b5a60a75014a631c9a.\n","created_at":"2022-03-02T07:20:18Z","closed_at":"2022-03-02T07:44:31Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":869038104,"title":"[tf.data] Remove unused `ctx` parameter from `AsGraphDef`.","body":"[tf.data] Remove unused `ctx` parameter from `AsGraphDef`.\n\nThis is unused as of cl/240419515 (then in third_party/tensorflow/core/kernels/data/dataset_utils.cc).\n","created_at":"2022-03-02T07:18:33Z","closed_at":"2022-03-02T07:48:12Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":868963733,"title":"Convert async ToLiteral to return PjRtEvent instead of taking a callback lambda.","body":"Convert async ToLiteral to return PjRtEvent instead of taking a callback lambda.\n","created_at":"2022-03-02T06:33:25Z","closed_at":"2022-03-09T23:20:03Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":868910066,"title":"Correct typo in documentation","body":null,"created_at":"2022-03-02T05:59:06Z","closed_at":"2022-03-07T17:52:00Z","merged_at":"2022-03-07T17:52:00Z","user_id":852234,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":868790959,"title":"Update com_github_googlecloudplatform_google_cloud_cpp from v1.17.1 to v1.37.0.","body":"Update com_github_googlecloudplatform_google_cloud_cpp from v1.17.1 to v1.37.0.\n","created_at":"2022-03-02T04:38:17Z","closed_at":"2022-03-02T07:22:44Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":868790794,"title":"Update png from v1.6.37 to v1.6.35.","body":"Update png from v1.6.37 to v1.6.35.\n","created_at":"2022-03-02T04:38:06Z","closed_at":"2022-03-02T07:22:40Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":868789982,"title":"Update com_google_googleapis from 541b1ded4abadcc38e8178680b0677f65594ea6f to 513fc461bd5269a4aa5f475dd6d501b7b1312e33.","body":"Update com_google_googleapis from 541b1ded4abadcc38e8178680b0677f65594ea6f to 513fc461bd5269a4aa5f475dd6d501b7b1312e33.\n","created_at":"2022-03-02T04:36:57Z","closed_at":"2022-03-02T07:22:35Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":868787677,"title":"Update com_github_google_crc32c from 1.0.6 to 1.1.2.","body":"Update com_github_google_crc32c from 1.0.6 to 1.1.2.\n","created_at":"2022-03-02T04:34:01Z","closed_at":"2022-03-02T07:22:30Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":868774309,"title":"Fix Windows build","body":"Fix Windows build\n","created_at":"2022-03-02T04:24:57Z","closed_at":"2022-03-31T22:28:45Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":868710768,"title":"Export missing pybind simbols from op_def_util for windows builds.","body":"Export missing pybind simbols from op_def_util for windows builds.\n","created_at":"2022-03-02T03:18:25Z","closed_at":"2022-03-02T04:49:20Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":868644946,"title":"[MKL BUG fix]fix a minor bug of IsContractionWithAdd","body":"fix a minor bug of IsContractionWithAdd, support Contraction + Add or Contraction + BiasAdd/BiasSemanticAdd + Add pattern shapes inferred.\r\nfor example :\r\nPattern Conv2D + BiasSemanticAdd ({1,} ADD) + Conv2D + BiasAdd.\r\n\r\nif do not has this fix, the result is  Conv2D + Add +  _FusedConv2D(Conv2D + BiasAdd).\r\nafter having this fix the result is _FusedConv2D + _FusedConv2D\r\n","created_at":"2022-03-02T02:20:50Z","closed_at":"2022-03-07T19:39:43Z","merged_at":"2022-03-07T19:39:43Z","user_id":35016185,"sentiment":{"polarity":-0.05,"subjectivity":0.2}}
{"_id":868644293,"title":"Make tf_distribute TypeSpecs compatible with Hierarchical TypeSpec","body":"Make tf_distribute TypeSpecs compatible with Hierarchical TypeSpec\n","created_at":"2022-03-02T02:20:24Z","closed_at":"2022-03-02T21:05:32Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":868625327,"title":"Lower lmhlo.fft to tfrt_gpu","body":"Lower lmhlo.fft to tfrt_gpu\n\nLowers the lmhlo fft op to the tfrt_gpu dialect. This involves splitting the fft op into a handle creation, plan creation and an fft execute op.\n","created_at":"2022-03-02T02:07:38Z","closed_at":"2022-03-31T22:28:45Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":868563424,"title":"Implement the `Trackable` interface for `ConcreteFunction`.","body":"Implement the `Trackable` interface for `ConcreteFunction`.\n\nRemoves additional function special casing by moving to code for creating `TrackableConstants` and `_call_function_with_mapped_captures` to:\n* `ConcreteFunction._trackable_children` \n* `ConcreteFunction._export_to_saved_model_graph`\n\nThe `object_map` now contains copied concrete functions, so this also simplifies the code that does resource initialization in the SavedModel Graph.\n","created_at":"2022-03-02T01:25:34Z","closed_at":"2022-03-31T22:28:44Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":868554703,"title":"[mhlo]  Verifier for mhlo.bitcast_convert","body":"[mhlo]  Verifier for mhlo.bitcast_convert\n","created_at":"2022-03-02T01:19:37Z","closed_at":"2022-03-31T22:24:24Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":868493168,"title":"Add tiling info in entry computation layout before XLA compilation, except","body":"Add tiling info in entry computation layout before XLA compilation, except\nwhen layout is explicitly cleared in which case layout (including minor-to-major\norder) is completely decided by layout assignment.\n","created_at":"2022-03-02T00:37:43Z","closed_at":"2022-03-15T17:07:04Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":868487664,"title":"Avoid cached definition and signature in __init__ of eagerly created function","body":"Avoid cached definition and signature in __init__ of eagerly created function\n\nWhen a concrete function is created but never called from Python, this change\nsaves us an extra copy of fdef. This tends to happen frequenctly in functions\nloaded from a saved model, where only the top-level 'inference' concrete\nfunctions are directly called from Python, whilst other supporting functions\nare called as part of the graph execution.\n","created_at":"2022-03-02T00:34:04Z","closed_at":"2022-03-02T01:09:06Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":868487291,"title":"Remove deleter for eagerly created resource variables.","body":"Remove deleter for eagerly created resource variables.\n\nThey happen to be all ref-counting.\n","created_at":"2022-03-02T00:33:49Z","closed_at":"2022-03-03T19:30:45Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":868479592,"title":"removing [] bracket which masks the details next to it in () and hyperlinks it.","body":"removing [] bracket which masks the details next to it in () and hyperlinks it.\n\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/tensorflow/tensorflow/pull/54486 from tensorflow:sachinprasadhs-patch-5 735efdca9a9d1fad35b0aa1b0dc834a2fa48106f\n","created_at":"2022-03-02T00:28:45Z","closed_at":"2022-03-31T22:28:44Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":868478997,"title":"[TF-TRT] Changing Engine Name to TRTEngineOp_ABC_XYZ","body":"@bixia1 for review\r\n\r\nChange TRTEngineOP name from `TRTEngineOP_X_Y` to `TRTEngineOp_ABC_XYZ`.\r\nThe main objective is to correct `TRTEngineOP_2_1  > TRTEngineOP_17_1`  => shall be false, effectively is true.","created_at":"2022-03-02T00:28:22Z","closed_at":"2022-03-11T14:10:44Z","merged_at":"2022-03-11T14:10:44Z","user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":868467688,"title":"Add simplification to replace Use(ReduceMin(Arg) with Use(Gte(ReduceArgMin(), 0)).","body":"Add simplification to replace Use(ReduceMin(Arg) with Use(Gte(ReduceArgMin(), 0)).\n","created_at":"2022-03-02T00:20:52Z","closed_at":"2022-03-02T07:16:28Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":868463529,"title":"Added support of reading short4/ushort4/char4/uchar4 from buffers in Glsl.","body":"Added support of reading short4/ushort4/char4/uchar4 from buffers in Glsl.\n","created_at":"2022-03-02T00:18:01Z","closed_at":"2022-03-04T10:44:22Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":868452463,"title":"[XLA] Report that real -> complex bitcast_convert is not allowed","body":"[XLA] Report that real -> complex bitcast_convert is not allowed\n\nThe check as exists is bidirectional: it prevents conversions from complex to real and real to complex alike, but the reported error message was unidirectional.\n","created_at":"2022-03-02T00:10:58Z","closed_at":"2022-03-03T02:19:57Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":-0.44999999999999996,"subjectivity":0.6000000000000001}}
{"_id":868448382,"title":"Disable integration tests in the pip builds","body":"Disable integration tests in the pip builds\n","created_at":"2022-03-02T00:08:19Z","closed_at":"2022-03-02T00:59:47Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":868442324,"title":"[mhlo] test for reduce_precision","body":"[mhlo] test for reduce_precision\n","created_at":"2022-03-02T00:04:25Z","closed_at":"2022-03-02T00:38:11Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":868437786,"title":"Fix bug in XlaCompilationCache where an error is raised after calling DisableXlaCompilation but an entry is already compiled.","body":"Fix bug in XlaCompilationCache where an error is raised after calling DisableXlaCompilation but an entry is already compiled.\n","created_at":"2022-03-02T00:01:28Z","closed_at":"2022-03-02T21:56:47Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":868423483,"title":"Introduce a new PjRtEvent class, and move BlockHostUntilReady and OnReady methods from PjRtBuffer into PjRtEvent, so instead of calling buf->BlockHostUntilReady() you now","body":"Introduce a new PjRtEvent class, and move BlockHostUntilReady and OnReady methods from PjRtBuffer into PjRtEvent, so instead of calling buf->BlockHostUntilReady() you now\ncall buf->GetEvent()->BlockHostUntilReady().\n\nThe intention is that all PjRt methods that currently enqueue future work but don't return a PjRtBuffer will be modified to return a PjRtEvent, and that all blocking and callbacks on futures will be performed via PjRtEvent.\n","created_at":"2022-03-01T23:52:10Z","closed_at":"2022-03-08T19:35:36Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.13636363636363635,"subjectivity":0.45454545454545453}}
{"_id":868406673,"title":"Tighten access restrictions in GpuInstructionFusion","body":"Tighten access restrictions in GpuInstructionFusion\n","created_at":"2022-03-01T23:39:39Z","closed_at":"2022-03-02T17:31:56Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":868381399,"title":"Supported more types in TensorDescriptor::GetDataTypeFromTemplateArgs.","body":"Supported more types in TensorDescriptor::GetDataTypeFromTemplateArgs.\n","created_at":"2022-03-01T23:23:21Z","closed_at":"2022-03-04T09:24:17Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":868365451,"title":"Allow Hierarchical DatasetSpecs","body":"Allow Hierarchical DatasetSpecs\n","created_at":"2022-03-01T23:04:22Z","closed_at":"2022-03-03T18:00:54Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":868355255,"title":"Decompose ResourceGather CPU ops even if it is a TPU model.","body":"Decompose ResourceGather CPU ops even if it is a TPU model.\n","created_at":"2022-03-01T22:49:12Z","closed_at":"2022-03-02T17:52:17Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":868355098,"title":"[TF-TRT] Removing tensor name from error message to clean non conversion report","body":"@bixia1 : for review\r\n\r\nSimplifies the error message generated when a node is converted during segmentation","created_at":"2022-03-01T22:49:00Z","closed_at":"2022-03-16T04:08:35Z","merged_at":"2022-03-16T04:08:35Z","user_id":10923599,"sentiment":{"polarity":0.3666666666666667,"subjectivity":0.7000000000000001}}
{"_id":868352836,"title":"New define for kernel language for dynamic vec4 component selection.","body":"New define for kernel language for dynamic vec4 component selection.\n","created_at":"2022-03-01T22:46:04Z","closed_at":"2022-03-04T08:40:43Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.06818181818181818,"subjectivity":0.3106060606060606}}
{"_id":868340663,"title":"Parameter server training: Accepting \"Graph execution error\" as worker failure with a flag.","body":"Parameter server training: Accepting \"Graph execution error\" as worker failure with a flag.\n","created_at":"2022-03-01T22:28:21Z","closed_at":"2022-03-01T22:55:06Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":868305894,"title":"[tf][tfg] Change the TFG Grappler Optimizer to run on ModuleOp","body":"[tf][tfg] Change the TFG Grappler Optimizer to run on ModuleOp\n\nThe PassManager in the TFG grappler optimizer should be run on ModuleOp, with nested passes targeting functions of the graph directly. Also exposes the PassRegistration target so that the grappler optimizer can actually run the passes.\n","created_at":"2022-03-01T21:41:34Z","closed_at":"2022-03-02T18:14:03Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":868299922,"title":"Fix build rules for runtime_client_pybind","body":"Fix build rules for runtime_client_pybind\n","created_at":"2022-03-01T21:32:04Z","closed_at":"2022-03-02T16:09:30Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":868299716,"title":"internal visibility change only","body":"internal visibility change only\n","created_at":"2022-03-01T21:31:45Z","closed_at":"2022-03-31T22:28:43Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.5}}
{"_id":868291953,"title":"Keep is_fusion_computation value across ToProto/CreateFromProto HloComputation serialization even for dead code.","body":"Keep is_fusion_computation value across ToProto/CreateFromProto HloComputation serialization even for dead code.\n","created_at":"2022-03-01T21:22:00Z","closed_at":"2022-03-01T23:39:12Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":-0.2,"subjectivity":0.4}}
{"_id":868285930,"title":"[JAX] Deprecate .block_host_until_ready() in favor of .block_until_ready().","body":"[JAX] Deprecate .block_host_until_ready() in favor of .block_until_ready().\n\nJAX kept an older name around (.block_host_until_ready()) in parallel with the new name (.block_until_ready()) to avoid breaking users. Deprecate it so we only have one name.\n","created_at":"2022-03-01T21:13:38Z","closed_at":"2022-03-08T17:39:08Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":868269577,"title":"[INTEL oneDNN] Enable BF16 support for Round","body":"Added BF16 support for the Round op.\r\n\r\nA special if-clause for the round op has been added in the test because the subsequent code computes the gradient of the op, which is zero for the round op (returns None in TF) (https://github.com/tensorflow/tensorflow/issues/5888). Therefore, returning early.","created_at":"2022-03-01T20:54:10Z","closed_at":"2022-08-05T17:35:41Z","merged_at":null,"user_id":87341429,"sentiment":{"polarity":-0.2,"subjectivity":0.4}}
{"_id":868268214,"title":"fix mac OS test.","body":"fix mac OS test.\n","created_at":"2022-03-01T20:52:00Z","closed_at":"2022-03-01T21:05:59Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":868241469,"title":"[tf][tfg] Fix error message with mismatched results/arguments","body":"[tf][tfg] Fix error message with mismatched results/arguments\n\nMake the error message less confusing when a functional op is calling a function with the incorrect number of arguments or results.\n","created_at":"2022-03-01T20:15:40Z","closed_at":"2022-03-01T20:43:23Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":868235574,"title":"Fix a build failure.","body":"Fix a build failure.\n\nRemoved an assert that uses an undefined variable. The problem is introduced by\nPR https://github.com/tensorflow/tensorflow/pull/54301.\n","created_at":"2022-03-01T20:08:53Z","closed_at":"2022-03-01T20:56:12Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":868230500,"title":"Update sonartype Maven repo URL to HTTPS","body":"Update sonartype Maven repo URL to HTTPS\nFrom Github https://github.com/tensorflow/tensorflow/pull/54425\n","created_at":"2022-03-01T20:04:05Z","closed_at":"2022-03-02T01:28:59Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":868213469,"title":"Update _DirectedInterleaveDataset to validate inputs using element_spec (rather than using legacy methods).","body":"Update _DirectedInterleaveDataset to validate inputs using element_spec (rather than using legacy methods).\n","created_at":"2022-03-01T19:42:07Z","closed_at":"2022-03-02T17:42:26Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":868189790,"title":"Remove unused `GetFirstWorkingExecutionPlan`.","body":"Remove unused `GetFirstWorkingExecutionPlan`.\n\nThis became unused in cl/398565269.  Credit to kaixih@nvidia for noticing it\nwas unused in https://github.com/tensorflow/tensorflow/pull/54433.\n","created_at":"2022-03-01T19:15:51Z","closed_at":"2022-03-01T21:52:00Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":868137791,"title":"Update RaggedTensorSpec._to_legacy_output_class to return the class instead of the object.","body":"Update RaggedTensorSpec._to_legacy_output_class to return the class instead of the object.\n","created_at":"2022-03-01T18:11:49Z","closed_at":"2022-03-31T22:28:43Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":868120786,"title":"[ROCm] fix triangular solve","body":"The following tests recently began failing for ROCm:\r\n\r\n//tensorflow/compiler/tests:matrix_inverse_op_test_gpu\r\n//tensorflow/compiler/tests:matrix_inverse_op_test_gpu_mlir_bridge_test\r\n//tensorflow/compiler/tests:matrix_solve_op_test_gpu\r\n//tensorflow/compiler/tests:matrix_solve_op_test_gpu_mlir_bridge_test\r\n//tensorflow/compiler/tests:matrix_triangular_solve_op_test_gpu\r\n//tensorflow/compiler/tests:matrix_triangular_solve_op_test_gpu_mlir_bridge_test\r\n//tensorflow/compiler/xla/service/gpu/tests:bef_executable_test_gpu\r\n//tensorflow/compiler/xla/tests:triangular_solve_test_gpu\r\n\r\nThis was due to the introduction of the batched version of the triangular solve operation in cublas in: https://github.com/tensorflow/tensorflow/commit/d797b6d5f09ebde355a58a48b1d8fb8f61f657e2\r\n\r\nThis PR adds the same thing for ROCm and rocblas.\r\n\r\nOne interesting difference is the MakeBatchPointers call, which is implemented in PTX in the CUDA implementation. For ROCm, we add a new helper file with the code for this kernel. This kernel will be usable for other batched operations as well (ex: cholesky).","created_at":"2022-03-01T17:53:48Z","closed_at":"2022-04-20T07:11:44Z","merged_at":"2022-04-20T07:11:44Z","user_id":8660918,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":868101739,"title":"Using templates in upload/download methods of TensorDescriptor to support more types.","body":"Using templates in upload/download methods of TensorDescriptor to support more types.\n","created_at":"2022-03-01T17:29:02Z","closed_at":"2022-03-01T23:11:23Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":868097356,"title":"[XLA] Cache both positive and negative instruction reuse information, and update it online as fusions occur.","body":"[XLA] Cache both positive and negative instruction reuse information, and update it online as fusions occur.\n\nThe object of this change is to avoid quadratic behaviors in computing operand reuse: after this change, we should not repeatedly revisit operators in fusion computations.\n","created_at":"2022-03-01T17:23:17Z","closed_at":"2022-03-01T18:55:48Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":-0.03636363636363636,"subjectivity":0.47272727272727266}}
{"_id":868015824,"title":"[XLA] Remove `ChunkCandidate` class, as it stores redundant data.","body":"[XLA] Remove `ChunkCandidate` class, as it stores redundant data.\n","created_at":"2022-03-01T15:58:24Z","closed_at":"2022-03-02T11:53:45Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":-0.2,"subjectivity":0.2}}
{"_id":867983657,"title":"[HLO] Remove signless conversion from bufferization passes and HLO->MemRef.","body":"[HLO] Remove signless conversion from bufferization passes and HLO->MemRef.\n\nIt looks like now we can perform signless conversion right after HLO->Linalg.\n","created_at":"2022-03-01T15:25:55Z","closed_at":"2022-03-02T15:40:27Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867971073,"title":"[KERNEL_GEN] Simplify bufferization pattern for gml_st.loop.","body":"[KERNEL_GEN] Simplify bufferization pattern for gml_st.loop.\n","created_at":"2022-03-01T15:13:31Z","closed_at":"2022-03-02T08:38:06Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867956470,"title":"[tf.data] Add `GetDatasetNodeDef` helper.","body":"[tf.data] Add `GetDatasetNodeDef` helper.\n","created_at":"2022-03-01T15:01:02Z","closed_at":"2022-03-01T17:09:42Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867941071,"title":"[ROCm] Fixes to enable triangular solve unit test for BEF thunk on ROCm.","body":"Not sure if these changes are necessary, but...\r\n\r\n/cc @chsigg @hanbinyoon ","created_at":"2022-03-01T14:44:19Z","closed_at":"2022-03-08T11:54:52Z","merged_at":null,"user_id":70280935,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867939240,"title":"Ensure kernel targets don't have unnecessary dependencies on","body":"Ensure kernel targets don't have unnecessary dependencies on\nexperimental targets.\n\nPrevious work had already ensured that the \"framework_stable\"\ntarget doesn't depend on the experimental method definitions\nin interpreter_experimental.cc.   However, the targets\ntensorflow/lite/kernels:builtin_ops and\ntensorflow/lite/kernels:builtin_ops_all_linked still had dependencies\non the default \"framework\" target, which is an alias for\n\"framework_experimental\", and apps using BuiltinOpResolver would need\nto depend on those, so such apps would not be able to get build-time\ndiagnostics if they unintentionally depend on experimental features.\n","created_at":"2022-03-01T14:42:16Z","closed_at":"2022-03-04T13:24:33Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":-0.4,"subjectivity":0.9}}
{"_id":867937802,"title":"Clean up the BUILD file to remove commented test targets","body":"Clean up the BUILD file to remove commented test targets\n","created_at":"2022-03-01T14:40:51Z","closed_at":"2022-03-31T22:28:42Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.3666666666666667,"subjectivity":0.7000000000000001}}
{"_id":867937511,"title":"[mlir][linalg] WIP Replace linalg.fill (do not commit).","body":"[mlir][linalg] WIP Replace linalg.fill (do not commit).\n","created_at":"2022-03-01T14:40:31Z","closed_at":"2022-03-31T22:28:42Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867935793,"title":"Ensure that the \"graph_info\" target is a fully self-contained library","body":"Ensure that the \"graph_info\" target is a fully self-contained library\nthat contains definitions of all of the entities that it declares.\n","created_at":"2022-03-01T14:38:38Z","closed_at":"2022-03-03T12:54:56Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867915704,"title":"Convert HLOToMemrefConversionPatterns into RewritePatterns","body":"Convert HLOToMemrefConversionPatterns into RewritePatterns\n","created_at":"2022-03-01T14:18:06Z","closed_at":"2022-03-03T12:09:38Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867912930,"title":"[XLA] Cleanup / optimizations to `GlobalDecreasingSizeBestFitHeap::FindChunkCandidate`.","body":"[XLA] Cleanup / optimizations to `GlobalDecreasingSizeBestFitHeap::FindChunkCandidate`.\n","created_at":"2022-03-01T14:15:22Z","closed_at":"2022-03-03T14:09:27Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867889535,"title":"Added new type of generic test that uses TensorDescriptors.","body":"Added new type of generic test that uses TensorDescriptors.\n","created_at":"2022-03-01T13:52:57Z","closed_at":"2022-03-01T22:22:50Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.06818181818181818,"subjectivity":0.22727272727272727}}
{"_id":867875118,"title":"[tf.data] Remove unused `ctx` parameter from `AsGraphDef`.","body":"[tf.data] Remove unused `ctx` parameter from `AsGraphDef`.\n\nThis is unused as of cl/240419515 (then in third_party/tensorflow/core/kernels/data/dataset_utils.cc).\n","created_at":"2022-03-01T13:35:45Z","closed_at":"2022-03-01T16:43:44Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867853761,"title":"Don't register the complex dialect as part of Tensorflow dialects.","body":"Don't register the complex dialect as part of Tensorflow dialects.\n\nPasses that use it (HloLegalizeToLinalgPass) already specify it as dependent dialect.\n","created_at":"2022-03-01T13:12:17Z","closed_at":"2022-03-01T13:58:40Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":867810382,"title":"Change filemode of algebraic_simplifier.cc","body":"Change filemode of algebraic_simplifier.cc\n\nIt should not be executable.\n","created_at":"2022-03-01T12:21:18Z","closed_at":"2022-03-01T12:37:26Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867667244,"title":"[PluggableDevice] Add int32 DEVICE_DEFAULT registration for Where","body":null,"created_at":"2022-03-01T09:45:39Z","closed_at":"2022-03-30T03:08:37Z","merged_at":"2022-03-30T03:08:37Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867613189,"title":"Change driver wrapper enums from platform agnostic to platform discriminated.","body":"Change driver wrapper enums from platform agnostic to platform discriminated.\n","created_at":"2022-03-01T08:46:51Z","closed_at":"2022-03-31T22:28:42Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867605608,"title":"Modify verifier to allow stateful ops such as CIRCULAR_BUFFER to be variable.","body":"Modify verifier to allow stateful ops such as CIRCULAR_BUFFER to be variable.\n","created_at":"2022-03-01T08:40:06Z","closed_at":"2022-03-31T22:28:41Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.5}}
{"_id":867556006,"title":"Skip setting up captures for functions that have already been restored.","body":"Skip setting up captures for functions that have already been restored.\n\nA concrete function could be set up by either or both `_recreate_function` and `_recreate_bare_concrete_function`.\n","created_at":"2022-03-01T07:38:04Z","closed_at":"2022-03-01T14:09:09Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867549385,"title":"Fix spelling of \"saveable\".","body":"Fix spelling of \"saveable\".\n","created_at":"2022-03-01T07:27:09Z","closed_at":"2022-03-01T18:46:23Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867548945,"title":"Updated arguments of acos function","body":"String is not supported as an argument of `acos` function. So, removed it from the arguments.\r\n\r\nFixes https://github.com/tensorflow/tensorflow/issues/54545","created_at":"2022-03-01T07:26:28Z","closed_at":"2022-03-04T06:44:48Z","merged_at":"2022-03-04T06:44:48Z","user_id":46058173,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867545520,"title":"Some cleanup work for `Trackable` methods and arguments (and mirroring onto DelegateMixin).","body":"Some cleanup work for `Trackable` methods and arguments (and mirroring onto DelegateMixin).\n","created_at":"2022-03-01T07:21:39Z","closed_at":"2022-03-02T01:19:14Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867491022,"title":"Refactor RNN classes such that V2 cells and layers no longer depend on V1 counterparts.","body":"Refactor RNN classes such that V2 cells and layers no longer depend on V1 counterparts.\n\nV2 GRU and LSTM cells no longer extend their V1 counterpart; instead the inheritance is the other way around.\nV2 GRU and LSTM layers no longer extend their V1 counterpart; instead the common code was duplicated.\nV2 cell wrappers and legacy cell wrappers no longer have a complex hierarchy with multiple inheritance to share code; instead, the common code was duplicated.\nUnit tests for GRU and LSTM layers were reorganized so that all generic tests that work for both V1 and V2 are in `gru_test.py` and `lstm_test.py`. The only tests in `gru_v1_test.py` and `lstm_v1_test.py` are the ones that compare V1 and V2 for accuracy or performance, and V1 specific tests.\nAlso made cell wrappers API more consistent, all wrappers now expose a `wrapped_cell` property, not just `DropoutWrapper`.\n","created_at":"2022-03-01T05:57:18Z","closed_at":"2022-03-05T00:29:40Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.5}}
{"_id":867473624,"title":"Rename sync versions of ToLiteral to ToLiteralSync to facilitate upcoming refactor.","body":"Rename sync versions of ToLiteral to ToLiteralSync to facilitate upcoming refactor.\n","created_at":"2022-03-01T05:15:40Z","closed_at":"2022-03-03T22:39:49Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867459479,"title":"Update KerasMetricTypeSpec to be compatible with Hierarchical TypeSpec","body":"Update KerasMetricTypeSpec to be compatible with Hierarchical TypeSpec\n","created_at":"2022-03-01T04:50:10Z","closed_at":"2022-03-31T22:28:41Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867403333,"title":"[XLA:LAYOUT_ASSIGNMENT] Remove additional references to send/recv channel","body":"[XLA:LAYOUT_ASSIGNMENT] Remove additional references to send/recv channel\nconstraints.\n","created_at":"2022-03-01T03:06:48Z","closed_at":"2022-03-01T15:31:03Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867382201,"title":"[tf.data] Add kernel implementation of `ParallelFilter` transformation.","body":"[tf.data] Add kernel implementation of `ParallelFilter` transformation.\n","created_at":"2022-03-01T02:25:18Z","closed_at":"2022-03-15T17:10:40Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867375566,"title":"Ensure that Interpreter methods that are documented as being experimental","body":"Ensure that Interpreter methods that are documented as being experimental\nget defined in interpreter_experimental.cc rather than in interpreter.cc,\nso that they do not get included in the *_stable targets.  The aim is to\nensure you'll get a build error if you using an experimental API but depend\nonly on the stable targets.\n\nIn particular:\n\n  - Move all definitions of public experimental methods from\n    interpreter.cc to interpreter_experimental.cc.\n\n  - In cases where a public experimental method, e.g. Foo, was also used\n    by the implementation of other stable method(s), add a private\n    non-experimental method, e.g. FooImpl, defined in interpreter.cc,\n    and implement the public experimental method and the other stable\n    methods using that new private non-experimental method (FooImpl).\n","created_at":"2022-03-01T02:12:47Z","closed_at":"2022-03-03T13:07:14Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.1,"subjectivity":0.4}}
{"_id":867369962,"title":"Add APIs to return the memory type, for Allocator/SubAllocator/Tensor/TensorBuffer.","body":"Add APIs to return the memory type, for Allocator/SubAllocator/Tensor/TensorBuffer.\n\nBy default, the type is kUnknown if a sub-class of the Allocator/SubAllocator does not specify it.\n\nThis is to prepare for staging data on pinned memory during transfer for GPU:\n- Introduce a method to Allocator to determine which type of memory is allocated by the allocator, e.g., gpu host allocator uses BFC allocator, which uses DeviceHostAllocator as its sub allocator, and DeviceHostAllocator allocates pinned memory;\n- Tensor can retrieve the memory type from its TensorBuffer if the buffer contains the allocator info;\n- During tensor transfer, we check wether the cpu tensor buffer is using pageable memory; if yes, allocate pinned memory of the same size for staging.\n","created_at":"2022-03-01T02:04:41Z","closed_at":"2022-03-02T09:45:33Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867360185,"title":"Do not drop error messages from the quantize model API","body":"Do not drop error messages from the quantize model API\n","created_at":"2022-03-01T01:46:16Z","closed_at":"2022-03-02T04:38:31Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867355274,"title":"Add a unit test for the deadlock issue in LocalRendezvous destruction","body":"Add a unit test for the deadlock issue in LocalRendezvous destruction\n","created_at":"2022-03-01T01:36:00Z","closed_at":"2022-03-01T22:44:08Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867352481,"title":"Add an option in memory space assignment to enable/disable while-loop redundant eviction eliminiation optimization","body":"Add an option in memory space assignment to enable/disable while-loop redundant eviction eliminiation optimization\n","created_at":"2022-03-01T01:29:29Z","closed_at":"2022-03-02T01:40:34Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":-0.2,"subjectivity":0.2}}
{"_id":867349216,"title":"Add internal visibility allow list","body":"Add internal visibility allow list\n","created_at":"2022-03-01T01:23:16Z","closed_at":"2022-03-01T02:01:45Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867330795,"title":"Specify memory types for some majoy allocators.","body":"Specify memory types for some majoy allocators.\n","created_at":"2022-03-01T00:51:32Z","closed_at":"2022-03-11T01:16:00Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867329236,"title":"[XNNPACK] Support CONCATENATION operator with 2 inputs","body":"[XNNPACK] Support CONCATENATION operator with 2 inputs\n","created_at":"2022-03-01T00:47:42Z","closed_at":"2022-03-02T22:20:08Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867324030,"title":"Update RaggedTensor._to_components to add shape information to RaggedTensor.","body":"Update RaggedTensor._to_components to add shape information to RaggedTensor.\n\nWhen a RaggedTensor is returned from tf.py_function in graph mode, its shape information is unknown and should be recovered from RaggedTensorSpec.\n","created_at":"2022-03-01T00:36:26Z","closed_at":"2022-03-02T20:16:00Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867314669,"title":"Stage data on gpu pinned memory during transfer","body":"Stage data on gpu pinned memory during transfer\n","created_at":"2022-03-01T00:19:15Z","closed_at":"2022-03-09T23:04:29Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867296958,"title":"Document the InterpreterOptions class and the InterpreterOptions","body":"Document the InterpreterOptions class and the InterpreterOptions\nparameter to InterpreterBuilder as being experimental.\n\nRationale: All the methods of InterpreterOptions are already experimental,\nso there's currently nothing that you can usefully do with this\nclass without using experimental features. Hence I think it is best to\nalso make the class itself experimental, and likewise for its use in\nInterpreterBuilder, to preserve implementation flexibility for TF Lite.\n","created_at":"2022-02-28T23:52:40Z","closed_at":"2022-03-02T07:37:58Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867285067,"title":"Pack BF16 values and element indices together into single 32-bit values to","body":"Pack BF16 values and element indices together into single 32-bit values to\nimprove top-k speed on TPUs.\n","created_at":"2022-02-28T23:27:32Z","closed_at":"2022-03-01T02:54:31Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":-0.07142857142857142,"subjectivity":0.21428571428571427}}
{"_id":867276471,"title":"Adding more infeed/outfeed tests to the bef_thunk_tests and bef_executable_tests test_suite(s).","body":"Adding more infeed/outfeed tests to the bef_thunk_tests and bef_executable_tests test_suite(s).\n","created_at":"2022-02-28T23:13:43Z","closed_at":"2022-03-01T18:07:24Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":867265720,"title":"Go: Update generated wrapper functions for TensorFlow ops.","body":"Go: Update generated wrapper functions for TensorFlow ops.\n","created_at":"2022-02-28T22:59:46Z","closed_at":"2022-03-31T22:28:40Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867261009,"title":"Remove unused ctx argument.","body":"Remove unused ctx argument.\n","created_at":"2022-02-28T22:52:30Z","closed_at":"2022-03-01T13:48:15Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867246946,"title":"Implementation of new algorithm of merge control flow pass","body":"Implementation of new algorithm of merge control flow pass\n\nIn this algorithm, side_effect_analysis will only be called once instead of multiple times comparing to old implementation. Therefore, the performance regarding the runtime of the pass can be improved. The next step is to enable the pass by default.\n","created_at":"2022-02-28T22:30:35Z","closed_at":"2022-03-09T21:32:28Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.13636363636363635,"subjectivity":0.45454545454545453}}
{"_id":867240660,"title":"Fix failed test cases for the ragged tensor issue with py_function.","body":"Fix failed test cases for the ragged tensor issue with py_function.\n\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/tensorflow/tensorflow/pull/54521 from PatriceVignola:add-inplace-device-default-registration 2e5af637d89b180031100530cdbd9b3ef34ec176\n","created_at":"2022-02-28T22:24:38Z","closed_at":"2022-03-31T22:28:40Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":-0.5,"subjectivity":0.3}}
{"_id":867218486,"title":"Enable TF python tests with TFRT session","body":"Enable TF python tests with TFRT session\n","created_at":"2022-02-28T21:50:13Z","closed_at":"2022-03-31T22:28:39Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867215792,"title":"PR #54503: Add appropriate encoding check for `tf.compat.as_bytes`/`as_text`","body":"PR #54503: Add appropriate encoding check for `tf.compat.as_bytes`/`as_text`\n\nImported from GitHub PR https://github.com/tensorflow/tensorflow/pull/54503\n\nThis PR tries to address the issue raised in #54413 where\nthere were no encoding check for tf.compat.as_bytes/as_text.\nAs a result, invalid encoding input will silently\nreturn incorrect result, e.g.:\n```\nbytes_or_text = \"hello\"\nt1 = tf.compat.as_text(bytes_or_text, encoding=\"valid\")\nprint(t1) # hello\n```\n\nThis PR looks up python encoding to make sure it is valid.\n\nThis PR fixes #54413.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\nCopybara import of the project:\n\n--\n8e3b32d37ce22c07c21f508b2835456f3ca97531 by Yong Tang <yong.tang.github@outlook.com>:\n\nAdd appropriate encoding check for tf.compat.as_bytes/as_text\n\nThis PR tries to address the issue raised in 54413 where\nthere were no encoding check for tf.compat.as_bytes/as_text.\nAs a result, invalid encoding input will silently\nreturn incorrect result, e.g.:\n```\nbytes_or_text = \"hello\"\nt1 = tf.compat.as_text(bytes_or_text, encoding=\"valid\")\nprint(t1) # hello\n```\n\nThis PR looks up python encoding to make sure it is valid.\n\nThis PR fixes 54413.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n--\n6099ca6e0e75e9ba2f1f9c48ecacd0523a507f1a by Yong Tang <yong.tang.github@outlook.com>:\n\nAdd test case for tf.compat.as_bytes/as_text\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/tensorflow/tensorflow/pull/54503 from yongtang:54413-tf.compat.as_bytes-encoding 6099ca6e0e75e9ba2f1f9c48ecacd0523a507f1a\n","created_at":"2022-02-28T21:45:52Z","closed_at":"2022-03-31T22:28:39Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":867177091,"title":"Switching over row_partitions and rank to rely on ragged_shape.","body":"Switching over row_partitions and rank to rely on ragged_shape.\n","created_at":"2022-02-28T20:56:20Z","closed_at":"2022-03-31T22:28:38Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":-0.8,"subjectivity":0.9}}
{"_id":867176488,"title":"Add no_oss tag to failing runtime_client_py_test.","body":"Add no_oss tag to failing runtime_client_py_test.\n","created_at":"2022-02-28T20:55:24Z","closed_at":"2022-02-28T21:45:14Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867172587,"title":"TFLite GPU: Fix input/output tensor handling for partitioned delegation.","body":"TFLite GPU: Fix input/output tensor handling for partitioned delegation.\n","created_at":"2022-02-28T20:48:42Z","closed_at":"2022-02-28T22:07:26Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867169366,"title":"Add additional methods for constructing DynamicRaggedShape.Spec.","body":"Add additional methods for constructing DynamicRaggedShape.Spec.\nIn particular, adding the ability to:\n* create a spec from a spec of a different type.\n* change the dtype of the spec.\n* truncate the spec.\n","created_at":"2022-02-28T20:43:22Z","closed_at":"2022-03-31T22:28:38Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867165635,"title":"Export Adamax and fix some exporting issues.","body":"Export Adamax and fix some exporting issues.\n\nPreviously the __init__py in optimizers/ folder does not include rmsprop, adamax and adamw, so they are not caught when updating golden. This CL fixes this issue.\n","created_at":"2022-02-28T20:37:25Z","closed_at":"2022-03-01T19:52:40Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867164916,"title":"Fix invalid IRs with is_stateless = true attribute in merge_control_flow.mlir","body":"Fix invalid IRs with is_stateless = true attribute in merge_control_flow.mlir\n","created_at":"2022-02-28T20:36:21Z","closed_at":"2022-02-28T23:02:12Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.35,"subjectivity":0.65}}
{"_id":867161001,"title":"Add an option to enable parallel while op in tf_to_tfrt conversion.","body":"Add an option to enable parallel while op in tf_to_tfrt conversion.\n\nCurrently, it is disabled by default. If turned on:\n1. parallel_iterations in tf.While will be propagated to tfrt.while, which was previously always 1.\n2. stream merging is disabled in while body for parallelizing iteration handling operations.\n\nThis is only for testing over more models currently.\n","created_at":"2022-02-28T20:30:50Z","closed_at":"2022-02-28T23:26:42Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867135847,"title":"Refactor op_def_util so it can be used in multiple pybind targets.","body":"Refactor op_def_util so it can be used in multiple pybind targets.\n","created_at":"2022-02-28T20:00:00Z","closed_at":"2022-02-28T22:30:06Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867122715,"title":"change the way that eager mode op is determined: ","body":"change the way that eager mode op is determined: \n1. if ops is run under EagerExecute,  eager_mode = !is_func of that TraceMe\n2. if ops is not run under EagerExecute, eager_mode = false. (legacy trace goes here).\n","created_at":"2022-02-28T19:42:53Z","closed_at":"2022-03-01T01:23:58Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867118579,"title":"Export current optimizer to legacy namespace. ","body":"Export current optimizer to legacy namespace. \n\nA new-version optimizer is going to be available in TF 2.9 release. Although the new optimizer is now under experimental namespace, it will in future become the default optimizer. For backward compatibility, we will continue support the current optimizer in the legacy namespace.\n","created_at":"2022-02-28T19:38:31Z","closed_at":"2022-03-31T22:28:37Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.4}}
{"_id":867116424,"title":"Adding fingerprint field to HloModule.","body":"Adding fingerprint field to HloModule.\nChange to reuse CompilationEvent and ProfileSource enums for ops and module-level profile.\n","created_at":"2022-02-28T19:34:53Z","closed_at":"2022-02-28T21:15:51Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867103604,"title":"Update tf_generated_ops.td.","body":"Update tf_generated_ops.td.\n","created_at":"2022-02-28T19:16:35Z","closed_at":"2022-02-28T20:05:50Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867097046,"title":"[mhlo] Restrict the op-regions of reduceOp and reduceWindowOp from returning tuple-types.","body":"[mhlo] Restrict the op-regions of reduceOp and reduceWindowOp from returning tuple-types.\n\n1. During import (from HLO) we flatten the tuple return-types of region-blocks.\n2. The verifier of the ops are made aware that tuple returns are not allowed.\n","created_at":"2022-02-28T19:08:26Z","closed_at":"2022-02-28T19:54:03Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867082137,"title":"Move rest of wrapper::Enum parsing/printing from gpu_kernels to gpu_wrapper.","body":"Move rest of wrapper::Enum parsing/printing from gpu_kernels to gpu_wrapper.\n\n- Remove `Parse` function template (they can't be partially specialized and more generally http://www.gotw.ca/publications/mill17.htm).\n- Change `operator<<` to `Print` function (because ADL may accidentally print CUDA/ROCm enums as integers).\n","created_at":"2022-02-28T18:46:43Z","closed_at":"2022-03-03T06:48:21Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867061277,"title":"Entry computation's layout needs to be updated after spmd partitioning.","body":"Entry computation's layout needs to be updated after spmd partitioning.\n","created_at":"2022-02-28T18:18:56Z","closed_at":"2022-02-28T20:56:36Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867044890,"title":"Some legacy tests have inconsistencies layout when compiling the infeed","body":"Some legacy tests have inconsistencies layout when compiling the infeed\nop and transferring infeed data. Adding this api allows the tests to\nget the layout right for transferring data.\n","created_at":"2022-02-28T17:58:28Z","closed_at":"2022-02-28T20:17:24Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":-0.1,"subjectivity":0.0}}
{"_id":867032148,"title":"[XLA] Iterate over instructions, not all values, in `CalculateBufferStartEndMap`.","body":"[XLA] Iterate over instructions, not all values, in `CalculateBufferStartEndMap`.\n\nThe existing loop is very inefficient for module with lots of small computations as most values will not correspond to the current computation.\n\nI also removed several redundant hash look-ups. I added `HloInstruction::IsRoot`, as it's a really common thing to want to know.\n","created_at":"2022-02-28T17:39:57Z","closed_at":"2022-03-04T08:10:17Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":867026167,"title":"Add a test for multi-device function using jit_compiled collective.","body":"Add a test for multi-device function using jit_compiled collective.\n\nWe do raise an error now, but after the noted feature lands, this shall work.\n","created_at":"2022-02-28T17:32:16Z","closed_at":"2022-02-28T17:47:36Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":866956395,"title":"Avoid local type inference upon node edits, and avoid running the type constructor if when adding a NodeDef that has type info already set. This increases the chance for stale type info during graph transformations, but avoids surprising behavior when the callers do supply a correct type.","body":"Avoid local type inference upon node edits, and avoid running the type constructor if when adding a NodeDef that has type info already set. This increases the chance for stale type info during graph transformations, but avoids surprising behavior when the callers do supply a correct type.\nIt also has better support for incremental or partial type inference.\nIn general, it will be most robust to run the type inference pass before transforms which rely on it.\n","created_at":"2022-02-28T16:17:18Z","closed_at":"2022-03-01T20:04:19Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.06666666666666665,"subjectivity":0.3333333333333333}}
{"_id":866952397,"title":"Added possibility to convert Metal tensor back to descriptor.","body":"Added possibility to convert Metal tensor back to descriptor.\n","created_at":"2022-02-28T16:13:52Z","closed_at":"2022-03-01T13:43:35Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":866946833,"title":"[XLA] Iterate directly over values in `HloLiveRange::NormalizeAliasedBuffers`.","body":"[XLA] Iterate directly over values in `HloLiveRange::NormalizeAliasedBuffers`.\n\nThis is more efficient if the numbers of values in this computation is lower than the number of buffers in the alias analysis.\n","created_at":"2022-02-28T16:08:20Z","closed_at":"2022-02-28T16:42:10Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.1,"subjectivity":0.4}}
{"_id":866945423,"title":"Update highwayhash from fd3d9af80465e4383162e4a7c5e2f406e82dd968 to 8e7cfe476f67e865b2be62b5a60a75014a631c9a.","body":"Update highwayhash from fd3d9af80465e4383162e4a7c5e2f406e82dd968 to 8e7cfe476f67e865b2be62b5a60a75014a631c9a.\n","created_at":"2022-02-28T16:06:58Z","closed_at":"2022-03-01T05:36:02Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":866943117,"title":"Update png from v1.6.37 to v1.6.35.","body":"Update png from v1.6.37 to v1.6.35.\n","created_at":"2022-02-28T16:04:50Z","closed_at":"2022-03-01T05:35:57Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":866940563,"title":"Update com_github_googlecloudplatform_google_cloud_cpp from v1.17.1 to v1.36.0.","body":"Update com_github_googlecloudplatform_google_cloud_cpp from v1.17.1 to v1.36.0.\n","created_at":"2022-02-28T16:02:21Z","closed_at":"2022-03-01T05:35:53Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":866940001,"title":"Update com_github_google_crc32c from 1.0.6 to 1.1.2.","body":"Update com_github_google_crc32c from 1.0.6 to 1.1.2.\n","created_at":"2022-02-28T16:01:50Z","closed_at":"2022-03-01T05:35:48Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":866938429,"title":"Also turn HLO bufferization dialect conversion patterns into rewrite patterns.","body":"Also turn HLO bufferization dialect conversion patterns into rewrite patterns.\n","created_at":"2022-02-28T16:00:21Z","closed_at":"2022-03-31T22:28:37Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":866936934,"title":"Add a log message with more details when batch sizes differ.","body":"Add a log message with more details when batch sizes differ.\n","created_at":"2022-02-28T15:58:41Z","closed_at":"2022-03-02T11:06:13Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":866916846,"title":"Fix bug with live range end position.","body":"Fix bug with live range end position.\n","created_at":"2022-02-28T15:37:12Z","closed_at":"2022-02-28T16:51:51Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.13636363636363635,"subjectivity":0.5}}
{"_id":866862482,"title":"TFlite benchmark_model tool: Don't destruct the NNAPI SL before destructing the","body":"TFlite benchmark_model tool: Don't destruct the NNAPI SL before destructing the\ndelegate that uses it.\n","created_at":"2022-02-28T14:42:51Z","closed_at":"2022-02-28T16:54:41Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":866851826,"title":"[XLA:ALGEBRAIC_SIMPLIFIER] Handle Base Dilation correctly when folding a pad into a reduce window. The padding on the operand is dilated.","body":"[XLA:ALGEBRAIC_SIMPLIFIER] Handle Base Dilation correctly when folding a pad into a reduce window. The padding on the operand is dilated.\n","created_at":"2022-02-28T14:31:21Z","closed_at":"2022-02-28T21:10:34Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":-0.8,"subjectivity":1.0}}
{"_id":866849859,"title":"Update com_google_protobuf from v3.9.2 to v3.19.4.","body":"Update com_google_protobuf from v3.9.2 to v3.19.4.\n","created_at":"2022-02-28T14:29:16Z","closed_at":"2022-02-28T16:47:27Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":866849858,"title":"Update png from v1.6.37 to v1.6.35.","body":"Update png from v1.6.37 to v1.6.35.\n","created_at":"2022-02-28T14:29:16Z","closed_at":"2022-02-28T16:47:32Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":866849667,"title":"Update com_github_googlecloudplatform_google_cloud_cpp from v1.17.1 to v1.36.0.","body":"Update com_github_googlecloudplatform_google_cloud_cpp from v1.17.1 to v1.36.0.\n","created_at":"2022-02-28T14:29:04Z","closed_at":"2022-02-28T16:47:23Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":866847845,"title":"Update com_github_google_crc32c from 1.0.6 to 1.1.2.","body":"Update com_github_google_crc32c from 1.0.6 to 1.1.2.\n","created_at":"2022-02-28T14:27:10Z","closed_at":"2022-02-28T16:47:18Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":866830139,"title":"Internal change with relaxing visibility restrictions","body":"Internal change with relaxing visibility restrictions\n","created_at":"2022-02-28T14:09:41Z","closed_at":"2022-03-01T00:49:31Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":866795873,"title":"[mhlo][ShapeAnalysis] Fix dynamic_reshape->expand_shape of 0d tensors","body":"[mhlo][ShapeAnalysis] Fix dynamic_reshape->expand_shape of 0d tensors\n\ntensor.expand_shape is quite picky about its output type, so take the 1 dims we\nknow about from shape analysis and build a stricter type out of it. Then cast\nback to the original type.\n","created_at":"2022-02-28T13:32:17Z","closed_at":"2022-02-28T14:50:02Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":866786266,"title":"[XLA] Remove redundant hash look-ups in `HloLiveRange::FlattenSchedule`.","body":"[XLA] Remove redundant hash look-ups in `HloLiveRange::FlattenSchedule`.\n\nAlso, remove the redundant `schedule_end_time` state which can be inferred from the flattened sequence.\n","created_at":"2022-02-28T13:21:44Z","closed_at":"2022-02-28T14:41:05Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":-0.2,"subjectivity":0.2}}
{"_id":866655292,"title":"Add regression test that demonstrates a codegen bug.","body":"Add regression test that demonstrates a codegen bug.\n","created_at":"2022-02-28T10:50:56Z","closed_at":"2022-02-28T11:10:24Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":866613067,"title":"Updated deprecated tf.gradients with tf.GradientTape in custom_gradient.py","body":"Updated tf.gradients with tf.GradientTape, as it was showing this error while executing code in TF 2.x \"RuntimeError: tf.gradients is not supported when eager execution is enabled. Use tf.GradientTape instead.\"","created_at":"2022-02-28T10:04:14Z","closed_at":"2022-12-29T05:07:45Z","merged_at":null,"user_id":89264621,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":866595946,"title":"Support of uploading/downloading int tensors into TensorDescriptor.","body":"Support of uploading/downloading int tensors into TensorDescriptor.\n","created_at":"2022-02-28T09:43:46Z","closed_at":"2022-02-28T10:24:57Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":866595639,"title":"Fields shape and data moved to private section(TensorDescriptor).","body":"Fields shape and data moved to private section(TensorDescriptor).\n","created_at":"2022-02-28T09:43:22Z","closed_at":"2022-02-28T20:47:14Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.375}}
{"_id":866559166,"title":"Add regression test demonstrating a runtime error.","body":"Add regression test demonstrating a runtime error.\n","created_at":"2022-02-28T09:02:13Z","closed_at":"2022-02-28T10:46:20Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":866467809,"title":"Add op fusion rules for tf.MatMul op","body":"Add op fusion rules for tf.MatMul op\n\nSimilar to tf.Conv2D, simple fusion of tf.MatMul op is handled by FusedKernelMatcherPass.\n","created_at":"2022-02-28T06:50:06Z","closed_at":"2022-03-02T02:01:14Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":866460463,"title":"Add the support to allow dynamic increase on op profiling buffer entries for Tensorflow Lite BufferedPorfiler, and use this feature in the model benchmark tool by setting \"--allow_dynamic_profiling_buffer_increase=true\".","body":"Add the support to allow dynamic increase on op profiling buffer entries for Tensorflow Lite BufferedPorfiler, and use this feature in the model benchmark tool by setting \"--allow_dynamic_profiling_buffer_increase=true\".\n","created_at":"2022-02-28T06:34:34Z","closed_at":"2022-03-01T05:31:21Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.16666666666666666}}
{"_id":866346945,"title":"Address Python style comments in the gen_quantized_function_library","body":"Address Python style comments in the gen_quantized_function_library\n","created_at":"2022-02-28T03:37:00Z","closed_at":"2022-02-28T03:47:26Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":866342267,"title":"Preserve context info when entering merge_call.","body":"Preserve context info when entering merge_call.\n","created_at":"2022-02-28T03:27:55Z","closed_at":"2022-03-08T07:18:01Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":866307149,"title":"Add OrthogonalRegularizer Keras regularizer.","body":"Add OrthogonalRegularizer Keras regularizer.\n","created_at":"2022-02-28T02:25:03Z","closed_at":"2022-02-28T23:11:07Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":866079865,"title":"Add \"Support Ukraine\" badge in README","body":"## Summary\r\n\r\nThis Pull Request is aimed at helping Ukrainian Army get necessary funding in time of open-scale war with Russia by providing link to official international account created by National Bank of Ukraine.\r\n\r\n## Changelog:\r\n\r\n[General] [Added] - Add badge with link to National Bank of Ukraine's website\r\n\r\n## Test Plan\r\n\r\nBadge image: \r\n<img width=\"636\" alt=\"155879304-107042dc-005c-4ea9-9967-dc05881c35e4\" src=\"https://user-images.githubusercontent.com/40458927/155880515-33cc74b9-7559-4389-a1a0-406ed41328d4.png\">\r\n\r\n\r\n\r\n","created_at":"2022-02-27T14:35:02Z","closed_at":"2022-03-04T18:03:16Z","merged_at":null,"user_id":40458927,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":866031613,"title":"Generate the quantized function header to remove the runfile dependency.","body":"Generate the quantized function header to remove the runfile dependency.\n\nThe TensorFlow Windows build will require no runfile dependency.\n","created_at":"2022-02-27T11:36:40Z","closed_at":"2022-02-28T01:42:03Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":865461937,"title":"JitRt <-> GPU integration for launching Gpu device kernels from jit-compiled code.","body":"JitRt <-> GPU integration for launching Gpu device kernels from jit-compiled code.\n","created_at":"2022-02-27T01:50:26Z","closed_at":"2022-03-31T22:28:36Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":865451351,"title":"Create a pywrap library for TensorFlow quantization library.","body":"Create a pywrap library for TensorFlow quantization library.\n\nIn the followup change, the OSS tests will be enabled after wiring up with the\npywrap_tensorflow_internal.so\n","created_at":"2022-02-27T01:39:57Z","closed_at":"2022-02-28T05:06:33Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":865408327,"title":"Export BaseImageAugmentationLayer as a keras internal API.","body":"Export BaseImageAugmentationLayer as a keras internal API.\n\nThis will be used in KerasCV\n","created_at":"2022-02-27T00:56:12Z","closed_at":"2022-02-27T01:25:41Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":865406410,"title":"[TF:TRT] Add in-memory timing cache registry","body":"Adds the usage of TensorRT autotuner timing cache to TF-TRT. Serialized timing caches are tracked using a global registry using a string ID. This change updates the converter to use a single timing cache, `default_cache`, but we could qualify timing caches based on configuration attributes (dynamic shape mode, precision mode, etc). This change speeds up converter unit tests by about 20% and will likely speed up TF-TRT-based services performing multiple model builds by a larger factor.","created_at":"2022-02-27T00:54:03Z","closed_at":"2022-05-03T16:55:37Z","merged_at":"2022-05-03T16:55:37Z","user_id":30323187,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":865330624,"title":"Enable MLIR tests for TensorFlow quantization passes","body":"Enable MLIR tests for TensorFlow quantization passes\n","created_at":"2022-02-26T23:42:27Z","closed_at":"2022-03-02T00:00:48Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":865043831,"title":"Enable additional VLOG to xla_compilation_cache module.","body":"Enable additional VLOG to xla_compilation_cache module.\n","created_at":"2022-02-26T19:37:03Z","closed_at":"2022-03-31T22:28:36Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":865034559,"title":"Add additional details to VLOG when XLA compilation is disabled.","body":"Add additional details to VLOG when XLA compilation is disabled.\n\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/tensorflow/tensorflow/pull/54515 from tensorflow:gadagashwini-patch-2 11d8925968c0309f3add22d3e69ae625f347d287\n","created_at":"2022-02-26T19:29:11Z","closed_at":"2022-02-28T22:39:47Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":-0.2,"subjectivity":0.3}}
{"_id":864904252,"title":"Allow constant folding to remove add instructions used by compares","body":"If we have a compare with a constant on the RHS and and add(op, constant) on the left, then move the LHS constant to the right hand side so that constant folding can eliminate the add instruction.\r\n\r\nWe could do the removing of the addition manually by modifying the constants literal but for the sake of \r\navoiding code duplication I think it's better to let the constant folding pass to remove the subtraction\r\n\r\nEliminating the this pattern allows the pattern matching in the while-loop-trip-count-annotator to hit some extra cases.","created_at":"2022-02-26T17:40:16Z","closed_at":"2022-09-09T00:56:45Z","merged_at":null,"user_id":22130400,"sentiment":{"polarity":0.0,"subjectivity":0.3333333333333333}}
{"_id":864711475,"title":"Simplify and/or instructions with identical operands","body":"And/Or instructions with identical operands are no-ops so remove them, and replace with their input. \r\n\r\nThis optimisation allows the pattern matching in the while-loop-trip-count-annotator to hit some cases that are missed in a model I'm running.","created_at":"2022-02-26T15:01:06Z","closed_at":"2022-07-14T13:36:13Z","merged_at":null,"user_id":22130400,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":864315011,"title":"Implements `pywrap_tensorflow_macro_opensource` using `cc_shared_library`. `dynamic_deps` is not used.","body":"Implements `pywrap_tensorflow_macro_opensource` using `cc_shared_library`. `dynamic_deps` is not used.\n","created_at":"2022-02-26T07:59:17Z","closed_at":"2022-03-31T22:28:35Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":864314988,"title":"Adds `libtensorflow_framework.so` to `libtensorflow.so` as a dynamic dependency using `dynamic_deps`.","body":"Adds `libtensorflow_framework.so` to `libtensorflow.so` as a dynamic dependency using `dynamic_deps`.\n","created_at":"2022-02-26T07:59:16Z","closed_at":"2022-03-31T22:28:35Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.16666666666666666}}
{"_id":864314977,"title":"Migrates all `tf_python_pybind_extension` targets to the `cc_shared_library` implementation.","body":"Migrates all `tf_python_pybind_extension` targets to the `cc_shared_library` implementation.\n","created_at":"2022-02-26T07:59:15Z","closed_at":"2022-03-31T22:28:34Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":864314725,"title":"Migrates `tensorflow_cc` to `cc_shared_library`.","body":"Migrates `tensorflow_cc` to `cc_shared_library`.\n\nImplements `//tensorflow:tensorflow_cc` using `cc_shared_library`. `dynamic_deps` is not used.\n","created_at":"2022-02-26T07:59:03Z","closed_at":"2022-03-31T22:28:34Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":864261636,"title":"Migrates `tensorflow_framework` to `cc_shared_library`.","body":"Migrates `tensorflow_framework` to `cc_shared_library`.\n\nImplements `//tensorflow:libtensorflow_framework.so` using `tf_cc_shared_library`. `dynamic_deps` is not used.\n","created_at":"2022-02-26T07:16:15Z","closed_at":"2022-03-31T22:28:52Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":864259144,"title":"Migrates `libtensorflow.so` to `cc_shared_library`.","body":"Migrates `libtensorflow.so` to `cc_shared_library`.\n\nImplements `//tensorflow:libtensorflow.so` with `cc_shared_library`. `dynamic_deps` is not used. It will be added in a separate change.\n","created_at":"2022-02-26T07:14:15Z","closed_at":"2022-03-31T22:28:51Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":864168792,"title":"[XLA:DYNAMIC_PADDER] Do not pad init values into non-reduced dimensions","body":"[XLA:DYNAMIC_PADDER] Do not pad init values into non-reduced dimensions\n","created_at":"2022-02-26T06:01:11Z","closed_at":"2022-02-26T06:31:28Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":864118893,"title":"Fix flatbuffer import by fixing output signature conversion to mlir.","body":"Fix flatbuffer import by fixing output signature conversion to mlir.\n\nMultiple signature outputs can refer to the same tensor. Avoid setting signature output attribute at the same index by maintaining a set.\n","created_at":"2022-02-26T05:20:41Z","closed_at":"2022-02-26T05:54:52Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863913434,"title":"Implement XLA JIT cache persistence so that compiled cache entries can be saved and later loaded.","body":"Implement XLA JIT cache persistence so that compiled cache entries can be saved and later loaded.\n","created_at":"2022-02-26T01:18:40Z","closed_at":"2022-03-15T03:12:03Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863909509,"title":"Support replica_group of XLA Allreduce with CollectiveReduceV2.","body":"Support replica_group of XLA Allreduce with CollectiveReduceV2.\n\nIntroduces a new op CollectiveAssignGroupV2. Behavior:\n\n- On non-XLA path (TF Ops Kernel): computes group_key based on the group assignment input, such that participants in the same group in group assignment share the same group key; the logic is based on a similar logic in DTensor.\n\n- On XLA path (MLIR tf2xla bridge): Op is merged with the following CollectiveReduceV2 to emit a XLAAllReduce Op with the group assignment, which is then lowered as an XLAAllReduce. This is an optimization for GPU targets, though might be a requirement on TPU targets. I am slightly concerned about this detail leaking back to TF, though I think the benefit of supporting group-assignment in both TF Kernel path and XLA path outweights the possibility of leaking on the XLA path.\n\n- This Op is not supported in the legacy bridge. Although (I think) we do need to add a registration in the legacy bridge in order use it in the MLIR bridge.\n\nWith these update semantics in place, DTensor's CollectiveLowering logic can emit same Collective ops on all *PU platforms. The bridge handles the platform dependence. I will work on that move in a child CL.\n","created_at":"2022-02-26T01:11:09Z","closed_at":"2022-03-08T19:49:02Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863902682,"title":"Fixes https://github.com/tensorflow/tensorflow/issues/51502","body":"Fixes https://github.com/tensorflow/tensorflow/issues/51502\r\n\r\nCurrently error is long and confusing in some cases. This CL tries to create a simple and clear error description as shown below.\r\n\r\nOp name         : Max\r\nRoot-cause      : Value for attr 'T' of complex128 is not in the list of allowed values\r\nSupported types : float, double, int32, uint8, int16, int8, int64, bfloat16, uint16, half, uint32, uint64, qint8, quint8, qint32, qint16, quint16\r\n<img width=\"1279\" alt=\"Screen Shot 2022-02-25 at 5 14 40 PM\" src=\"https://user-images.githubusercontent.com/46058173/155822913-f54350e7-6072-4996-b4b9-2eb173ac26d7.png\">\r\n\r\n\r\n","created_at":"2022-02-26T00:49:06Z","closed_at":"2022-03-31T22:28:51Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863897913,"title":"Enable TensorFlow quantization tests in the OSS builds","body":"Enable TensorFlow quantization tests in the OSS builds\n","created_at":"2022-02-26T00:32:56Z","closed_at":"2022-03-01T00:08:19Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863890115,"title":"[TFRT:XLIR] Enhance TFRT to support GPU infeed/outfeed through BEF_THUNK","body":"[TFRT:XLIR] Enhance TFRT to support GPU infeed/outfeed through BEF_THUNK\nexecution.\n\nAdd XLIR instructions for infeed and outfeed.\nAdd rewrite patterns to convert lmhlo.infeed/outfeed to xlir.infeed/outfeed.\nImplement the BEF_THUNK kernels for xlir.infeed/outfeed.\n\nAdd MLIR tests for rewriting lmhlo.infeed/outfeed to xlir.infeed/outfeed.\n\nAdd relevant xla/gpu tests to bef_thunk_tests and bef_executable_tests.\n","created_at":"2022-02-26T00:07:26Z","closed_at":"2022-02-28T22:57:58Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863882724,"title":"[tf.data service] Fix issue with dynamic sharding of GroupByWindow.","body":"[tf.data service] Fix issue with dynamic sharding of GroupByWindow.\n\nPreviously, we incorrectly propagated split providers into iterators created for the nested reduce_fn datasets in GroupByWindow. This could cause errors if a GroupByWindow uses a reduce_fn that produces a splittable dataset.\n\nThis CL also fixes a segmentation fault that previously happened in split_utils when CreateInputIteratorContexts received a context with too few split providers.\n","created_at":"2022-02-25T23:46:13Z","closed_at":"2022-03-04T23:28:00Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.16666666666666666}}
{"_id":863879136,"title":"Add a new API for DeviceAssigment to return a map from physical device to logical device ID.","body":"Add a new API for DeviceAssigment to return a map from physical device to logical device ID.\n","created_at":"2022-02-25T23:35:02Z","closed_at":"2022-03-07T22:03:41Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.12878787878787878,"subjectivity":0.2824675324675325}}
{"_id":863878351,"title":"Fix the OSS build errors on the quantize model wrapper","body":"Fix the OSS build errors on the quantize model wrapper\n","created_at":"2022-02-25T23:32:34Z","closed_at":"2022-02-26T00:22:52Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863874205,"title":"[tf:tfrt] Add more lit test for the transpose codegen","body":"[tf:tfrt] Add more lit test for the transpose codegen\n\nNow that the code generation strategy is more stable, these tests will\nmake sure that we are aware of any changes impacting the transpose transformations.\n","created_at":"2022-02-25T23:22:30Z","closed_at":"2022-03-09T21:48:11Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":863867479,"title":"[tf:tfrt] Improve vectorization strategy of transpose ops","body":"[tf:tfrt] Improve vectorization strategy of transpose ops\n\nThis patch adds some smartness to the way vector dimensions are picked for transpose operations.\nSpecifically, we pick the dimensions that would lead to contiguous memory accesses for both the\ninput and output of the generic op implementing the transpose operation. This leads to a much\nmore efficient memory access pattern for all the transpose cases and a higher benefit when those\ncases fall into the AVX2 lowering patterns.\n","created_at":"2022-02-25T23:06:37Z","closed_at":"2022-03-07T21:57:49Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863862408,"title":"[tf:tfrt] Disable lowering of shape_cast in transpose codegen","body":"[tf:tfrt] Disable lowering of shape_cast in transpose codegen\n\nShape cast operations should be optimized away during the lowering of the\nvector transfer operations. If we lower them too early, they will generate\na set of insert/extract operations that won't be optimized away, even by LLVM.\n","created_at":"2022-02-25T22:55:32Z","closed_at":"2022-03-07T17:29:15Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863858887,"title":"Better coalescing in parallel loop generation","body":"Better coalescing in parallel loop generation\n","created_at":"2022-02-25T22:46:14Z","closed_at":"2022-03-31T22:26:15Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.25,"subjectivity":0.25}}
{"_id":863839391,"title":"Pack BF16 values and element indices together into single 32-bit values to","body":"Pack BF16 values and element indices together into single 32-bit values to\nimprove top-k speed on TPUs.\n","created_at":"2022-02-25T22:05:27Z","closed_at":"2022-02-28T19:19:02Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":-0.07142857142857142,"subjectivity":0.21428571428571427}}
{"_id":863833606,"title":"Fix and re-enable tf_doctest.","body":"Fix and re-enable tf_doctest.\n\n* Fix failing tests.\n* Shorten the one really long (90s) doctest.\n* Add sharding support.\n* Re-enable the test.\n","created_at":"2022-02-25T21:54:59Z","closed_at":"2022-02-25T23:17:39Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863823561,"title":"Profiler need to know if op is eagerly executed.","body":"Profiler need to know if op is eagerly executed.\nCurrent definition is eager = run under EagerKernelExecute but !run under ExecutorState::Process (graph execution)\n\nwith the unification of eager op path => eager function path this no longer works.\n","created_at":"2022-02-25T21:35:50Z","closed_at":"2022-02-26T04:30:50Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863812039,"title":"Internal change with an external component for testing new CI changes.","body":"Internal change with an external component for testing new CI changes.\n","created_at":"2022-02-25T21:16:14Z","closed_at":"2022-03-31T22:28:51Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.04545454545454545,"subjectivity":0.18484848484848485}}
{"_id":863810345,"title":"[tf.data] Fixes issue where compute_batch_size fails to handle tensor specs with no output shape.","body":"[tf.data] Fixes issue where compute_batch_size fails to handle tensor specs with no output shape.\n","created_at":"2022-02-25T21:13:36Z","closed_at":"2022-02-25T21:40:11Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":-0.5,"subjectivity":0.3}}
{"_id":863808836,"title":"Add some complicated unit tests in merge_control_flow pass.","body":"Add some complicated unit tests in merge_control_flow pass.\n","created_at":"2022-02-25T21:11:46Z","closed_at":"2022-02-28T19:37:13Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":-0.5,"subjectivity":1.0}}
{"_id":863806225,"title":"Include kernel launch dimensions in the string representation of KernelThunk","body":"Include kernel launch dimensions in the string representation of KernelThunk\n","created_at":"2022-02-25T21:07:01Z","closed_at":"2022-02-28T23:06:39Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863805822,"title":"Tighten access controls in HloDataflowAnalysis","body":"Tighten access controls in HloDataflowAnalysis\n","created_at":"2022-02-25T21:06:18Z","closed_at":"2022-02-25T23:07:43Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863772462,"title":"Implement _without_tensor_names for tf_probability TypeSpecs","body":"Implement _without_tensor_names for tf_probability TypeSpecs\n","created_at":"2022-02-25T20:16:49Z","closed_at":"2022-03-31T22:28:50Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863757545,"title":"MultiaryUnstack forward type inference function for TensorSliceDataset","body":"MultiaryUnstack forward type inference function for TensorSliceDataset\n\nFulltype helper for ops with semantics of unstacking multiple inputs into a container\n`<t>[T1, ..., Tn]`, that is `T1, ..., Tn -> <t>[PRODUCT[U1, ..., Un]]`\nwhere Ui is obtained from an \"unstack\" mapping T -> U. Both <t> and the\n\"unstack\" mapping are parameterized by this factory.\n\nTensorSliceDataset uses this.\n","created_at":"2022-02-25T19:56:22Z","closed_at":"2022-03-01T23:21:54Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863738503,"title":"[mlir] ExecutionEngine: default enableObjectCache to false","body":"[mlir] ExecutionEngine: default enableObjectCache to false\n","created_at":"2022-02-25T19:35:20Z","closed_at":"2022-03-31T22:28:50Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":-0.4000000000000001,"subjectivity":0.6}}
{"_id":863719917,"title":"[tfrt:jit] Allocate JIT memory in a named memfd","body":"[tfrt:jit] Allocate JIT memory in a named memfd\n","created_at":"2022-02-25T19:05:31Z","closed_at":"2022-02-28T19:47:15Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863711578,"title":"[XLA:CPU] Disable fast math by default (except in reductions).","body":"[XLA:CPU] Disable fast math by default (except in reductions).\n\nFixes https://github.com/google/jax/issues/6566\n","created_at":"2022-02-25T18:52:05Z","closed_at":"2022-03-04T17:47:07Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.2,"subjectivity":0.6}}
{"_id":863710421,"title":"Add tf.random.experimental.index_shuffle().","body":"Add tf.random.experimental.index_shuffle().\n\nIt maps an index in [0, maxval] to a new random index in [0, maxval]. This allows users to suffle a list {0, 1, ..., n} without materializing the full list in memory.\n\nThe operation is stateless and does not use the global random seed. The current implementation only works on CPU.\n\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/tensorflow/tensorflow/pull/54521 from PatriceVignola:add-inplace-device-default-registration 2e5af637d89b180031100530cdbd9b3ef34ec176\n","created_at":"2022-02-25T18:50:09Z","closed_at":"2022-02-28T23:15:07Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863706131,"title":"Implement the new sample algorithm for memory timeline graph.","body":"Implement the new sample algorithm for memory timeline graph.\n\nIn the old code, PerAllocatorMemoryProfile.memory_profile_snapshots are used in two places: (1) Display in timeline graph (2) Referenced by active allocations\n\nIn the new code, PerAllocatorMemoryProfile.memory_profile_snapshots are only referenced by active allocations, PerAllocatorMemoryProfile.memory_profile_timeline_snapshots are used to display in the timeline graph, and is created by a max box filter over the original data.\n","created_at":"2022-02-25T18:42:42Z","closed_at":"2022-03-05T00:51:08Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.13636363636363635,"subjectivity":0.45454545454545453}}
{"_id":863689171,"title":"Implement most_specific_common_supertype for DatasetSpec","body":"Implement most_specific_common_supertype for DatasetSpec\n","created_at":"2022-02-25T18:15:47Z","closed_at":"2022-02-25T18:36:18Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863685241,"title":"Add set_tpu_infeed_layout.h and set_tpu_infeed_layout.cc.","body":"Add set_tpu_infeed_layout.h and set_tpu_infeed_layout.cc.\n","created_at":"2022-02-25T18:09:44Z","closed_at":"2022-03-31T22:28:49Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863682116,"title":"Verifying the verification order [do not merge]","body":"Verifying the verification order [do not merge]\n","created_at":"2022-02-25T18:04:58Z","closed_at":"2022-03-31T22:28:49Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863676442,"title":"Implement `TfrtSession::Extend()` after session creation","body":"Implement `TfrtSession::Extend()` after session creation\n","created_at":"2022-02-25T17:56:16Z","closed_at":"2022-02-25T18:33:27Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863670094,"title":"Update RaggedTensor._to_components to add shape information to RaggedTensor.","body":"Update RaggedTensor._to_components to add shape information to RaggedTensor.\n\nWhen a RaggedTensor is returned from tf.py_function in graph mode, its shape information is unknown and should be recovered from RaggedTensorSpec.\n","created_at":"2022-02-25T17:46:10Z","closed_at":"2022-02-25T23:19:50Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863670058,"title":"[ST] Migrate from linalg.tiled_loop to gml_st.loop.","body":"[ST] Migrate from linalg.tiled_loop to gml_st.loop.\n","created_at":"2022-02-25T17:46:06Z","closed_at":"2022-02-25T19:23:59Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863659345,"title":"[TF:TRT] Elide log messages when qdq mode is off","body":"This change removes log messages notifying users that QDQ mode is not enabled. Since this is not surprising for the majority of users, and log messages appear to notify users that QDQ mode is enabled, the \"not enabled\" log messages are superfluous.","created_at":"2022-02-25T17:29:22Z","closed_at":"2022-03-02T16:47:16Z","merged_at":"2022-03-02T16:47:16Z","user_id":30323187,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863649505,"title":"[tfrt:jit] Move ReturnValueConverterBase constructor/destructor definitions to header","body":"[tfrt:jit] Move ReturnValueConverterBase constructor/destructor definitions to header\n","created_at":"2022-02-25T17:15:48Z","closed_at":"2022-03-31T22:28:49Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863649172,"title":"[tfrt:jit] Move async task runners definition to header","body":"[tfrt:jit] Move async task runners definition to header\n","created_at":"2022-02-25T17:15:22Z","closed_at":"2022-03-31T22:28:48Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863647509,"title":"[tfrt:jit] Move jitrt type definitions to header","body":"[tfrt:jit] Move jitrt type definitions to header\n\nSome of the function calls are now inlined into the ReturnValues converter\n\nBEFORE:\n--- Running 'BM_compiled_rsqrt_f32':\nBM:BM_compiled_rsqrt_f32:Time Min(ns): 494\nBM:BM_compiled_rsqrt_f32:Time 50%(ns): 536\nBM:BM_compiled_rsqrt_f32:Time 95%(ns): 565\nBM:BM_compiled_rsqrt_f32:Time 99%(ns): 581\n\nAFTER:\n--- Running 'BM_compiled_rsqrt_f32':\nBM:BM_compiled_rsqrt_f32:Time Min(ns): 482\nBM:BM_compiled_rsqrt_f32:Time 50%(ns): 516\nBM:BM_compiled_rsqrt_f32:Time 95%(ns): 533\nBM:BM_compiled_rsqrt_f32:Time 99%(ns): 562\n","created_at":"2022-02-25T17:13:06Z","closed_at":"2022-03-31T22:28:48Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863646921,"title":"[tf:jitrt] Add benchmark for returning Tensors","body":"[tf:jitrt] Add benchmark for returning Tensors\n","created_at":"2022-02-25T17:12:15Z","closed_at":"2022-02-25T18:00:15Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863646303,"title":"[tfrt:jit] Add a return value converter with statically defined conversion functions","body":"[tfrt:jit] Add a return value converter with statically defined conversion functions\n\nThis allows return value converter to inline individual conversion functions into the converter and skip building vector of llvm::function_refs.\n\nBenchmark                       Time(ns)        CPU(ns)     Iterations\n----------------------------------------------------------------------\nBM_ReturnValueConverter               80.9           80.8       731760\nBM_StaticReturnValueConverter         75.7           76.8       729097\n","created_at":"2022-02-25T17:11:33Z","closed_at":"2022-02-25T17:40:02Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863639287,"title":"[XLA:CPU] Allow reassociation in reduction computations even if fast math mode is disabled.","body":"[XLA:CPU] Allow reassociation in reduction computations even if fast math mode is disabled.\n\n\nAfter, with fast math disabled globally (except obviously on reductions):\n```\nname                                 cpu/op\nbm_reduction_10_axis=0              3.80µs ± 3%\nbm_reduction_100_axis=0             3.86µs ± 4%\nbm_reduction_1000_axis=0            4.10µs ± 0%\nbm_reduction_10000_axis=0           6.92µs ± 2%\nbm_reduction_100000_axis=0          15.5µs ± 1%\nbm_reduction_1000000_axis=0          165µs ± 9%\nbm_reduction_10000000_axis=0         870µs ± 9%\nbm_reduction_10x10_axis=0           3.80µs ± 4%\nbm_reduction_10x10_axis=1           3.82µs ± 3%\nbm_reduction_100x100_axis=0         8.76µs ± 2%\nbm_reduction_100x100_axis=1         5.16µs ± 3%\nbm_reduction_1000x1000_axis=0        504µs ± 1%\nbm_reduction_1000x1000_axis=1        269µs ± 1%\nbm_reduction_10000x10000_axis=0     7.63ms ± 3%\nbm_reduction_10000x10000_axis=1     5.94ms ± 8%\nbm_reduction_100000x100000_axis=0    601ms ± 3%\nbm_reduction_100000x100000_axis=1    442ms ± 5%\n```\n\nBefore, with fast math enabled;\n```\nname                                 cpu/op\nbm_reduction_10_axis=0              4.22µs ± 8%\nbm_reduction_100_axis=0             4.56µs ±37%\nbm_reduction_1000_axis=0            4.37µs ± 7%\nbm_reduction_10000_axis=0           7.62µs ±18%\nbm_reduction_100000_axis=0          15.2µs ± 2%\nbm_reduction_1000000_axis=0          163µs ±11%\nbm_reduction_10000000_axis=0         818µs ±12%\nbm_reduction_10x10_axis=0           4.30µs ±21%\nbm_reduction_10x10_axis=1           4.14µs ± 7%\nbm_reduction_100x100_axis=0         9.24µs ± 3%\nbm_reduction_100x100_axis=1         5.36µs ± 5%\nbm_reduction_1000x1000_axis=0        508µs ± 1%\nbm_reduction_1000x1000_axis=1        261µs ± 2%\nbm_reduction_10000x10000_axis=0     7.69ms ± 5%\nbm_reduction_10000x10000_axis=1     5.42ms ± 7%\nbm_reduction_100000x100000_axis=0    594ms ± 4%\nbm_reduction_100000x100000_axis=1    425ms ± 6%\n```\n\nBefore, with fast math disabled:\n```\nname                                cpu/op\nbm_reduction_10_axis=0              3.98µs ± 3%\nbm_reduction_100_axis=0             4.28µs ±22%\nbm_reduction_1000_axis=0            4.74µs ± 3%\nbm_reduction_10000_axis=0           11.0µs ± 1%\nbm_reduction_100000_axis=0          56.8µs ± 1%\nbm_reduction_1000000_axis=0          538µs ± 1%\nbm_reduction_10000000_axis=0        2.05ms ± 5%\nbm_reduction_10x10_axis=0           4.04µs ± 1%\nbm_reduction_10x10_axis=1           4.01µs ± 3%\nbm_reduction_100x100_axis=0         11.3µs ± 2%\nbm_reduction_100x100_axis=1         9.63µs ± 1%\nbm_reduction_1000x1000_axis=0        704µs ± 1%\nbm_reduction_1000x1000_axis=1        696µs ± 2%\nbm_reduction_10000x10000_axis=0     11.0ms ± 3%\nbm_reduction_10000x10000_axis=1     10.2ms ± 1%\nbm_reduction_100000x100000_axis=0    960ms ± 2%\nbm_reduction_100000x100000_axis=1    675ms ± 5%\n```\n","created_at":"2022-02-25T17:02:32Z","closed_at":"2022-03-03T15:06:17Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.45}}
{"_id":863600220,"title":"Add StatusOr<bool> IsReady() to the PjRtBuffer API.","body":"Add StatusOr<bool> IsReady() to the PjRtBuffer API.\n\nAn error is returned:\n- if the buffer was deleted.\n- if it's not supported by the backend (discouraged, but may happen).\n","created_at":"2022-02-25T16:11:47Z","closed_at":"2022-03-31T22:28:48Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863562873,"title":"Use the attribute `_shape` in `ReadVariableOp` shape inference if found","body":"This PR is a workaround to fix shape inference of `ReadVariableOp` nodes when a graph gets resource inputs and we can't infer the shapes of the variables. The nodes need to be annotated beforehand with an attribute `shape`.\r\n\r\nContext and code sample illustrating the problem in the comments.\r\n\r\nThis is only a temporary solution, ideally, shape inference should handle resource inputs (similarly to how it can get shapes of the inputs when `assume_valid_feeds == true`).","created_at":"2022-02-25T15:25:27Z","closed_at":"2022-03-28T18:50:55Z","merged_at":null,"user_id":17441062,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863557337,"title":"(lite) Add shim function tflite_shims::internal::verifyFlatBufferAndGetModel and use it from JNI code","body":"(lite) Add shim function tflite_shims::internal::verifyFlatBufferAndGetModel and use it from JNI code\n\nWhen checking the validity of the model flatbuffer in\nthe Java API implementation, use the new shims function\ntflite::internal::VerifyFlatBufferAndGetModel, rather than\njust directly calling the FlatBuffer routines.\n","created_at":"2022-02-25T15:18:40Z","closed_at":"2022-03-31T22:28:47Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863510943,"title":"[tfrt:jit] Split tf_jitrt_codegen_transpose into two files.","body":"[tfrt:jit] Split tf_jitrt_codegen_transpose into two files.\n\nAlso we should not use CodegenStrategy for tiling, because of gml_st.loop\nmigration.\n","created_at":"2022-02-25T14:39:35Z","closed_at":"2022-02-25T14:57:15Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863461927,"title":"Export the GPU compatibility list flatbuffer schema","body":"Export the GPU compatibility list flatbuffer schema\n","created_at":"2022-02-25T13:49:23Z","closed_at":"2022-02-28T11:54:08Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863451488,"title":"[mhlo:linalg] Pass pad sizes as attributes","body":"[mhlo:linalg] Pass pad sizes as attributes\n\nNo need to wrap them in a ConstantOp.\n","created_at":"2022-02-25T13:36:17Z","closed_at":"2022-02-25T14:46:49Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863436370,"title":"Add Lowering of RngGetAndUpdateStateOp to use a global memref","body":"Add Lowering of RngGetAndUpdateStateOp to use a global memref\n","created_at":"2022-02-25T13:18:28Z","closed_at":"2022-02-28T10:59:04Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863431562,"title":"Use lowering of RngGetAndUpdateStateOp for AOT compilation","body":"Use lowering of RngGetAndUpdateStateOp for AOT compilation\n","created_at":"2022-02-25T13:13:15Z","closed_at":"2022-02-28T11:19:20Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863431498,"title":"Define mhlo.rng_get_and_update_state_op to match existing HLO","body":"Define mhlo.rng_get_and_update_state_op to match existing HLO\n\nThis instruction represents the change of the global random number generator state for rng instructions. The global state is incremented by delta and the old state is returned.\n","created_at":"2022-02-25T13:13:12Z","closed_at":"2022-02-28T10:36:24Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863419887,"title":"Update test with mock.","body":"Update test with mock.\n","created_at":"2022-02-25T13:02:35Z","closed_at":"2022-02-26T08:56:35Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863354643,"title":"Use MultiProcessCluster instead of in-process cluster.","body":"Use MultiProcessCluster instead of in-process cluster.\n","created_at":"2022-02-25T11:32:40Z","closed_at":"2022-02-26T09:16:55Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863336993,"title":"Extend lowering of reshape to linalg to also cover reshape to static shape with trailing dynamic input dimensions.","body":"Extend lowering of reshape to linalg to also cover reshape to static shape with trailing dynamic input dimensions.\n","created_at":"2022-02-25T11:10:10Z","closed_at":"2022-03-02T14:11:20Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.25,"subjectivity":0.5333333333333333}}
{"_id":863336143,"title":"[XLA] Don't do redundant work in `GlobalDecreasingSizeBestFitHeap::GetTransitiveColocations`.","body":"[XLA] Don't do redundant work in `GlobalDecreasingSizeBestFitHeap::GetTransitiveColocations`.\n","created_at":"2022-02-25T11:09:10Z","closed_at":"2022-02-28T11:29:37Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":-0.2,"subjectivity":0.2}}
{"_id":863290579,"title":"[TFRT GPU] Change convolution algorithm to a specific type, add ops to create it.","body":"[TFRT GPU] Change convolution algorithm to a specific type, add ops to create it.\n\nRemove chain argument from ops that create a descriptor, mark them `NoSideEffect`.\n\nUse the correct signedness for EnumAttr.\n","created_at":"2022-02-25T10:11:44Z","closed_at":"2022-02-25T19:33:22Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.125}}
{"_id":863280802,"title":"[XLA] Optimizations / cleanup of `ComputeInstructionPostOrder`.","body":"[XLA] Optimizations / cleanup of `ComputeInstructionPostOrder`.\n\n- Remove redundant hash lookup of `visited`.\n- Remove redundant check of channel group dependencies.\n- Extract common `GetChannelId` function.\n","created_at":"2022-02-25T10:00:45Z","closed_at":"2022-03-17T18:07:28Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863248456,"title":"CanCreateTensorWithShape moved into TensorDescriptor.","body":"CanCreateTensorWithShape moved into TensorDescriptor.\n","created_at":"2022-02-25T09:20:53Z","closed_at":"2022-02-28T15:03:24Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863205209,"title":"Support of reading int based images in OpenCL.","body":"Support of reading int based images in OpenCL.\n","created_at":"2022-02-25T08:24:33Z","closed_at":"2022-02-28T13:13:08Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863137574,"title":"[hlo] algebraic simplifier select not pred pattern ","body":"select(not(pred), on_true, on_false) => select(pred, on_false, on_true)","created_at":"2022-02-25T06:31:01Z","closed_at":"2022-03-02T09:56:58Z","merged_at":"2022-03-02T09:56:58Z","user_id":22370779,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863133696,"title":"Implement asynchronous checkpoint for the eager mode, i.e., context.running_eagerly().","body":"Implement asynchronous checkpoint for the eager mode, i.e., context.running_eagerly().\n","created_at":"2022-02-25T06:23:40Z","closed_at":"2022-02-25T06:54:18Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863113229,"title":"Support group conv2d in reference kernels","body":"Support group conv2d in reference kernels\n","created_at":"2022-02-25T05:38:22Z","closed_at":"2022-03-15T19:14:20Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863095305,"title":"Remove ExperimentalAssertNextDataset op.","body":"Remove ExperimentalAssertNextDataset op.\n\nThis is a duplicate of AssertNextDataset.\n","created_at":"2022-02-25T04:57:54Z","closed_at":"2022-02-25T05:53:52Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863075119,"title":"[XLA] Use priority to represent multiple layout assignment passes in layout_assignment.cc without saving the intermediate result inside HLO and then clearing them.","body":"[XLA] Use priority to represent multiple layout assignment passes in layout_assignment.cc without saving the intermediate result inside HLO and then clearing them.\n","created_at":"2022-02-25T04:09:55Z","closed_at":"2022-03-07T23:31:24Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863050561,"title":"fix cmake build error for tflite c library","body":"Fix cmake error when building tflite C library:\r\n\r\n```\r\nCMake Error at CMakeLists.txt:63 (add_library):\r\n  Cannot find source file:\r\n\r\n    common.c\r\n\r\n```","created_at":"2022-02-25T03:08:53Z","closed_at":"2022-12-15T09:14:46Z","merged_at":null,"user_id":17346359,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863037696,"title":"Replace _tpu_replicate with _xla_compile_device_type=TPU and _replication_info=X in MLIR TPU bridge.","body":"Replace _tpu_replicate with _xla_compile_device_type=TPU and _replication_info=X in MLIR TPU bridge.\n","created_at":"2022-02-25T02:34:59Z","closed_at":"2022-03-16T21:35:52Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863030164,"title":"#tf-data-service Add a utility function to compare dataset graphs.","body":"#tf-data-service Add a utility function to compare dataset graphs.\n\nWhen the users need to register named datasets, this will be used\nto validate that the dataset graphs have the same structure.\n","created_at":"2022-02-25T02:17:01Z","closed_at":"2022-02-26T00:26:46Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863003747,"title":"expose HloModule's spmd_parameters_shardings to python","body":"expose HloModule's spmd_parameters_shardings to python\n","created_at":"2022-02-25T01:12:51Z","closed_at":"2022-02-25T19:37:32Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":863003513,"title":"Add send ops as control outputs on both lazy and non-lazy paths, so that they do not get removed in the following transformations.","body":"Add send ops as control outputs on both lazy and non-lazy paths, so that they do not get removed in the following transformations.\n","created_at":"2022-02-25T01:12:16Z","closed_at":"2022-03-11T11:01:42Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":-0.125,"subjectivity":0.55}}
{"_id":862999605,"title":"Add no_oss tag to failing tests.","body":"Add no_oss tag to failing tests.\n","created_at":"2022-02-25T01:03:08Z","closed_at":"2022-02-25T01:52:27Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":862999226,"title":"XNNPack delegate to support delegating grouped conv2d op.","body":"XNNPack delegate to support delegating grouped conv2d op.\n","created_at":"2022-02-25T01:02:16Z","closed_at":"2022-03-23T18:21:59Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":862997672,"title":"Support nnapi delegate to choose grouped con2d op.","body":"Support nnapi delegate to choose grouped con2d op.\n","created_at":"2022-02-25T00:58:32Z","closed_at":"2022-03-23T18:46:07Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":862996210,"title":"This CL reduces the high average looping count (~4,435,487) in the RandomDims() utility function which slows down dependent tests; i.e. RFFT","body":"This CL reduces the high average looping count (~4,435,487) in the RandomDims() utility function which slows down dependent tests; i.e. RFFT\n","created_at":"2022-02-25T00:55:34Z","closed_at":"2022-02-25T02:50:22Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":-0.04851851851851852,"subjectivity":0.40962962962962957}}
{"_id":862993915,"title":"#tf-data-service Add a `dataset_name` param to `register_dataset`.","body":"#tf-data-service Add a `dataset_name` param to `register_dataset`.\n\nIf multiple client jobs need to read from the same dataset, they can\nuse the same dataset name. The datasets with the same name should have\nthe same definition. Otherwise, it will raise an invalid argument\nerror.\n","created_at":"2022-02-25T00:51:33Z","closed_at":"2022-03-31T22:28:47Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":862992959,"title":"Check in the Python codes for TensorFlow quantization passes","body":"Check in the Python codes for TensorFlow quantization passes\n","created_at":"2022-02-25T00:50:04Z","closed_at":"2022-02-25T22:44:39Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":862988153,"title":"Check in the test MLIR files for TensorFlow quantization passes","body":"Check in the test MLIR files for TensorFlow quantization passes\n\nThe test codes will be enabled in the followup change.\n","created_at":"2022-02-25T00:41:52Z","closed_at":"2022-02-25T01:05:20Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":862979955,"title":"Change tag from nooss to no_oss.","body":"Change tag from nooss to no_oss.\n\nOnly no_oss causes the test not to be run in OSS.\n","created_at":"2022-02-25T00:27:43Z","closed_at":"2022-02-25T20:53:27Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":862968430,"title":"Export current optimizer to legacy namespace. ","body":"Export current optimizer to legacy namespace. \n\nA new-version optimizer is going to be available in TF 2.9 release. Although the new optimizer is now under experimental namespace, it will in future become the default optimizer. For backward compatibility, we will continue support the current optimizer in the legacy namespace.\n","created_at":"2022-02-25T00:06:45Z","closed_at":"2022-02-25T01:16:12Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.4}}
{"_id":862954867,"title":"Add spmd_parameters_shardings to HloModuleProto.","body":"Add spmd_parameters_shardings to HloModuleProto.\n","created_at":"2022-02-24T23:37:16Z","closed_at":"2022-02-25T05:49:49Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":862951152,"title":"Allow only float values for gelu.","body":"Allow only float values for gelu.\n\nFixes #54475\n","created_at":"2022-02-24T23:29:48Z","closed_at":"2022-03-01T00:19:48Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":1.0}}
{"_id":862950045,"title":"Append the path when the metadata was not found to the error message for easier debugging.","body":"Append the path when the metadata was not found to the error message for easier debugging.\n","created_at":"2022-02-24T23:27:45Z","closed_at":"2022-02-25T20:07:04Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":862937694,"title":"Delete another ancient Dockerfile","body":"This is intended to be another test of the new GitHub targeting presubmits.","created_at":"2022-02-24T23:04:04Z","closed_at":"2022-02-25T00:47:39Z","merged_at":"2022-02-25T00:47:39Z","user_id":32465472,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":862930988,"title":"Remove java-related flags from .bazelrc that are ignored by Bazel 5.","body":null,"created_at":"2022-02-24T22:51:09Z","closed_at":"2022-03-02T00:14:30Z","merged_at":"2022-03-02T00:14:30Z","user_id":219470,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":862924412,"title":"Export current optimizer to legacy namespace. ","body":"Export current optimizer to legacy namespace. \n\nA new-version optimizer is going to be available in TF 2.9 release. Although the new optimizer is now under experimental namespace, it will in future become the default optimizer. For backward compatibility, we will continue support the current optimizer in the legacy namespace.\n","created_at":"2022-02-24T22:40:03Z","closed_at":"2022-02-24T23:09:48Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.4}}
{"_id":862910791,"title":"Deallocate TPU embedding enqueue Tensors","body":"Deallocate TPU embedding enqueue Tensors\n","created_at":"2022-02-24T22:29:19Z","closed_at":"2022-02-25T05:59:39Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":862899963,"title":"Create `xla_gpu_nccl_termination_timeout_seconds` debug flag to terminate from WaitAndLogIfStuck in nccl_utils.","body":"Create `xla_gpu_nccl_termination_timeout_seconds` debug flag to terminate from WaitAndLogIfStuck in nccl_utils.\n","created_at":"2022-02-24T22:21:09Z","closed_at":"2022-03-01T11:50:40Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":862885704,"title":"[NNAPI] update the NnapiDelegateVendorPlugin::MapNode() to take mutable TfLiteContext","body":"[NNAPI] update the NnapiDelegateVendorPlugin::MapNode() to take mutable TfLiteContext\n","created_at":"2022-02-24T22:10:25Z","closed_at":"2022-02-25T02:21:21Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":862859768,"title":"Create a custom Spec for DynamicRaggedShape. This involves making functions in DynamicRaggedShape work for the spec too, e.g. functions such as _dimension.","body":"Create a custom Spec for DynamicRaggedShape. This involves making functions in DynamicRaggedShape work for the spec too, e.g. functions such as _dimension.\n","created_at":"2022-02-24T21:34:39Z","closed_at":"2022-03-14T23:35:41Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.5}}
{"_id":862842330,"title":"Remove more OSS embedding tests","body":"Remove more OSS embedding tests\n","created_at":"2022-02-24T21:09:32Z","closed_at":"2022-03-31T22:28:47Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":862830402,"title":"Remove cuda_py_tests and gpu_py_tests.","body":"Remove cuda_py_tests and gpu_py_tests.\n\nUsers can switch to the direct expansion of cuda_py_tests into cuda_py_test. It is a bit laboring but these are BUILD files anyway.\n\nThe impact for removal of gpu_py_tests is likely very small. A search on github showed 250 results. I scanned a few pages (~10) and they are all forks of tensorflow org projects.\n","created_at":"2022-02-24T20:52:02Z","closed_at":"2022-02-24T22:20:23Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":862828038,"title":"[tf:tfrt] Guard transpose codegen under a flag","body":"[tf:tfrt] Guard transpose codegen under a flag\n\nThe transpose code generation strategy generates AVX2-specific assembly\nwhich may fail to run if the CPU doesn't have support for AVX2. Guarding\nthe transpose code generation strategy under a flag until we implement the\nproper solution to this problem. This will prevent the fuzzer from finding\nfalse positives when using a non-AVX2 CPU.\n","created_at":"2022-02-24T20:48:53Z","closed_at":"2022-02-25T18:20:33Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":862823287,"title":"Fix bug with loading checkpoints with the `root` arg and attached dependencies.","body":"Fix bug with loading checkpoints with the `root` arg and attached dependencies.\n","created_at":"2022-02-24T20:44:31Z","closed_at":"2022-02-24T21:03:17Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":862821116,"title":"Moving NonMaxSuppressionV3 kernel to old bridge. MLIR canonicalization doesn't work b/c of lack of Dynamic Padder support in MLIR bridge.","body":"Moving NonMaxSuppressionV3 kernel to old bridge. MLIR canonicalization doesn't work b/c of lack of Dynamic Padder support in MLIR bridge.\n","created_at":"2022-02-24T20:41:45Z","closed_at":"2022-02-24T21:39:34Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.05,"subjectivity":0.18333333333333332}}
{"_id":862819526,"title":"Turn on merge control flow pass through introducing a new algorithm of the pass.","body":"Turn on merge control flow pass through introducing a new algorithm of the pass.\n","created_at":"2022-02-24T20:39:27Z","closed_at":"2022-03-31T22:28:46Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.13636363636363635,"subjectivity":0.45454545454545453}}
{"_id":862812854,"title":"[NNAPI] Allow running dynamic shape models with vendor plugin","body":"[NNAPI] Allow running dynamic shape models with vendor plugin\n","created_at":"2022-02-24T20:29:17Z","closed_at":"2022-02-25T01:30:33Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.16666666666666666}}
{"_id":862800223,"title":"Enable kernel fallback lowering for GPU.","body":"Enable kernel fallback lowering for GPU.\n","created_at":"2022-02-24T20:12:27Z","closed_at":"2022-02-25T01:38:13Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":862797128,"title":"Add dtensor to the build tree of TensorFlow.","body":"Add dtensor to the build tree of TensorFlow.\n","created_at":"2022-02-24T20:08:59Z","closed_at":"2022-03-08T18:39:10Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":862796970,"title":"[NNAPI] Allow reusable execution with dynamic shape","body":"[NNAPI] Allow reusable execution with dynamic shape\n","created_at":"2022-02-24T20:08:44Z","closed_at":"2022-02-24T20:12:54Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.16666666666666666}}
{"_id":862788044,"title":"Enables macOS and Windows presubmits.","body":"Enables macOS and Windows presubmits.\n","created_at":"2022-02-24T19:56:09Z","closed_at":"2022-03-31T22:29:50Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":862788042,"title":"Migrates to built-in `cc_shared_library`.","body":"Migrates to built-in `cc_shared_library`.\n\nReplaces dependence on the @rules_cc version of `cc_shared_library` with the Bazel built-in one.\n","created_at":"2022-02-24T19:56:09Z","closed_at":"2022-03-31T22:29:49Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":862770686,"title":"[lite] Optimize reduce all dims use case when the number of elements is small. Parallelizing overhead might be huge.","body":"[lite] Optimize reduce all dims use case when the number of elements is small. Parallelizing overhead might be huge.\n","created_at":"2022-02-24T19:31:56Z","closed_at":"2022-02-28T21:51:16Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.07500000000000004,"subjectivity":0.65}}
{"_id":862769880,"title":"This CL makes two changes to handle the potential pointer invalidation across","body":"This CL makes two changes to handle the potential pointer invalidation across\nclearing protocol buffers:\n\n(1) Instead of caching a map field, always refer it from the containing proto.\n(2) Instantiate NodeMap instance after output_graph is fully initialized.\n","created_at":"2022-02-24T19:30:50Z","closed_at":"2022-02-24T21:31:07Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":1.0}}
{"_id":862727986,"title":"Delete an ancient Dockerfile","body":"Discard an ancient 14.04 Dockerfile, as a test of new code migration settings.","created_at":"2022-02-24T18:37:22Z","closed_at":"2022-02-24T19:18:05Z","merged_at":"2022-02-24T19:18:05Z","user_id":32465472,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":862721926,"title":"Reduce flakyness of `//tensorflow/c/eager:c_api_test_cpu`.","body":"Reduce flakyness of `//tensorflow/c/eager:c_api_test_cpu`.\n\nApplying a similar fix as before, just increasing length of backfill queue\n","created_at":"2022-02-24T18:31:46Z","closed_at":"2022-02-24T18:44:19Z","merged_at":null,"user_id":56741989,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":862716766,"title":"[PluggableDevice] Add `DEVICE_DEFAULT` registration for EnsureShape","body":null,"created_at":"2022-02-24T18:27:27Z","closed_at":"2022-02-28T21:57:05Z","merged_at":"2022-02-28T21:57:05Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":862698959,"title":"[PluggableDevice] Add `DEVICE_DEFAULT` registrations for Inplace ops","body":null,"created_at":"2022-02-24T18:03:39Z","closed_at":"2022-02-28T22:26:31Z","merged_at":"2022-02-28T22:26:31Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":862646575,"title":"Simplifies the error message thrown by sparse tensor","body":"Currently, there is a long error message and little confusing as mentioned by users. This PR simplifies the error message to be more specific.\r\n\r\nhttps://github.com/tensorflow/tensorflow/issues/50349\r\nhttps://github.com/tensorflow/tensorflow/issues/50078","created_at":"2022-02-24T16:59:06Z","closed_at":"2022-03-25T22:21:00Z","merged_at":null,"user_id":46058173,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":862627250,"title":"Added LZ4 support for TFRecordWriter","body":"Related to https://github.com/tensorflow/tensorflow/pull/53385\r\n\r\nThe current API of `TFRecordOptions` only supports:\r\n- no compression\r\n- GZIP compression\r\n- ZLIB compression\r\n\r\nWith this PR, I have added support for a 4th compression algorithm, LZ4: https://github.com/lz4/lz4\r\n\r\nThe API for `TFRecordOptions` is therefore updated to accept the following parameters:\r\n\r\n```\r\n      compression_type: `\"GZIP\"`, `\"ZLIB\"`, `\"LZ4\"` or `\"\"` (no compression).\r\n      TODO\r\n```\r\n\r\nMaintaining backward compatibility with the current API.","created_at":"2022-02-24T16:36:40Z","closed_at":"2022-12-29T05:08:18Z","merged_at":null,"user_id":562969,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":862365252,"title":"Fix broken link in `image_retraining /README.md`","body":"Added the correct link in image_retraining /README.md","created_at":"2022-02-24T12:02:06Z","closed_at":"2022-02-28T21:39:09Z","merged_at":"2022-02-28T21:39:09Z","user_id":99852755,"sentiment":{"polarity":-0.4,"subjectivity":0.4}}
{"_id":862006602,"title":"[TF-TRT] Converter Summary Improved with number of IO nodes","body":"Minor changer to `TRTConverterV2.summary()` to include the number of input and output nodes.","created_at":"2022-02-24T02:23:31Z","closed_at":"2022-03-01T00:30:20Z","merged_at":"2022-03-01T00:30:20Z","user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":861882060,"title":"[TF-TRT] TF_TRT_MAX_ALLOWED_ENGINES env var added to limit the number of TRT Engines","body":"This PR introduces the environment variable: `TF_TRT_MAX_ALLOWED_ENGINES=20 (default)` to add an upper bound mechanism to the number of generated TRT Engines.\r\n\r\nExtra verbosity can be enabled at VLOG(1) level.\r\n\r\nWe chose the default value to be 20 because it's not overly restrictive and should only impact poorly performing models.\r\nTo be fair any value between 15-25 is probably fine. We can fine tune this default value in the future if we identify unforeseen side effects.","created_at":"2022-02-23T22:19:00Z","closed_at":"2022-03-11T14:14:38Z","merged_at":"2022-03-11T14:14:38Z","user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":861879453,"title":"[ROCm] Syncing contents of the rocm configuration files with the ROCm fork","body":"This commit syncs the contents of the rocm configuration files (in the `third_party/gpus/` directory) from the ROCm TF fork.\r\n\r\nThe changes mostly involves updates asssociated with the newer ROCm reelases (4.5, 5.0), like\r\n* addition of new libs (hipBlas, hipSolver)\r\n* new location for rocm version information, + new routine to provide access to it\r\n* explicitly adding `-lstdc++` linker flag as the last option to the linker command\r\n  * see this PR for more details - https://github.com/ROCmSoftwarePlatform/tensorflow-upstream/pull/1311\r\n\r\n-------------------------\r\n\r\n/cc @cheshire @chsigg ","created_at":"2022-02-23T22:15:14Z","closed_at":"2022-03-03T20:44:03Z","merged_at":"2022-03-03T20:44:02Z","user_id":36858332,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":861816458,"title":"Add appropriate encoding check for `tf.compat.as_bytes`/`as_text`","body":"This PR tries to address the issue raised in #54413 where\r\nthere were no encoding check for tf.compat.as_bytes/as_text.\r\nAs a result, invalid encoding input will silently\r\nreturn incorrect result, e.g.:\r\n```\r\nbytes_or_text = \"hello\"\r\nt1 = tf.compat.as_text(bytes_or_text, encoding=\"valid\")\r\nprint(t1) # hello\r\n```\r\n\r\nThis PR looks up python encoding to make sure it is valid.\r\n\r\nThis PR fixes #54413.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2022-02-23T20:52:57Z","closed_at":"2022-02-28T22:10:32Z","merged_at":"2022-02-28T22:10:32Z","user_id":6932348,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":861144700,"title":"Optimized pad kernel","body":"Faster implementation of pad op on Eigen CPU path. Currently we have implementations of 2D and 3D float32 type tensor.","created_at":"2022-02-23T08:11:34Z","closed_at":"2022-06-03T00:59:45Z","merged_at":null,"user_id":89124486,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":861099678,"title":"[mhlo] declare the minimum version 3.15.0 of cmake","body":"When use cmake build_tools build the llvm-project, we give multiple targets\r\nbut this feature start with cmake 3.15.0","created_at":"2022-02-23T06:53:44Z","closed_at":"2022-02-24T02:39:33Z","merged_at":"2022-02-24T02:39:33Z","user_id":22370779,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":860982685,"title":"Fix mhlo.concatenate pattern when operand has unknown rank","body":null,"created_at":"2022-02-23T02:03:04Z","closed_at":"2022-04-05T21:50:26Z","merged_at":"2022-04-05T21:50:26Z","user_id":8017489,"sentiment":{"polarity":-0.45,"subjectivity":0.75}}
{"_id":860977472,"title":"Fix typo in examples for tf.linalg.pinv","body":"tf.linalg..pinv should be written tf.linalg.pinv","created_at":"2022-02-23T01:48:30Z","closed_at":"2022-03-07T18:07:42Z","merged_at":"2022-03-07T18:07:42Z","user_id":959911,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":860890579,"title":"Updated Random_ops tests","body":"Removed the non existing files and replaced with the common test file random_ops_test.cc\r\nFixes https://github.com/tensorflow/tensorflow/issues/54418","created_at":"2022-02-22T22:48:51Z","closed_at":"2022-03-02T00:27:05Z","merged_at":"2022-03-02T00:27:05Z","user_id":73069040,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":860661015,"title":"[oneDNN] Optimize CNMS implementation","body":"Eliminate unnecessary data copying in per class NMS computation, this reduces memory usage and improves performance.","created_at":"2022-02-22T17:24:13Z","closed_at":"2022-03-22T00:38:29Z","merged_at":"2022-03-22T00:38:29Z","user_id":42156420,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":859146175,"title":"[PluggableDevice] Enable tensor list kernels on Windows","body":null,"created_at":"2022-02-21T07:26:37Z","closed_at":"2022-03-14T22:29:31Z","merged_at":"2022-03-14T22:29:31Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":859122856,"title":"[mhlo]: add select canonicalization pattern","body":null,"created_at":"2022-02-21T06:52:10Z","closed_at":"2022-03-23T14:59:46Z","merged_at":"2022-03-23T14:59:46Z","user_id":22370779,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":858506554,"title":"Add default settings for cloud tpu client to support AI Platform","body":"- Changed to refer to the value of `TPU_CONFIG` when no argument is passed to TPU Client.\r\n- Add unit tests in the above case.\r\n\r\n---\r\nWhen using `TPU` with `AI Platform`, it is necessary to get the TPU information from the environment variable `TPU_CONFIG`.\r\n\r\nRef: https://cloud.google.com/ai-platform/training/docs/using-tpus#wait-for-tpu-provisioning\r\n\r\nThese settings aren't interesting and should work with the default settings, just like any other environment like `kubernetes` or `colabolatory`.\r\n\r\nNOTE:\r\nI understand that Google recommends `Vertex AI` and `CloudTPU VM` over `AI Platform`, but it seems that the use of `AI Platform` will continue for a while due to insufficient support for scheduled jobs that specify `TPU`.","created_at":"2022-02-19T09:15:17Z","closed_at":"2022-05-04T21:31:41Z","merged_at":"2022-05-04T21:31:41Z","user_id":14047309,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":857646481,"title":"[oneDNN] Enable BF16 for DepthwiseConv2D* ops","body":"Add BFloat16 kernel registration for ops :\r\n- DepthwiseConv2dNative, \r\n- DepthwiseConv2dNativeBackpropInput,\r\n- DepthwiseConv2dNativeBackpropFilter\r\n\r\nSo as to enable some keras models like keypoint_detection for bfloat16 which were crashing with No OpKernel registered for    DepthwiseConv2dNativeBackpropInput. Other 2 kernels are registered anticipating it will be required.","created_at":"2022-02-18T20:32:37Z","closed_at":"2022-04-25T20:24:58Z","merged_at":"2022-04-25T20:24:58Z","user_id":42224728,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":857602740,"title":"[TF:TRT] Update test helpers to handle bool tensors and weights","body":"Enable the handling of bool tensors for in TF-TRT test helper subroutines.","created_at":"2022-02-18T19:55:04Z","closed_at":"2022-03-09T07:01:21Z","merged_at":null,"user_id":3671106,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":856585378,"title":"Fixed using invalid iterator (CID:20570650)","body":"`std::vector::erase()` invalidates iterators and references at or after the point of the erase. Return value of `std::vector::erase()` shall be used to initialize the iterator (Return value: Iterator following the last removed element. )","created_at":"2022-02-18T07:49:35Z","closed_at":"2022-03-22T22:43:48Z","merged_at":"2022-03-22T22:43:48Z","user_id":56120470,"sentiment":{"polarity":0.1,"subjectivity":0.2}}
{"_id":856534665,"title":"Add appropriate PyObject type check for bool","body":"This PR fixes an issue where PyObject type in tf's C bindings\r\ndoes not check if an input is a boolean and will always cast\r\nto bool. As an result, an invalid type like int can be passed\r\nto an arg expecting bool:\r\n```\r\nimport tensorflow as tf\r\nx = [0.5, 1.0, 2.0, 4.0]\r\naxis = 0\r\nexclusive = -1\r\nreverse = -1\r\nres_1 = tf.math.cumsum(x, axis=axis, exclusive=exclusive, reverse=reverse)\r\nprint(res_1) # tf.Tensor([7. 6. 4. 0.], shape=(4,), dtype=float32)\r\n```\r\n\r\nNote other PyObejct types (e.g., in ParseIntValue) does perform check in\r\ntensorflow/python/eager/pywrap_tfe_src.cc\r\n\r\nThis PR adds appropriate check in the input type when PyObject path\r\nis invoked.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2022-02-18T07:05:47Z","closed_at":"2022-02-20T09:13:07Z","merged_at":"2022-02-20T09:13:07Z","user_id":6932348,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":856382812,"title":"Fix typo in docstring for `make_csv_dataset_v2`","body":"replace the proper variable name in given example code","created_at":"2022-02-18T04:53:28Z","closed_at":"2022-02-22T18:22:48Z","merged_at":"2022-02-22T18:22:48Z","user_id":99852755,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":856186779,"title":"[INTEL oneDNN] Added BF16 support for Inv and InvGrad","body":"This PR will add BF16 support for Inv Op and InvGrad Op","created_at":"2022-02-18T00:57:44Z","closed_at":"2022-03-25T08:54:27Z","merged_at":"2022-03-25T08:54:27Z","user_id":65728957,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":856162593,"title":"Use tensor create function for cudnn frontend APIs","body":"This PR uses a unified function to take care of tensor creation for cudnn frontend APIs.\r\n\r\nAlso, cleanup some used functions for the cudnn frontend.\r\n\r\n\r\ncc. @nluehr ","created_at":"2022-02-18T00:06:12Z","closed_at":"2022-03-05T00:12:21Z","merged_at":"2022-03-05T00:12:21Z","user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":856162516,"title":"Add appropriate dtype check for `tf.boolean_mask`'s mask","body":"This PR tries to address the issue raised in #54412 where\r\nmask's dtype was checked in tf.boolean_mask and an invalid\r\nresult has been returned instead.\r\n\r\nThis PR fixes #54412.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2022-02-18T00:06:04Z","closed_at":"2022-03-07T18:04:22Z","merged_at":"2022-03-07T18:04:22Z","user_id":6932348,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":856160576,"title":"[INTEL oneDNN] Added bf16 support for Inv and InvGrad","body":null,"created_at":"2022-02-18T00:03:43Z","closed_at":"2022-02-18T00:11:07Z","merged_at":null,"user_id":65728957,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":856133741,"title":"Add appropriate value check for `tf.clip_by_norm`","body":"This PR tries to address the issue raised in #54414 where\r\nthere is no check for clip_norm for tf.clip_by_norm.\r\nAs a result an invalid result was silently returned.\r\n\r\nThis PR fixes #54414.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n","created_at":"2022-02-17T23:42:03Z","closed_at":"2022-06-03T00:59:43Z","merged_at":null,"user_id":6932348,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":856113574,"title":"Add appropriate error check for nbins in `tf.histogram_fixed_width_bins`","body":"This PR tries to address the issue raised in #54415 where\r\nnbins was not checked for tf.histogram_fixed_width_bins\r\nand an incorrect result was returned when nbins < 0.\r\n\r\nThis PR fixes #54415.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2022-02-17T23:21:16Z","closed_at":"2022-02-22T16:44:08Z","merged_at":"2022-02-22T16:44:08Z","user_id":6932348,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":856066478,"title":"[oneDNN] Fuse Softplus + Tanh + Mul to Mish","body":"Add support for fusing Softplus + Tanh + Mul to MISH op","created_at":"2022-02-17T22:44:12Z","closed_at":"2022-03-25T15:46:47Z","merged_at":"2022-03-25T15:46:47Z","user_id":42224278,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":855897492,"title":"Implementation of the converter for Tile operation","body":"- ConvertTile operator is implemented so that both parameters (tensor and multiplier) can be passed as tensors and weights. A unit test with 6 tests and all combinations of passed parameters is provided.\r\n- New macro `#define CHECK_INPUT_SIZE (size, exp_size, node_def)` unifies the testing of the number of parameters passed. It is used in 8 different places.\r\n- The helper function template void `AdjustVectorByDims(...)` makes writing tests much easier (especially tests with parameters that can be passed as tensors and weights). For example, today we can use some parameters like tensors with predefined dimensions, but with no real numbers. An attempt to pass the same parameters with the same values as weights leads to the crash. We see a similar crash when the vector providing the values assigned to the tensor is not empty, but its length does not match the number of values defined by the dimensions. `AdjustVectorByDims` fixes these two problems and is called by default in the situations described, but these calls can also be blocked when such failures are intentional.\r\n","created_at":"2022-02-17T20:15:16Z","closed_at":"2022-03-07T13:00:32Z","merged_at":null,"user_id":32910461,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":855867457,"title":"Add complex support for tf.math.atan","body":"Fixes https://github.com/tensorflow/tensorflow/issues/54411","created_at":"2022-02-17T19:44:13Z","closed_at":"2022-02-18T17:38:06Z","merged_at":null,"user_id":43972606,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":855839805,"title":"Update sonartype Maven repo URL to HTTPS","body":"Update sonartype Maven repo URL to HTTPS.\r\nAdditional files to the fix https://github.com/tensorflow/examples/commit/d315ddb","created_at":"2022-02-17T19:17:37Z","closed_at":"2022-12-29T16:36:14Z","merged_at":null,"user_id":73069040,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":855820075,"title":"Implementation of the converter for Tile operation","body":"- ConvertTile operator is implemented so that both parameters (tensor and multiplier) can be passed as tensors and weights. A unit test with 6 tests and all combinations of passed parameters is provided.\r\n- New macro `#define CHECK_INPUT_SIZE (size, exp_size, node_def)` unifies the testing of the number of parameters passed. It is used in 8 different places.\r\n- The helper function template void `AdjustVectorByDims(...)` makes writing tests much easier (especially tests with parameters that can be passed as tensors and weights). For example, today we can use some parameters like tensors with predefined dimensions, but with no real numbers. An attempt to pass the same parameters with the same values as weights leads to the crash. We see a similar crash when the vector providing the values assigned to the tensor is not empty, but its length does not match the number of values defined by the dimensions. `AdjustVectorByDims` fixes these two problems and is called by default in the situations described, but these calls can also be blocked when such failures are intentional.\r\n\r\n","created_at":"2022-02-17T18:57:59Z","closed_at":"2022-02-17T19:19:05Z","merged_at":null,"user_id":32910461,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":855747087,"title":"[oneDNN] BN perf fix from oneDNN - Not For Merge","body":null,"created_at":"2022-02-17T17:38:02Z","closed_at":"2022-02-17T17:50:20Z","merged_at":null,"user_id":39842562,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":855232067,"title":"Check is redudant, use `state_->code`","body":"Since `state_` must not be `nullptr` in this branch. We can use `state_->code` directly instead of `code()` which checks `state_` again","created_at":"2022-02-17T09:08:30Z","closed_at":"2022-04-19T21:29:41Z","merged_at":"2022-04-19T21:29:41Z","user_id":1251167,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":854774181,"title":"Include c++17 in nvcc allowed std options.","body":"Support for c++17 was added in nvcc 11.0.167+:\r\nhttps://gist.github.com/ax3l/9489132#device-side-c-standard-support\r\n\r\nValid --std values documented here:\r\nhttps://docs.nvidia.com/cuda/cuda-compiler-driver-nvcc/index.html#options-for-altering-compiler-linker-behavior-std","created_at":"2022-02-16T19:51:51Z","closed_at":"2022-02-23T16:31:45Z","merged_at":null,"user_id":2364566,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":854751081,"title":"Add c++17 to supported nvcc allowed std options.","body":"Enable Tensorflow with CUDA and c++17.\r\n\r\nhttps://docs.nvidia.com/cuda/cuda-compiler-driver-nvcc/index.html#options-for-altering-compiler-linker-behavior-std","created_at":"2022-02-16T19:24:11Z","closed_at":"2022-02-16T19:30:36Z","merged_at":null,"user_id":2364566,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":854231555,"title":"[TF-TRT] Add TF-TRT converter for ZerosLike and OnesLike","body":"This PR adds a TF-TRT converter for the [tf.zeros_like](https://www.tensorflow.org/api_docs/python/tf/zeros_like) and [tf.ones_like](https://www.tensorflow.org/api_docs/python/tf/ones_like) operators (and the equivalent ops `ZerosLike` and `OnesLike` ).\r\nThe converter supports tensor and weights for the input. It supports both explicit batch mode and dynamic shape mode.\r\n\r\nThe converter uses helper functions introduced in https://github.com/tensorflow/tensorflow/pull/54170#issue-1117203815 , so it can be merged only after the fill converter has been merged.\r\n\r\nIt refactors the tf.fill converter to reuse the main TRT network building logic in the new converters.\r\n","created_at":"2022-02-16T10:27:05Z","closed_at":"2022-04-20T16:16:26Z","merged_at":"2022-04-20T16:16:26Z","user_id":3193578,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":854072393,"title":"Add nnapi/sl/SupportLibrary.cc to TFLITE_NNAPI_SRCS","body":"nnapi/sl/SupportLibrary.cc is missing from the source when TFLITE_ENABLE_NNAPI option is set.\r\nThis patch add it to TFLITE_NNAPI_SRCS.","created_at":"2022-02-16T07:35:35Z","closed_at":"2022-05-03T06:28:12Z","merged_at":"2022-05-03T06:28:12Z","user_id":797426,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":853721732,"title":"Use assertEqual instead of asserTrue","body":"Fixes https://github.com/tensorflow/tensorflow/issues/54392","created_at":"2022-02-15T21:36:20Z","closed_at":"2022-02-16T22:14:42Z","merged_at":"2022-02-16T22:14:41Z","user_id":43972606,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":853686011,"title":"abseil: wyhash is now called low_level_hash","body":"With https://github.com/tensorflow/tensorflow/commit/e45ca6adf2458d4759e5c40f1f27bbf9505a3c79 we have upgraded to the latest abseil LTS version. This did break the build with system abseil as the `wyhash` library was renamed to `low_level_hash`.","created_at":"2022-02-15T20:44:50Z","closed_at":"2022-02-16T17:17:40Z","merged_at":"2022-02-16T17:17:40Z","user_id":70274,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":853365701,"title":"[TFLite] Refactor and centralize LUT generation and access code into headers","body":"Hello,\r\n\r\nThis PR refactors and centralizes the `PopulateLookupTable` and `gen_lut` functions into a single `LUTPopulate` function that can generate uint8, int8 and int16 LUTs and be used by multiple operators.\r\n\r\nThe change is done in multiple steps:\r\n* The int8/uint8 `PopulateLookupTable` from `tensorflow/lite/kernels/activations.cc` is moved into `tensorflow/lite/kernels/internal/common.h` with a slight signature change and `gen_lut` is renamed to `PopulateLookupTable<int16_t>` with also a slight signature change. This change centralizes all the LUT generation in a single templated `PopulateLookupTable<T>` function.\r\n* The `std::function` of the int8/uint8 `PopulateLookupTable` is replaced by a raw function pointer so that it can be used in TFLite Micro.\r\n* The code used for `gen_lut` is now only used for int16 -> int16 LUT generation. int8 -> int8, int8 -> int16 and int16 -> int8 support was removed as unused and not fundamentally necessary.\r\n* All the LUT generation calls are adapted to these changes.\r\n* We made sure that the change is numerically backward compatible, all the generated LUTs have the exact same values.\r\n* The LUT lookup code was also moved into separate headers `tensorflow/lite/kernels/internal/optimized/integer_ops/lut.h` and `tensorflow/lite/kernels/internal/reference/integer_ops/lut.h` to centralize the LUT access solving the `// TODO(b/143696793): move this to optimized_ops.` comment.\r\n* `gen_lut/PopulateLookupTable`, `lut_size` and `lut_lookup` were renamed to `LUTPopulate`, `LUTSize` and `LUTLookup` respectively in a separate commit. This change is done to have more uniform names for these related functions and be consistent with the CamelCase function naming used in the codebase. This separate commit is minor and optional and could eventually be removed if deemed unnecessary.\r\n\r\nThese modifications don't change the numerical behaviour of the operators and don't add any new feature. They are made to avoid any potential future conflicts and confusions between the `PopulateLookupTable` and `lut_gen` functions and make the LUT generation code accessible to other operators (example of a [potential EXP quantization PR](https://github.com/Tessil/tensorflow/commit/b12f4980e26a0a79bc0019f6965c518d24062f57) that is based on these changes).\r\n\r\nThibaut\r\n","created_at":"2022-02-15T14:59:10Z","closed_at":"2022-09-19T05:53:15Z","merged_at":"2022-09-19T05:53:14Z","user_id":21028116,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":852658983,"title":"[ROCm] Fixes to enable the cholesky unit test for BEF thunk on ROCm.","body":"This captures the TF repo changes needed to enable the cholesky unit test on ROCm.\r\n\r\n/cc @chsigg @hanbinyoon ","created_at":"2022-02-15T00:08:08Z","closed_at":"2022-03-08T12:01:00Z","merged_at":null,"user_id":70280935,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":852624997,"title":"Changes to add user scratch pad for matmul primitive to fix OOM issue in Transformer LT","body":"Adding changes for the matmul primitive to use user scratch pad. This reduces memory footprint of the primitive. It fixes an out of memory issue when running Transformer LT with multiple instances and total thread count is large. Managing scratch pad for the primitive from the framework, fixes the out of memory issue, reduces memory footprint and does not affect performance. The changes :\r\n    Creates a new struct that hold the Tensor for scratch pad arg.\r\n    Allocates memory based on scratch pad size queried from  primitive description.\r\n    Sets user scratch pad in post ops for the primitive.\r\n   \r\n      ","created_at":"2022-02-14T23:12:36Z","closed_at":"2022-03-14T22:26:30Z","merged_at":"2022-03-14T22:26:30Z","user_id":14943401,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":852512219,"title":"[INTEL oneDNN] Fix mkl_fused_ops_test failure and disable blocked format","body":"The PR\r\n\r\n(1) fixes unit test failure with mkl_fused_ops_test.cc\r\n\r\n(2) Code cleanup by disabling all blocked format related tests - most code change is for (2)\r\n\r\nRef: https://github.com/tensorflow/tensorflow/pull/53288\r\n(merged public PR which disables oneDNN blocked format support)","created_at":"2022-02-14T20:54:24Z","closed_at":"2022-07-23T01:33:43Z","merged_at":"2022-07-23T01:33:43Z","user_id":29215195,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":852380797,"title":"fix msvc build break on non en-US codepage (#53219)","body":"#53219 it's not complete.","created_at":"2022-02-14T18:26:36Z","closed_at":"2022-04-15T18:26:16Z","merged_at":"2022-04-15T18:26:16Z","user_id":10285869,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":852376521,"title":"[TF-TRT] Fix pylint error in `trt_convert.py`","body":"cc @bixia1 \r\n\r\nFixes a pylint error that causes the pylint CI job to fail on any PR that touches `trt_convert.py`.\r\n\r\nThe pylint error that I saw on one of my PRs earlier wasn't a false positive but a change that was already in master and not in my branch, hence why it appeared in CI but not when I was running pylint locally. The error was introduced in #52248","created_at":"2022-02-14T18:21:59Z","closed_at":"2022-02-17T00:18:43Z","merged_at":"2022-02-17T00:18:43Z","user_id":17441062,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":852342330,"title":"[TF-TRT] Add parameter to the rewriter config to disable the optimization of the function library.","body":"This is a simpler replacement for #53114. What we want for now is to avoid running optimizations on the segments after segmentation by TF-TRT. This is equivalent to disabling optimization of the function library.\r\n\r\nThere is a setting for that in `GrapplerItem::OptimizationOptions`: `optimize_function_library`, but I'm not sure if there's any proper way to control that from the Python configuration, so I create an option in the rewriter config to override it. If there's a better way of doing that, please let me know and I'll be happy to change this PR.","created_at":"2022-02-14T17:45:59Z","closed_at":"2022-06-01T18:00:29Z","merged_at":null,"user_id":17441062,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":852336598,"title":"[TF:TRT] Add additional conv2d test case","body":null,"created_at":"2022-02-14T17:39:10Z","closed_at":"2022-10-12T04:41:45Z","merged_at":null,"user_id":30323187,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":851792924,"title":"fix slow training start when using sample_weight (issue #48965)","body":"fix issue 'Keras model.fit takes long until training begins when sample_weight is provided #48965.' previous version used list comprehension to check if any of the sample weights are 'None'. This is very slow. This replaces the list comprehension with array operations by converting the tensor to a numpy array.","created_at":"2022-02-14T09:25:21Z","closed_at":"2022-02-14T14:09:05Z","merged_at":null,"user_id":44213544,"sentiment":{"polarity":-0.30000000000000004,"subjectivity":0.39999999999999997}}
{"_id":851497040,"title":"[oneDNN] Parallelize UnsortedSegmentOp by simpler method","body":"This PR is a simpler version of the reverted PR: https://github.com/tensorflow/tensorflow/pull/49152\r\n\r\nThe previous PR **used a complex method to balance workload** for better parallelism efficiency, but it's failed in internal test and reverted automatically. I removed the balance policy to make it simpler and safer. The new implementation can also get good performance if the workload is balance naturally. Even in the imbalance scenario it won't be worse than original single thread implementation.\r\n\r\nThe new method is just to parallelize `UnsortedSegmentOp` by each output row:\r\n```\r\n//   input   segment_ids                 num_segments  operation\r\n//   | a0 |  | 0 |            worker 1:  |0|           f(a0, a1)\r\n//   | b0 |  | 1 |            worker 2:  |1|           f(b0, b1)\r\n// N | c0 |  | 2 |       -->  worker 3:  |2|           f(c0)\r\n//   | b1 |  | 1 |\r\n//   | a1 |  | 0 |\r\n```\r\n\r\nSingle op improvement in TF benchmark: **1.92x ~ 14.46x**\r\nBefore opt:\r\n```\r\n--------------------------------------------------------------------------------------------------------------\r\nBenchmark                                                    Time             CPU   Iterations UserCounters...\r\n--------------------------------------------------------------------------------------------------------------\r\nBM_UnsortedSegmentSum_4096_1024_1                       520890 ns       520870 ns         1344 bytes_per_second=29.9979G/s\r\nBM_UnsortedSegmentSum_4096_1024_128                     700895 ns       700889 ns         1019 bytes_per_second=22.2931G/s\r\n```\r\nAfter opt:\r\n```\r\n--------------------------------------------------------------------------------------------------------------\r\nBenchmark                                                    Time             CPU   Iterations UserCounters...\r\n--------------------------------------------------------------------------------------------------------------\r\nBM_UnsortedSegmentSum_4096_1024_1                       270874 ns       270875 ns         2586 bytes_per_second=57.6835G/s\r\nBM_UnsortedSegmentSum_4096_1024_128                     115952 ns        48465 ns        14288 bytes_per_second=322.396G/s\r\n```\r\n\r\nWe also see more than 5% throughput improvement when run public recommendation model on CPU with this OPT.\r\n\r\nSigned-off-by: Lu Teng [teng.lu@intel.com](mailto:teng.lu@intel.com)","created_at":"2022-02-14T02:49:14Z","closed_at":"2022-02-16T17:40:41Z","merged_at":"2022-02-16T17:40:41Z","user_id":38638514,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":851440497,"title":"C compatible for external delegate","body":"Fixes for `variably modified` compilation error.","created_at":"2022-02-14T01:27:51Z","closed_at":"2022-02-21T08:42:53Z","merged_at":"2022-02-21T08:42:53Z","user_id":10111,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":848617197,"title":"lite: Update tflite_runtime builds","body":"Switch to Makefile method which is easy to maintain and less dependent to TensorFlow scripts.\r\n\r\nPiperOrigin-RevId: 427943932\r\nChange-Id: I0aff1caaf34a890566ad8a745e8a1d417828c20a","created_at":"2022-02-12T07:28:19Z","closed_at":"2022-04-12T18:18:53Z","merged_at":"2022-04-12T18:18:53Z","user_id":2908505,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":848559664,"title":"Add complex support for `tf.sparse.segment_sum`","body":"This PR address the issue raised in #53655 where tf.sparse.segment_sum does not have complex support (while tf.math.segment_sum has). This PR adds complex support for tf.sparse.segment_sum.\r\n\r\nThis PR fixes #53655.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2022-02-12T04:45:21Z","closed_at":"2022-06-03T00:59:42Z","merged_at":null,"user_id":6932348,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":848552586,"title":"Add complex support for `tf.math.asin`","body":"This PR address the feature requested by #54317 in adding complex support for tf.math.asin.\r\n\r\nThis PR fixes #54317.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2022-02-12T04:17:03Z","closed_at":"2022-02-16T17:36:39Z","merged_at":"2022-02-16T17:36:38Z","user_id":6932348,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":848257659,"title":"Enable XNNPACK in tflite builds for armhf","body":"Reverting b4ffa4cfcc50e7fcb8186b5cedbd0457acbe8ffb To enable XNNPACK for python tflite on Raspberry Pi etc.\r\n\r\n@terryheo - given you made the change originally (and I'm not sure why) you're best to comment if this is a bad idea.","created_at":"2022-02-11T23:25:59Z","closed_at":"2022-05-18T15:07:37Z","merged_at":null,"user_id":8204904,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":848107835,"title":"Update tensorflow:grpc++","body":" Updated targets to //tensorflow:grpc++ from @com_github_grpc_grpc//:grpc++\r\nCloses #51770 ","created_at":"2022-02-11T21:43:17Z","closed_at":"2022-12-29T05:10:32Z","merged_at":null,"user_id":73069040,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":848026612,"title":"Reintegrate tensorflow/toolchains","body":"Removing the tensorflow/toolchains repository has these benefits:\r\n\r\n- Speed up toolchain and RBE changes: with the repo, every toolchains adjustment requires a PR, a Release, a mirror upload, and another PR = ~hours of busywork. Without the repo, it's one PR. We wouldn't have to automate anything.\r\n- Reduce confusion about toolchains: the toolchains repository, except for the toolchains subdirectory which has been migrated here, is mostly unused junk that attempts to replicate TensorFlow's WORKSPACE setup to make the toolchains functional without TF. That isn't true; tensorflow/toolchains does not actually work if you try to bazel build anything because the WORKSPACE is broken.\r\n- Remove the maintenance burden of the toolchains repo: one less repository for us to worry about.\r\n- Remove coupling: tensorflow/toolchains and tensorflow/tensorflow are heavily coupled, i.e. they depend on each other.\r\n\r\nAnd these downsides:\r\n\r\n- Obligation to notify / fix downstream users: I haven't found any direct users for @tf_toolchains, but a few projects do use our toolchains. They usually use a WORKSPACE that pulls the entirety of TensorFlow. It's our responsibility to notify anyone who indirectly uses our toolchains to tell them that they may need to adjust their workflows.\r\n- Loss of toolchain history: we can't retain history across repositories, so all previous changes to the directory would be lost. I don't think we have a choice, and this isn't enough of a reason to keep it as a separate repo.\r\n- Loss of any benefits of the separate repository: the original goal of a _separate repository_ to \"enable reuse of all of [TF's toolchains] across TFRT, custom ops, and main TensorFlow.\" Considering that TFRT does not use these toolchains and that the custom op repository is unsupported, this goal has failed and there is no loss in re-integrating.\r\n\r\nThis PR is a demonstration of what little work is required to re-integrate the tensorflow/toolchains repository back under TensorFlow. The only changes I've made have been:\r\n\r\n- Move tensorflow/toolchains://toolchains back into //tensorflow/tools/toolchains\r\n- Update `@tf_toolchains` paths to match new locations\r\n- Remove the external WORKSPACE dependency and other unused files \r\n\r\nI was able to build TensorFlow successfully this way. Have I missed anything?\r\n\r\n@mihaimaruseac @learning-to-play\r\n","created_at":"2022-02-11T20:09:13Z","closed_at":"2022-02-15T20:10:25Z","merged_at":"2022-02-15T20:10:25Z","user_id":32465472,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":847919394,"title":"[ROCm] Switch Dockerfile.rocm to use ROCm 5.0.0","body":"/cc @cheshire @chsigg ","created_at":"2022-02-11T17:58:55Z","closed_at":"2022-02-21T22:11:26Z","merged_at":"2022-02-21T22:11:26Z","user_id":36858332,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":846168837,"title":"Align average pool between TFL and TOSA","body":"TFL calculates average pool without subtracting the zero point first.\r\nTOSA defines average pool with the zero point subtract. Some\r\ncalculations will round differently depending on the zero point value.\r\nWhen legalizing TFL to TOSA, force the zero points to zero to get the\r\nexact behavior match.\r\n\r\nSigned-off-by: Eric Kunze <eric.kunze@arm.com>","created_at":"2022-02-10T21:43:41Z","closed_at":"2022-02-14T23:44:41Z","merged_at":"2022-02-14T23:44:41Z","user_id":71658898,"sentiment":{"polarity":-0.15,"subjectivity":0.39999999999999997}}
{"_id":846165376,"title":"Allow gather batch_dims attribute in TOSA legalization","body":"The gather op legalization previously ignored the batch_dims attribute from the TensorFlow lite operator. This modifies to use the batch_dims attribute if present.\r\n\r\nSigned-off-by: Eric Kunze <eric.kunze@arm.com>","created_at":"2022-02-10T21:41:39Z","closed_at":"2022-02-14T21:14:44Z","merged_at":"2022-02-14T21:14:44Z","user_id":71658898,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":846116026,"title":"Constrain pytree type annotations to produce lists","body":"This is consistent with assumptions already made by JAX code.\r\n\r\nThis is part 1 of https://github.com/google/jax/pull/9079.  @hawkinsp as requested :smile: ","created_at":"2022-02-10T21:16:47Z","closed_at":"2022-04-13T02:03:31Z","merged_at":"2022-04-13T02:03:31Z","user_id":730137,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":845883325,"title":"add c++17/1z support for cuda 11 and above","body":"TF with GPU support failed to build for `CUDA 11.4` and `c++17`.  This change adds `c++17 c++1z` to list of supported std options for CUDA 11 and above","created_at":"2022-02-10T19:21:38Z","closed_at":"2022-02-22T19:04:39Z","merged_at":"2022-02-22T19:04:39Z","user_id":4115138,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":845170242,"title":"Expose CreateLoopInvariantCopy","body":"Summary:\r\nIn order to use this function in other passes that act on while loops\r\nmake this function public.","created_at":"2022-02-10T12:21:21Z","closed_at":"2022-09-14T09:41:12Z","merged_at":null,"user_id":22130400,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":844898612,"title":"[bugfix] Use std::set::lower_bound instead of std::lower_bound for improved performance","body":"Using std::set::lower_bound has a logarithmic (O(log2N)) complexity while using std::lower_bound have a linear (O(n)). Thus, it is preferable to use std::set::lower_bound.\r\n\r\nSource:\r\n* cpp reference: [std::set::lower_bound](https://en.cppreference.com/w/cpp/algorithm/lower_bound)\r\n* cpp reference: [std::lower_bound](https://en.cppreference.com/w/cpp/container/set/lower_bound)\r\n* https://www.geeksforgeeks.org/difference-between-stdsetlower_bound-and-stdlower_bound-in-c/","created_at":"2022-02-10T08:58:54Z","closed_at":"2022-02-16T05:15:57Z","merged_at":"2022-02-16T05:15:57Z","user_id":89612425,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":844708936,"title":"Add support for VariablePolicy to saved_model.load","body":"This PR adds python level support for VariablePolicy to saved_model.load when soft placement is disabled. A related issue is [53743 ](https://github.com/tensorflow/tensorflow/issues/53743).","created_at":"2022-02-10T04:55:06Z","closed_at":"2022-06-27T18:41:40Z","merged_at":"2022-06-27T18:41:40Z","user_id":25590028,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":844544809,"title":"lite: Fix XNNPACK build for elinux_armhf","body":"Added XNNPACK build for elinux_armhf from the fix: https://github.com/tensorflow/tensorflow/commit/4ec84aa99372ca7899fb12715edd2bfe3c947c88\r\nFixes #54268 ","created_at":"2022-02-10T00:44:54Z","closed_at":"2022-04-08T18:33:53Z","merged_at":null,"user_id":73069040,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":844387459,"title":"[INTEL oneDNN] Added bf16 support for SoftmaxCrossEntropyWithLogits","body":"This PR will add bf16 support for SoftmaxCrossEntropyWithLogits","created_at":"2022-02-09T22:21:32Z","closed_at":"2022-02-22T17:06:00Z","merged_at":"2022-02-22T17:06:00Z","user_id":65728957,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":844293060,"title":"Extract a function for parsing operator LSTM","body":"Extract the parsing out of a switch statement case to create a\r\nstandalone function which can be called by the micro op resolver.\r\n\r\nhttps://github.com/tensorflow/tflite-micro/issues/920","created_at":"2022-02-09T20:25:27Z","closed_at":"2022-02-10T19:23:49Z","merged_at":null,"user_id":94130036,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":844028938,"title":"[ROCm] Updating the implementation of TryToReadNumaNode in rocm_gpu_executor.cc","body":"The current implementation of that routine has a \"TODO(hip)\", and is hard-coded to return a \"1\", which is incorrect.\r\nThis update, simply copies over the implementation from cuda_pug_executor.cc into ROCm.","created_at":"2022-02-09T15:21:23Z","closed_at":"2022-02-10T17:37:15Z","merged_at":"2022-02-10T17:37:15Z","user_id":8660918,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":844028348,"title":"Fix build windows","body":"* M_PI is not defined in C standard. Refer to: https://stackoverflow.com/questions/26065359/m-pi-flagged-as-undeclared-identifier\r\n* Convert string to wstring since SharedLibrary::LoadLibrary take wstring.","created_at":"2022-02-09T15:20:51Z","closed_at":"2022-03-30T16:03:15Z","merged_at":"2022-03-30T16:03:15Z","user_id":10111,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":843451459,"title":"Const output cache 20220209","body":null,"created_at":"2022-02-09T03:32:56Z","closed_at":"2022-02-09T03:41:21Z","merged_at":null,"user_id":33950866,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":843446608,"title":"[ROCm] Fix to enable the following unit tests for BEF thunk on ROCm:","body":"- //tensorflow/compiler/xla/service/gpu/tests:kernel_launch_test\r\n- //tensorflow/compiler/xla/tests:multioutput_fusion_test_gpu\r\n- //tensorflow/compiler/xla/tests:scatter_test_gpu\r\n- //tensorflow/compiler/xla/tests:while_test_gpu\r\n\r\nAssign the HSACO binary to the blob which then gets passed to hipModuleLoadData.\r\n\r\nThe previous implementation assigned the asm text (which is not generated for ROCm) to the blob.\r\n\r\nThis implementation should work for CUDA as well since cuModuleLoadData accepts both PTX and cubin formats.\r\n\r\n/cc @chsigg @hanbinyoon ","created_at":"2022-02-09T03:22:55Z","closed_at":"2022-03-03T12:44:15Z","merged_at":"2022-03-03T12:44:15Z","user_id":70280935,"sentiment":{"polarity":-0.25,"subjectivity":0.4000000000000001}}
{"_id":843446546,"title":"const output fixed .","body":null,"created_at":"2022-02-09T03:22:44Z","closed_at":"2022-02-09T03:32:12Z","merged_at":null,"user_id":33950866,"sentiment":{"polarity":0.1,"subjectivity":0.2}}
{"_id":843290285,"title":"[ROCm] Disable Kronecker linalg test","body":"This test has started to fail on ROCm. Disable while we investigate.\r\n\r\n@weihanmines @deven-amd @cheshire FYI","created_at":"2022-02-08T22:13:13Z","closed_at":"2022-02-10T09:52:43Z","merged_at":"2022-02-10T09:52:43Z","user_id":8660918,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":843080916,"title":"[TF:TRT] Cleanup TRTOptimizer and convert_graph","body":"This change refactors `convert_graph` and `trt_optimization_pass`. \r\nDe-duplicates the amount of data structures holding \"conversion parameters\". Each conversion parameter was duplicated inside of TRTOptimizationPass class because the `ConversionParams` struct contained const references to state variables. State variables were moved out of the struct and instead passed as function arguments. The `ConversionParams` struct was then moved into the `TRTOptimizationPass` class to make it clear what object owns the struct as an API dependency.\r\nThe function `ConvertAfterShapes` is renamed to `ConvertGraph`.\r\nVarious debugging output code was removed as it appears to be unused and an artifact of the original implementation.","created_at":"2022-02-08T17:46:20Z","closed_at":"2022-03-01T18:23:04Z","merged_at":"2022-03-01T18:23:04Z","user_id":30323187,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":842567604,"title":"[PluggableDevice] Add `DEVICE_DEFAULT` registrations for ScatterNd kernels","body":null,"created_at":"2022-02-08T09:07:05Z","closed_at":"2022-02-22T17:10:44Z","merged_at":"2022-02-22T17:10:44Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":842319982,"title":"Remove duplicated lines in RELEASE.md","body":"Removed two duplicate lines","created_at":"2022-02-08T01:19:08Z","closed_at":"2022-02-09T05:06:46Z","merged_at":"2022-02-09T05:06:46Z","user_id":46058173,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":842287213,"title":"Use distutils.sysconfig to detect python include","body":"On my latest mac sysconfig.get_path('include') fails to find the correct python include path.\r\nThis solves that.","created_at":"2022-02-08T00:12:11Z","closed_at":"2022-02-09T05:11:44Z","merged_at":"2022-02-09T05:11:44Z","user_id":9807819,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":841853897,"title":"Automatic validation of your citation metadata","body":"Hello!\r\n\r\nWe noticed that your repository is using the Citation File Format to store citation metadata in `CITATION.cff`. This Pull Request automates validation of that file using the [cffconvert GitHub Action](https://github.com/marketplace/actions/cffconvert). That way, it's a little bit easier to be robust against future changes to the `CITATION.cff` file.\r\n\r\nBTW it's perfectly fine if you don't feel like accepting this Pull Request for whatever reason -- we just thought it might be helpful is all.\r\n\r\nWe found your repository using a partially automated workflow; if you have any questions about that, feel free to create an issue over at https://github.com/cffbots/filtering/issues/\r\n\r\nOn behalf of the cffbots team,\r\n@abelsiqueira / @fdiblen / @jspaaks","created_at":"2022-02-07T15:19:25Z","closed_at":"2022-02-10T20:10:03Z","merged_at":"2022-02-10T20:10:03Z","user_id":144492,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":840753942,"title":"[oneDNN]Threading fix - Not For Merge","body":null,"created_at":"2022-02-05T02:38:02Z","closed_at":"2022-05-23T16:28:31Z","merged_at":null,"user_id":39842562,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":840504822,"title":"Do not run scorecards analysis in forks","body":"Since this job has side effects, I am guessing it shouldn't be run by any forks? The analysis is probably going to fail due to permissions errors and would confuse contributors.","created_at":"2022-02-04T18:25:30Z","closed_at":"2022-02-04T21:38:35Z","merged_at":"2022-02-04T21:38:35Z","user_id":32465472,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":840392539,"title":"[TF:TRT] Remove warning message about missing TRTEngineCacheResource","body":"This PR removes a confusing warning message that was printed while saving the model.\r\n\r\nUntil now, if we convert and save the model without calling build(), then the following message is printed to the console:\r\n```\r\nW tensorflow/core/framework/op_kernel.cc:1745] OP_REQUIRES failed at trt_engine_resource_ops.cc:196 : NOT_FOUND: Container TF-TRT does not exist. (Could not find resource: TF-TRT/TRTEngineOp_0_0)\r\n```\r\n\r\nThis message is confusing to new users of TF-TRT: it describes a failure, which is printed as a warning `W`, and it is not clear for the user if anything went wrong (in fact nothing went wrong). This PR removes this warning message. ","created_at":"2022-02-04T15:59:16Z","closed_at":"2022-02-07T17:26:32Z","merged_at":"2022-02-07T17:26:32Z","user_id":3671106,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":839262320,"title":"TensorFlow Lite kernel tests CMake build fix - duplicated symbols","body":"Fixing the kernel tests CMake build fix (duplicated symbols) introduced as a side-effect of https://github.com/tensorflow/tensorflow/commit/4c09a48c7129ed448c36f8dae82b3e5f54d486d8.\r\n","created_at":"2022-02-03T12:44:42Z","closed_at":"2022-04-14T18:25:46Z","merged_at":"2022-04-14T18:25:46Z","user_id":34263128,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":839094526,"title":"Update ops.py","body":"In this removing `'s'` doesn't make any change in the explanation","created_at":"2022-02-03T09:33:35Z","closed_at":"2022-02-04T02:48:43Z","merged_at":null,"user_id":81610181,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":838937840,"title":"[MHLO]: add ops with regions lowering in hlo-legalize-to-lhlo","body":"It mainly supports mhlo ops with regions lowering to lhlo with the same regions (in which ops are still mhlo). \r\nThey are all_reduce, map, reduce_scatter, scatter, select_and_scatter, and sort, based on existing tests. \r\n\r\nI am not very sure about lhlo.select_and_scatter, since there is no existing example in the repo, \r\nbut the lowered one seems passing the verifier. \r\nPlease let me know if it is wrong. \r\nAlso, lhlo.select_and_scatter would fail buffer-deallocation without RegionBranchOpInterface. \r\nTherefore, I also modified lhlo_ops.td and lho_ops.cc by adding RegionBranchOpInterface and the related definition.\r\nPlease let me know whether it still align with the design. \r\n","created_at":"2022-02-03T05:18:49Z","closed_at":"2022-06-03T00:59:41Z","merged_at":null,"user_id":2830594,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":838610924,"title":"Properly set the bounds for estimator","body":"Not affecting TF 2.8 release much (as the nightly that we pinned to is the same we build 2.8 from) but we should fix.","created_at":"2022-02-02T18:55:21Z","closed_at":"2022-02-02T18:55:27Z","merged_at":"2022-02-02T18:55:27Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":837883480,"title":"checking pid of the process using tpu","body":null,"created_at":"2022-02-02T02:12:50Z","closed_at":"2022-03-14T14:52:05Z","merged_at":"2022-03-14T14:52:05Z","user_id":7341711,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":837643274,"title":"Fix bazelisk installation paths","body":"This originally broke our tests because bazel couldn't be found. The\nbashrc didn't include the new bin directory, and so none of the\nfollowing commands worked correctly. I installed bazelisk into /usr/bin\ninstead.\n","created_at":"2022-02-01T20:20:00Z","closed_at":"2022-02-01T22:16:10Z","merged_at":"2022-02-01T22:16:10Z","user_id":32465472,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":837503065,"title":"[ROCm] Fixes to make //tensorflow/compiler/xla/service/gpu/tests:mlir_gemm_t…","body":"…est work with TFRT BEF Thunk on ROCm.","created_at":"2022-02-01T17:25:30Z","closed_at":"2022-03-02T19:24:58Z","merged_at":"2022-03-02T19:24:58Z","user_id":70280935,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":836903141,"title":"Make necessary validations in the file image_ops_impl.py and array_ops.py","body":"Fixes https://github.com/tensorflow/tensorflow/issues/54115 and https://github.com/tensorflow/tensorflow/issues/54116 and https://github.com/tensorflow/tensorflow/issues/54848\r\n\r\n<br> \r\n<b>What does this PR do? </b><br><br>\r\n1) As per the documentation for   `tf.image.adjust_brightness` (https://www.tensorflow.org/api_docs/python/tf/image/adjust_brightness) and `tf.image.ajust_hue` (https://www.tensorflow.org/api_docs/python/tf/image/adjust_hue?hl=en) the parameter delta in both the functions needs to be in the range [-1,1], this PR adds necessary validations in image_ops_impl.py to ensure that\r\n<br><br>\r\n2) As per the documentation of 'tf.linalg.tensor_diag_part' the input matrix should be of the rank 2k, however there are no validations for this, I have added those validations,\r\n","created_at":"2022-02-01T07:12:31Z","closed_at":"2022-07-04T00:44:04Z","merged_at":null,"user_id":79891166,"sentiment":{"polarity":0.0,"subjectivity":1.0}}
{"_id":836856519,"title":"Refactoring of ConvertUnary","body":"ConvertUnary is rewritten using OpConverterBase \r\n","created_at":"2022-02-01T05:38:43Z","closed_at":"2022-03-07T20:02:01Z","merged_at":null,"user_id":32910461,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":836645658,"title":"Avoid dequantizing with qi16 convolution","body":"This avoids the decompose-hybrid-quantization pass for quantized int16\r\nconvolutions. Those convolutions contain a non-quantized int64 bias.\r\nThe hybrid decompose pass is only used when a mixed floating point and\r\nquantized operator is detected.\r\n\r\nAlso properly set the double_round field in the TOSA rescale after\r\nconvolution. When 16-bit scaling is involved, double_round must be\r\nfalse.\r\n\r\nSigned-off-by: Eric Kunze <eric.kunze@arm.com>","created_at":"2022-01-31T22:47:22Z","closed_at":"2022-02-04T00:11:43Z","merged_at":"2022-02-04T00:11:43Z","user_id":71658898,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":836644301,"title":"TF->TOSA: Ignore stride if shrink axis mask is set","body":"Strided slice should ignore stride if shrink_axis_mask is set for\r\nthat dimension. Set strides to 1 for those dimensions. Otherwise\r\nthe reshape ends up with dimensions of size 0, which are invalid.","created_at":"2022-01-31T22:44:53Z","closed_at":"2022-02-03T20:33:30Z","merged_at":"2022-02-03T20:33:30Z","user_id":71658898,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":836622477,"title":"[ROCm] fix dockerfile.rocm","body":"Dockerfile.rocm is still using py36","created_at":"2022-01-31T22:11:27Z","closed_at":"2022-02-01T19:14:56Z","merged_at":null,"user_id":8660918,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":836479490,"title":"Update version numbers for TensorFlow 2.8.0","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 8 -> 8\nPatch: 0 -> 0\n\nNo lingering old version strings \"2.8.0-rc1\" found in source directory \n\"tensorflow/\". Good.\nNo lingering old version strings \"2.8.0rc1\" found in source directory \n\"tensorflow/\". Good.\n```","created_at":"2022-01-31T19:08:13Z","closed_at":"2022-01-31T19:17:33Z","merged_at":"2022-01-31T19:17:33Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":836159218,"title":" [TFLite] Enable reference int8 fully connected with output shape with dimensions > 2 ","body":"Hi,\r\n\r\nThis PR enables reference int8 support for fully connected with output shape with dimensions > 2 in TensorFlow Lite.\r\nRelevant issue which describes this is here: https://github.com/tensorflow/tensorflow/issues/53501 \r\n\r\nThis PR also contains an update to the SimpleTestQuantizedOutputShape3DInt16 to ensure that output shape with dimensions >2 is verified.\r\n\r\nThanks,\r\nSaoirse","created_at":"2022-01-31T13:48:15Z","closed_at":"2022-04-01T14:28:30Z","merged_at":null,"user_id":44364573,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":835924539,"title":"TensorFlow Lite CMake dependencies versions automatically synced with Bazel configuration","body":"With Bazel being the preferred build system for `TensorFlow`, `TensorFlow Lite` CMake build is determining versions of its dependencies based on those listed in Bazel configuration files. The corresponding version update in CMake configuration, however, needs to be done **manually** every time the relevant Bazel configuration changes.\r\n\r\nThis PR implements a mechanism to **automatically** synchronize `TensorFlow Lite` CMake dependencies based on values currently present in Bazel configuration files.\r\n\r\n","created_at":"2022-01-31T09:30:10Z","closed_at":"2022-06-02T00:57:32Z","merged_at":null,"user_id":34263128,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":835485934,"title":"corrections to cross compilation instructions","body":"* added fortran compiler to the prerequisites\r\n* made a note that the cmake command is run from the tflite_build directory and adapted the path\r\n* added the missing  \"mkdir -p ${HOME}/toolchains\" to the commands for the Pi Zero\r\n* added a note on the BUILD_NUM_JOBS parameter","created_at":"2022-01-30T19:23:19Z","closed_at":"2022-07-04T00:44:03Z","merged_at":null,"user_id":96531991,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":835439845,"title":"fft2d/fftsg.c needs the math library","body":"Without this, the tensorflow-lite build using CMake fails for me with undefined references.\r\n\r\nfftsg.c has `#include <math.h>`, but the CMake configuration lacks the link to the math library.\r\n\r\n","created_at":"2022-01-30T17:47:15Z","closed_at":"2022-02-04T15:54:44Z","merged_at":"2022-02-04T15:54:44Z","user_id":4623504,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":835407009,"title":"Fix sanity build","body":null,"created_at":"2022-01-30T15:39:41Z","closed_at":"2022-01-30T15:39:47Z","merged_at":"2022-01-30T15:39:47Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":835404837,"title":"Disable flaky test","body":null,"created_at":"2022-01-30T15:27:41Z","closed_at":"2022-01-30T15:27:48Z","merged_at":"2022-01-30T15:27:48Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":835374263,"title":"Update image_ops_impl.py","body":"Fixes https://github.com/tensorflow/tensorflow/issues/54116 and https://github.com/tensorflow/tensorflow/issues/54115","created_at":"2022-01-30T13:45:53Z","closed_at":"2022-01-31T16:53:14Z","merged_at":null,"user_id":79891166,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":835355556,"title":"Update image_ops_impl.py","body":"Fixes https://github.com/tensorflow/tensorflow/issues/54115","created_at":"2022-01-30T12:21:49Z","closed_at":"2022-01-30T13:43:11Z","merged_at":null,"user_id":79891166,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":835241980,"title":"Disable flaky test","body":null,"created_at":"2022-01-30T00:41:22Z","closed_at":"2022-01-30T00:41:29Z","merged_at":"2022-01-30T00:41:29Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":835238516,"title":"Disable flaky tests on r2.6","body":null,"created_at":"2022-01-30T00:24:14Z","closed_at":"2022-01-30T00:24:32Z","merged_at":"2022-01-30T00:24:32Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":835238388,"title":"Reorder tags to fix buildifier linting","body":null,"created_at":"2022-01-30T00:24:00Z","closed_at":"2022-01-30T00:24:21Z","merged_at":"2022-01-30T00:24:21Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":835236226,"title":"Reorder tags to fix buildifier linting","body":null,"created_at":"2022-01-30T00:16:25Z","closed_at":"2022-01-30T00:16:32Z","merged_at":"2022-01-30T00:16:32Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":835235370,"title":"Set Env Variable to override Setuptools new behavior","body":"PiperOrigin-RevId: 423468055\r\nChange-Id: I5b148103e1372a5eb73570bc77face27dbd5f914","created_at":"2022-01-30T00:11:35Z","closed_at":"2022-01-30T00:12:19Z","merged_at":"2022-01-30T00:12:19Z","user_id":323199,"sentiment":{"polarity":0.13636363636363635,"subjectivity":0.45454545454545453}}
{"_id":835235362,"title":"Set Env Variable to override Setuptools new behavior","body":"PiperOrigin-RevId: 423468055\r\nChange-Id: I5b148103e1372a5eb73570bc77face27dbd5f914","created_at":"2022-01-30T00:11:33Z","closed_at":"2022-01-30T00:12:11Z","merged_at":"2022-01-30T00:12:11Z","user_id":323199,"sentiment":{"polarity":0.13636363636363635,"subjectivity":0.45454545454545453}}
{"_id":835235354,"title":"Set Env Variable to override Setuptools new behavior","body":"PiperOrigin-RevId: 423468055\r\nChange-Id: I5b148103e1372a5eb73570bc77face27dbd5f914","created_at":"2022-01-30T00:11:31Z","closed_at":"2022-01-30T00:12:06Z","merged_at":"2022-01-30T00:12:06Z","user_id":323199,"sentiment":{"polarity":0.13636363636363635,"subjectivity":0.45454545454545453}}
{"_id":835037583,"title":"Update callbacks.py","body":"Addresses https://github.com/tensorflow/tensorflow/issues/42027, https://github.com/tensorflow/tensorflow/issues/39755 and https://github.com/keras-team/keras/issues/15972","created_at":"2022-01-29T07:55:16Z","closed_at":"2022-01-31T14:10:52Z","merged_at":null,"user_id":79891166,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":834975416,"title":"[ROCm] Fix to enable TFRT BEF Thunk unit tests to pass on ROCm.","body":"In order to get the //tensorflow/compiler/xla/service/gpu/tests:mlir_gemm_test unit test to work on ROCm, this fix is needed.\r\n\r\nThere are other fixes that are needed in TFRT itself, but this is needed for Tensorflow.\r\n\r\n/cc @chsigg @hanbinyoon ","created_at":"2022-01-29T05:37:38Z","closed_at":"2022-02-16T21:49:36Z","merged_at":"2022-02-16T21:49:36Z","user_id":70280935,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":834892300,"title":"Update release notes with security advisories/updates","body":null,"created_at":"2022-01-28T23:30:39Z","closed_at":"2022-01-28T23:34:14Z","merged_at":"2022-01-28T23:34:14Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":834891741,"title":"Fix missing commas in `excluded_ops` list.","body":"Fix missing commas in `excluded_ops` list.","created_at":"2022-01-28T23:29:13Z","closed_at":"2022-02-11T16:56:02Z","merged_at":"2022-02-11T16:56:02Z","user_id":461491,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":834889208,"title":"Check for negative `nbins` in histogram ops","body":"Added the condition to check the negative value of nbins input.\r\nFixes https://github.com/tensorflow/tensorflow/issues/54125","created_at":"2022-01-28T23:23:06Z","closed_at":"2022-02-09T18:48:21Z","merged_at":"2022-02-09T18:48:21Z","user_id":73069040,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":834844379,"title":"[TF-TRT] Adding CSV export to Detailed Non Conversion Report","body":"@bixia1 for review\r\n\r\n`TF_TRT_SHOW_DETAILED_REPORT` triggers three possible behaviors:\r\n\r\n- **If Number >= 1:**      Print detailed non-conversion report on stdout.\r\n                                      *Usage: `TF_TRT_SHOW_DETAILED_REPORT=1`*\r\n                                 \r\n- **If non empty string:** Exports the non-conversion report in CSV format at\r\n                                       the path defined by the environment variable.\r\n                                       This will also print the detailed non-conversion\r\n                                       report on stdout.\r\n                                       *Usage: `TF_TRT_SHOW_DETAILED_REPORT=/path/to/file.csv`*\r\n                                  \r\n- **Else:**                        Print normal (undetailed) non-conversion report on stdout.","created_at":"2022-01-28T21:52:52Z","closed_at":"2022-03-21T17:56:31Z","merged_at":"2022-03-21T17:56:30Z","user_id":10923599,"sentiment":{"polarity":0.4,"subjectivity":0.75}}
{"_id":834808669,"title":"Bump ICU to 69.1 to handle CVE-2020-10531.","body":"Reverts tensorflow/tensorflow#54188","created_at":"2022-01-28T20:50:39Z","closed_at":"2022-01-28T20:57:45Z","merged_at":"2022-01-28T20:57:44Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":834808473,"title":"Revert \"Bump ICU to 69.1 to handle CVE-2020-10531.\"","body":"Reverts tensorflow/tensorflow#54183","created_at":"2022-01-28T20:50:18Z","closed_at":"2022-01-28T20:50:23Z","merged_at":"2022-01-28T20:50:23Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":834753348,"title":"Bump ICU to 69.1 to handle CVE-2020-10531.","body":"See [CVE-2020-10531](https://nvd.nist.gov/vuln/detail/CVE-2020-10531), it's an integer overflow.\r\n\r\nPiperOrigin-RevId: 424908014\r\nChange-Id: Ib8d6f8b527fb1fd9d887eaf487afc17d42333c8a","created_at":"2022-01-28T19:30:20Z","closed_at":"2022-01-28T20:48:16Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":834753100,"title":"Bump ICU to 69.1 to handle CVE-2020-10531.","body":"See [CVE-2020-10531](https://nvd.nist.gov/vuln/detail/CVE-2020-10531), it's an integer overflow.\r\n\r\nPiperOrigin-RevId: 424908014\r\nChange-Id: Ib8d6f8b527fb1fd9d887eaf487afc17d42333c8a","created_at":"2022-01-28T19:29:59Z","closed_at":"2022-01-28T20:58:05Z","merged_at":"2022-01-28T20:58:05Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":834753072,"title":"Bump ICU to 69.1 to handle CVE-2020-10531.","body":"See [CVE-2020-10531](https://nvd.nist.gov/vuln/detail/CVE-2020-10531), it's an integer overflow.\r\n\r\nPiperOrigin-RevId: 424908014\r\nChange-Id: Ib8d6f8b527fb1fd9d887eaf487afc17d42333c8a","created_at":"2022-01-28T19:29:56Z","closed_at":"2022-01-28T20:57:56Z","merged_at":"2022-01-28T20:57:56Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":834753059,"title":"Bump ICU to 69.1 to handle CVE-2020-10531.","body":"See [CVE-2020-10531](https://nvd.nist.gov/vuln/detail/CVE-2020-10531), it's an integer overflow.\r\n\r\nPiperOrigin-RevId: 424908014\r\nChange-Id: Ib8d6f8b527fb1fd9d887eaf487afc17d42333c8a","created_at":"2022-01-28T19:29:54Z","closed_at":"2022-01-28T20:48:41Z","merged_at":"2022-01-28T20:48:41Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":834753038,"title":"Bump ICU to 69.1 to handle CVE-2020-10531.","body":"See [CVE-2020-10531](https://nvd.nist.gov/vuln/detail/CVE-2020-10531), it's an integer overflow.\r\n\r\nPiperOrigin-RevId: 424908014\r\nChange-Id: Ib8d6f8b527fb1fd9d887eaf487afc17d42333c8a","created_at":"2022-01-28T19:29:51Z","closed_at":"2022-01-28T20:47:54Z","merged_at":"2022-01-28T20:47:54Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":834739954,"title":"Implementation of converters for unary operators \"Round\" and \"Sign\"","body":"Converters and corresponding tests for unary operators \"Round\" and \"Sign\" were implemented.\r\nSince the Myelin support for these operators in implicit batch mode has not yet been merged, I've added some checks to prevent these converters from being used and tested in this mode.\r\nPR#54181:Implementation of converters for unary operators \"Round\" and \"Sign\"\r\nNOTE: This PR should be slightly adjusted if it will be merged after\r\n[PR#54230:](https://github.com/tensorflow/tensorflow/pull/54230): **Refactoring of ConvertUnary**","created_at":"2022-01-28T19:09:38Z","closed_at":"2022-02-23T02:03:15Z","merged_at":"2022-02-23T02:03:15Z","user_id":32910461,"sentiment":{"polarity":-0.2,"subjectivity":0.4}}
{"_id":834675129,"title":"Update version numbers for TensorFlow 2.6.3","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 6 -> 6\nPatch: 2 -> 3\n\nNo lingering old version strings \"2.6.2\" found in source directory \n\"tensorflow/\". Good.\nNo lingering old version strings \"2.6.2\" found in source directory \n\"tensorflow/\". Good.\n```","created_at":"2022-01-28T17:41:13Z","closed_at":"2022-01-28T17:43:33Z","merged_at":"2022-01-28T17:43:33Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":834674495,"title":"Update version numbers for TensorFlow 2.7.1","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 7 -> 7\nPatch: 0 -> 1\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.7.0\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/tools/pip_package/setup.py:105:2.7.0\ntensorflow/tools/pip_package/setup.py:108:2.7.0\ntensorflow/tools/pip_package/setup.py:121:2.7.0\nBinary file tensorflow/cc/saved_model/testdata/SimpleV1Model/saved_model.pb \nmatches\ntensorflow/lite/g3doc/guide/signatures.ipynb:206:2.7.0\ntensorflow/lite/g3doc/performance/quantization_debugger.ipynb:146:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:139:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:142:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:143:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:158:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:159:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:165:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:166:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:173:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:174:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:175:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:176:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:177:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:178:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:179:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:180:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:181:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:182:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:183:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:184:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:185:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:186:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:187:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:188:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:189:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:190:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:191:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:192:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:194:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:194:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:194:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:194:2.7.0\ntensorflow/lite/tools/versioning/runtime_version.cc:97:2.7.0\ntensorflow/lite/tools/versioning/runtime_version.cc:281:2.7.0\ntensorflow/lite/tools/versioning/runtime_version.cc:312:2.7.0\ntensorflow/lite/tools/versioning/runtime_version.cc:365:2.7.0\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.7.0\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/tools/pip_package/setup.py:105:2.7.0\ntensorflow/tools/pip_package/setup.py:108:2.7.0\ntensorflow/tools/pip_package/setup.py:121:2.7.0\nBinary file tensorflow/cc/saved_model/testdata/SimpleV1Model/saved_model.pb \nmatches\ntensorflow/lite/g3doc/guide/signatures.ipynb:206:2.7.0\ntensorflow/lite/g3doc/performance/quantization_debugger.ipynb:146:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:139:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:142:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:143:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:158:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:159:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:165:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:166:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:173:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:174:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:175:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:176:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:177:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:178:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:179:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:180:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:181:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:182:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:183:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:184:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:185:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:186:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:187:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:188:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:189:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:190:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:191:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:192:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:194:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:194:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:194:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:194:2.7.0\ntensorflow/lite/tools/versioning/runtime_version.cc:97:2.7.0\ntensorflow/lite/tools/versioning/runtime_version.cc:281:2.7.0\ntensorflow/lite/tools/versioning/runtime_version.cc:312:2.7.0\ntensorflow/lite/tools/versioning/runtime_version.cc:365:2.7.0\n```","created_at":"2022-01-28T17:40:17Z","closed_at":"2022-01-28T17:43:24Z","merged_at":"2022-01-28T17:43:24Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":834674489,"title":"Update version numbers for TensorFlow 2.5.3","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 5 -> 5\nPatch: 2 -> 3\n\nNo lingering old version strings \"2.5.2\" found in source directory \n\"tensorflow/\". Good.\nNo lingering old version strings \"2.5.2\" found in source directory \n\"tensorflow/\". Good.\n```","created_at":"2022-01-28T17:40:16Z","closed_at":"2022-01-28T17:43:28Z","merged_at":"2022-01-28T17:43:28Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":834665938,"title":"Update release notes for TensorFlow 2.5.3","body":"This PR is intentionally incomplete. One of the Release Owners for 2.5.3\nneeds to fill in the internal release notes for this version before the PR gets\nsubmitted. Click on the :pencil2: icon in the header for `RELEASE.md` under\n\"Files Changed\" above.","created_at":"2022-01-28T17:27:54Z","closed_at":"2022-01-28T22:11:31Z","merged_at":"2022-01-28T22:11:31Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":834665798,"title":"Update release notes for TensorFlow 2.7.1","body":"This PR is intentionally incomplete. One of the Release Owners for 2.7.1\nneeds to fill in the internal release notes for this version before the PR gets\nsubmitted. Click on the :pencil2: icon in the header for `RELEASE.md` under\n\"Files Changed\" above.","created_at":"2022-01-28T17:27:41Z","closed_at":"2022-01-28T22:11:21Z","merged_at":"2022-01-28T22:11:20Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":834665584,"title":"Update release notes for TensorFlow 2.6.3","body":"This PR is intentionally incomplete. One of the Release Owners for 2.6.3\nneeds to fill in the internal release notes for this version before the PR gets\nsubmitted. Click on the :pencil2: icon in the header for `RELEASE.md` under\n\"Files Changed\" above.","created_at":"2022-01-28T17:27:23Z","closed_at":"2022-01-28T22:11:25Z","merged_at":"2022-01-28T22:11:25Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":834659207,"title":"Fix OpenCL GPU Delegate segfault on exit on NVidia ","body":"- AssignOffsetsToTensors with GREEDY_BY_SIZE causes a segfault on NVidia\r\n- Fixed undefined/duplicate definition error for Android CMake build of C++ API","created_at":"2022-01-28T17:19:16Z","closed_at":"2022-05-31T21:17:32Z","merged_at":null,"user_id":67419721,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":834273732,"title":"[TF-TRT] Add converter for tf.fill","body":"This PR adds a TF-TRT converter for the [tf.fill operator.](https://www.tensorflow.org/api_docs/python/tf/fill)\r\nThe converter supports tensor and weights for both inputs (`dims` and `value`).\r\n\r\nIt adds an overload for `TRTNetworkBuilder::Constant ` in layer_utils.h to create a Constant layer from a value, a shape and a data type.\r\n\r\nIt also moves the `TFTRT_INTERNAL_ERROR_AT_NODE` and `TFTRT_RETURN_ERROR_IF_NULLPTR ` macros to the convert_nodes header.","created_at":"2022-01-28T09:52:21Z","closed_at":"2022-02-23T01:33:08Z","merged_at":"2022-02-23T01:33:08Z","user_id":3193578,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":834132061,"title":"[oneDNN] Add env variable to MKL allocator to control mem allocation.","body":"This PR implements an env variable to request the MKL allocator to always use the system allocator. We recently. found a few usages where the lock overhead in BFC allocator was significant and switching back to default allocator helped performance.","created_at":"2022-01-28T06:09:38Z","closed_at":"2022-03-28T06:06:14Z","merged_at":"2022-03-28T06:06:14Z","user_id":39842562,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":834036150,"title":"Disable broken tests","body":null,"created_at":"2022-01-28T02:03:51Z","closed_at":"2022-01-28T02:04:13Z","merged_at":"2022-01-28T02:04:13Z","user_id":323199,"sentiment":{"polarity":-0.4,"subjectivity":0.4}}
{"_id":834036129,"title":"Disable broken tests","body":null,"created_at":"2022-01-28T02:03:47Z","closed_at":"2022-01-28T02:04:03Z","merged_at":"2022-01-28T02:04:03Z","user_id":323199,"sentiment":{"polarity":-0.4,"subjectivity":0.4}}
{"_id":834036100,"title":"Disable broken tests","body":null,"created_at":"2022-01-28T02:03:42Z","closed_at":"2022-01-28T02:03:57Z","merged_at":"2022-01-28T02:03:57Z","user_id":323199,"sentiment":{"polarity":-0.4,"subjectivity":0.4}}
{"_id":833804240,"title":"Bump the maximum threshold before erroring","body":"PiperOrigin-RevId: 424653571\r\nChange-Id: Ic2d9f3a7db627d78cde80ad415105f3d53735b3b","created_at":"2022-01-27T19:17:23Z","closed_at":"2022-01-27T19:32:16Z","merged_at":"2022-01-27T19:32:16Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":833804206,"title":"Bump the maximum threshold before erroring","body":"PiperOrigin-RevId: 424653571\r\nChange-Id: Ic2d9f3a7db627d78cde80ad415105f3d53735b3b","created_at":"2022-01-27T19:17:20Z","closed_at":"2022-01-27T19:32:07Z","merged_at":"2022-01-27T19:32:07Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":833804179,"title":"Bump the maximum threshold before erroring","body":"PiperOrigin-RevId: 424653571\r\nChange-Id: Ic2d9f3a7db627d78cde80ad415105f3d53735b3b","created_at":"2022-01-27T19:17:18Z","closed_at":"2022-01-27T19:30:01Z","merged_at":"2022-01-27T19:30:01Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":833804156,"title":"Bump the maximum threshold before erroring","body":"PiperOrigin-RevId: 424653571\r\nChange-Id: Ic2d9f3a7db627d78cde80ad415105f3d53735b3b","created_at":"2022-01-27T19:17:16Z","closed_at":"2022-01-27T19:29:52Z","merged_at":"2022-01-27T19:29:52Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":833759892,"title":"Revert \"Fix Null-pointer dereference in BuildXlaCompilationCache\"","body":"Reverts tensorflow/tensorflow#54092","created_at":"2022-01-27T18:15:57Z","closed_at":"2022-01-27T18:16:05Z","merged_at":"2022-01-27T18:16:05Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":833659839,"title":"Fix multiple declaration of same variable due to bad cherrypick","body":null,"created_at":"2022-01-27T16:23:34Z","closed_at":"2022-01-27T16:24:01Z","merged_at":"2022-01-27T16:24:01Z","user_id":323199,"sentiment":{"polarity":-0.20624999999999996,"subjectivity":0.29166666666666663}}
{"_id":833659713,"title":"Fix multiple declaration of same variable due to bad cherrypick","body":null,"created_at":"2022-01-27T16:23:30Z","closed_at":"2022-01-27T16:23:57Z","merged_at":"2022-01-27T16:23:57Z","user_id":323199,"sentiment":{"polarity":-0.20624999999999996,"subjectivity":0.29166666666666663}}
{"_id":833649330,"title":"Add missing `statusor` include","body":null,"created_at":"2022-01-27T16:17:55Z","closed_at":"2022-01-27T16:18:12Z","merged_at":"2022-01-27T16:18:12Z","user_id":323199,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":833649267,"title":"Add missing `statusor` include","body":null,"created_at":"2022-01-27T16:17:52Z","closed_at":"2022-01-27T16:18:07Z","merged_at":"2022-01-27T16:18:07Z","user_id":323199,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":833432583,"title":"Check for type inference error on node construction.","body":"PiperOrigin-RevId: 409415804\r\nChange-Id: Ieb6e020906b96f522bf8e2fa103715ddbbdc434a","created_at":"2022-01-27T13:39:40Z","closed_at":"2022-01-27T20:46:21Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":833413749,"title":"Check for type inference error on node construction.","body":"PiperOrigin-RevId: 409415804\r\nChange-Id: Ieb6e020906b96f522bf8e2fa103715ddbbdc434a","created_at":"2022-01-27T13:19:13Z","closed_at":"2022-01-27T20:46:02Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":833329087,"title":"Only hoist after-all instruction if it allows another instruction to be hoisted","body":"\r\nThe after all instruction doesn't produce any code and is only used at compile\r\ntime, hence it can be put with the other instructions that are not hoisted\r\nindividually. The motivation is to reduce compile time of models by reducing\r\ntotal number of instructions and in the case where this avoids having to clone\r\nand replace the while loop and it's called computations.","created_at":"2022-01-27T11:40:22Z","closed_at":"2022-09-14T09:41:26Z","merged_at":null,"user_id":22130400,"sentiment":{"polarity":0.0,"subjectivity":1.0}}
{"_id":833288102,"title":"[MHLO]: add ReduceWindow and Clamp support in hlo-legalize-to-lhlo","body":"It made HloToLhloReduceOpConverter a template, to support both Reduce and ReduceWindow.\r\nIt also added Clamp.","created_at":"2022-01-27T10:52:41Z","closed_at":"2022-01-31T16:40:29Z","merged_at":"2022-01-31T16:40:29Z","user_id":2830594,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":833284436,"title":"Removed Extra lines and Rearranged the triple ( \"\"\"   \"\"\" ) comment","body":null,"created_at":"2022-01-27T10:48:25Z","closed_at":"2022-01-27T17:44:45Z","merged_at":null,"user_id":52714264,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":833229502,"title":"[PluggableDevice] Add int32 `DEVICE_DEFAULT` registration for Range","body":null,"created_at":"2022-01-27T09:46:57Z","closed_at":"2022-02-22T17:01:16Z","merged_at":"2022-02-22T17:01:16Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":833202842,"title":"Add some tolerance to linear_operator_circulant_test so it will pass …","body":"…on AARCH4\r\nThis test failure was being masked by disabling FMA instructions but as they will be enabled again according to https://github.com/tensorflow/tensorflow/issues/52544 this test will need to be fixed as well.","created_at":"2022-01-27T09:18:42Z","closed_at":"2022-02-24T00:18:30Z","merged_at":"2022-02-24T00:18:30Z","user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":833191444,"title":"kernel_tests/linalg:self_adjoint_eig_op_test.py ","body":"Updating delta variable according to the following PR: https://github.com/tensorflow/tensorflow/issues/52544\r\n\r\nThis is addressing a bug when running the self_adjoint_eig_op_test bazel test on aarch64 devices.\r\nReducing the delta variable from .1 to .08 resolves this. This bug is confirmed to be present on master branch and resolved by this change on master.\r\n\r\nSigned-off-by: Theodore Grey <theodore.grey@gmail.com>","created_at":"2022-01-27T09:05:36Z","closed_at":"2022-04-19T15:53:48Z","merged_at":null,"user_id":22642980,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":833130895,"title":"[PluggableDevice] Make `candidate_input_indices` constant in `TF_ForwardInputOrAllocateOutput`","body":null,"created_at":"2022-01-27T07:45:14Z","closed_at":"2022-03-16T15:40:36Z","merged_at":"2022-03-16T15:40:36Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.3333333333333333}}
{"_id":833077618,"title":"Add `StatusOr` include","body":null,"created_at":"2022-01-27T06:16:25Z","closed_at":"2022-01-27T06:16:36Z","merged_at":"2022-01-27T06:16:36Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":833077577,"title":"Add `StatusOr` include","body":null,"created_at":"2022-01-27T06:16:21Z","closed_at":"2022-01-27T06:16:31Z","merged_at":"2022-01-27T06:16:31Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":833074780,"title":"Fix double declaration in boosted trees","body":null,"created_at":"2022-01-27T06:10:39Z","closed_at":"2022-01-27T06:11:10Z","merged_at":"2022-01-27T06:11:10Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":833074747,"title":"Fix double declaration in boosted trees","body":null,"created_at":"2022-01-27T06:10:36Z","closed_at":"2022-01-27T06:11:04Z","merged_at":"2022-01-27T06:11:04Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":833032887,"title":"Add mising `StatusOr` include and dependency","body":null,"created_at":"2022-01-27T04:33:17Z","closed_at":"2022-01-27T04:33:54Z","merged_at":"2022-01-27T04:33:54Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":833032695,"title":"Add mising `StatusOr` include and dependency","body":null,"created_at":"2022-01-27T04:32:49Z","closed_at":"2022-01-27T04:33:47Z","merged_at":"2022-01-27T04:33:47Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":833029954,"title":"Revert \"Check for type inference error on node construction.\"","body":"Reverts tensorflow/tensorflow#54109","created_at":"2022-01-27T04:26:49Z","closed_at":"2022-01-27T04:26:56Z","merged_at":"2022-01-27T04:26:56Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":833029526,"title":"Revert \"Check for type inference error on node construction.\"","body":"Reverts tensorflow/tensorflow#54110","created_at":"2022-01-27T04:25:53Z","closed_at":"2022-01-27T04:26:00Z","merged_at":"2022-01-27T04:26:00Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":833026877,"title":"Fix `OP_REQUIRES` cherry-pick error","body":null,"created_at":"2022-01-27T04:20:05Z","closed_at":"2022-01-27T04:20:41Z","merged_at":"2022-01-27T04:20:41Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":833026860,"title":"Fix `OP_REQUIRES` cherry-pick error","body":null,"created_at":"2022-01-27T04:20:03Z","closed_at":"2022-01-27T04:20:33Z","merged_at":"2022-01-27T04:20:33Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":833026847,"title":"Fix `OP_REQUIRES` cherry-pick error","body":null,"created_at":"2022-01-27T04:20:00Z","closed_at":"2022-01-27T04:20:25Z","merged_at":"2022-01-27T04:20:25Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":832987184,"title":"lite: Update Windows tensorflowlite_flex.dll build","body":"Removed \"windows_export_all_symbols\" feature since Flex delegate only requires\r\nto expose `TF_AcquireFlexDelegate` symbol.\r\nThis change is needed for Issue#43367.\r\n\r\nPiperOrigin-RevId: 424060071\r\nChange-Id: I8874ce6b107f6db9c5445b65e55073ea46266c76","created_at":"2022-01-27T02:47:28Z","closed_at":"2022-01-27T02:49:20Z","merged_at":"2022-01-27T02:49:20Z","user_id":2908505,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":832986927,"title":"lite: Update Windows tensorflowlite_flex.dll build","body":"Removed \"windows_export_all_symbols\" feature since Flex delegate only requires\r\nto expose `TF_AcquireFlexDelegate` symbol.\r\nThis change is needed for Issue#43367.\r\n\r\nPiperOrigin-RevId: 424060071\r\nChange-Id: I8874ce6b107f6db9c5445b65e55073ea46266c76","created_at":"2022-01-27T02:46:43Z","closed_at":"2022-01-27T02:48:38Z","merged_at":"2022-01-27T02:48:38Z","user_id":2908505,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":832983590,"title":"Remove test that needs many more cherry-picks (already disabled)","body":null,"created_at":"2022-01-27T02:37:44Z","closed_at":"2022-01-27T02:37:51Z","merged_at":"2022-01-27T02:37:51Z","user_id":323199,"sentiment":{"polarity":0.26666666666666666,"subjectivity":0.4333333333333333}}
{"_id":832975105,"title":"Requires a newer version of the libclang package.","body":"We recently made some mistakes during maintaining the package `libclang` and the version v12.0.0 has been broken for some package managers like poetry (see issue https://github.com/sighingnow/libclang/issues/19).\r\n\r\nOlder versions of libclang has bugs about installed unintented files to users' `site-packages` directory.\r\n\r\nThis PR force the requirement of libclang to v13.0.0 to fix above issues.\r\n","created_at":"2022-01-27T02:17:57Z","closed_at":"2022-01-28T00:07:47Z","merged_at":"2022-01-28T00:07:47Z","user_id":7144772,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":832971685,"title":"Add disable for depthwise-conv d9m-unimplemented exception","body":"This pull request adds the environment variable `TF_DISABLE_DEPTHWISE_CONV_DETERMINISM_EXCEPTIONS`, which, when set to `'true'` or `'1'` will disable the determinism-unimplemented exception-throwing functionality of `tf.nn.depthwise_conv2d`. The intention of this is to allow a program to run further, to discover if other determinism-unimplemented exceptions would be thrown in the absence of this exception. When this disable is activated, nondeterministic operation is, of course, extremely likely.\r\n\r\nThis environment variable is intended for debug purposes, and is related to issue [47174](https://github.com/tensorflow/tensorflow/issues/47174) and specifically to [this comment](https://github.com/tensorflow/tensorflow/issues/47174#issuecomment-976179644) in that issue.","created_at":"2022-01-27T02:09:48Z","closed_at":"2022-02-02T00:41:14Z","merged_at":"2022-02-02T00:41:13Z","user_id":33532941,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":832968658,"title":"Move StatusOr to core/platform and fix ci_sanity build","body":"PiperOrigin-RevId: 367726383\r\nChange-Id: Ia8855f2aa2916ff57bcd5fa787c2a8b818bc059c","created_at":"2022-01-27T02:02:47Z","closed_at":"2022-01-27T02:03:42Z","merged_at":"2022-01-27T02:03:42Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":832932858,"title":"Fix crash on invalid graph importing to TFG when there is a func_attr…","body":"… with an empty key.\r\n\r\nFound by fuzzing.\r\n\r\nPiperOrigin-RevId: 414089748\r\nChange-Id: Ibdbb5aed29f36abd4bb66f7ef854868dc6b9d95c","created_at":"2022-01-27T00:40:42Z","closed_at":"2022-01-27T00:40:49Z","merged_at":"2022-01-27T00:40:49Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":832928337,"title":"Fix crash when importing invalid graph (func attribute with empty nam…","body":"…e) to TFG\r\n\r\nFound by the fuzzer\r\n\r\nPiperOrigin-RevId: 413200989\r\nChange-Id: Ib81abccaf33f05a69c780c937710699f761ede72","created_at":"2022-01-27T00:31:07Z","closed_at":"2022-01-27T00:31:14Z","merged_at":"2022-01-27T00:31:14Z","user_id":323199,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":832926977,"title":"Fix crash when importing invalid graph (attribute with empty name) to…","body":"… TFG\r\n\r\nFound by the fuzzer\r\n\r\nPiperOrigin-RevId: 413037608\r\nChange-Id: I7220932e261bd71848d8bd6d0ee654e83c7fa2e3","created_at":"2022-01-27T00:28:26Z","closed_at":"2022-01-27T00:28:33Z","merged_at":"2022-01-27T00:28:33Z","user_id":323199,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":832926131,"title":"Fix crash when an invalid graph (empty handle_data) is provided to th…","body":"…e TFG importer\r\n\r\nFound by the fuzzer.\r\n\r\nPiperOrigin-RevId: 413036574\r\nChange-Id: Ib90e542c04ccc46416bce3201e23f339e5bd1097","created_at":"2022-01-27T00:26:36Z","closed_at":"2022-01-27T00:26:42Z","merged_at":"2022-01-27T00:26:42Z","user_id":323199,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":832921729,"title":"Check for type inference error on node construction.","body":"PiperOrigin-RevId: 409415804\r\nChange-Id: Ieb6e020906b96f522bf8e2fa103715ddbbdc434a","created_at":"2022-01-27T00:17:24Z","closed_at":"2022-01-27T00:17:57Z","merged_at":"2022-01-27T00:17:57Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":832921709,"title":"Check for type inference error on node construction.","body":"PiperOrigin-RevId: 409415804\r\nChange-Id: Ieb6e020906b96f522bf8e2fa103715ddbbdc434a","created_at":"2022-01-27T00:17:22Z","closed_at":"2022-01-27T00:17:48Z","merged_at":"2022-01-27T00:17:48Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":832921692,"title":"Check for type inference error on node construction.","body":"PiperOrigin-RevId: 409415804\r\nChange-Id: Ieb6e020906b96f522bf8e2fa103715ddbbdc434a","created_at":"2022-01-27T00:17:19Z","closed_at":"2022-01-27T00:17:38Z","merged_at":"2022-01-27T00:17:38Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":832889812,"title":"Handle invalid inputs instead of crashing.","body":"PiperOrigin-RevId: 409549744\r\nChange-Id: I7f5935b34b53f7e426a5462fcc027bdbf5dcda24","created_at":"2022-01-26T23:11:57Z","closed_at":"2022-01-27T00:56:17Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":832859384,"title":"adding additional support for completions related to lazy-loaded modules","body":"fix for pylance/pyright auto completions missing. \r\nhttps://github.com/microsoft/pylance-release/issues/1066\r\n\r\n\r\nThis PR fixes https://github.com/tensorflow/tensorflow/issues/54435.","created_at":"2022-01-26T22:17:27Z","closed_at":"2022-04-08T19:06:56Z","merged_at":"2022-04-08T19:06:55Z","user_id":1946977,"sentiment":{"polarity":0.0,"subjectivity":0.4}}
{"_id":832806466,"title":"Prevent `CHECK`-fail when building reference tensor.","body":"The tensor constructor does not allow reference dtypes, as these should not show up explicitly. However, when passed these invalid types instead of building an invalid object the constructor crashes via a `CHECK`-fail. We have a static builder that properly handles this case but is not applicable given current usage.\r\n\r\nInstead, before calling the constructor, we can check that the dtype is not a reference type and return an error otherwise, given that the dtype is user controlled so malicious users can trigger denial of service.\r\n\r\nPiperOrigin-RevId: 409662503\r\nChange-Id: I5892f831fde7f276cd7ab34519cf6b8061c71a59","created_at":"2022-01-26T20:59:13Z","closed_at":"2022-01-26T20:59:52Z","merged_at":"2022-01-26T20:59:51Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":832712392,"title":"Use `PartialTensorShape` instead of `TensorShape`.","body":"`TensorShape` constructor throws a CHECK-fail if shape is partial/overflows which the other doesn't. We are only determining the number of elements in the shape and partial shape should be used as it returns negative number when needed.\r\n\r\nPiperOrigin-RevId: 409205384\r\nChange-Id: Ia56542ff9ec758f2c9ffc7e4dcc9fa7eecd86e7b","created_at":"2022-01-26T18:53:36Z","closed_at":"2022-01-26T18:53:46Z","merged_at":"2022-01-26T18:53:46Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":832712351,"title":"Use `PartialTensorShape` instead of `TensorShape`.","body":"`TensorShape` constructor throws a CHECK-fail if shape is partial/overflows which the other doesn't. We are only determining the number of elements in the shape and partial shape should be used as it returns negative number when needed.\r\n\r\nPiperOrigin-RevId: 409205384\r\nChange-Id: Ia56542ff9ec758f2c9ffc7e4dcc9fa7eecd86e7b","created_at":"2022-01-26T18:53:33Z","closed_at":"2022-01-26T18:53:41Z","merged_at":"2022-01-26T18:53:41Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":832709703,"title":"[oneDNN] Removing eager check for mkl specific passes","body":"Removing eager check for oneDNN specific passes, as its not needed anymore. This check blocks passes when running saved_models in tensorflow.","created_at":"2022-01-26T18:49:42Z","closed_at":"2022-03-15T02:54:29Z","merged_at":"2022-03-15T02:54:28Z","user_id":43043975,"sentiment":{"polarity":0.0,"subjectivity":0.125}}
{"_id":832660334,"title":"AssignOffsetsToTensors with GREEDY_BY_SIZE causes a segfault on NVidia","body":"- Calling AssignOffsetsToTensors with MemoryStrategy::GREEDY_BY_SIZE appears to cause a segfault on NVidia OpenCL. See issue https://github.com/tensorflow/tensorflow/issues/53800 for more details.\r\n\r\n- Fixed some undefine/duplicate definition linker error (related to logging classes) when building for Android using CMake.","created_at":"2022-01-26T17:43:59Z","closed_at":"2022-01-26T20:13:34Z","merged_at":null,"user_id":67419721,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":832657351,"title":"Fixed a segfault on exit on NVidia","body":"- Calling AssignOffsetsToTensors with MemoryStrategy::GREEDY_BY_SIZE appears to cause a segfault on NVidia OpenCL. See issue https://github.com/tensorflow/tensorflow/issues/53800 for more details.\r\n- Fixed some undefine/duplicate definition linker error (related to logging classes) when building for Android using CMake.","created_at":"2022-01-26T17:39:59Z","closed_at":"2022-01-26T17:40:27Z","merged_at":null,"user_id":67419721,"sentiment":{"polarity":0.1,"subjectivity":0.2}}
{"_id":832643011,"title":"Use a different mem assign strategy to avoid crash-on-exit on nvidia","body":"- Calling AssignOffsetsToTensors with MemoryStrategy::GREEDY_BY_SIZE currently results in a segfault on exit on NVidia OpenCL. See https://github.com/tensorflow/tensorflow/issues/53800\r\n\r\n- Fixed some linking errors (undefined/duplicate definitions related to logging classes) when building the TFLite C++ API using CMake for Android.","created_at":"2022-01-26T17:22:58Z","closed_at":"2022-01-26T17:28:41Z","merged_at":null,"user_id":67419721,"sentiment":{"polarity":0.0,"subjectivity":0.6}}
{"_id":832623158,"title":"Make `IsSimplifiableReshape` return `Status` instead of `bool`.","body":"This is to allow remove `CHECK`-fails in subsequent commits.\r\n\r\nPiperOrigin-RevId: 409160987\r\nChange-Id: I3f050218a3832271395c4372a0b8ea05f1c03d80","created_at":"2022-01-26T17:00:51Z","closed_at":"2022-01-26T17:01:32Z","merged_at":"2022-01-26T17:01:32Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":832623118,"title":"Make `IsSimplifiableReshape` return `Status` instead of `bool`.","body":"This is to allow remove `CHECK`-fails in subsequent commits.\r\n\r\nPiperOrigin-RevId: 409160987\r\nChange-Id: I3f050218a3832271395c4372a0b8ea05f1c03d80","created_at":"2022-01-26T17:00:49Z","closed_at":"2022-01-26T17:01:38Z","merged_at":"2022-01-26T17:01:38Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":832564362,"title":"[ROCm] Switching Dockerfile.rocm to use python3.9","body":"Updating dockerfile.rocm to fix community build. ","created_at":"2022-01-26T15:56:39Z","closed_at":"2022-02-02T14:11:31Z","merged_at":"2022-02-02T14:11:30Z","user_id":25489675,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":832439205,"title":"Fix Null-pointer dereference in BuildXlaCompilationCache","body":"If ConfigProto is not used, then use the default settings which is to allow all devices.\r\n\r\nPiperOrigin-RevId: 420391800\r\nChange-Id: I88161ad7042990aef678e77b597a2fb2c8f815be","created_at":"2022-01-26T13:46:07Z","closed_at":"2022-01-26T20:11:43Z","merged_at":"2022-01-26T20:11:42Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":832085560,"title":"Prevent integer overflow in `CalculateTensorSize`.","body":"In order to not change the API, we return a negative value in case of overflow. A better fix is to change the API to return a status instead.\r\n\r\nPiperOrigin-RevId: 408714915\r\nChange-Id: I110ec4e1c5bbf4d7ca7ef7c068dfd3e8bc7190cd","created_at":"2022-01-26T04:38:26Z","closed_at":"2022-01-26T04:38:37Z","merged_at":"2022-01-26T04:38:37Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":832085544,"title":"Prevent integer overflow in `CalculateTensorSize`.","body":"In order to not change the API, we return a negative value in case of overflow. A better fix is to change the API to return a status instead.\r\n\r\nPiperOrigin-RevId: 408714915\r\nChange-Id: I110ec4e1c5bbf4d7ca7ef7c068dfd3e8bc7190cd","created_at":"2022-01-26T04:38:24Z","closed_at":"2022-01-26T04:38:31Z","merged_at":"2022-01-26T04:38:31Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831852839,"title":"[ROCm] Update TF to call HipSolver for most LA functions in ROCm 4.5+","body":null,"created_at":"2022-01-25T20:45:53Z","closed_at":"2022-02-09T20:20:48Z","merged_at":"2022-02-09T20:20:48Z","user_id":25489675,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":831761771,"title":"[TF:TRT] Add NHWC layout support to FusedBatchNorm converter","body":"The FusedBatchNorm was originally supporting only NCHW layouts. There are cases, however, where the operations needs to be executed in NHWC format, as a result of not being able to properly convert certain TRT segments to that data layout.\r\n\r\nThis PR adds support for NHWC by implementing two ElementWise layers for the fused scale and offset operations. This is a temporary workaround until a proper layout optimizer is capable of converting all possible segments to NCHW format.","created_at":"2022-01-25T18:42:28Z","closed_at":"2022-02-02T16:34:40Z","merged_at":"2022-02-02T16:34:40Z","user_id":75912517,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831691908,"title":"Fix assertion failure on proto decode","body":"Cherrypick 691f8c040f3589bc2b3ed86c450fa2414f71335f and 14fea662350e7c26eb5fe1be2ac31704e5682ee6 on r2.5","created_at":"2022-01-25T17:16:14Z","closed_at":"2022-01-25T17:16:31Z","merged_at":"2022-01-25T17:16:30Z","user_id":323199,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":831691873,"title":"Fix assertion failure on proto decode","body":"Cherrypick 691f8c040f3589bc2b3ed86c450fa2414f71335f and 14fea662350e7c26eb5fe1be2ac31704e5682ee6 on r2.6","created_at":"2022-01-25T17:16:12Z","closed_at":"2022-01-25T17:16:25Z","merged_at":"2022-01-25T17:16:25Z","user_id":323199,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":831691841,"title":"Fix assertion failure on proto decode","body":"Cherrypick 691f8c040f3589bc2b3ed86c450fa2414f71335f and 14fea662350e7c26eb5fe1be2ac31704e5682ee6 on r2.7","created_at":"2022-01-25T17:16:09Z","closed_at":"2022-01-25T17:16:20Z","merged_at":"2022-01-25T17:16:20Z","user_id":323199,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":831677924,"title":"[TFLite] Restrict inputs and outputs scaling/zero-point to be the same for the EXPAND_DIMS op","body":"Hi,\r\n\r\nThis PR sets `OperatorProperty::restrict_same_input_output_scale` to true for the EXPAND_DIMS operator and add some checks about it in the `Prepare` method of the operator. The MLIR quantizer properly sets the scaling/zero-point thanks to the `SameOperandsAndResultsScale` trait for `TFL_ExpandDimsOp` but it isn't the case unfortunately for the old TOCO quantizer still used for int16.\r\n\r\nThibaut","created_at":"2022-01-25T17:01:03Z","closed_at":"2022-05-16T09:30:38Z","merged_at":"2022-05-16T09:30:38Z","user_id":21028116,"sentiment":{"polarity":0.0,"subjectivity":0.125}}
{"_id":831671392,"title":"Merge pull request #53695 from yongtang:53660-tf.sparse.split-crash","body":"PiperOrigin-RevId: 420811652\r\nChange-Id: I83742482770ba0bf7c3ccd57508c40fb9cdbe2f7","created_at":"2022-01-25T16:54:33Z","closed_at":"2022-01-25T16:54:52Z","merged_at":"2022-01-25T16:54:52Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831671268,"title":"Merge pull request #53695 from yongtang:53660-tf.sparse.split-crash","body":"PiperOrigin-RevId: 420811652\r\nChange-Id: I83742482770ba0bf7c3ccd57508c40fb9cdbe2f7","created_at":"2022-01-25T16:54:26Z","closed_at":"2022-01-25T16:54:48Z","merged_at":"2022-01-25T16:54:48Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831671042,"title":"Merge pull request #53695 from yongtang:53660-tf.sparse.split-crash","body":"PiperOrigin-RevId: 420811652\r\nChange-Id: I83742482770ba0bf7c3ccd57508c40fb9cdbe2f7","created_at":"2022-01-25T16:54:10Z","closed_at":"2022-01-25T16:54:43Z","merged_at":"2022-01-25T16:54:43Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831670942,"title":"Merge pull request #53695 from yongtang:53660-tf.sparse.split-crash","body":"PiperOrigin-RevId: 420811652\r\nChange-Id: I83742482770ba0bf7c3ccd57508c40fb9cdbe2f7","created_at":"2022-01-25T16:54:04Z","closed_at":"2022-01-25T16:54:39Z","merged_at":"2022-01-25T16:54:38Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831648213,"title":"Merge pull request #52707 from elfringham:init_ops_test_fix","body":"PiperOrigin-RevId: 416941851\r\nChange-Id: Iefa5a9b841b053b36f6b105cd82c9d32d5e47850","created_at":"2022-01-25T16:29:14Z","closed_at":"2022-01-25T16:29:29Z","merged_at":"2022-01-25T16:29:29Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831648137,"title":"Merge pull request #52707 from elfringham:init_ops_test_fix","body":"PiperOrigin-RevId: 416941851\r\nChange-Id: Iefa5a9b841b053b36f6b105cd82c9d32d5e47850","created_at":"2022-01-25T16:29:11Z","closed_at":"2022-01-25T16:29:25Z","merged_at":"2022-01-25T16:29:24Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831648072,"title":"Merge pull request #52707 from elfringham:init_ops_test_fix","body":"PiperOrigin-RevId: 416941851\r\nChange-Id: Iefa5a9b841b053b36f6b105cd82c9d32d5e47850","created_at":"2022-01-25T16:29:07Z","closed_at":"2022-01-25T16:29:20Z","merged_at":"2022-01-25T16:29:20Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831217434,"title":"Prevent stack overflow when FunctionLib in GraphDef has a self-recurs…","body":"…ive function.\r\n\r\nIt is likely that no recursivity is supported, but we should handle this separately.\r\n\r\nPiperOrigin-RevId: 414860329\r\nChange-Id: I02a2270e86282b37362ddd485eeef16fb986a9e0","created_at":"2022-01-25T08:56:40Z","closed_at":"2022-01-26T20:11:21Z","merged_at":"2022-01-26T20:11:21Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831216192,"title":"Prevent stack overflow when FunctionLib in GraphDef has a self-recurs…","body":"…ive function.\r\n\r\nIt is likely that no recursivity is supported, but we should handle this separately.\r\n\r\nPiperOrigin-RevId: 414860329\r\nChange-Id: I02a2270e86282b37362ddd485eeef16fb986a9e0","created_at":"2022-01-25T08:55:07Z","closed_at":"2022-01-26T20:11:27Z","merged_at":"2022-01-26T20:11:26Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831215057,"title":"Prevent stack overflow when FunctionLib in GraphDef has a self-recurs…","body":"…ive function.\r\n\r\nIt is likely that no recursivity is supported, but we should handle this separately.\r\n\r\nPiperOrigin-RevId: 414860329\r\nChange-Id: I02a2270e86282b37362ddd485eeef16fb986a9e0","created_at":"2022-01-25T08:53:42Z","closed_at":"2022-01-26T20:11:35Z","merged_at":"2022-01-26T20:11:35Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831209989,"title":"Fix `CHECK`-failure caused by constant folding code.","body":"We're losing a `const` qualifier here, but unless we get to use more `StatusOr` objects, this is the best alternative.\r\n\r\nPiperOrigin-RevId: 410072241\r\nChange-Id: I69535c91490f0d23facb9587d2ff59db0782cda6","created_at":"2022-01-25T08:47:23Z","closed_at":"2022-01-26T20:10:59Z","merged_at":"2022-01-26T20:10:59Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.3333333333333333}}
{"_id":831207964,"title":"Fix `CHECK`-failure caused by constant folding code.","body":"We're losing a `const` qualifier here, but unless we get to use more `StatusOr` objects, this is the best alternative.\r\n\r\nPiperOrigin-RevId: 410072241\r\nChange-Id: I69535c91490f0d23facb9587d2ff59db0782cda6","created_at":"2022-01-25T08:45:15Z","closed_at":"2022-01-26T20:11:07Z","merged_at":"2022-01-26T20:11:07Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.3333333333333333}}
{"_id":831206584,"title":"Fix `CHECK`-failure caused by constant folding code.","body":"We're losing a `const` qualifier here, but unless we get to use more `StatusOr` objects, this is the best alternative.\r\n\r\nPiperOrigin-RevId: 410072241\r\nChange-Id: I69535c91490f0d23facb9587d2ff59db0782cda6","created_at":"2022-01-25T08:43:37Z","closed_at":"2022-01-26T20:11:15Z","merged_at":"2022-01-26T20:11:14Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.3333333333333333}}
{"_id":831203853,"title":"Prevent null pointer dereference in constant folding.","body":"Under certain conditions, an invalid protobuf saved model with invalid nodes would be loaded. During optimization phase, Grappler optimizer will then dereference a null pointer.\r\n\r\nPiperOrigin-RevId: 409683530\r\nChange-Id: I1f10340a7ec384bc9bc587300390f1078cf5caa0","created_at":"2022-01-25T08:39:56Z","closed_at":"2022-01-26T20:10:33Z","merged_at":"2022-01-26T20:10:33Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.3333333333333333}}
{"_id":831202576,"title":"Prevent null pointer dereference in constant folding.","body":"Under certain conditions, an invalid protobuf saved model with invalid nodes would be loaded. During optimization phase, Grappler optimizer will then dereference a null pointer.\r\n\r\nPiperOrigin-RevId: 409683530\r\nChange-Id: I1f10340a7ec384bc9bc587300390f1078cf5caa0","created_at":"2022-01-25T08:38:12Z","closed_at":"2022-01-26T20:10:45Z","merged_at":"2022-01-26T20:10:45Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.3333333333333333}}
{"_id":831201570,"title":"Prevent null pointer dereference in constant folding.","body":"Under certain conditions, an invalid protobuf saved model with invalid nodes would be loaded. During optimization phase, Grappler optimizer will then dereference a null pointer.\r\n\r\nPiperOrigin-RevId: 409683530\r\nChange-Id: I1f10340a7ec384bc9bc587300390f1078cf5caa0","created_at":"2022-01-25T08:36:48Z","closed_at":"2022-01-26T20:10:50Z","merged_at":"2022-01-26T20:10:50Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.3333333333333333}}
{"_id":831199182,"title":"Prevent null pointer dereference in `mutable_graph_view`","body":"PiperOrigin-RevId: 409684472\r\nChange-Id: I577eb9d9ac470fcec0501423171e739a4ec0cb5c","created_at":"2022-01-25T08:33:40Z","closed_at":"2022-01-26T20:10:06Z","merged_at":"2022-01-26T20:10:05Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831197751,"title":"Prevent null pointer dereference in `mutable_graph_view`","body":"PiperOrigin-RevId: 409684472\r\nChange-Id: I577eb9d9ac470fcec0501423171e739a4ec0cb5c","created_at":"2022-01-25T08:32:01Z","closed_at":"2022-01-26T20:10:12Z","merged_at":"2022-01-26T20:10:12Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831196147,"title":"Prevent null pointer dereference in `mutable_graph_view`","body":"PiperOrigin-RevId: 409684472\r\nChange-Id: I577eb9d9ac470fcec0501423171e739a4ec0cb5c","created_at":"2022-01-25T08:30:08Z","closed_at":"2022-01-26T20:10:16Z","merged_at":"2022-01-26T20:10:16Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831193523,"title":"Prevent overflow in grappler cost estimation of crop&resize op.","body":"The crop parameters are user controlled, so we should make sure a user can not trigger an overflow maliciously.\r\n\r\nPiperOrigin-RevId: 409670234\r\nChange-Id: I7994734a98b037c5642e051240329d16f959aae4","created_at":"2022-01-25T08:26:59Z","closed_at":"2022-01-26T20:05:37Z","merged_at":"2022-01-26T20:05:37Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831191964,"title":"Prevent overflow in grappler cost estimation of crop&resize op.","body":"The crop parameters are user controlled, so we should make sure a user can not trigger an overflow maliciously.\r\n\r\nPiperOrigin-RevId: 409670234\r\nChange-Id: I7994734a98b037c5642e051240329d16f959aae4","created_at":"2022-01-25T08:25:07Z","closed_at":"2022-01-26T20:05:41Z","merged_at":"2022-01-26T20:05:40Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831190090,"title":"Prevent overflow in grappler cost estimation of crop&resize op.","body":"The crop parameters are user controlled, so we should make sure a user can not trigger an overflow maliciously.\r\n\r\nPiperOrigin-RevId: 409670234\r\nChange-Id: I7994734a98b037c5642e051240329d16f959aae4","created_at":"2022-01-25T08:22:50Z","closed_at":"2022-01-26T20:05:44Z","merged_at":"2022-01-26T20:05:44Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831187305,"title":"Prevent overflow in `CalculateTensorElementCount`","body":"Grappler cost estimation sometimes computes the number of elements in a tensor by multiplying all the dimensions in a shape. However, these tensors can also be controlled by users so a malicious attacker can trigger overflow that can be exploited.\r\n\r\nPiperOrigin-RevId: 409575048\r\nChange-Id: I7a958875ba6f3ad9cb5b9943fe5d459efcbe4557","created_at":"2022-01-25T08:19:21Z","closed_at":"2022-01-26T20:06:18Z","merged_at":"2022-01-26T20:06:18Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831186306,"title":"Prevent overflow in `CalculateTensorElementCount`","body":"Grappler cost estimation sometimes computes the number of elements in a tensor by multiplying all the dimensions in a shape. However, these tensors can also be controlled by users so a malicious attacker can trigger overflow that can be exploited.\r\n\r\nPiperOrigin-RevId: 409575048\r\nChange-Id: I7a958875ba6f3ad9cb5b9943fe5d459efcbe4557","created_at":"2022-01-25T08:18:06Z","closed_at":"2022-01-26T20:06:14Z","merged_at":"2022-01-26T20:06:14Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831184639,"title":"Prevent overflow in `CalculateTensorElementCount`","body":"Grappler cost estimation sometimes computes the number of elements in a tensor by multiplying all the dimensions in a shape. However, these tensors can also be controlled by users so a malicious attacker can trigger overflow that can be exploited.\r\n\r\nPiperOrigin-RevId: 409575048\r\nChange-Id: I7a958875ba6f3ad9cb5b9943fe5d459efcbe4557","created_at":"2022-01-25T08:15:59Z","closed_at":"2022-01-26T20:06:11Z","merged_at":"2022-01-26T20:06:11Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831181399,"title":"Prevent `CHECK`-fail when building reference tensor.","body":"The tensor constructor does not allow reference dtypes, as these should not show up explicitly. However, when passed these invalid types instead of building an invalid object the constructor crashes via a `CHECK`-fail. We have a static builder that properly handles this case but is not applicable given current usage.\r\n\r\nInstead, before calling the constructor, we can check that the dtype is not a reference type and return an error otherwise, given that the dtype is user controlled so malicious users can trigger denial of service.\r\n\r\nPiperOrigin-RevId: 409662503\r\nChange-Id: I5892f831fde7f276cd7ab34519cf6b8061c71a59","created_at":"2022-01-25T08:11:45Z","closed_at":"2022-01-26T23:15:22Z","merged_at":"2022-01-26T23:15:22Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831180097,"title":"Prevent `CHECK`-fail when building reference tensor.","body":"The tensor constructor does not allow reference dtypes, as these should not show up explicitly. However, when passed these invalid types instead of building an invalid object the constructor crashes via a `CHECK`-fail. We have a static builder that properly handles this case but is not applicable given current usage.\r\n\r\nInstead, before calling the constructor, we can check that the dtype is not a reference type and return an error otherwise, given that the dtype is user controlled so malicious users can trigger denial of service.\r\n\r\nPiperOrigin-RevId: 409662503\r\nChange-Id: I5892f831fde7f276cd7ab34519cf6b8061c71a59","created_at":"2022-01-25T08:10:01Z","closed_at":"2022-01-26T23:15:17Z","merged_at":"2022-01-26T23:15:17Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831177072,"title":"Eliminate `CHECK`-fail from `function.cc`.","body":"PiperOrigin-RevId: 409414744\r\nChange-Id: Ic854e12ab2edb88b165d32e2d632c4ee654d71ad","created_at":"2022-01-25T08:05:57Z","closed_at":"2022-01-26T19:51:33Z","merged_at":"2022-01-26T19:51:33Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831175801,"title":"Eliminate `CHECK`-fail from `function.cc`.","body":"PiperOrigin-RevId: 409414744\r\nChange-Id: Ic854e12ab2edb88b165d32e2d632c4ee654d71ad","created_at":"2022-01-25T08:04:13Z","closed_at":"2022-01-26T19:51:55Z","merged_at":"2022-01-26T19:51:55Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831174158,"title":"Eliminate `CHECK`-fail from `function.cc`.","body":"PiperOrigin-RevId: 409414744\r\nChange-Id: Ic854e12ab2edb88b165d32e2d632c4ee654d71ad","created_at":"2022-01-25T08:02:09Z","closed_at":"2022-01-26T19:52:00Z","merged_at":"2022-01-26T19:52:00Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831172033,"title":"Eliminate debug `CHECK`-fail from `function.cc`","body":"PiperOrigin-RevId: 409416119\r\nChange-Id: I8376ee464d434e9b970ff0ad49edfdaa2a273cfe","created_at":"2022-01-25T07:59:07Z","closed_at":"2022-01-26T19:51:12Z","merged_at":"2022-01-26T19:51:12Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831170875,"title":"Eliminate debug `CHECK`-fail from `function.cc`","body":"PiperOrigin-RevId: 409416119\r\nChange-Id: I8376ee464d434e9b970ff0ad49edfdaa2a273cfe","created_at":"2022-01-25T07:57:17Z","closed_at":"2022-01-26T19:51:27Z","merged_at":"2022-01-26T19:51:27Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831169870,"title":"Eliminate debug `CHECK`-fail from `function.cc`","body":"PiperOrigin-RevId: 409416119\r\nChange-Id: I8376ee464d434e9b970ff0ad49edfdaa2a273cfe","created_at":"2022-01-25T07:55:42Z","closed_at":"2022-01-26T19:51:25Z","merged_at":"2022-01-26T19:51:25Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831165265,"title":"Prevent memory leak in decoding PNG images.","body":"PiperOrigin-RevId: 409300653\r\nChange-Id: I6182124c545989cef80cefd439b659095920763b","created_at":"2022-01-25T07:48:27Z","closed_at":"2022-01-26T19:14:26Z","merged_at":"2022-01-26T19:14:25Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831164209,"title":"Prevent memory leak in decoding PNG images.","body":"PiperOrigin-RevId: 409300653\r\nChange-Id: I6182124c545989cef80cefd439b659095920763b","created_at":"2022-01-25T07:46:48Z","closed_at":"2022-01-26T19:14:15Z","merged_at":"2022-01-26T19:14:15Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831162651,"title":"Prevent memory leak in decoding PNG images.","body":"PiperOrigin-RevId: 409300653\r\nChange-Id: I6182124c545989cef80cefd439b659095920763b","created_at":"2022-01-25T07:44:20Z","closed_at":"2022-01-26T19:14:07Z","merged_at":"2022-01-26T19:14:07Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831160203,"title":"In case of error in `DecodePng`, end kernel execution immediately.","body":"There are scenarios where we detect an error in `DecodePng` kernel, yet the execution continues for a while longer before an error is thrown. This is not safe.\r\n\r\nPiperOrigin-RevId: 409299935\r\nChange-Id: Ife488b410148032ae777f59bc51864e172553fdf","created_at":"2022-01-25T07:40:19Z","closed_at":"2022-01-26T19:13:32Z","merged_at":"2022-01-26T19:13:31Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831159509,"title":"In case of error in `DecodePng`, end kernel execution immediately.","body":"There are scenarios where we detect an error in `DecodePng` kernel, yet the execution continues for a while longer before an error is thrown. This is not safe.\r\n\r\nPiperOrigin-RevId: 409299935\r\nChange-Id: Ife488b410148032ae777f59bc51864e172553fdf","created_at":"2022-01-25T07:39:07Z","closed_at":"2022-01-26T19:13:28Z","merged_at":"2022-01-26T19:13:28Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831158505,"title":"In case of error in `DecodePng`, end kernel execution immediately.","body":"There are scenarios where we detect an error in `DecodePng` kernel, yet the execution continues for a while longer before an error is thrown. This is not safe.\r\n\r\nPiperOrigin-RevId: 409299935\r\nChange-Id: Ife488b410148032ae777f59bc51864e172553fdf","created_at":"2022-01-25T07:37:26Z","closed_at":"2022-01-26T19:13:24Z","merged_at":"2022-01-26T19:13:24Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831156260,"title":"Prevent use after free in `DecodePng` kernel.","body":"We are cleaning up the memory in `decode` and then we are using an `OP_REQUIRES` to check an invariant on the `decode` data.\r\n\r\nPiperOrigin-RevId: 409299145\r\nChange-Id: I4eb93aaca52483eb202e89b78df07fbb2f6cb254","created_at":"2022-01-25T07:33:37Z","closed_at":"2022-01-26T19:06:45Z","merged_at":"2022-01-26T19:06:45Z","user_id":88513897,"sentiment":{"polarity":0.4,"subjectivity":0.8}}
{"_id":831155197,"title":"Prevent use after free in `DecodePng` kernel.","body":"We are cleaning up the memory in `decode` and then we are using an `OP_REQUIRES` to check an invariant on the `decode` data.\r\n\r\nPiperOrigin-RevId: 409299145\r\nChange-Id: I4eb93aaca52483eb202e89b78df07fbb2f6cb254","created_at":"2022-01-25T07:31:55Z","closed_at":"2022-01-26T19:06:38Z","merged_at":"2022-01-26T19:06:38Z","user_id":88513897,"sentiment":{"polarity":0.4,"subjectivity":0.8}}
{"_id":831154222,"title":"Prevent use after free in `DecodePng` kernel.","body":"We are cleaning up the memory in `decode` and then we are using an `OP_REQUIRES` to check an invariant on the `decode` data.\r\n\r\nPiperOrigin-RevId: 409299145\r\nChange-Id: I4eb93aaca52483eb202e89b78df07fbb2f6cb254","created_at":"2022-01-25T07:30:22Z","closed_at":"2022-01-26T19:06:33Z","merged_at":"2022-01-26T19:06:33Z","user_id":88513897,"sentiment":{"polarity":0.4,"subjectivity":0.8}}
{"_id":831152043,"title":"Validate real and expected type of arguments to cwise ops.","body":"Without this validation, it is possible to trigger a `CHECK`-fail denial of service.\r\n\r\nThis is a rollforward of a previous commit which was rolled back as it was relying on RTTI. This time we don't use RTTI, we replace `typeid(Tin).name()` with a double function call, `DataTypeString(DataTypeToEnum<Tin>::v())`.\r\n\r\nPiperOrigin-RevId: 409340416\r\nChange-Id: I96080b2796729a3a9b65e7c68307ac276070f2f0","created_at":"2022-01-25T07:27:08Z","closed_at":"2022-01-26T18:56:55Z","merged_at":"2022-01-26T18:56:55Z","user_id":88513897,"sentiment":{"polarity":0.05000000000000001,"subjectivity":0.35}}
{"_id":831150994,"title":"Validate real and expected type of arguments to cwise ops.","body":"Without this validation, it is possible to trigger a `CHECK`-fail denial of service.\r\n\r\nThis is a rollforward of a previous commit which was rolled back as it was relying on RTTI. This time we don't use RTTI, we replace `typeid(Tin).name()` with a double function call, `DataTypeString(DataTypeToEnum<Tin>::v())`.\r\n\r\nPiperOrigin-RevId: 409340416\r\nChange-Id: I96080b2796729a3a9b65e7c68307ac276070f2f0","created_at":"2022-01-25T07:25:38Z","closed_at":"2022-01-26T18:56:51Z","merged_at":"2022-01-26T18:56:51Z","user_id":88513897,"sentiment":{"polarity":0.05000000000000001,"subjectivity":0.35}}
{"_id":831149780,"title":"Validate real and expected type of arguments to cwise ops.","body":"Without this validation, it is possible to trigger a `CHECK`-fail denial of service.\r\n\r\nThis is a rollforward of a previous commit which was rolled back as it was relying on RTTI. This time we don't use RTTI, we replace `typeid(Tin).name()` with a double function call, `DataTypeString(DataTypeToEnum<Tin>::v())`.\r\n\r\nPiperOrigin-RevId: 409340416\r\nChange-Id: I96080b2796729a3a9b65e7c68307ac276070f2f0","created_at":"2022-01-25T07:24:14Z","closed_at":"2022-01-26T18:56:48Z","merged_at":"2022-01-26T18:56:48Z","user_id":88513897,"sentiment":{"polarity":0.05000000000000001,"subjectivity":0.35}}
{"_id":831147188,"title":"Use `PartialTensorShape` instead of `TensorShape`.","body":"`TensorShape` constructor throws a CHECK-fail if shape is partial/overflows which the other doesn't. We are only determining the number of elements in the shape and partial shape should be used as it returns negative number when needed.\r\n\r\nPiperOrigin-RevId: 409205384\r\nChange-Id: Ia56542ff9ec758f2c9ffc7e4dcc9fa7eecd86e7b","created_at":"2022-01-25T07:20:15Z","closed_at":"2022-01-26T18:53:14Z","merged_at":"2022-01-26T18:53:14Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831144726,"title":"Prevent a null-pointer dereference / `CHECK`-fail in grappler.","body":"PiperOrigin-RevId: 409187354\r\nChange-Id: I369c249cca32e6c56ec193f0ebbf2f2768fc7d43","created_at":"2022-01-25T07:16:16Z","closed_at":"2022-01-26T17:51:06Z","merged_at":"2022-01-26T17:51:06Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831143854,"title":"Prevent a null-pointer dereference / `CHECK`-fail in grappler.","body":"PiperOrigin-RevId: 409187354\r\nChange-Id: I369c249cca32e6c56ec193f0ebbf2f2768fc7d43","created_at":"2022-01-25T07:14:56Z","closed_at":"2022-01-26T17:51:02Z","merged_at":"2022-01-26T17:51:02Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831143120,"title":"Prevent a null-pointer dereference / `CHECK`-fail in grappler.","body":"PiperOrigin-RevId: 409187354\r\nChange-Id: I369c249cca32e6c56ec193f0ebbf2f2768fc7d43","created_at":"2022-01-25T07:13:38Z","closed_at":"2022-01-26T17:50:59Z","merged_at":"2022-01-26T17:50:59Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831140334,"title":"Make `IsSimplifiableReshape` return `Status` instead of `bool`.","body":"This is to allow remove `CHECK`-fails in subsequent commits.\r\n\r\nPiperOrigin-RevId: 409160987\r\nChange-Id: I3f050218a3832271395c4372a0b8ea05f1c03d80","created_at":"2022-01-25T07:09:05Z","closed_at":"2022-01-26T17:50:08Z","merged_at":"2022-01-26T17:50:08Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831138333,"title":"Remove `CHECK`-fails from `IsSimplifiableReshape`","body":"PiperOrigin-RevId: 409164987\r\nChange-Id: I58c7dd459ff348c3dbae95e00c4c5e63b30a4e65","created_at":"2022-01-25T07:05:58Z","closed_at":"2022-01-26T04:51:35Z","merged_at":"2022-01-26T04:51:35Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831137285,"title":"Remove `CHECK`-fails from `IsSimplifiableReshape`","body":"PiperOrigin-RevId: 409164987\r\nChange-Id: I58c7dd459ff348c3dbae95e00c4c5e63b30a4e65","created_at":"2022-01-25T07:04:21Z","closed_at":"2022-01-26T04:51:31Z","merged_at":"2022-01-26T04:51:31Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831136354,"title":"Remove `CHECK`-fails from `IsSimplifiableReshape`","body":"PiperOrigin-RevId: 409164987\r\nChange-Id: I58c7dd459ff348c3dbae95e00c4c5e63b30a4e65","created_at":"2022-01-25T07:02:55Z","closed_at":"2022-01-26T04:51:27Z","merged_at":"2022-01-26T04:51:27Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831134381,"title":"Eliminate `CHECK`-fails from `IsSimplifiableReshape` via `MakeShape(<…","body":"…invalid shape>)`\r\n\r\nPiperOrigin-RevId: 409166738\r\nChange-Id: I7f0a3590b8acae3f3e3e2fe636e1f5ef285693cf","created_at":"2022-01-25T06:59:40Z","closed_at":"2022-01-26T04:50:49Z","merged_at":"2022-01-26T04:50:49Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831133758,"title":"Eliminate `CHECK`-fails from `IsSimplifiableReshape` via `MakeShape(<…","body":"…invalid shape>)`\r\n\r\nPiperOrigin-RevId: 409166738\r\nChange-Id: I7f0a3590b8acae3f3e3e2fe636e1f5ef285693cf","created_at":"2022-01-25T06:58:27Z","closed_at":"2022-01-26T04:50:45Z","merged_at":"2022-01-26T04:50:45Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831132917,"title":"Eliminate `CHECK`-fails from `IsSimplifiableReshape` via `MakeShape(<…","body":"…invalid shape>)`\r\n\r\nPiperOrigin-RevId: 409166738\r\nChange-Id: I7f0a3590b8acae3f3e3e2fe636e1f5ef285693cf","created_at":"2022-01-25T06:56:53Z","closed_at":"2022-01-26T04:50:42Z","merged_at":"2022-01-26T04:50:42Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831131052,"title":"Fix abort caused by allocating a too large vector.","body":"We need to make sure that the number of dimensions in a shape is within limits.\r\n\r\nPiperOrigin-RevId: 408997911\r\nChange-Id: If59e1c23f2ec9c2d4ff4d8632fd62b2a7773a4eb","created_at":"2022-01-25T06:53:20Z","closed_at":"2022-01-26T04:49:40Z","merged_at":"2022-01-26T04:49:40Z","user_id":88513897,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.42857142857142855}}
{"_id":831130441,"title":"Fix abort caused by allocating a too large vector.","body":"We need to make sure that the number of dimensions in a shape is within limits.\r\n\r\nPiperOrigin-RevId: 408997911\r\nChange-Id: If59e1c23f2ec9c2d4ff4d8632fd62b2a7773a4eb","created_at":"2022-01-25T06:52:06Z","closed_at":"2022-01-26T04:49:36Z","merged_at":"2022-01-26T04:49:36Z","user_id":88513897,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.42857142857142855}}
{"_id":831129588,"title":"Fix abort caused by allocating a too large vector.","body":"We need to make sure that the number of dimensions in a shape is within limits.\r\n\r\nPiperOrigin-RevId: 408997911\r\nChange-Id: If59e1c23f2ec9c2d4ff4d8632fd62b2a7773a4eb","created_at":"2022-01-25T06:50:27Z","closed_at":"2022-01-26T04:49:32Z","merged_at":"2022-01-26T04:49:32Z","user_id":88513897,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.42857142857142855}}
{"_id":831127839,"title":"Fix memory leak when a graph node is invalid.","body":"If a graph node is invalid but a kernel is created then we set the kernel back to `nullptr` but we forget to delete it. Hence, we get a memory leak.\r\n\r\nPiperOrigin-RevId: 408968108\r\nChange-Id: I1d8a9d0d8988ed5e08be8b9f2004ce1b4cd11b7c","created_at":"2022-01-25T06:46:58Z","closed_at":"2022-01-26T05:04:34Z","merged_at":"2022-01-26T05:04:34Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831126935,"title":"Fix memory leak when a graph node is invalid.","body":"If a graph node is invalid but a kernel is created then we set the kernel back to `nullptr` but we forget to delete it. Hence, we get a memory leak.\r\n\r\nPiperOrigin-RevId: 408968108\r\nChange-Id: I1d8a9d0d8988ed5e08be8b9f2004ce1b4cd11b7c","created_at":"2022-01-25T06:45:14Z","closed_at":"2022-01-26T05:04:28Z","merged_at":"2022-01-26T05:04:28Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831126083,"title":"Fix memory leak when a graph node is invalid.","body":"If a graph node is invalid but a kernel is created then we set the kernel back to `nullptr` but we forget to delete it. Hence, we get a memory leak.\r\n\r\nPiperOrigin-RevId: 408968108\r\nChange-Id: I1d8a9d0d8988ed5e08be8b9f2004ce1b4cd11b7c","created_at":"2022-01-25T06:43:29Z","closed_at":"2022-01-26T05:04:23Z","merged_at":"2022-01-26T05:04:23Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831124214,"title":"Prevent null dereference read in `GetInitOp`.","body":"We have a map of maps. We test that the key exists in the first map but then we don't have any validation that this also means the second map has the needed key. In the scenarios where this is not the case, we'll dereference a nullptr, if we don't have this check\r\n\r\nPiperOrigin-RevId: 408739325\r\nChange-Id: If9bb7ed759aba1f3b56a34913f209508dbaf65ce","created_at":"2022-01-25T06:39:47Z","closed_at":"2022-01-26T04:40:36Z","merged_at":"2022-01-26T04:40:36Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831123685,"title":"Prevent null dereference read in `GetInitOp`.","body":"We have a map of maps. We test that the key exists in the first map but then we don't have any validation that this also means the second map has the needed key. In the scenarios where this is not the case, we'll dereference a nullptr, if we don't have this check\r\n\r\nPiperOrigin-RevId: 408739325\r\nChange-Id: If9bb7ed759aba1f3b56a34913f209508dbaf65ce","created_at":"2022-01-25T06:38:40Z","closed_at":"2022-01-26T04:40:31Z","merged_at":"2022-01-26T04:40:31Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831123257,"title":"Prevent null dereference read in `GetInitOp`.","body":"We have a map of maps. We test that the key exists in the first map but then we don't have any validation that this also means the second map has the needed key. In the scenarios where this is not the case, we'll dereference a nullptr, if we don't have this check\r\n\r\nPiperOrigin-RevId: 408739325\r\nChange-Id: If9bb7ed759aba1f3b56a34913f209508dbaf65ce","created_at":"2022-01-25T06:37:46Z","closed_at":"2022-01-26T04:40:28Z","merged_at":"2022-01-26T04:40:28Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831120768,"title":"Prevent integer overflow in `CalculateTensorSize`.","body":"In order to not change the API, we return a negative value in case of overflow. A better fix is to change the API to return a status instead.\r\n\r\nPiperOrigin-RevId: 408714915\r\nChange-Id: I110ec4e1c5bbf4d7ca7ef7c068dfd3e8bc7190cd","created_at":"2022-01-25T06:32:44Z","closed_at":"2022-01-26T04:36:31Z","merged_at":"2022-01-26T04:36:31Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831119070,"title":"Prevent integer overflow in `OpLevelCostEstimator::CalculateOutputSize`.","body":"In order to not change the API, we return a negative value in case of overflow. A better fix is to change the API to return a status instead.\r\n\r\nPiperOrigin-RevId: 408701427\r\nChange-Id: Idf31e7f0bf18ca824d084fdd355e1f653f145c20","created_at":"2022-01-25T06:29:30Z","closed_at":"2022-01-26T04:29:47Z","merged_at":"2022-01-26T04:29:47Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831118102,"title":"Prevent integer overflow in `OpLevelCostEstimator::CalculateOutputSize`.","body":"In order to not change the API, we return a negative value in case of overflow. A better fix is to change the API to return a status instead.\r\n\r\nPiperOrigin-RevId: 408701427\r\nChange-Id: Idf31e7f0bf18ca824d084fdd355e1f653f145c20","created_at":"2022-01-25T06:27:58Z","closed_at":"2022-01-26T04:29:43Z","merged_at":"2022-01-26T04:29:43Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831116896,"title":"Prevent integer overflow in `OpLevelCostEstimator::CalculateOutputSize`.","body":"In order to not change the API, we return a negative value in case of overflow. A better fix is to change the API to return a status instead.\r\n\r\nPiperOrigin-RevId: 408701427\r\nChange-Id: Idf31e7f0bf18ca824d084fdd355e1f653f145c20","created_at":"2022-01-25T06:25:52Z","closed_at":"2022-01-26T04:29:38Z","merged_at":"2022-01-26T04:29:38Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831089907,"title":"Prevent integer overflow in `OpLevelCostEstimator::CalculateTensorSize`.","body":"In order to not change the API, we return a negative value in case of overflow. A better fix is to change the API to return a status instead.\r\n\r\nPiperOrigin-RevId: 408713061\r\nChange-Id: I3771475b0c72a2844a3854086966562fd33f2da5","created_at":"2022-01-25T05:41:55Z","closed_at":"2022-01-26T04:23:53Z","merged_at":"2022-01-26T04:23:53Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831089246,"title":"Prevent integer overflow in `OpLevelCostEstimator::CalculateTensorSize`.","body":"In order to not change the API, we return a negative value in case of overflow. A better fix is to change the API to return a status instead.\r\n\r\nPiperOrigin-RevId: 408713061\r\nChange-Id: I3771475b0c72a2844a3854086966562fd33f2da5","created_at":"2022-01-25T05:40:16Z","closed_at":"2022-01-26T04:23:41Z","merged_at":"2022-01-26T04:23:41Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831088571,"title":"Prevent integer overflow in `OpLevelCostEstimator::CalculateTensorSize`.","body":"In order to not change the API, we return a negative value in case of overflow. A better fix is to change the API to return a status instead.\r\n\r\nPiperOrigin-RevId: 408713061\r\nChange-Id: I3771475b0c72a2844a3854086966562fd33f2da5","created_at":"2022-01-25T05:38:37Z","closed_at":"2022-01-26T04:23:30Z","merged_at":"2022-01-26T04:23:30Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831086914,"title":"Prevent copying uninitialized data in `AssignOp`.","body":"This prevents harder to debug undefined behaviors that cannot be traced back to the original tensor after assignments occur earlier in the graph execution. Several of these undefined behaviors are just reference bindings to null pointers, which are caught when running under ubsan/asan.\r\n\r\nPiperOrigin-RevId: 408654780\r\nChange-Id: Iad2ec40d43f5fd7ea016c20283356c12d5ddeab1","created_at":"2022-01-25T05:34:15Z","closed_at":"2022-01-26T04:00:59Z","merged_at":"2022-01-26T04:00:59Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831086288,"title":"Prevent copying uninitialized data in `AssignOp`.","body":"This prevents harder to debug undefined behaviors that cannot be traced back to the original tensor after assignments occur earlier in the graph execution. Several of these undefined behaviors are just reference bindings to null pointers, which are caught when running under ubsan/asan.\r\n\r\nPiperOrigin-RevId: 408654780\r\nChange-Id: Iad2ec40d43f5fd7ea016c20283356c12d5ddeab1","created_at":"2022-01-25T05:32:38Z","closed_at":"2022-01-26T04:00:45Z","merged_at":"2022-01-26T04:00:45Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831085310,"title":"Prevent copying uninitialized data in `AssignOp`.","body":"This prevents harder to debug undefined behaviors that cannot be traced back to the original tensor after assignments occur earlier in the graph execution. Several of these undefined behaviors are just reference bindings to null pointers, which are caught when running under ubsan/asan.\r\n\r\nPiperOrigin-RevId: 408654780\r\nChange-Id: Iad2ec40d43f5fd7ea016c20283356c12d5ddeab1","created_at":"2022-01-25T05:30:15Z","closed_at":"2022-01-26T04:00:38Z","merged_at":"2022-01-26T04:00:38Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831084929,"title":"Add cmake configuration to mlir-hlo for external projects","body":"Add cmake configuration for mlir-hlo so that external projects that want\r\nto depend on it can import its cmake targets using `find_package` and \r\n`-DMHLO_DIR=...`.","created_at":"2022-01-25T05:29:19Z","closed_at":"2022-01-27T01:26:45Z","merged_at":"2022-01-27T01:26:45Z","user_id":7008401,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":831082756,"title":"Fix heap OOB read/write due to incorrect indexing.","body":"PiperOrigin-RevId: 408578046\r\nChange-Id: Ifc9ffea49e5890f55fcb2c27568611052c3ddcfa","created_at":"2022-01-25T05:24:49Z","closed_at":"2022-01-26T03:59:17Z","merged_at":"2022-01-26T03:59:17Z","user_id":88513897,"sentiment":{"polarity":-0.125,"subjectivity":0.375}}
{"_id":831081424,"title":"Fix heap OOB read/write due to incorrect indexing.","body":"PiperOrigin-RevId: 408578046\r\nChange-Id: Ifc9ffea49e5890f55fcb2c27568611052c3ddcfa","created_at":"2022-01-25T05:22:08Z","closed_at":"2022-01-26T03:59:13Z","merged_at":"2022-01-26T03:59:13Z","user_id":88513897,"sentiment":{"polarity":-0.125,"subjectivity":0.375}}
{"_id":831078537,"title":"Properly handle the case where `SpecializeType()` returns an error `S…","body":"…tatus`.\r\n\r\nIf the error case in `SpecializeType()` is reached, then we would get a crash when trying to access the value of an errorenous `StatusOr` object\r\n\r\nPiperOrigin-RevId: 408380069\r\nChange-Id: If3c3fc876dcf9384d5ec7a4985adc68c23ea7318","created_at":"2022-01-25T05:16:01Z","closed_at":"2022-01-26T03:42:20Z","merged_at":"2022-01-26T03:42:20Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":831077638,"title":"Properly handle the case where `SpecializeType()` returns an error `S…","body":"…tatus`.\r\n\r\nIf the error case in `SpecializeType()` is reached, then we would get a crash when trying to access the value of an errorenous `StatusOr` object\r\n\r\nPiperOrigin-RevId: 408380069\r\nChange-Id: If3c3fc876dcf9384d5ec7a4985adc68c23ea7318","created_at":"2022-01-25T05:14:10Z","closed_at":"2022-01-26T03:42:15Z","merged_at":"2022-01-26T03:42:15Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":831074335,"title":"Prevent null dereference read in `SpecializeType()`","body":"For some adversarial protos, the attribute for a key might not exist.\r\n\r\nPiperOrigin-RevId: 408382090\r\nChange-Id: Ie7eabe532c9ff280fce5dce1f6cdb93c76c2e040","created_at":"2022-01-25T05:07:11Z","closed_at":"2022-01-26T03:33:19Z","merged_at":"2022-01-26T03:33:19Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831073106,"title":"Prevent null dereference read in `SpecializeType()`","body":"For some adversarial protos, the attribute for a key might not exist.\r\n\r\nPiperOrigin-RevId: 408382090\r\nChange-Id: Ie7eabe532c9ff280fce5dce1f6cdb93c76c2e040","created_at":"2022-01-25T05:04:54Z","closed_at":"2022-01-26T03:33:14Z","merged_at":"2022-01-26T03:33:14Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831071026,"title":"Validate `proto.dtype()` before calling `set_dtype()`.","body":"This prevents a `DCHECK`-fail when the proto contains an invalid dtype for a tensor shape with 0 elements or for an incomplete tensor shape.\r\n\r\nPiperOrigin-RevId: 408369083\r\nChange-Id: Ia21a3e3d62a90d642a4561f08f3b543e5ad00c46","created_at":"2022-01-25T05:00:36Z","closed_at":"2022-01-25T19:04:18Z","merged_at":"2022-01-25T19:04:18Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831070180,"title":"Validate `proto.dtype()` before calling `set_dtype()`.","body":"This prevents a `DCHECK`-fail when the proto contains an invalid dtype for a tensor shape with 0 elements or for an incomplete tensor shape.\r\n\r\nPiperOrigin-RevId: 408369083\r\nChange-Id: Ia21a3e3d62a90d642a4561f08f3b543e5ad00c46","created_at":"2022-01-25T04:58:19Z","closed_at":"2022-01-25T19:04:14Z","merged_at":"2022-01-25T19:04:14Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831068719,"title":"Validate `proto.dtype()` before calling `set_dtype()`.","body":"This prevents a `DCHECK`-fail when the proto contains an invalid dtype for a tensor shape with 0 elements or for an incomplete tensor shape.\r\n\r\nPiperOrigin-RevId: 408369083\r\nChange-Id: Ia21a3e3d62a90d642a4561f08f3b543e5ad00c46","created_at":"2022-01-25T04:54:34Z","closed_at":"2022-01-25T19:04:10Z","merged_at":"2022-01-25T19:04:10Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831067258,"title":"Prevent a crash due to heap OOB write in grappler.","body":"PiperOrigin-RevId: 408318417\r\nChange-Id: If095feb8c001e3a8ac4a85b7387b81e8309df47d","created_at":"2022-01-25T04:50:35Z","closed_at":"2022-01-25T18:46:35Z","merged_at":"2022-01-25T18:46:35Z","user_id":88513897,"sentiment":{"polarity":-0.125,"subjectivity":0.375}}
{"_id":831066760,"title":"Prevent a crash due to heap OOB write in grappler.","body":"PiperOrigin-RevId: 408318417\r\nChange-Id: If095feb8c001e3a8ac4a85b7387b81e8309df47d","created_at":"2022-01-25T04:49:11Z","closed_at":"2022-01-25T18:46:28Z","merged_at":"2022-01-25T18:46:28Z","user_id":88513897,"sentiment":{"polarity":-0.125,"subjectivity":0.375}}
{"_id":831062765,"title":"Fix `mktemp` usage","body":null,"created_at":"2022-01-25T04:38:25Z","closed_at":"2022-01-25T04:38:55Z","merged_at":"2022-01-25T04:38:55Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831062664,"title":"Fix `mktemp` usage","body":null,"created_at":"2022-01-25T04:38:10Z","closed_at":"2022-01-25T04:38:49Z","merged_at":"2022-01-25T04:38:49Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831062573,"title":"Fix `mktemp` usage","body":null,"created_at":"2022-01-25T04:37:56Z","closed_at":"2022-01-25T04:38:42Z","merged_at":"2022-01-25T04:38:42Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831062496,"title":"Fix `mktemp` usage","body":null,"created_at":"2022-01-25T04:37:42Z","closed_at":"2022-01-25T04:38:35Z","merged_at":"2022-01-25T04:38:35Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831051876,"title":"Prevent a crash due to heap OOB write in grappler.","body":"PiperOrigin-RevId: 408318417\r\nChange-Id: If095feb8c001e3a8ac4a85b7387b81e8309df47d","created_at":"2022-01-25T04:15:06Z","closed_at":"2022-01-25T18:46:23Z","merged_at":"2022-01-25T18:46:23Z","user_id":88513897,"sentiment":{"polarity":-0.125,"subjectivity":0.375}}
{"_id":831049300,"title":"Remove a `DCHECK`-fail, log an error instead.","body":"`DCHECK` in debug mode results in crashes. TensorFlow has had multiple vulnerabilities due to this.\r\n\r\nOutside of debug mode, `DCHECK` is a no-op.\r\n\r\nA better alternative is to report an error to the log buffer and continue. This should happen both in debug mode and in prod mode.\r\n\r\nPiperOrigin-RevId: 408375925\r\nChange-Id: Id5b3e19c73f3fbe0cc4bba26ca44ff9607bb6356","created_at":"2022-01-25T04:10:10Z","closed_at":"2022-01-25T18:16:18Z","merged_at":"2022-01-25T18:16:18Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831049190,"title":"[lite] Add some safety checks to avoid out of bound access for sparsi…","body":"…ty format\r\n\r\nPiperOrigin-RevId: 416910386\r\nChange-Id: Ic0b4dc048dc4b5a6309c572b8c4c9f776e4db60a","created_at":"2022-01-25T04:09:58Z","closed_at":"2022-01-25T04:11:18Z","merged_at":"2022-01-25T04:11:18Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831049158,"title":"[lite] Add some safety checks to avoid out of bound access for sparsi…","body":"…ty format\r\n\r\nPiperOrigin-RevId: 416910386\r\nChange-Id: Ic0b4dc048dc4b5a6309c572b8c4c9f776e4db60a","created_at":"2022-01-25T04:09:54Z","closed_at":"2022-01-25T04:11:11Z","merged_at":"2022-01-25T04:11:11Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831049122,"title":"[lite] Add some safety checks to avoid out of bound access for sparsi…","body":"…ty format\r\n\r\nPiperOrigin-RevId: 416910386\r\nChange-Id: Ic0b4dc048dc4b5a6309c572b8c4c9f776e4db60a","created_at":"2022-01-25T04:09:49Z","closed_at":"2022-01-25T04:11:04Z","merged_at":"2022-01-25T04:11:03Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831048568,"title":"Remove a `DCHECK`-fail, log an error instead.","body":"`DCHECK` in debug mode results in crashes. TensorFlow has had multiple vulnerabilities due to this.\r\n\r\nOutside of debug mode, `DCHECK` is a no-op.\r\n\r\nA better alternative is to report an error to the log buffer and continue. This should happen both in debug mode and in prod mode.\r\n\r\nPiperOrigin-RevId: 408375925\r\nChange-Id: Id5b3e19c73f3fbe0cc4bba26ca44ff9607bb6356","created_at":"2022-01-25T04:08:45Z","closed_at":"2022-01-25T18:16:13Z","merged_at":"2022-01-25T18:16:13Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831047083,"title":"Remove a `DCHECK`-fail, log an error instead.","body":"`DCHECK` in debug mode results in crashes. TensorFlow has had multiple vulnerabilities due to this.\r\n\r\nOutside of debug mode, `DCHECK` is a no-op.\r\n\r\nA better alternative is to report an error to the log buffer and continue. This should happen both in debug mode and in prod mode.\r\n\r\nPiperOrigin-RevId: 408375925\r\nChange-Id: Id5b3e19c73f3fbe0cc4bba26ca44ff9607bb6356","created_at":"2022-01-25T04:05:48Z","closed_at":"2022-01-25T18:16:10Z","merged_at":"2022-01-25T18:16:10Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831044490,"title":"[lite] add validation check for sparse fully connected","body":"PiperOrigin-RevId: 417629354\r\nChange-Id: If96171c4bd4f5fdb01d6368d6deab19d1c9beca7","created_at":"2022-01-25T04:01:14Z","closed_at":"2022-01-25T04:01:28Z","merged_at":"2022-01-25T04:01:28Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831044457,"title":"[lite] add validation check for sparse fully connected","body":"PiperOrigin-RevId: 417629354\r\nChange-Id: If96171c4bd4f5fdb01d6368d6deab19d1c9beca7","created_at":"2022-01-25T04:01:11Z","closed_at":"2022-01-25T04:01:24Z","merged_at":"2022-01-25T04:01:24Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831044420,"title":"[lite] add validation check for sparse fully connected","body":"PiperOrigin-RevId: 417629354\r\nChange-Id: If96171c4bd4f5fdb01d6368d6deab19d1c9beca7","created_at":"2022-01-25T04:01:09Z","closed_at":"2022-01-25T04:01:18Z","merged_at":"2022-01-25T04:01:18Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831041988,"title":"Develop upstream sync 220124","body":null,"created_at":"2022-01-25T03:54:17Z","closed_at":"2022-01-25T03:54:57Z","merged_at":null,"user_id":39137181,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831040547,"title":"Prevent segfault in `embedding_lookup_sparse.cc`","body":"Previous fixes missed one additional case.\r\n\r\nPiperOrigin-RevId: 417676944\r\nChange-Id: I8ab412155cf9b1e897448a6611d209eaa7ca9e66","created_at":"2022-01-25T03:50:13Z","closed_at":"2022-01-25T03:50:37Z","merged_at":"2022-01-25T03:50:37Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831040532,"title":"Prevent segfault in `embedding_lookup_sparse.cc`","body":"Previous fixes missed one additional case.\r\n\r\nPiperOrigin-RevId: 417676944\r\nChange-Id: I8ab412155cf9b1e897448a6611d209eaa7ca9e66","created_at":"2022-01-25T03:50:11Z","closed_at":"2022-01-25T03:50:28Z","merged_at":"2022-01-25T03:50:28Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831040509,"title":"Prevent segfault in `embedding_lookup_sparse.cc`","body":"Previous fixes missed one additional case.\r\n\r\nPiperOrigin-RevId: 417676944\r\nChange-Id: I8ab412155cf9b1e897448a6611d209eaa7ca9e66","created_at":"2022-01-25T03:50:08Z","closed_at":"2022-01-25T03:50:20Z","merged_at":"2022-01-25T03:50:20Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831038448,"title":"Fix integer overflow","body":"Cherrypick f19be71717c497723ba0cea0379e84f061a75e01 and 1de49725a5fc4e48f1a3b902ec3599ee99283043 on r2.5","created_at":"2022-01-25T03:44:14Z","closed_at":"2022-01-25T03:44:39Z","merged_at":"2022-01-25T03:44:39Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831038417,"title":"Fix integer overflow","body":"Cherrypick f19be71717c497723ba0cea0379e84f061a75e01 and 1de49725a5fc4e48f1a3b902ec3599ee99283043 on r2.6","created_at":"2022-01-25T03:44:10Z","closed_at":"2022-01-25T03:44:29Z","merged_at":"2022-01-25T03:44:29Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831038400,"title":"Fix integer overflow","body":"Cherrypick f19be71717c497723ba0cea0379e84f061a75e01 and 1de49725a5fc4e48f1a3b902ec3599ee99283043 on r2.7","created_at":"2022-01-25T03:44:06Z","closed_at":"2022-01-25T03:44:22Z","merged_at":"2022-01-25T03:44:22Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831035361,"title":"[lite] Update TfLiteIntArrayCreate to return size_t","body":"PiperOrigin-RevId: 416439896\r\nChange-Id: I847f69b68d1ddaff4b1e925a09b8b69c1756653b","created_at":"2022-01-25T03:35:26Z","closed_at":"2022-01-25T03:35:42Z","merged_at":"2022-01-25T03:35:42Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831035334,"title":"[lite] Update TfLiteIntArrayCreate to return size_t","body":"PiperOrigin-RevId: 416439896\r\nChange-Id: I847f69b68d1ddaff4b1e925a09b8b69c1756653b","created_at":"2022-01-25T03:35:22Z","closed_at":"2022-01-25T03:35:37Z","merged_at":"2022-01-25T03:35:37Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831035305,"title":"[lite] Update TfLiteIntArrayCreate to return size_t","body":"PiperOrigin-RevId: 416439896\r\nChange-Id: I847f69b68d1ddaff4b1e925a09b8b69c1756653b","created_at":"2022-01-25T03:35:18Z","closed_at":"2022-01-25T03:35:32Z","merged_at":"2022-01-25T03:35:32Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831023936,"title":"[lite] Add validation check for dilation height/width to be positive …","body":"…integers.\r\n\r\nPiperOrigin-RevId: 416429178\r\nChange-Id: If7cdcddca54486434d9b2f06e7e2b401d7c3ee25","created_at":"2022-01-25T03:11:09Z","closed_at":"2022-01-25T03:11:24Z","merged_at":"2022-01-25T03:11:24Z","user_id":323199,"sentiment":{"polarity":0.22727272727272727,"subjectivity":0.5454545454545454}}
{"_id":831023901,"title":"[lite] Add validation check for dilation height/width to be positive …","body":"…integers.\r\n\r\nPiperOrigin-RevId: 416429178\r\nChange-Id: If7cdcddca54486434d9b2f06e7e2b401d7c3ee25","created_at":"2022-01-25T03:11:05Z","closed_at":"2022-01-25T03:11:18Z","merged_at":"2022-01-25T03:11:18Z","user_id":323199,"sentiment":{"polarity":0.22727272727272727,"subjectivity":0.5454545454545454}}
{"_id":831023861,"title":"[lite] Add validation check for dilation height/width to be positive …","body":"…integers.\r\n\r\nPiperOrigin-RevId: 416429178\r\nChange-Id: If7cdcddca54486434d9b2f06e7e2b401d7c3ee25","created_at":"2022-01-25T03:11:01Z","closed_at":"2022-01-25T03:11:13Z","merged_at":"2022-01-25T03:11:13Z","user_id":323199,"sentiment":{"polarity":0.22727272727272727,"subjectivity":0.5454545454545454}}
{"_id":831020632,"title":"[lite] Add check for bias_size is zero to avoid division by zero. Thi…","body":"…s shouldn't happen for properly converted models. Just safety check\r\n\r\nPiperOrigin-RevId: 416383645\r\nChange-Id: If8e508bf696ae8ecfb927e69c139a8ccf7fe60cb","created_at":"2022-01-25T03:04:16Z","closed_at":"2022-01-25T03:04:30Z","merged_at":"2022-01-25T03:04:30Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831020603,"title":"[lite] Add check for bias_size is zero to avoid division by zero. Thi…","body":"…s shouldn't happen for properly converted models. Just safety check\r\n\r\nPiperOrigin-RevId: 416383645\r\nChange-Id: If8e508bf696ae8ecfb927e69c139a8ccf7fe60cb","created_at":"2022-01-25T03:04:11Z","closed_at":"2022-01-25T03:04:25Z","merged_at":"2022-01-25T03:04:25Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":831020579,"title":"[lite] Add check for bias_size is zero to avoid division by zero. Thi…","body":"…s shouldn't happen for properly converted models. Just safety check\r\n\r\nPiperOrigin-RevId: 416383645\r\nChange-Id: If8e508bf696ae8ecfb927e69c139a8ccf7fe60cb","created_at":"2022-01-25T03:04:08Z","closed_at":"2022-01-25T03:04:20Z","merged_at":"2022-01-25T03:04:20Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":830981026,"title":"Gracefully catch errors when importing an invalid graphdef in MLIR TFG","body":"When importing a \"generic function\" in TFG, we don't build a Graph in memory and\r\nso we need to implement a bit more checking in the importer itself.\r\nThis particular case catches duplicated names between nodes or between nodes and\r\nfunction arguments, and fixes a crash found by the fuzzer.\r\n\r\nPiperOrigin-RevId: 409331027\r\nChange-Id: Ibaf6290f67908c020c5103a7e009bdffd88690e2","created_at":"2022-01-25T01:28:43Z","closed_at":"2022-01-27T00:13:32Z","merged_at":"2022-01-27T00:13:32Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":830969781,"title":"Fix crash when importing an invalid graph with functions with empty n…","body":"…ames\r\n\r\nFound by proto fuzzing.\r\n\r\nPiperOrigin-RevId: 413918956\r\nChange-Id: I2cb898d6561070cfbcf448ea0da5e838438f3e92","created_at":"2022-01-25T01:05:13Z","closed_at":"2022-01-27T00:32:41Z","merged_at":"2022-01-27T00:32:41Z","user_id":88513897,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":830961225,"title":"Fix crash when importing an invalid graph with an empty op type to TFG","body":"Found by proto fuzzing.\r\n\r\nPiperOrigin-RevId: 413847837\r\nChange-Id: Icac24d1b389c5661800fb4d622dff0b31d846cca","created_at":"2022-01-25T00:46:55Z","closed_at":"2022-01-27T00:41:44Z","merged_at":"2022-01-27T00:41:44Z","user_id":88513897,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":830959125,"title":"Prevent crash due to integer overflow followed by allocating negative…","body":"… sized array.\r\n\r\nPiperOrigin-RevId: 414891322\r\nChange-Id: I5df390e0dc1d9f115209293708950cdf9306931c","created_at":"2022-01-25T00:42:41Z","closed_at":"2022-01-25T00:42:57Z","merged_at":"2022-01-25T00:42:57Z","user_id":323199,"sentiment":{"polarity":-0.125,"subjectivity":0.375}}
{"_id":830959098,"title":"Prevent crash due to integer overflow followed by allocating negative…","body":"… sized array.\r\n\r\nPiperOrigin-RevId: 414891322\r\nChange-Id: I5df390e0dc1d9f115209293708950cdf9306931c","created_at":"2022-01-25T00:42:38Z","closed_at":"2022-01-25T00:42:52Z","merged_at":"2022-01-25T00:42:52Z","user_id":323199,"sentiment":{"polarity":-0.125,"subjectivity":0.375}}
{"_id":830959056,"title":"Prevent crash due to integer overflow followed by allocating negative…","body":"… sized array.\r\n\r\nPiperOrigin-RevId: 414891322\r\nChange-Id: I5df390e0dc1d9f115209293708950cdf9306931c","created_at":"2022-01-25T00:42:34Z","closed_at":"2022-01-25T00:42:47Z","merged_at":"2022-01-25T00:42:47Z","user_id":323199,"sentiment":{"polarity":-0.125,"subjectivity":0.375}}
{"_id":830955786,"title":"Fix heap OOB","body":"Cherrypick 2b7100d6cdff36aa21010a82269bc05a6d1cc74a and adbbabdb0d3abb3cdeac69e38a96de1d678b24b3 on r2.5","created_at":"2022-01-25T00:36:35Z","closed_at":"2022-01-25T00:36:58Z","merged_at":"2022-01-25T00:36:58Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":830955759,"title":"Fix heap OOB","body":"Cherrypick 2b7100d6cdff36aa21010a82269bc05a6d1cc74a and adbbabdb0d3abb3cdeac69e38a96de1d678b24b3 on r2.6","created_at":"2022-01-25T00:36:32Z","closed_at":"2022-01-25T00:36:53Z","merged_at":"2022-01-25T00:36:53Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":830955731,"title":"Fix heap OOB","body":"Cherrypick 2b7100d6cdff36aa21010a82269bc05a6d1cc74a and adbbabdb0d3abb3cdeac69e38a96de1d678b24b3 on r2.7","created_at":"2022-01-25T00:36:28Z","closed_at":"2022-01-25T00:36:43Z","merged_at":"2022-01-25T00:36:43Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":830948492,"title":"Fix Null-pointer dereference in BuildXlaCompilationCache","body":"If ConfigProto is not used, then use the default settings which is to allow all devices.\r\n\r\nPiperOrigin-RevId: 420391800\r\nChange-Id: I88161ad7042990aef678e77b597a2fb2c8f815be","created_at":"2022-01-25T00:20:28Z","closed_at":"2022-01-26T20:12:24Z","merged_at":"2022-01-26T20:12:24Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":830947423,"title":"Fix Null-pointer dereference in BuildXlaCompilationCache","body":"If ConfigProto is not used, then use the default settings which is to allow all devices.\r\n\r\nPiperOrigin-RevId: 420391800\r\nChange-Id: I88161ad7042990aef678e77b597a2fb2c8f815be","created_at":"2022-01-25T00:18:07Z","closed_at":"2022-01-26T20:12:30Z","merged_at":"2022-01-26T20:12:30Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":830941856,"title":"Fix Null-pointer dereference in BuildXlaCompilationCache","body":"If ConfigProto is not used, then use the default settings which is to allow all devices.\r\n\r\nPiperOrigin-RevId: 420391800\r\nChange-Id: I88161ad7042990aef678e77b597a2fb2c8f815be","created_at":"2022-01-25T00:06:37Z","closed_at":"2022-01-26T20:12:37Z","merged_at":"2022-01-26T20:12:37Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":830901918,"title":"Unify the Cudnn Execution Plan Builder","body":"Note: This PR is on the top of https://github.com/tensorflow/tensorflow/pull/53843.\r\n\r\nThis PR tries to unify the code paths from the cudnn op graph to the execution plans for both unfused and fused conv ops. Both code paths follow: build op graph -> query heuristics/fallback plans -> filter out undesired plans (e.g. non-deterministic or winograd engines) -> filter out errata plans (e.g. engines that might be buggy).\r\n\r\ncc. @nluehr ","created_at":"2022-01-24T22:53:58Z","closed_at":"2022-03-01T20:08:30Z","merged_at":"2022-03-01T20:08:30Z","user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":830818132,"title":"[oneDNN] Enable auto_mixed_precision_mkl for saved_model","body":"Add auto_mixed_precision_mkl as an optimizer option to be enabled for saved_model in eager mode using the script change\r\nfor example:\r\nUsing the following one line in the code the user can enable/disable the optimizer\r\ntf.config.optimizer.set_experimental_options({'auto_mixed_precision_mkl':True})","created_at":"2022-01-24T20:55:06Z","closed_at":"2022-03-14T23:56:03Z","merged_at":"2022-03-14T23:56:03Z","user_id":42224278,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":830677028,"title":"Fix nullptr exception in QuantizedMaxPool op when empty list is sent …","body":"…to min_input or max_input parameters.\r\n\r\nPiperOrigin-RevId: 413960973\r\nChange-Id: I9e3ded593f3c4eabf0d6d5dc356e6a19a3ad2682","created_at":"2022-01-24T17:58:10Z","closed_at":"2022-01-24T17:58:27Z","merged_at":"2022-01-24T17:58:27Z","user_id":323199,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":830676996,"title":"Fix nullptr exception in QuantizedMaxPool op when empty list is sent …","body":"…to min_input or max_input parameters.\r\n\r\nPiperOrigin-RevId: 413960973\r\nChange-Id: I9e3ded593f3c4eabf0d6d5dc356e6a19a3ad2682","created_at":"2022-01-24T17:58:07Z","closed_at":"2022-01-24T17:58:21Z","merged_at":"2022-01-24T17:58:21Z","user_id":323199,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":830676959,"title":"Fix nullptr exception in QuantizedMaxPool op when empty list is sent …","body":"…to min_input or max_input parameters.\r\n\r\nPiperOrigin-RevId: 413960973\r\nChange-Id: I9e3ded593f3c4eabf0d6d5dc356e6a19a3ad2682","created_at":"2022-01-24T17:58:05Z","closed_at":"2022-01-24T17:58:16Z","merged_at":"2022-01-24T17:58:16Z","user_id":323199,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":830671454,"title":"Fix check-fail when bincount ops are passed invalid values.","body":"PiperOrigin-RevId: 415063028\r\nChange-Id: I20f8dc09933ddca1111c4efbf9a3a1e863215d02","created_at":"2022-01-24T17:50:32Z","closed_at":"2022-01-24T17:50:48Z","merged_at":"2022-01-24T17:50:48Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":830671383,"title":"Fix check-fail when bincount ops are passed invalid values.","body":"PiperOrigin-RevId: 415063028\r\nChange-Id: I20f8dc09933ddca1111c4efbf9a3a1e863215d02","created_at":"2022-01-24T17:50:27Z","closed_at":"2022-01-24T17:50:44Z","merged_at":"2022-01-24T17:50:44Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":830671337,"title":"Fix check-fail when bincount ops are passed invalid values.","body":"PiperOrigin-RevId: 415063028\r\nChange-Id: I20f8dc09933ddca1111c4efbf9a3a1e863215d02","created_at":"2022-01-24T17:50:22Z","closed_at":"2022-01-24T17:50:39Z","merged_at":"2022-01-24T17:50:39Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":830666701,"title":"Properly validate sparse tensor in `SparseTensorSliceDataset`","body":"Existing validation was incomplete.\r\n\r\nPiperOrigin-RevId: 415375048\r\nChange-Id: I14cd18f29ede73286f3ffac35171bd15828997e9","created_at":"2022-01-24T17:44:15Z","closed_at":"2022-01-24T17:44:32Z","merged_at":"2022-01-24T17:44:32Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":830666603,"title":"Properly validate sparse tensor in `SparseTensorSliceDataset`","body":"Existing validation was incomplete.\r\n\r\nPiperOrigin-RevId: 415375048\r\nChange-Id: I14cd18f29ede73286f3ffac35171bd15828997e9","created_at":"2022-01-24T17:44:07Z","closed_at":"2022-01-24T17:44:27Z","merged_at":"2022-01-24T17:44:27Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":830666521,"title":"Properly validate sparse tensor in `SparseTensorSliceDataset`","body":"Existing validation was incomplete.\r\n\r\nPiperOrigin-RevId: 415375048\r\nChange-Id: I14cd18f29ede73286f3ffac35171bd15828997e9","created_at":"2022-01-24T17:44:00Z","closed_at":"2022-01-24T17:44:21Z","merged_at":"2022-01-24T17:44:21Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":830644171,"title":"Cherrypick fix check failures on r2.5","body":null,"created_at":"2022-01-24T17:18:04Z","closed_at":"2022-01-24T17:23:45Z","merged_at":"2022-01-24T17:23:45Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":830640723,"title":"Fix `CHECK` failures","body":null,"created_at":"2022-01-24T17:14:34Z","closed_at":"2022-01-24T17:23:41Z","merged_at":"2022-01-24T17:23:41Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":830640405,"title":"Fix `CHECK` failures","body":null,"created_at":"2022-01-24T17:14:15Z","closed_at":"2022-01-24T17:23:36Z","merged_at":"2022-01-24T17:23:36Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":830615482,"title":"Fix potential divide by zero error when executing FractionalMaxPool, …","body":"…when pooling ratio is higher than input size for a particular dimension.\r\n\r\nPiperOrigin-RevId: 412151722\r\nChange-Id: I06e57cbb8eca43816eff79eac264fa7aae8f7163","created_at":"2022-01-24T16:48:05Z","closed_at":"2022-01-24T16:48:21Z","merged_at":"2022-01-24T16:48:21Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":1.0}}
{"_id":830615394,"title":"Fix potential divide by zero error when executing FractionalMaxPool, …","body":"…when pooling ratio is higher than input size for a particular dimension.\r\n\r\nPiperOrigin-RevId: 412151722\r\nChange-Id: I06e57cbb8eca43816eff79eac264fa7aae8f7163","created_at":"2022-01-24T16:47:59Z","closed_at":"2022-01-24T16:48:17Z","merged_at":"2022-01-24T16:48:17Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":1.0}}
{"_id":830615318,"title":"Fix potential divide by zero error when executing FractionalMaxPool, …","body":"…when pooling ratio is higher than input size for a particular dimension.\r\n\r\nPiperOrigin-RevId: 412151722\r\nChange-Id: I06e57cbb8eca43816eff79eac264fa7aae8f7163","created_at":"2022-01-24T16:47:54Z","closed_at":"2022-01-24T16:48:11Z","merged_at":"2022-01-24T16:48:11Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":1.0}}
{"_id":830606428,"title":"Add a check for Key being scalar tensor for MapStage and OrderedMapSt…","body":"…age ops.\r\n\r\nAccording to documentation[1][2], key must be int64 value, but this wasn't enforced and the ops would fail with check failure for non-scalar key value.\r\n\r\n[1]https://www.tensorflow.org/api_docs/cc/class/tensorflow/ops/ordered-map-stage\r\n[2]https://www.tensorflow.org/api_docs/cc/class/tensorflow/ops/map-stage\r\n\r\nPiperOrigin-RevId: 413822112\r\nChange-Id: I9d118faf990e6361900aa32272eff486ad9f0e2e","created_at":"2022-01-24T16:39:32Z","closed_at":"2022-01-24T16:39:53Z","merged_at":"2022-01-24T16:39:53Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":1.0}}
{"_id":830606209,"title":"Add a check for Key being scalar tensor for MapStage and OrderedMapSt…","body":"…age ops.\r\n\r\nAccording to documentation[1][2], key must be int64 value, but this wasn't enforced and the ops would fail with check failure for non-scalar key value.\r\n\r\n[1]https://www.tensorflow.org/api_docs/cc/class/tensorflow/ops/ordered-map-stage\r\n[2]https://www.tensorflow.org/api_docs/cc/class/tensorflow/ops/map-stage\r\n\r\nPiperOrigin-RevId: 413822112\r\nChange-Id: I9d118faf990e6361900aa32272eff486ad9f0e2e","created_at":"2022-01-24T16:39:17Z","closed_at":"2022-01-24T16:39:48Z","merged_at":"2022-01-24T16:39:48Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":1.0}}
{"_id":830606129,"title":"Add a check for Key being scalar tensor for MapStage and OrderedMapSt…","body":"…age ops.\r\n\r\nAccording to documentation[1][2], key must be int64 value, but this wasn't enforced and the ops would fail with check failure for non-scalar key value.\r\n\r\n[1]https://www.tensorflow.org/api_docs/cc/class/tensorflow/ops/ordered-map-stage\r\n[2]https://www.tensorflow.org/api_docs/cc/class/tensorflow/ops/map-stage\r\n\r\nPiperOrigin-RevId: 413822112\r\nChange-Id: I9d118faf990e6361900aa32272eff486ad9f0e2e","created_at":"2022-01-24T16:39:11Z","closed_at":"2022-01-24T16:39:43Z","merged_at":"2022-01-24T16:39:43Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":1.0}}
{"_id":830597367,"title":"Fix some integer overflow","body":"Cherrypick b51b82fe65ebace4475e3c54eb089c18a4403f1c and 9cd218133f5 on r2.5","created_at":"2022-01-24T16:29:52Z","closed_at":"2022-01-24T16:30:09Z","merged_at":"2022-01-24T16:30:08Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":830597157,"title":"Fix some integer overflow","body":"Cherrypick b51b82fe65ebace4475e3c54eb089c18a4403f1c and a68f68061e263a88321c104a6c911fe5598050a8 on r2.6","created_at":"2022-01-24T16:29:41Z","closed_at":"2022-01-24T16:30:04Z","merged_at":"2022-01-24T16:30:04Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":830597081,"title":"Fix some integer overflow","body":"Cherrypick b51b82fe65ebace4475e3c54eb089c18a4403f1c and a68f68061e263a88321c104a6c911fe5598050a8 on r2.7","created_at":"2022-01-24T16:29:37Z","closed_at":"2022-01-24T16:29:59Z","merged_at":"2022-01-24T16:29:59Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":830577551,"title":"Fix several integer overflows","body":"Cherrypick 1b54cadd19391b60b6fcccd8d076426f7221d5e8 and 1e4692287b7 on r2.5","created_at":"2022-01-24T16:12:23Z","closed_at":"2022-01-24T16:12:41Z","merged_at":"2022-01-24T16:12:40Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":830577420,"title":"Fix several integer overflows","body":"Cherrypick 1b54cadd19391b60b6fcccd8d076426f7221d5e8 and e952a89b7026b98fe8cbe626514a93ed68b7c510 on r2.6","created_at":"2022-01-24T16:12:16Z","closed_at":"2022-01-24T16:12:35Z","merged_at":"2022-01-24T16:12:35Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":830577312,"title":"Fix several integer overflows","body":"Cherrypick 1b54cadd19391b60b6fcccd8d076426f7221d5e8 and e952a89b7026b98fe8cbe626514a93ed68b7c510 on r2.7","created_at":"2022-01-24T16:12:10Z","closed_at":"2022-01-24T16:12:30Z","merged_at":"2022-01-24T16:12:30Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":830375126,"title":"[ROCm] Fix for MI200 related performance issue with Resnet50 model.","body":null,"created_at":"2022-01-24T13:01:01Z","closed_at":"2022-02-04T10:09:45Z","merged_at":"2022-02-04T10:09:45Z","user_id":70280935,"sentiment":{"polarity":0.0,"subjectivity":0.4}}
{"_id":830010526,"title":"[MHLO] add DynamicBroadcastInDimOp canonicalize pattern","body":"* replace constant shape's `dynamic_broadcast_in_dim` with `broadcast_in_dim`","created_at":"2022-01-24T05:36:35Z","closed_at":"2022-05-18T15:43:29Z","merged_at":null,"user_id":29956693,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":829907793,"title":"Fix more boosted trees vulnerabilities.","body":"Please no longer use Boosted trees inside TF. The authors of the code no\r\nlonger work on this after getting their promotion and moving to other\r\nteams.","created_at":"2022-01-24T01:54:32Z","closed_at":"2022-01-24T01:59:34Z","merged_at":"2022-01-24T01:59:34Z","user_id":323199,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":829907780,"title":"Fix more boosted trees vulnerabilities.","body":"Please no longer use Boosted trees inside TF. The authors of the code no\r\nlonger work on this after getting their promotion and moving to other\r\nteams.","created_at":"2022-01-24T01:54:29Z","closed_at":"2022-01-24T01:59:40Z","merged_at":"2022-01-24T01:59:40Z","user_id":323199,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":829907563,"title":"Fix more boosted trees vulnerabilities.","body":"Please no longer use Boosted trees inside TF. The authors of the code no\r\nlonger work on this after getting their promotion and moving to other\r\nteams.","created_at":"2022-01-24T01:53:45Z","closed_at":"2022-01-24T01:59:30Z","merged_at":"2022-01-24T01:59:30Z","user_id":323199,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":829897575,"title":"Add a check for pad width to be a positive value.","body":"PiperOrigin-RevId: 413275853\r\nChange-Id: I261a8db9dabf5ce48a806a9e58129080c9fac619","created_at":"2022-01-24T01:25:02Z","closed_at":"2022-01-24T01:25:19Z","merged_at":"2022-01-24T01:25:19Z","user_id":323199,"sentiment":{"polarity":0.22727272727272727,"subjectivity":0.5454545454545454}}
{"_id":829897534,"title":"Add a check for pad width to be a positive value.","body":"PiperOrigin-RevId: 413275853\r\nChange-Id: I261a8db9dabf5ce48a806a9e58129080c9fac619","created_at":"2022-01-24T01:24:57Z","closed_at":"2022-01-24T01:25:13Z","merged_at":"2022-01-24T01:25:13Z","user_id":323199,"sentiment":{"polarity":0.22727272727272727,"subjectivity":0.5454545454545454}}
{"_id":829897504,"title":"Add a check for pad width to be a positive value.","body":"PiperOrigin-RevId: 413275853\r\nChange-Id: I261a8db9dabf5ce48a806a9e58129080c9fac619","created_at":"2022-01-24T01:24:53Z","closed_at":"2022-01-24T01:25:08Z","merged_at":"2022-01-24T01:25:08Z","user_id":323199,"sentiment":{"polarity":0.22727272727272727,"subjectivity":0.5454545454545454}}
{"_id":829885005,"title":"[tf.data] Set limit on number of threads used in threadpool_dataset.","body":"PiperOrigin-RevId: 410922677\r\nChange-Id: Ib25814a99043ab10805b5d2d7088ae0e0b7b04fd","created_at":"2022-01-24T01:01:41Z","closed_at":"2022-01-24T01:02:54Z","merged_at":"2022-01-24T01:02:54Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":829884960,"title":"[tf.data] Set limit on number of threads used in threadpool_dataset.","body":"PiperOrigin-RevId: 410922677\r\nChange-Id: Ib25814a99043ab10805b5d2d7088ae0e0b7b04fd","created_at":"2022-01-24T01:01:35Z","closed_at":"2022-01-24T01:02:02Z","merged_at":"2022-01-24T01:02:02Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":829884550,"title":"[tf.data] Set limit on number of threads used in threadpool_dataset.","body":"PiperOrigin-RevId: 410922677\r\nChange-Id: Ib25814a99043ab10805b5d2d7088ae0e0b7b04fd","created_at":"2022-01-24T01:00:10Z","closed_at":"2022-01-24T01:00:40Z","merged_at":"2022-01-24T01:00:40Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":829881441,"title":"Fix Segfault in Concat V2 shape function.","body":"PiperOrigin-RevId: 412120654\r\nChange-Id: I3ff915faea694f9ad8b00024e9af2de9909011be","created_at":"2022-01-24T00:51:49Z","closed_at":"2022-01-24T00:52:09Z","merged_at":"2022-01-24T00:52:09Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":829881430,"title":"Fix Segfault in Concat V2 shape function.","body":"PiperOrigin-RevId: 412120654\r\nChange-Id: I3ff915faea694f9ad8b00024e9af2de9909011be","created_at":"2022-01-24T00:51:46Z","closed_at":"2022-01-24T00:52:03Z","merged_at":"2022-01-24T00:52:03Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":829881408,"title":"Fix Segfault in Concat V2 shape function.","body":"PiperOrigin-RevId: 412120654\r\nChange-Id: I3ff915faea694f9ad8b00024e9af2de9909011be","created_at":"2022-01-24T00:51:44Z","closed_at":"2022-01-24T00:51:57Z","merged_at":"2022-01-24T00:51:57Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":829874790,"title":"Fix integer overflow leading to divide by zero error in Unravel index…","body":"… kernel when dimensions product exceeds max int value.\r\n\r\nPiperOrigin-RevId: 413250052\r\nChange-Id: I9450b6e8acecd2e881a64b882e2b7c70e8e9289a","created_at":"2022-01-24T00:33:40Z","closed_at":"2022-01-24T00:33:59Z","merged_at":"2022-01-24T00:33:59Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":829874774,"title":"Fix integer overflow leading to divide by zero error in Unravel index…","body":"… kernel when dimensions product exceeds max int value.\r\n\r\nPiperOrigin-RevId: 413250052\r\nChange-Id: I9450b6e8acecd2e881a64b882e2b7c70e8e9289a","created_at":"2022-01-24T00:33:36Z","closed_at":"2022-01-24T00:33:54Z","merged_at":"2022-01-24T00:33:54Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":829874763,"title":"Fix integer overflow leading to divide by zero error in Unravel index…","body":"… kernel when dimensions product exceeds max int value.\r\n\r\nPiperOrigin-RevId: 413250052\r\nChange-Id: I9450b6e8acecd2e881a64b882e2b7c70e8e9289a","created_at":"2022-01-24T00:33:34Z","closed_at":"2022-01-24T00:33:49Z","merged_at":"2022-01-24T00:33:48Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":829872015,"title":"Add negative bound check for row and column pooling_sequence in Fract…","body":"…ionalAvgPoolGrad op to avoid out of bound heap access\r\n\r\nPiperOrigin-RevId: 413837346\r\nChange-Id: I2b86034101df31bee161abcb781755e236c7bccd","created_at":"2022-01-24T00:24:48Z","closed_at":"2022-01-24T00:25:15Z","merged_at":"2022-01-24T00:25:15Z","user_id":323199,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":829871999,"title":"Add negative bound check for row and column pooling_sequence in Fract…","body":"…ionalAvgPoolGrad op to avoid out of bound heap access\r\n\r\nPiperOrigin-RevId: 413837346\r\nChange-Id: I2b86034101df31bee161abcb781755e236c7bccd","created_at":"2022-01-24T00:24:45Z","closed_at":"2022-01-24T00:25:10Z","merged_at":"2022-01-24T00:25:10Z","user_id":323199,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":829871985,"title":"Add negative bound check for row and column pooling_sequence in Fract…","body":"…ionalAvgPoolGrad op to avoid out of bound heap access\r\n\r\nPiperOrigin-RevId: 413837346\r\nChange-Id: I2b86034101df31bee161abcb781755e236c7bccd","created_at":"2022-01-24T00:24:42Z","closed_at":"2022-01-24T00:25:06Z","merged_at":"2022-01-24T00:25:06Z","user_id":323199,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":829868140,"title":"Fix Integer overflow error in Dequantize op shape function, by adding…","body":"… a bound check on axis.\r\n\r\nPiperOrigin-RevId: 412121389\r\nChange-Id: I3088dbad9e90f9998d406b618c16694388a9dfb4","created_at":"2022-01-24T00:10:58Z","closed_at":"2022-01-24T00:11:16Z","merged_at":"2022-01-24T00:11:16Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":829868127,"title":"Fix Integer overflow error in Dequantize op shape function, by adding…","body":"… a bound check on axis.\r\n\r\nPiperOrigin-RevId: 412121389\r\nChange-Id: I3088dbad9e90f9998d406b618c16694388a9dfb4","created_at":"2022-01-24T00:10:56Z","closed_at":"2022-01-24T00:11:10Z","merged_at":"2022-01-24T00:11:10Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":829868106,"title":"Fix Integer overflow error in Dequantize op shape function, by adding…","body":"… a bound check on axis.\r\n\r\nPiperOrigin-RevId: 412121389\r\nChange-Id: I3088dbad9e90f9998d406b618c16694388a9dfb4","created_at":"2022-01-24T00:10:53Z","closed_at":"2022-01-24T00:11:04Z","merged_at":"2022-01-24T00:11:04Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":829864496,"title":"Fix out of bound access in DequantizeOp by adding check for axis < in…","body":"…put dimension\r\n\r\nPiperOrigin-RevId: 411214268\r\nChange-Id: I3249d2a69ddc82f182c589a3a5bbfb71543f4b29","created_at":"2022-01-23T23:57:35Z","closed_at":"2022-01-23T23:58:44Z","merged_at":"2022-01-23T23:58:44Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":829864470,"title":"Fix out of bound access in DequantizeOp by adding check for axis < in…","body":"…put dimension\r\n\r\nPiperOrigin-RevId: 411214268\r\nChange-Id: I3249d2a69ddc82f182c589a3a5bbfb71543f4b29","created_at":"2022-01-23T23:57:30Z","closed_at":"2022-01-23T23:58:34Z","merged_at":"2022-01-23T23:58:34Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":829864453,"title":"Fix out of bound access in DequantizeOp by adding check for axis < in…","body":"…put dimension\r\n\r\nPiperOrigin-RevId: 411214268\r\nChange-Id: I3249d2a69ddc82f182c589a3a5bbfb71543f4b29","created_at":"2022-01-23T23:57:26Z","closed_at":"2022-01-23T23:58:28Z","merged_at":"2022-01-23T23:58:28Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":829675637,"title":"Fix out of bound error in ReverseSequence Op shape function","body":"PiperOrigin-RevId: 411896080\r\nChange-Id: I7e59a38e2f960886edf2b6c54ed5a84e86a9b193","created_at":"2022-01-23T05:04:16Z","closed_at":"2022-01-23T05:15:49Z","merged_at":"2022-01-23T05:15:48Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":829675634,"title":"Fix out of bound error in ReverseSequence Op shape function","body":"PiperOrigin-RevId: 411896080\r\nChange-Id: I7e59a38e2f960886edf2b6c54ed5a84e86a9b193","created_at":"2022-01-23T05:04:14Z","closed_at":"2022-01-23T05:15:43Z","merged_at":"2022-01-23T05:15:43Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":829675628,"title":"Fix out of bound error in ReverseSequence Op shape function","body":"PiperOrigin-RevId: 411896080\r\nChange-Id: I7e59a38e2f960886edf2b6c54ed5a84e86a9b193","created_at":"2022-01-23T05:04:12Z","closed_at":"2022-01-23T05:15:38Z","merged_at":"2022-01-23T05:15:38Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":829674038,"title":"Internal change","body":"PiperOrigin-RevId: 411896058\r\nChange-Id: Ia031058247e3cf382957a6662d3f9e1cbb481ca2","created_at":"2022-01-23T04:47:50Z","closed_at":"2022-01-23T05:16:33Z","merged_at":"2022-01-23T05:16:33Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":829674025,"title":"Internal change","body":"PiperOrigin-RevId: 411896058\r\nChange-Id: Ia031058247e3cf382957a6662d3f9e1cbb481ca2","created_at":"2022-01-23T04:47:44Z","closed_at":"2022-01-23T05:16:21Z","merged_at":"2022-01-23T05:16:21Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":829673997,"title":"Internal change","body":"PiperOrigin-RevId: 411896058\r\nChange-Id: Ia031058247e3cf382957a6662d3f9e1cbb481ca2","created_at":"2022-01-23T04:47:31Z","closed_at":"2022-01-23T05:16:10Z","merged_at":"2022-01-23T05:16:10Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":829643882,"title":"Remove `setuptools` upper bound.","body":null,"created_at":"2022-01-23T00:48:25Z","closed_at":"2022-01-24T15:17:20Z","merged_at":"2022-01-24T15:17:20Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":829252519,"title":"Set Env Variable to override Setuptools new behavior","body":"PiperOrigin-RevId: 423468055\r\nChange-Id: I5b148103e1372a5eb73570bc77face27dbd5f914","created_at":"2022-01-22T06:06:31Z","closed_at":"2022-01-22T16:57:16Z","merged_at":"2022-01-22T16:57:16Z","user_id":1437573,"sentiment":{"polarity":0.13636363636363635,"subjectivity":0.45454545454545453}}
{"_id":829171195,"title":"[oneDNN] Prevent errors due to conv2d + fbnv2/v3 fusion for bf16","body":null,"created_at":"2022-01-22T02:46:21Z","closed_at":"2022-01-26T16:37:55Z","merged_at":"2022-01-26T16:37:55Z","user_id":42224728,"sentiment":{"polarity":-0.125,"subjectivity":0.375}}
{"_id":829108626,"title":"Add basic TensorRT support on Windows ","body":"For some reason TF-TRT is disabled on Windows. But this feature would be really good to speed up inference (in my case, the difference was 5x). Since TensorRT is available on both Linux and Windows, it is very frustrating that TF-TRT only works in Linux.\r\n\r\nThis PR enables TRT ops on Windows.\r\n\r\nChanges:\r\n- Add TRT to configure.py on Windows\r\n- Enable TRT on Windows in python libraries\r\n- Fix loading of TensorRT's libraries\r\n- Fix TF-TRT to be compilable with MSVC\r\n- Fix build errors","created_at":"2022-01-22T00:42:08Z","closed_at":"2022-02-14T17:43:25Z","merged_at":"2022-02-14T17:43:25Z","user_id":9118023,"sentiment":{"polarity":0.0,"subjectivity":0.125}}
{"_id":829086681,"title":"Add missing Windows py3.10 files","body":null,"created_at":"2022-01-22T00:08:10Z","closed_at":"2022-01-22T00:08:16Z","merged_at":"2022-01-22T00:08:16Z","user_id":323199,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":829073583,"title":"Remove the upper bound on setuptools.","body":"It seems that our builds are not really determinstic since they now pick\r\nsetuptools > 60 in some places and fail. Hence, we remove this bound and\r\nhope that they would pass.","created_at":"2022-01-21T23:49:44Z","closed_at":"2022-01-21T23:51:52Z","merged_at":"2022-01-21T23:51:52Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":829019773,"title":"[oneDNN] Fixing node_file_writer_test","body":"This PR fixes a failure in //tensorflow/python/framework:node_file_writer_test exposed after eager_op_as_function [feature ](https://github.com/tensorflow/tensorflow/commit/586f4942c50833dad0714adef091a83445c5350d) was enabled by default.","created_at":"2022-01-21T23:00:54Z","closed_at":"2022-03-09T17:54:49Z","merged_at":"2022-03-09T17:54:49Z","user_id":24963061,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":828979612,"title":"TOSA legalization: Ensure fused activation clamp value within range","body":"It is possible to specify a fused activation function for\r\na convolution where the output quantization range does not contain the\r\nedges of the activation. (6 for RELU6, -1 or 1 for RELU_N1_TO_1)\r\nWhen translating to TOSA, ensure that the maximum CLAMP value is valid\r\nfor the given quantization data type.\r\n","created_at":"2022-01-21T22:10:28Z","closed_at":"2022-01-31T22:32:43Z","merged_at":"2022-01-31T22:32:43Z","user_id":71658898,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":828811946,"title":"Tensorflow Setup, pin protobuf <= 3.19.1","body":"PiperOrigin-RevId: 423349190\r\nChange-Id: I40a902c188ad39023dce18c9c062f063d943ccad\r\n\r\nRunning Test Build to confirm that this works.","created_at":"2022-01-21T19:10:45Z","closed_at":"2022-01-21T21:01:34Z","merged_at":null,"user_id":1437573,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":828795901,"title":"2.8.0 cherry-pick request: Update tensorboard dependencies for 2.8.0 release.","body":"Update tensorboard dependencies for 2.8.0 release.\r\n\r\nNote that the cherry-pick did not run cleanly since the way tensorboard dependencies are specified has changed in master. I had to effectively reimplement the changes.\r\n\r\nPiperOrigin-RevId: 423335453\r\nChange-Id: Ie098101340c9f4a1348bd2b29b3e0093415c9ab9","created_at":"2022-01-21T18:50:30Z","closed_at":"2022-01-21T23:51:21Z","merged_at":"2022-01-21T23:51:21Z","user_id":17152369,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":828352118,"title":"Properly initialize data_ member of MklDnnShape","body":"As MklShapeData is a C-style struct, it does not get initialized without `{}`.\r\nIn our case msan reports error in hardly related place. `-fsanitize-memory-track-origins=2` helps to find out the actual reason:\r\n\r\n> Uninitialized value was created by an allocation of 'output_mkl_shape' in the stack frame of function '_ZN10tensorflow9MklAddNOpIN5Eigen16ThreadPoolDeviceEfE7ComputeEPNS_15OpKernelContextE'\r\n\r\n(that is `tensorflow::MklAddNOp<Eigen::ThreadPoolDevice, float>::Compute(tensorflow::OpKernelContext*)`)","created_at":"2022-01-21T09:50:20Z","closed_at":"2022-01-24T15:55:15Z","merged_at":"2022-01-24T15:55:15Z","user_id":1121500,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":828298251,"title":"[MLIR][LMHLO-Affine] Add PadOp lowering from lmhlo to Affine + Add verifier for lmhlo.Pad op","body":"This PR adds two commits :-\r\n\r\n**Commit 1:**\r\n-- Adds verifier for lmhlo.Pad op which checks :- \r\n   1. Output and operand rank matches.\r\n   2. Padding configurations are provided for each dimension.\r\n   3. Padding configurations when applied to operand lead to the provided\r\n       output shape.\r\n\r\n**Commit 2:**\r\n-- Adds lowering of PadOp from lmhlo -> Affine as a part of `lhlo-legalize-to-affine` pass.\r\n-- The limitation of the implementation is that it expects interior padding to be 0\r\n   and edge padding to be >= 0.\r\n\r\nSigned-off-by: Abhishek Varma <abhishek.varma@polymagelabs.com>","created_at":"2022-01-21T08:46:36Z","closed_at":"2022-02-05T08:37:22Z","merged_at":"2022-02-05T08:37:22Z","user_id":67887857,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":828219587,"title":"[oneDNN] optimized implementation for eigen LeakyRelu","body":"This change provides significant improvement in performance for BF16 Eigen LeakyRelu. \r\nFor a 3d unet model, I see 12-15% gain.","created_at":"2022-01-21T06:36:45Z","closed_at":"2022-03-27T09:10:18Z","merged_at":"2022-03-27T09:10:18Z","user_id":42224728,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":828196804,"title":"Add release note about deterministic selection of conv algos","body":"This PR is for the r2.8 branch. It updates the v2.8 release notes based on the #53826 cherry-pick from @reedwm.","created_at":"2022-01-21T05:49:35Z","closed_at":"2022-01-21T23:50:54Z","merged_at":"2022-01-21T23:50:54Z","user_id":33532941,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":827873553,"title":"Unify the Cudnn Execution Plan Runner","body":"This PR tries to remove the `CudnnConvRunner` and `CudnnFusedConvRunner`, since both the runners (for unfused and fused conv respectively) actually share the same execution path: build op graph -> get execution plans -> allocate workspace -> prepare input/output data -> execute the plan. This execution path is also true for other Cudnn supported ops. So, this PR tries to move all these through the improved `CudnnExecutionPlanRunner`. \r\n\r\nThis PR can also help the integration of the new ops from Cudnn in the future. That way, for newly added ops, we just need to (1) prepare a `GetXXXGraph()` to build the op graph (2) add a `XXXSignature` to mark the new inputs/outputs.\r\n\r\ncc. @nluehr ","created_at":"2022-01-20T19:50:19Z","closed_at":"2022-02-24T19:35:19Z","merged_at":"2022-02-24T19:35:19Z","user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":827853904,"title":"[ROCM] pass `HIP_PLATFORM` to bazel","body":"We need to pass HIP_PLATFORM to bazel. Authored by @deven-amd ","created_at":"2022-01-20T19:23:06Z","closed_at":"2022-01-22T01:45:28Z","merged_at":"2022-01-22T01:45:27Z","user_id":16394078,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":827824957,"title":"Cherrypick \"Add missing file for Windows Python 3.10 GPU build.\"","body":null,"created_at":"2022-01-20T18:44:08Z","closed_at":"2022-01-20T18:47:43Z","merged_at":"2022-01-20T18:47:43Z","user_id":88513897,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":827749882,"title":"Disable test that fails on MacOS.","body":null,"created_at":"2022-01-20T17:10:45Z","closed_at":"2022-01-20T17:11:47Z","merged_at":"2022-01-20T17:11:47Z","user_id":323199,"sentiment":{"polarity":-0.5,"subjectivity":0.3}}
{"_id":827633608,"title":"Add encoding support for make_csv_dataset and File IO","body":"For now, you can't read CSV files with an encoding except for utf-8. \r\nThis PR enables `tf.data.experimental.make_csv_dataset`  to accept an encoding parameter. \r\nTo make it available, I also changed `FileIO` to take an arbitrary encoding parameter.","created_at":"2022-01-20T15:11:41Z","closed_at":"2022-08-04T22:12:15Z","merged_at":"2022-08-04T22:12:15Z","user_id":38364983,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":827285943,"title":"Remove FunctionPass, use OperationPass<FuncOp> instead","body":null,"created_at":"2022-01-20T08:38:12Z","closed_at":"2022-01-20T15:40:38Z","merged_at":"2022-01-20T15:40:38Z","user_id":29956693,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":826939491,"title":"2.8-rc2 cherry-pick request: Fix issue where convolutions were not deterministic.","body":"This fixes an issue where enabling op determinism with `tf.config.experimental.enable_op_determinism` did not make convolutions deterministic. Commit ced762bd4986dfad83ccf6d57e4e4fa3e47bd3fe is cherry-picked.","created_at":"2022-01-19T22:00:56Z","closed_at":"2022-01-20T17:10:59Z","merged_at":"2022-01-20T17:10:59Z","user_id":6510203,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":826828931,"title":"Added information on validation TF on Windows Subsystem for Linux 2 (…","body":"…aka WSL 2) for both GPUs and CPUs.\r\n\r\nAdded information on validation TF on Windows Subsystem for Linux 2 (aka WSL 2) for both GPUs and CPUs.","created_at":"2022-01-19T19:26:20Z","closed_at":"2022-01-20T17:11:16Z","merged_at":"2022-01-20T17:11:16Z","user_id":40809717,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":826799455,"title":"[MHLO:Linalg] Dummy slice tensor for torchIndexSelect","body":"Add dummy tensor with shape of slice for torchIndexSelectOp.\r\nTo enable fusion with reduction op down the line.","created_at":"2022-01-19T18:46:57Z","closed_at":"2022-01-21T12:51:08Z","merged_at":"2022-01-21T12:51:08Z","user_id":68087699,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":826798576,"title":"[ROCm] Turn off SwapConvOperands on ROCm gpu","body":"The following upstream commit turns on SwapConvOperands on gpu, and this does not yet work on the ROCm platform\r\n\r\ntensorflow@43abc0f\r\n\r\nUnit Test Failures\r\n```\r\n//tensorflow/compiler/xla/service/gpu/tests:swap_conv_operands_test      FAILED in 3 out of 3 in 18.6s\r\n//tensorflow/compiler/xla/tests:convolution_test_gpu                     FAILED in 3 out of 3 in 67.8s\r\n//tensorflow/compiler/xla/tests:convolution_test_gpu_alternative_layout_gpu FAILED in 3 out of 3 in 63.1s\r\n//tensorflow/compiler/xla/tests:convolution_variants_test_gpu            FAILED in 3 out of 3 in 11.5s\r\n```\r\n\r\nThis commit\r\n* disables the feature on ROCm to get the unit tests working again\r\n* adds a `no_rocm` tag to the new unit test that was added to specifically test the SwapConvOperands feature","created_at":"2022-01-19T18:45:36Z","closed_at":"2022-02-04T09:17:14Z","merged_at":"2022-02-04T09:17:14Z","user_id":8660918,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":826640209,"title":"Delete MklDnnData::operator= to prevent memory leaks in the future","body":"This is the continuation of #45593","created_at":"2022-01-19T15:39:49Z","closed_at":"2022-01-20T02:09:37Z","merged_at":"2022-01-20T02:09:37Z","user_id":1121500,"sentiment":{"polarity":0.0,"subjectivity":0.125}}
{"_id":826463927,"title":"Declare Go import path in distributed XLA service protocol","body":"PR declares `go_package` in proto and resolves protoc-gen-go error.","created_at":"2022-01-19T12:36:13Z","closed_at":"2022-01-20T09:09:43Z","merged_at":"2022-01-20T09:09:43Z","user_id":17497234,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":826077506,"title":"[ROCm] Add amdgpu_arch string as member variable in ir_emitter_context","body":"This PR is a pre-req for a follow-up PR which will introduce gfx arch specific codegen in the IR emitter code.\r\n\r\n-------------------------\r\n\r\n/cc @chsigg @cheshire \r\n","created_at":"2022-01-19T03:33:35Z","closed_at":"2022-03-25T08:30:25Z","merged_at":"2022-03-25T08:30:25Z","user_id":36858332,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":825790632,"title":"Remove DISC from MHLO","body":"At the moment DISC is developed in https://github.com/alibaba/BladeDISC and no\r\nlonger actively in integration in this repository. For now we'll delete the early\r\ncontributions that aren't used. They can be brought back here any time in the future as\r\nneeded.","created_at":"2022-01-18T19:05:08Z","closed_at":"2022-01-20T03:10:12Z","merged_at":null,"user_id":3372300,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":825787749,"title":"Update version numbers for TensorFlow 2.8.0-rc1","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 8 -> 8\nPatch: 0 -> 0\n\nNo lingering old version strings \"2.8.0-rc0\" found in source directory \n\"tensorflow/\". Good.\nWARNING: Below are potentially instances of lingering old version string \n\"2.8.0rc0\" in source directory \"tensorflow/\" that are not updated by this \nscript. Please check them manually!\ntensorflow/tools/pip_package/setup.py:96:2.8.0rc0\n```","created_at":"2022-01-18T19:01:13Z","closed_at":"2022-01-18T19:03:01Z","merged_at":"2022-01-18T19:03:01Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":825582732,"title":"Add missing return statement to AveragePool16","body":"Fixes bug in AveragePool16 introduced by #51318","created_at":"2022-01-18T15:06:18Z","closed_at":"2022-01-18T16:30:46Z","merged_at":null,"user_id":92391026,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":825178370,"title":"lite: Update Subgraph::RemoveUnusedInputs()","body":"The method has a bug which doesn't count graph output tensors.\r\nThis change fixes it.\r\n\r\nPiperOrigin-RevId: 422469893\r\nChange-Id: Ie0b1a4b56b0e29fe4c5d14f0713d1eeea72f3d55","created_at":"2022-01-18T07:06:44Z","closed_at":"2022-01-18T15:37:14Z","merged_at":"2022-01-18T15:37:13Z","user_id":2908505,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":825048424,"title":"lower \"learning_rate\" as this is what optimizers use internally now","body":"Lowering \"lr\" does nothing as optimizers use \"learning_rate\" now.","created_at":"2022-01-18T01:43:35Z","closed_at":"2022-01-18T03:08:14Z","merged_at":null,"user_id":8053809,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":824944326,"title":"Update curl dependency to 7.81.0","body":"This PR updates curl dependency to 7.81.0, as was requested\r\nin https://github.com/tensorflow/tensorflow/pull/52097#issuecomment-1014313571\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2022-01-17T21:17:43Z","closed_at":"2022-01-19T05:39:09Z","merged_at":"2022-01-19T05:39:09Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":824840965,"title":"Update gpu_advanced.md","body":"Updating \"thThis\" \"This\" as per #53775","created_at":"2022-01-17T18:16:55Z","closed_at":"2022-01-20T16:27:06Z","merged_at":null,"user_id":59822926,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":824782863,"title":"Add linux_aarch64 target to AOT.","body":"The lack of a target for `linux_aarch64` on AOT breaks tests under `//tensorflow/python/tools`.","created_at":"2022-01-17T16:55:15Z","closed_at":"2022-03-09T00:12:36Z","merged_at":null,"user_id":16298969,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":823736179,"title":"Fix casting in vdotq_four_lane_s32() in TFLite","body":"When building with GCC and dotprod ARM extension enabled,\r\nvreinterpret_s32_s8() casts int8x8_t to int32x2_t. However, third\r\nargument of vdotq_lane_s32() expects parameter of type int8x8_t.","created_at":"2022-01-15T20:11:43Z","closed_at":"2022-04-14T16:46:35Z","merged_at":"2022-04-14T16:46:35Z","user_id":51720730,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":823691355,"title":"Fix the GraphFloat32::outputs() problem in TFLite","body":"Hi TFers,\r\nI just found the problem that I was getting wrong data output from my model having multi-headers. For example, if the graph my model is like `0 -> 1 -> 2 -> 3` and the model inputs is `[0]` outputs is `[2, 3]`, I will only get correct answer from 3 but 2 is not, because our `GraphFloat32::outputs()` only believe the value with no consumer, the `3` above, is an output value. However, our tflite::Interpreter still tell us the outputs is `[2, 3]` and it's right. So, I try to fix with this PR, please take a check.","created_at":"2022-01-15T16:51:57Z","closed_at":"2022-04-19T12:13:52Z","merged_at":null,"user_id":17171866,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":823185872,"title":"Setup OSSF Security scorecards","body":null,"created_at":"2022-01-15T00:13:07Z","closed_at":"2022-01-15T00:53:16Z","merged_at":"2022-01-15T00:53:16Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":823078976,"title":"i64 index def in build_defs","body":"Enabling JIT indexing within the build pipeline.\r\nThis PR is continuation on the pull req: 53622.\r\nCC: @frgossen  :)","created_at":"2022-01-14T20:41:33Z","closed_at":"2022-03-03T16:39:31Z","merged_at":"2022-03-03T16:39:31Z","user_id":42385577,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":823005653,"title":"Added missing 'return true'","body":"When evaluating particularly sized uint8 quantized AveragPool2D operations, it's broken due to missing 'return true' statement here:\r\nhttps://github.com/tensorflow/tensorflow/blob/v2.4.4/tensorflow/lite/kernels/internal/optimized/optimized_ops.h#L3424\r\n\r\nThis regression was originated here:\r\nhttps://github.com/tensorflow/tensorflow/commit/a5ceb2445d37d9d89a13de3fd0d0d991f4962522#diff-d7e3b0af29f6e121b2c30e4fc932dcb6c67ab073d759bd9786b60d4069637e78R3293\r\n\r\nWhich appears change specific for the r2.4 branch, master branch doesn't have this code any longer:\r\n\r\nhttps://github.com/tensorflow/tensorflow/commit/b44dd5e97df2f9aec5ad71e8122be98a59a35057","created_at":"2022-01-14T19:00:09Z","closed_at":"2022-01-18T15:38:39Z","merged_at":null,"user_id":30535370,"sentiment":{"polarity":0.07499999999999998,"subjectivity":0.35000000000000003}}
{"_id":822974135,"title":"systemlibs: unbundle abseil-cpp","body":"This unbundles abseil-cpp, tested and works on Gentoo Linux. It was helpful when building with std=c++17 since there are some quite significant differences in how abseil works between c++14/17.\r\n\r\n(NB: This is not sufficient for building with C++17, there are a few targets in `tensorflow/compiler/mlir/lite/BUILD` which hardcode c++14 currently)","created_at":"2022-01-14T18:13:36Z","closed_at":"2022-01-15T01:04:34Z","merged_at":"2022-01-15T01:04:34Z","user_id":363227,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":822967855,"title":"Cherrypick python3.10 windows on r2.8","body":"Cherry Picked commits for R 2.8 to resolve Python 3.10 build errors on Windows - \r\n\r\n1. cl/421654465 - Disable debug pyreadline test (Needs to be cherry picked) - 93d09ee4ac3a44925595884390be6eb48103e840\r\n2. cl/421576429 - Patch Protobuf (Needs to be Cherry Picked) - abfc5731b3b98f11f1bbbcffc2be97a74628901e\r\n3. cl/421044747 - Update grpc, protobuf in ci_build (Needs to be Cherry Picked) - 99514f053019fe06ba26cb0d3faea06eacc1a57f","created_at":"2022-01-14T18:04:48Z","closed_at":"2022-01-14T21:08:12Z","merged_at":"2022-01-14T21:08:12Z","user_id":1437573,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":822070865,"title":"[TF:TRT] Fix the AlgorithmSelector","body":"This change allows the algorithm selection mechanism to be used in TensorRT 7.1. Previously, the code disabled the algorithm selector unless the TRT version is greater than 7.2. However, the true issue is that TRT7.1 has a bug when the algorithm selector is used in conjunction with calibration and INT8 mode.\r\n\r\nIn addition, this change cleans up the `TfTrtAlgorithmSelector` class. It removes all `assert` and `CHECK` statements and refactors the code to conform with standards in the rest of the code base. Use of the preprocessor for conditionals is reduced to only necessary cases.","created_at":"2022-01-14T05:07:03Z","closed_at":"2022-03-15T23:40:34Z","merged_at":"2022-03-15T23:40:34Z","user_id":30323187,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":820912206,"title":"Update image_ops_impl.py","body":null,"created_at":"2022-01-13T13:23:16Z","closed_at":"2022-06-03T00:59:39Z","merged_at":null,"user_id":72007469,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":820649853,"title":"#undef some macros with generic names to prevent -Wmacro-redefined from being triggered","body":"As tensorflow and openfst originate from Google internal codebase, they are using the same macros to implement logging.\r\n\r\nThis causes `-Wmacro-redefined` when both `fst/log.h` and `tensorflow/core/platform/logging.h` are included.\r\n\r\nThis PR backports the #undef series from protobuf (the number of macros and their names differ).\r\nIt could be better to rename these macros instead (i. e. TF_LOG / FST_LOG / PB_LOG), but I am quite unsure whether such rename would cause any troubles during sync.","created_at":"2022-01-13T09:25:24Z","closed_at":"2022-12-28T20:14:42Z","merged_at":"2022-12-28T20:14:42Z","user_id":1121500,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":819992566,"title":"Add float16 support for tf.sparse.softmax","body":"This PR tries to address the issue raised in #53657 where float16 was not supported for tf.sparse.softmax, while the counterpart of tf.nn.softmax has the float16 support.\r\nThis PR adds float16 support.\r\n\r\nThis PR fixes #53657.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2022-01-12T18:57:13Z","closed_at":"2022-09-23T19:40:28Z","merged_at":"2022-09-23T19:40:27Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":819951026,"title":"hdf5_format.py bug/enhancement fix","body":"When you call `load_weights()` using the `exclude=` parameter you get errors like \"**You are trying to load a weight file containing 233 layers into a model with 229 layers.**\". Several issues have been posted about this type error but none of them addressed the fundamental problem which is in the method `load_weights_from_hdf5_group()`.\r\n\r\nDepending on which way layers count goes either being greater than or less than we can either auto-correct the layers or report the actual layer that is missing when it checks for matching layer sizes:\r\n```\r\nif len(layer_names) != len(filtered_layers):\r\n    msg = f'You are trying to load a weight file containing {str(len(layer_names))} layers into a'\\\r\n          f'model with {str(len(filtered_layers))} layers.'\r\n    raise ValueError(msg)\r\n```\r\nwith:\r\n```\r\n  if len(layer_names) != len(filtered_layers):\r\n    if len(layer_names) > len(filtered_layers):\r\n      for name in layer_names:\r\n        if name in filtered_layers.keys(): continue\r\n        layer_names.remove(name)\r\n    else:\r\n      missing_layer_names = []\r\n      for name in filtered_layers.keys():\r\n        if name in layer_names: continue\r\n        missing_layer_names.append(name)\r\n      msg = f'You are trying to load a weight file containing {str(len(layer_names))} layers into a '\\\r\n            f'model with {str(len(filtered_layers))} layers. Missing layer names are: {missing_layer_names}'\r\n      raise ValueError(msg)\r\n```\r\nNow if we call with an empty exclude list we get this message **\"You are trying to load a weight file containing 233 layers into a model with 234 layers. Missing layer names are: ['anchors']\"**\r\n\r\nWith enhanced message we now know the missing name and it can be added it to the exclude list and the call will work instead of wondering what is wrong.\r\n\r\n[hdf5_format.zip](https://github.com/tensorflow/tensorflow/files/7856823/hdf5_format.zip)\r\n\r\n","created_at":"2022-01-12T18:01:03Z","closed_at":"2022-01-13T16:09:58Z","merged_at":null,"user_id":60949191,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":819912966,"title":"Fix several grammar mistakes in c_api.h","body":"I scanned over the entirety of c_api.h and found 4 errors that should be addressed. These are all coalesced into a single pull request, and this is not a “one-liner” correcting one error. \r\n\r\nWhen https://github.com/tensorflow/tensorflow/pull/53717 was closed, I was unable to request that it remain open or communicate that I intended to add more commits. If possible, please assign the reviewers from that PR so that it doesn’t seem like I’m trying to bypass their decision.","created_at":"2022-01-12T17:12:22Z","closed_at":"2022-01-20T17:18:54Z","merged_at":"2022-01-20T17:18:53Z","user_id":71743241,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":819848019,"title":"[ROCm] Enable lu_op for ROCm","body":"Enable/fix the lu_op for ROCm on AMD GPUs.\r\nGetrfBatched on ROCm uses Scalar ** vs const Scalar ** for the packed_triangular_factors_ptrs_base parameter.\r\n\r\n@cheshire @chsigg @deven-amd @stevenireeves @micmelesse ","created_at":"2022-01-12T16:02:33Z","closed_at":"2022-01-12T18:35:36Z","merged_at":null,"user_id":8660918,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":819618410,"title":"Update  tflite::gpu::Delegate  in delegate.cc","body":"Consider the nullptr input to tflite::gpu::Delegate constructor prevent crash.","created_at":"2022-01-12T11:45:54Z","closed_at":"2022-04-20T20:52:36Z","merged_at":null,"user_id":17171866,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":819157786,"title":"[INTEL oneDNN] Adding bf16 support for complementary Erf op","body":null,"created_at":"2022-01-11T22:53:07Z","closed_at":"2022-01-17T08:41:44Z","merged_at":"2022-01-17T08:41:44Z","user_id":65728957,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":818231966,"title":"[determinism] Fix indentation in release notes","body":"NB: this is a PR against the r2.8 branch.\r\n\r\nThis PR fixes indentation that was lost in or after the cherry pick into the r2.8 branch of PR [53465](https://github.com/tensorflow/tensorflow/pull/53465), which was merged into the master branch.\r\n\r\nI wonder if there is a script that auto-formats the release notes, a script which is replacing 2-space indents with 0-space intents, rather than 4-space intents. There may be other indentation losses in the r2.8 release notes file.","created_at":"2022-01-11T03:41:36Z","closed_at":"2022-01-11T17:08:26Z","merged_at":"2022-01-11T17:08:26Z","user_id":33532941,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":818231181,"title":"[mhlo] Fix Linalg lowering for DotOp and add a verifier to enforce shape compatibility","body":null,"created_at":"2022-01-11T03:39:16Z","closed_at":"2022-01-21T21:33:09Z","merged_at":"2022-01-21T21:33:09Z","user_id":22370779,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":818217045,"title":"Converter for Tile operation","body":"- ConvertTile operator is implemented so that both parameters (tensor and multiplier) can be passed as tensors and weights. A unit test with 6 tests and all combinations of passed parameters is provided.\r\n\r\n- New macro `#define CHECK_INPUT_SIZE (size, exp_size, node_def)` unifies the testing of the number of parameters passed. It is used in 8 different places.\r\n\r\n- The helper function template void `AdjustVectorByDims(...)` makes writing tests much easier (especially tests with parameters that can be passed as tensors and weights). For example, today we can use some parameters like tensors with predefined dimensions, but with no real numbers. An attempt to pass the same parameters with the same values as weights leads to the crash. We see a similar crash when the vector providing the values assigned to the tensor is not empty, but its length does not match the number of values defined by the dimensions. `AdjustVectorByDims` fixes these two problems and is called by default in the situations described, but these calls can also be blocked when such failures are intentional.\r\n\r\nNOTE: This PR should be slightly adjusted if it will be merged after\r\n[PR#54230](https://github.com/tensorflow/tensorflow/pull/54230):: Refactoring of ConvertUnary\r\n","created_at":"2022-01-11T03:04:09Z","closed_at":"2022-02-16T01:12:30Z","merged_at":null,"user_id":32910461,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":818196478,"title":"Typo fix","body":"Shouldn't it be \"TensorFlow *uses* semantic versioning\", not \"TensorFlow *using*\"?","created_at":"2022-01-11T02:09:07Z","closed_at":"2022-01-11T15:01:21Z","merged_at":null,"user_id":71743241,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":817924264,"title":"[ROCm] Enable unique_op for ROCm","body":"This PR enables the unique_op_gpu (int32 and int64) for ROCM on AMD GPUs.\r\n\r\n@cheshire @chsigg @deven-amd","created_at":"2022-01-10T18:48:32Z","closed_at":"2022-01-22T04:42:47Z","merged_at":"2022-01-22T04:42:47Z","user_id":8660918,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":817903249,"title":"ci_build: update check_system_libs for numbered workspace files","body":"This script was not updated when the workspace files were numbered, noticed it when unbundling some more libraries.\r\n\r\nRe-ran against latest main branch and it all passes correctly now","created_at":"2022-01-10T18:23:37Z","closed_at":"2022-01-11T02:08:12Z","merged_at":"2022-01-11T02:08:12Z","user_id":363227,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":817834401,"title":"Add transpose => reshape simplifier","body":"* Simplify transpose to reshape when they are equivalent","created_at":"2022-01-10T17:04:16Z","closed_at":"2022-06-15T23:53:10Z","merged_at":"2022-06-15T23:53:10Z","user_id":29956693,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":817520842,"title":"[MHLO-LINALG] Add lowering of MHLO.RealDynamicSliceOp to Linalg","body":"-- This commit adds lowering of MHLO.RealDynamicSliceOp to arith/tensor ops\r\n   as part of `hlo-legalize-to-linalg` pass.\r\n\r\nSigned-off-by: Abhishek Varma <abhishek.varma@polymagelabs.com>","created_at":"2022-01-10T11:27:13Z","closed_at":"2022-01-28T01:29:15Z","merged_at":"2022-01-28T01:29:15Z","user_id":67887857,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":817328254,"title":"(lite) Fix lifetime documentation of TfLiteModel","body":"Fixes misleading documentation of `TfLiteInterpreterCreate`. It was stating that a model was destroyable immediately after creating an interpreter, see details in [this issue](https://github.com/tensorflow/tensorflow/issues/53628).","created_at":"2022-01-10T07:56:52Z","closed_at":"2022-01-10T08:05:51Z","merged_at":null,"user_id":62459770,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":817327115,"title":"[PluggableDevice] Add DEVICE_DEFAULT registration to dataset ops","body":null,"created_at":"2022-01-10T07:54:43Z","closed_at":"2022-02-22T17:01:57Z","merged_at":null,"user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":816694001,"title":"Converter for Tile operation","body":"- ConvertTile operator is implemented so that both parameters (tensor and multiplier) can be passed as tensors and weights. A unit test with 6 tests and all combinations of passed parameters is provided.\r\n- New macro #define CHECK_INPUT_SIZE (size, exp_size, node_def) unifies the testing of the number of parameters passed. It is used in 8 different places.\r\n- The helper function template <typename T> void AdjustVectorByDims(...) makes writing tests much easier (especially tests with parameters that can be passed as tensors and weights). For example, today we can use some parameters like tensors with predefined dimensions, but with no real numbers. An attempt to pass the same parameters with the same values as weights leads to the crash. We see a similar crash when the vector providing the values assigned to the tensor is not empty, but its length does not match the number of values defined by the dimensions. AdjustVectorByDims fixes these two problems and is called by default in the situations described, but these calls can also be blocked when such failures are intentional.","created_at":"2022-01-07T22:09:19Z","closed_at":"2022-02-22T23:41:57Z","merged_at":null,"user_id":7293680,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":816582217,"title":"Fix crash of tf.sparse.split when axis is not a scalar.","body":"This PR tries to fix the crash of tf.sparse.split when axis is not a scalar, as was raised in #53660.\r\n\r\nThis PR fixes #53660.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2022-01-07T18:38:53Z","closed_at":"2022-01-10T19:36:42Z","merged_at":"2022-01-10T19:36:42Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":816574568,"title":"Add complex data type support to tf.sparse.to_dense","body":"This PR tries to fix the issue raised in #53653 where `tf.sparse.to_dense` does not support complex64 or complex128\r\n(`tf.sparse.from_dense` support complex dtypes).\r\n\r\nThis PR adds complex64/complex128 support for `tf.sparse.to_dense`.\r\n\r\nThis PR fixes #53653.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2022-01-07T18:25:11Z","closed_at":"2022-01-10T19:44:42Z","merged_at":"2022-01-10T19:44:41Z","user_id":6932348,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":816369500,"title":"TensorFlow Lite Evaluation Tools CMake Compilation","body":"This PR introduces into CMake configuration of TF Lite the option to automatically (cross-)compile TF Lite evaluation tools (specifically [ImageNet Image Classification](https://storage.googleapis.com/tensorflow-nightly-public/prod/tensorflow/release/lite/tools/nightly/latest/android_aarch64_eval_imagenet_image_classification), [COCO Object Detection](https://github.com/tensorflow/tensorflow/tree/master/tensorflow/lite/tools/evaluation/tasks/coco_object_detection) and  [Indifference Diff](https://github.com/tensorflow/tensorflow/tree/master/tensorflow/lite/tools/evaluation/tasks/inference_diff)).\r\n\r\nSimilarly to [TF Lite kernel tests cross-compilation](https://github.com/tensorflow/tensorflow/pull/52110) requiring **host** `flatc` compiler, cross-compilation of evaluation tools requires **host** `protoc` compiler. Therefore, the CMake configuration for obtaining `flatc` has been extended and abstracted into the **native_tools** CMake module. \r\n\r\nFor details please see the updated `build_cmake.md` file.","created_at":"2022-01-07T13:21:56Z","closed_at":"2022-11-24T17:52:00Z","merged_at":null,"user_id":34263128,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":816131608,"title":"[PluggableDevice] Add Variant DEVICE_DEFAULT registration for ResourceScatterUpdate and ResourceGather","body":"When `ResourceScatterUpdate` and `ResourceGather` run with `DT_VARIANT`, everything is executing on the CPU. Pluggable devices shouldn't have to reimplement this logic.","created_at":"2022-01-07T06:37:24Z","closed_at":"2022-02-22T16:54:05Z","merged_at":"2022-02-22T16:54:05Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":816002360,"title":"[TF:TRT] Fix oss build","body":"Directly referring to `//third_party/tensorrt/plugins/...` in the OSS build does not work as the archive must be downloaded. So we should refer to the `@tensorrt_oss_archive//` repository to find these targets. A previous commit attempted to add an option `use_efficient_nms_plugin` for turning off/on the use of a plugin in `@tensorrt_oss_archive`, but made the mistake above. This change fixes the issue. It moves the `config_setting` to the TFTRT `BUILD` file. It also updates the `tensorrt_cc_test` test which uses the plugin (a change made when we first introduced TRT OSS archive). Tested with and without `--define=use_efficient_nms_plugin=1`.","created_at":"2022-01-07T00:57:38Z","closed_at":"2022-01-10T18:59:49Z","merged_at":"2022-01-10T18:59:48Z","user_id":30323187,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":815853956,"title":"[TF:TRT] Remove redundant NodeDef attr helpers","body":"Removes a class in `convert_nodes.cc` that is supposed to help with parsing NodeDef attributes. However, the class uses `TF_CHECK`-style error checking and can potentially cause a crash during conversion (although unlikely). This change replaces uses of the class with uses of helper functions from TF's NodeDef utilities.","created_at":"2022-01-06T21:27:50Z","closed_at":"2022-01-11T19:06:14Z","merged_at":"2022-01-11T19:06:14Z","user_id":30323187,"sentiment":{"polarity":-0.2,"subjectivity":0.2}}
{"_id":815841837,"title":"[TF:TRT] Remove dead conversion helpers","body":"This change removes a set of helper functions in convert_nodes.cc which are no longer used.","created_at":"2022-01-06T21:06:14Z","closed_at":"2022-01-10T17:32:02Z","merged_at":"2022-01-10T17:32:02Z","user_id":30323187,"sentiment":{"polarity":-0.2,"subjectivity":0.4}}
{"_id":815825811,"title":"Update c_api.h","body":"Fixes # https://github.com/tensorflow/tensorflow/issues/53628","created_at":"2022-01-06T20:38:15Z","closed_at":"2022-01-11T01:36:25Z","merged_at":"2022-01-11T01:36:25Z","user_id":43972606,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":815801139,"title":"[2.8 backport] Resolve bug with re-saving Estimator-exported SavedModel","body":"# Change description\r\nSort signature inputs by input key instead of tensor name when loading a TF1 model in TF2.\r\n\r\nSignatures are saved using nest.flatten, which sorts the keys alphabetically for determinism. This can cause a mismatch between the lifted signature function's arg_keywords and structured_input_signature, resulting in users not being able to re-save the signature.\r\n\r\nDetailed example below.\r\n\r\nSay there is a SavedModel signature with the inputs:\r\n```\r\n  inputs['a'] tensor_info:\r\n        dtype: DT_FLOAT\r\n        shape: (-1, 1)\r\n        name: input_2:0\r\n    inputs['b'] tensor_info:\r\n        dtype: DT_FLOAT\r\n        shape: (-1, 2)\r\n        name: input_1:0\r\n```\r\n\r\nWhen this signature is loaded using the TF2 API, it becomes a concrete function with arg keywords = `['b', 'a']` (sorted by tensor name)\r\n\r\nThe `structured_input_signature` becomes `([], {'b': spec_for_b, 'a': spec_for_a})`\r\n\r\nWhen this function is exported as a signature in a new SavedModel, the structured inputs are flattened and zipped with the arg keywords. However, the flattened `structured_input_signature` is `[spec_for_a, spec_for_b]`, since `nest.flatten` sorts the keys for determinism. This results in the wrong spec being mapped to the wrong arguments.\r\n\r\nPiperOrigin-RevId: 417889747\r\nChange-Id: Icdce72a43033027c18f5530068f2d6fd47e8e32d","created_at":"2022-01-06T19:58:01Z","closed_at":"2022-01-07T16:23:44Z","merged_at":"2022-01-07T16:23:44Z","user_id":31663267,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":815797864,"title":"[2.7 backport] Resolve bug with re-saving Estimator-exported SavedModel","body":"# Change description\r\nSort signature inputs by input key instead of tensor name when loading a TF1 model in TF2.\r\n\r\nSignatures are saved using nest.flatten, which sorts the keys alphabetically for determinism. This can cause a mismatch between the lifted signature function's arg_keywords and structured_input_signature, resulting in users not being able to re-save the signature.\r\n\r\nDetailed example below.\r\n\r\nSay there is a SavedModel signature with the inputs:\r\n```\r\n  inputs['a'] tensor_info:\r\n        dtype: DT_FLOAT\r\n        shape: (-1, 1)\r\n        name: input_2:0\r\n    inputs['b'] tensor_info:\r\n        dtype: DT_FLOAT\r\n        shape: (-1, 2)\r\n        name: input_1:0\r\n```\r\n\r\nWhen this signature is loaded using the TF2 API, it becomes a concrete function with arg keywords = `['b', 'a']` (sorted by tensor name)\r\n\r\nThe `structured_input_signature` becomes `([], {'b': spec_for_b, 'a': spec_for_a})`\r\n\r\nWhen this function is exported as a signature in a new SavedModel, the structured inputs are flattened and zipped with the arg keywords. However, the flattened `structured_input_signature` is `[spec_for_a, spec_for_b]`, since `nest.flatten` sorts the keys for determinism. This results in the wrong spec being mapped to the wrong arguments.\r\n\r\nPiperOrigin-RevId: 417889747\r\nChange-Id: Icdce72a43033027c18f5530068f2d6fd47e8e32d","created_at":"2022-01-06T19:52:32Z","closed_at":"2022-01-27T01:34:43Z","merged_at":"2022-01-27T01:34:43Z","user_id":31663267,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":815797286,"title":"[2.6 backport] Resolve bug with re-saving Estimator-exported SavedModel","body":"# Change description\r\nSort signature inputs by input key instead of tensor name when loading a TF1 model in TF2.\r\n\r\nSignatures are saved using nest.flatten, which sorts the keys alphabetically for determinism. This can cause a mismatch between the lifted signature function's arg_keywords and structured_input_signature, resulting in users not being able to re-save the signature.\r\n\r\nDetailed example below.\r\n\r\nSay there is a SavedModel signature with the inputs:\r\n```\r\n  inputs['a'] tensor_info:\r\n        dtype: DT_FLOAT\r\n        shape: (-1, 1)\r\n        name: input_2:0\r\n    inputs['b'] tensor_info:\r\n        dtype: DT_FLOAT\r\n        shape: (-1, 2)\r\n        name: input_1:0\r\n```\r\n\r\nWhen this signature is loaded using the TF2 API, it becomes a concrete function with arg keywords = `['b', 'a']` (sorted by tensor name)\r\n\r\nThe `structured_input_signature` becomes `([], {'b': spec_for_b, 'a': spec_for_a})`\r\n\r\nWhen this function is exported as a signature in a new SavedModel, the structured inputs are flattened and zipped with the arg keywords. However, the flattened `structured_input_signature` is `[spec_for_a, spec_for_b]`, since `nest.flatten` sorts the keys for determinism. This results in the wrong spec being mapped to the wrong arguments.\r\n\r\nPiperOrigin-RevId: 417889747\r\nChange-Id: Icdce72a43033027c18f5530068f2d6fd47e8e32d","created_at":"2022-01-06T19:51:30Z","closed_at":"2022-01-27T01:34:50Z","merged_at":"2022-01-27T01:34:50Z","user_id":31663267,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":815795253,"title":"[2.5 backport] Resolve bug with re-saving Estimator-exported SavedModel","body":"# Change description\r\nSort signature inputs by input key instead of tensor name when loading a TF1 model in TF2.\r\n\r\nSignatures are saved using nest.flatten, which sorts the keys alphabetically for determinism. This can cause a mismatch between the lifted signature function's arg_keywords and structured_input_signature, resulting in users not being able to re-save the signature.\r\n\r\nDetailed example below.\r\n\r\nSay there is a SavedModel signature with the inputs:\r\n```\r\n  inputs['a'] tensor_info:\r\n        dtype: DT_FLOAT\r\n        shape: (-1, 1)\r\n        name: input_2:0\r\n    inputs['b'] tensor_info:\r\n        dtype: DT_FLOAT\r\n        shape: (-1, 2)\r\n        name: input_1:0\r\n```\r\n\r\nWhen this signature is loaded using the TF2 API, it becomes a concrete function with arg keywords = `['b', 'a']` (sorted by tensor name)\r\n\r\nThe `structured_input_signature` becomes `([], {'b': spec_for_b, 'a': spec_for_a})`\r\n\r\nWhen this function is exported as a signature in a new SavedModel, the structured inputs are flattened and zipped with the arg keywords. However, the flattened `structured_input_signature` is `[spec_for_a, spec_for_b]`, since `nest.flatten` sorts the keys for determinism. This results in the wrong spec being mapped to the wrong arguments.\r\n\r\nPiperOrigin-RevId: 417889747\r\nChange-Id: Icdce72a43033027c18f5530068f2d6fd47e8e32d","created_at":"2022-01-06T19:48:18Z","closed_at":"2022-01-27T01:34:55Z","merged_at":"2022-01-27T01:34:55Z","user_id":31663267,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":815457536,"title":"[PluggableDevice] Add DEVICE_DEFAULT registration to MakeWeakResourceHandle","body":null,"created_at":"2022-01-06T11:47:17Z","closed_at":"2022-02-22T13:00:43Z","merged_at":"2022-02-22T13:00:43Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":815437180,"title":"[PluggableDevice] Link `pywrap_tensorflow_internal` with `kernels_experimental`","body":"Because Windows python builds don't come with `tensorflow_framework.dll`, they don't currently expose any of the experimental kernel functions which are necessary to support resource operations in pluggable devices.","created_at":"2022-01-06T11:16:15Z","closed_at":"2022-01-22T03:52:41Z","merged_at":"2022-01-22T03:52:41Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":815367442,"title":"r2.8 cherry-pick request: Updating oneDNN to v2.5.1","body":"Updating oneDNN from v2.5-rc to v2.5.1 which has a performance fix for 4k x 4k x 4k matmuls and also [many other fixes](https://github.com/oneapi-src/oneDNN/compare/v2.5-rc...v2.5.1).\r\n\r\nOriginal PR: https://github.com/tensorflow/tensorflow/pull/53527","created_at":"2022-01-06T09:34:41Z","closed_at":"2022-01-06T16:57:44Z","merged_at":"2022-01-06T16:57:44Z","user_id":38085909,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":815358046,"title":"r2.8 cherry-pick request: [oneDNN] Remove is_filter_const attr from _FusedConv3D registration","body":"This fixes a failure in TF-oneDNN. (The unused parameter was added by accident.)\r\n\r\nOriginal PR: https://github.com/tensorflow/tensorflow/pull/53479","created_at":"2022-01-06T09:21:03Z","closed_at":"2022-01-06T16:57:58Z","merged_at":"2022-01-06T16:57:58Z","user_id":38085909,"sentiment":{"polarity":-0.75,"subjectivity":1.0}}
{"_id":815051745,"title":"[TF:TRT] Add Grappler optimizer that executes rewrites for TF-TRT conversion preperation ","body":"This change adds a grappler pass prior to the TRTOptimizer. The new pass runs rewrites on the GraphDef via fixed point iteration. Some of the code is borrowed from the arithmetic optimizer. The TF-TRT segmentation and conversion process may desire to rewrite certain operation patterns in order to facilitate conversion or the performance of the converted model. Currently, we only perform one rewrite on the GraphDef before converting (FP32 cast rewrite). This ad-hoc rewrite is reformulated into a formal rewrite stage of the grappler pass. Additionally, this changes adds a rewriter to recognize when all required shape information is present for Conv2DBackpropInput and adds the information required for TRT conversion into a special attribute.","created_at":"2022-01-05T21:23:50Z","closed_at":"2022-05-25T01:03:40Z","merged_at":null,"user_id":30323187,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":815029506,"title":"[jax] Add default_device config to JitState","body":"This can be used to override the system default device when running a\r\njit'd function. This is the prioritized list which determines which\r\nsettings take precedence when determining which device a jit'd\r\nfunction runs on:\r\n\r\n1. `device` or `backend` argument to jit\r\n2. Input(s) with sticky device\r\n3. default_device config (new!)\r\n4. System default device\r\n\r\nThis also changes the `jit` C++ binding to take a `jit_device`\r\nargument, which is the device determined by the `device` or `backend`\r\nargument to jit (or None if not set), rather than determining it by\r\ncalling back into Python.","created_at":"2022-01-05T20:44:07Z","closed_at":"2022-01-10T22:22:26Z","merged_at":"2022-01-10T22:22:25Z","user_id":88808,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":814978172,"title":"[TF:TRT] Update Rejected Algorithms for Newer TRT Versions","body":"- Lower performance on TRT algorithms fixed as of TRT 8.0.3, so the gated patch only applies between 8.0.0 and 8.0.3\r\n\r\n@bixia1 @DEKHTIARJonathan ","created_at":"2022-01-05T19:18:30Z","closed_at":"2022-01-20T07:16:48Z","merged_at":"2022-01-20T07:16:48Z","user_id":10891704,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":814896969,"title":"[TF:TRT] Remove redundant helpers from trt_optimization_pass","body":"The TRT custom Grappler pass contains a set of helper functions that are redundant to those in TF's `NodeDefUtils.h`. This change removes the redundant helpers and call sites as necessary.","created_at":"2022-01-05T17:18:04Z","closed_at":"2022-01-19T18:19:37Z","merged_at":"2022-01-19T18:19:37Z","user_id":30323187,"sentiment":{"polarity":-0.2,"subjectivity":0.2}}
{"_id":814341992,"title":"[tflite] Add ruy header for profile in gather","body":"This will include missing ruy instrumentation header for ruy profile.","created_at":"2022-01-05T02:30:38Z","closed_at":"2022-12-15T10:17:22Z","merged_at":"2022-12-15T10:17:22Z","user_id":4616940,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":814259219,"title":"Add missing comma","body":"As per  https://github.com/tensorflow/tensorflow/issues/53636\r\n\r\nNote I found this issue while integration testing some new checks we've written. I'm a GitHub code review bot and part of my integration testing of new checks includes running against 1000 codebases (this one included).\r\n\r\nIf you're interested: you can [add me to GitHub](https://github.com/marketplace/django-doctor/) so I review PRs automatically and prevent issues like this being merged in the first place :)","created_at":"2022-01-04T23:00:06Z","closed_at":"2022-01-05T14:59:25Z","merged_at":null,"user_id":72647856,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":814118712,"title":"Update upper bound to numpy to 1.20.","body":"PiperOrigin-RevId: 419625181\r\nChange-Id: Ic610b47386d029d293a4ab99daf5f3098838d28b\r\n(cherry picked from commit a66666b5ef4baed419ee7d32d1eb60b88486178c)","created_at":"2022-01-04T18:46:15Z","closed_at":"2022-01-04T21:39:57Z","merged_at":"2022-01-04T21:39:57Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":813823228,"title":"Remove meta support for aarch64.","body":"This patch removes meta support for aarch64 as it's currently no longer maintained and tests `quantized_op_test` and `quantize_bias_add_op_test` fail when it is enabled.","created_at":"2022-01-04T12:36:07Z","closed_at":"2022-01-06T00:18:05Z","merged_at":"2022-01-06T00:18:04Z","user_id":16298969,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":813703281,"title":"Xla const output cache on GPU ","body":"#53609\r\n\r\n**Problem overview:** the const outputs of xla executable is kept in host memory. if the const output of executable need a device tensor, we need to do an H2D(host memory to device memory) .\r\n\r\n**Ideas overview:** cache the const output of xla executable to device memory, then replace H2D with lookup from cache.\r\n\r\n**Background(features async H2D)** :\r\n\r\nThe total ops in out model are set on the gpu device, so model spends data very fast, but the data part(parsing the data from TFRecord to Features) complete run on host memory, so we need copy features from host to device, this H2D will launch lots of requests of H2D on H2D stream. we use prefetch_to_device to overlap the time required for feature H2D.(prefetch_to_device: async copy features from host to device. The method of model obtaining data is replaced from synchronous H2D to obtain from cache)\r\n\r\n**Problem**:\r\n\r\nWe use xla to increase speed of training, but we found gpu util is 0 after xla run and model hung, As follows:\r\n\r\nWe carefully analyse nsys profiling file, found xla brought H2D once, and this H2D will block by features H2D in background.\r\n\r\n**Solution**:\r\n\r\nWe found that this H2D is generated by the xla op, and then we read the code about xla carefully, we found that the const output tensor of the executable is placed on the host, and then copy to the device side through memcpyH2D.\r\n\r\nWe can add a cache<executable output index, device tensor> on device. We put pair<executable output index, device tensor> to cache in the first time, and the next time replace to get device tensor from synchronous H2D to get device tensor from cache.\r\n\r\n**result(special model)**:\r\n\r\nno prefetch_to_device: No performance drop.\r\n\r\nprefetch_to_device: preformance 15%↑\r\n\r\nIs there a pr template？ It's a little late in China, can I change it tomorrow?","created_at":"2022-01-04T09:38:15Z","closed_at":"2022-01-31T12:38:18Z","merged_at":"2022-01-31T12:38:18Z","user_id":33950866,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":813604761,"title":"Fix time_major=False for Hybrid Bidirectional LSTM","body":"We converted some models to TFLite through our own model converter and found out that the `EvalHybrid` function of the Bidirectional LSTM leads to a segfault. With some investigation, we figured out the cause is that the variable `time_major` is somehow pinned to `true`. This PR changes that by passing the real value of `time_major`.","created_at":"2022-01-04T06:36:12Z","closed_at":"2022-01-07T20:08:58Z","merged_at":"2022-01-07T20:08:58Z","user_id":9998726,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":813547319,"title":"[TF:TRT] Fix access to TRT_ShapedWeights shape_ member, temp weights creation","body":"This change resolves two long standing \"todos\" in the code base. The first is regarding the questionable public accessibility of the `shape_` member of `TRT_ShapedWeights`. This change adds appropriate const and non-const accessor methods, and all call sites are updated. The second issue involves the `GetTempWeights` methods of the WeightsStore class. These methods were directly returning `TRT_ShapedWeights` and using `TF_CHECK` methods to check errors, which can potentially cause a crash during the conversion process. The signatures are updated to return a `StatusOr<TRT_ShapedWeights>` and call sites are updated appropriately to handle potential errors.","created_at":"2022-01-04T03:51:23Z","closed_at":"2022-01-06T01:16:45Z","merged_at":"2022-01-06T01:16:45Z","user_id":30323187,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":813533972,"title":"Jit index64","body":"Enable 64 bit indexing for GPU based JIT kernels \r\n@frgossen ","created_at":"2022-01-04T03:08:00Z","closed_at":"2022-01-13T17:21:05Z","merged_at":"2022-01-13T17:21:05Z","user_id":42385577,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":813417449,"title":"[PluggableDevice] Add DEVICE_DEFAULT registration for Fill","body":null,"created_at":"2022-01-03T21:22:30Z","closed_at":"2022-01-06T00:39:50Z","merged_at":"2022-01-06T00:39:50Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":813412705,"title":"Update double-conversion to 3.1.7, and use vendor-provided Bazel BUILD file instead.","body":"The double-conversion library used in tensorflow has not been updated for quite some time (previous version used was in 2018) and the Bazel BUILD file was maintained by tensorflow.\r\n\r\nRecently double-conversion has provided Bazel BUILD file.\r\n\r\nThis PR updates double-conversion to the latest 3.1.7, and use the vendor-provided BUILD file instead so that tensorflow does not need to maintain the Bazel BUILD file separately.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2022-01-03T21:14:05Z","closed_at":"2022-01-06T01:07:41Z","merged_at":"2022-01-06T01:07:41Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":813411336,"title":"Update sqlite to 3.37.1 (sqlite-amalgamation-3370100)","body":"This PR updates sqlite to the latest 3.37.1 (sqlite-amalgamation-3370100)\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2022-01-03T21:11:40Z","closed_at":"2022-02-23T00:52:43Z","merged_at":"2022-02-23T00:52:43Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":812595134,"title":"Nit in scatter_nd_update","body":"`\"Scatter` -> `Scatter`","created_at":"2022-01-01T15:56:07Z","closed_at":"2022-01-05T23:44:33Z","merged_at":null,"user_id":64411306,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":812512065,"title":"[TF:TRT] Remove dead code from convert_nodes.cc","body":"Removes some dead helper functions from `tf2tensorrt/convert/convert_nodes.cc`.","created_at":"2022-01-01T04:35:44Z","closed_at":"2022-01-08T02:05:43Z","merged_at":"2022-01-08T02:05:43Z","user_id":30323187,"sentiment":{"polarity":-0.2,"subjectivity":0.4}}
{"_id":812510798,"title":"[TF:TRT] Consolidate helper functions for TRT and TF tensor shape types","body":"Currently, there are  multiple functions for helping convert `nvinfer1::Dims` to  and from other types, yet they are declared in disparate translation units. This PR cleans up the helper functions in `convert_nodes.cc` for converting from TF Tensor shape types to `nvinfer1::Dims`. One helper function accomplishes the same task as `TensorShapeToTrtDims` in `convert/utils.h` yet performs fewer error checks. It is moved to `convert/utils.h` and renamed `TensorShapeToTrtDimsUnsafe`. Another function is highly specific and only used once and thus is inlined at the call site, resulting in code reduction and improved clarity.","created_at":"2022-01-01T04:20:12Z","closed_at":"2022-01-14T20:59:50Z","merged_at":null,"user_id":30323187,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":812505062,"title":"[TF:TRT] Elide extra func for nvinfer::Dims equality testing","body":"Removes a redundant helper function `DimsEqual` for comparing two `nvinfer1::Dims` objects. This function is an exact duplicate of the equality operator in `tf2tensorrt/common/utils.h`.","created_at":"2022-01-01T03:54:48Z","closed_at":"2022-01-27T16:17:29Z","merged_at":"2022-01-27T16:17:29Z","user_id":30323187,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":812348310,"title":"[PluggableDevice] Add DEVICE_DEFAULT registration for Min and Max","body":null,"created_at":"2021-12-31T11:57:17Z","closed_at":"2022-02-22T16:58:06Z","merged_at":"2022-02-22T16:58:06Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":812342529,"title":"An AttributeError message in base_layer.py","body":"In the definition of input_shape(self), the other half of the double quote ”“ is missing in the AttributeError message","created_at":"2021-12-31T11:33:01Z","closed_at":"2021-12-31T13:48:33Z","merged_at":null,"user_id":36075595,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":812225934,"title":"update `is_numeric_tensor` with new dtypes","body":"`tf.debugging.is_numeric_tensor` is out-of-date. Some new dtypes are not there.","created_at":"2021-12-31T03:36:46Z","closed_at":"2022-01-11T20:22:48Z","merged_at":"2022-01-11T20:22:48Z","user_id":9496702,"sentiment":{"polarity":0.13636363636363635,"subjectivity":0.45454545454545453}}
{"_id":812186586,"title":"[TF:TRT] refactor einsum converter","body":"This change moves the conversion function for the \"Einsum\" operation and all associated helper functions to a separate translation unit `tf2tensorrt/convert/ops/einsum.cc`. A small amount of refactoring is applied to eliminate functions which duplicate the functionality found in `TRTNetworkBuilder`. Functions which exceed a certain \"cognitive complexity\" calculated by clang are refactored to be below the threshold. Tests are updated to reflect the fact that certain error messages changed when updating the converter to use the `OpConverterBase` class.","created_at":"2021-12-31T00:11:39Z","closed_at":"2022-02-16T00:45:00Z","merged_at":"2022-02-16T00:44:59Z","user_id":30323187,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":812034796,"title":"Updating from the original ","body":null,"created_at":"2021-12-30T15:32:01Z","closed_at":"2021-12-30T15:45:16Z","merged_at":null,"user_id":55306904,"sentiment":{"polarity":0.375,"subjectivity":0.75}}
{"_id":811729351,"title":"Update the release note ","body":"Include details on Pluggable Profiler support and TensorFlow-oneDNN's discontinuation of explicit block tensor format support.","created_at":"2021-12-30T00:46:06Z","closed_at":"2021-12-30T16:17:39Z","merged_at":"2021-12-30T16:17:39Z","user_id":38085909,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":811555864,"title":"[tensorflow/lite/schema/upgrade_schema.py] Move `(see :schema.fbs).` up to `operator_type` arg descriptor","body":"Closes #53566\r\n\r\nI have custom docstring parsers that is reading in your codebase to make changes down the track (like automatically inferring types and adding them as annotations)… but this line of your codebase it's hiccuping on because it's on a new line and has a colon in it and lower indentation then the line above (indicating same scope as that arg); but doesn't actually refer to a new argument. This PR moves it to the same line as above; so it refers to that arg.","created_at":"2021-12-29T15:53:18Z","closed_at":"2022-10-03T09:53:29Z","merged_at":"2022-10-03T09:53:29Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":811506189,"title":"Update post_training_quantization.md","body":"Fix Markdown formatting for the bullet points of use cases","created_at":"2021-12-29T14:16:43Z","closed_at":"2022-12-28T19:34:11Z","merged_at":"2022-12-28T19:34:11Z","user_id":3373514,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":811477726,"title":"fixed some typos in the security markdown","body":null,"created_at":"2021-12-29T13:20:36Z","closed_at":"2021-12-30T18:32:01Z","merged_at":"2021-12-30T18:32:01Z","user_id":3079297,"sentiment":{"polarity":0.1,"subjectivity":0.2}}
{"_id":811388825,"title":"r2.8 cherry-pick request: Disable caching for ACL softmax primitives","body":"This patch enables the use of ACL softmax primitives in oneDNN, and disables caching of these primitives when used in TensorFlow.\r\n\r\n@LukeIreland1 @nSircombe Could you please provide example performance improvement numbers this patch provides? Thank you!","created_at":"2021-12-29T10:14:55Z","closed_at":"2021-12-29T15:43:32Z","merged_at":"2021-12-29T15:43:32Z","user_id":38085909,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":811171684,"title":"rewording in markdown security file","body":"clearer wording in the SECURITY.md file","created_at":"2021-12-28T22:20:49Z","closed_at":"2021-12-29T16:41:02Z","merged_at":null,"user_id":58760315,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":811149522,"title":"[PluggableDevice] Add DEVICE_DEFAULT registration for strided slice ops","body":null,"created_at":"2021-12-28T21:08:15Z","closed_at":"2022-02-22T16:49:19Z","merged_at":"2022-02-22T16:49:19Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":811125694,"title":"Test change for running presubmits","body":"DO NOT SUBMIT. I'm using this PR to run some tests related to presubmits.","created_at":"2021-12-28T20:00:25Z","closed_at":"2022-02-01T20:18:46Z","merged_at":null,"user_id":32465472,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":811116345,"title":"Fix flag value that was accidentally left off.","body":"PiperOrigin-RevId: 417851286\r\nChange-Id: I78cb6c85a81dc27b81d8d521ae1b90fe562a7bd0\r\n(cherry picked from commit ed445770c3d91926b3a66997c605b47d3cec8ed0)","created_at":"2021-12-28T19:32:38Z","closed_at":"2021-12-28T22:32:59Z","merged_at":"2021-12-28T22:32:59Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":810496177,"title":"Add folder pattern for AddOp and MulOp","body":"Add folder pattern:\r\n* mhlo.add(%0, 0) -> %0\r\n* mhlo.mul(%0, 1) -> %0","created_at":"2021-12-27T16:35:10Z","closed_at":"2021-12-31T21:26:43Z","merged_at":"2021-12-31T21:26:42Z","user_id":29956693,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":810238567,"title":"[MHLO]: improve BroadcastInDim canonicalize","body":"Simplify BroadcastInDim to Reshape\r\nSimplify BroadcastInDim to Transpose\r\nSimplify consecutive two BroadcastInDim to one","created_at":"2021-12-27T08:01:41Z","closed_at":"2021-12-29T09:50:20Z","merged_at":"2021-12-29T09:50:20Z","user_id":22370779,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":809972355,"title":"CHANGE IN README","body":"CAHNGE IN README","created_at":"2021-12-26T06:54:14Z","closed_at":"2021-12-27T13:57:40Z","merged_at":null,"user_id":56321342,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":809445608,"title":"2.8 cherry pick request: Hide JPEG symbols on Darwin (to align with Linux) ","body":null,"created_at":"2021-12-23T23:30:06Z","closed_at":"2021-12-28T19:49:26Z","merged_at":"2021-12-28T19:49:26Z","user_id":97853,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":809386947,"title":"[jax] Factor out GetJitArgumentStickyDevice function","body":null,"created_at":"2021-12-23T20:23:10Z","closed_at":"2022-01-05T00:56:26Z","merged_at":"2022-01-05T00:56:26Z","user_id":88808,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":809330451,"title":"Update gpu_backend_lib.cc","body":"hcc removed for #53475","created_at":"2021-12-23T18:06:04Z","closed_at":"2022-01-13T12:30:37Z","merged_at":null,"user_id":59822926,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":809259378,"title":"Update gemmlowp","body":"Update gemmlowp version to grab fix https://github.com/google/gemmlowp/pull/209.","created_at":"2021-12-23T15:51:53Z","closed_at":"2021-12-30T17:18:05Z","merged_at":"2021-12-30T17:18:05Z","user_id":16298969,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":808933981,"title":"eliminate broadcast_in_dim + transpose to broadcast_in_dim","body":"transpose(broadcast_in_dim(X)) => broadcast_in_dim(X)","created_at":"2021-12-23T07:26:31Z","closed_at":"2022-01-08T02:52:39Z","merged_at":"2022-01-08T02:52:39Z","user_id":29956693,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":808759007,"title":"Disable caching for ACL softmax primitives","body":"Co-authored-by: Luke Ireland <luke.ireland@arm.com>","created_at":"2021-12-22T22:55:03Z","closed_at":"2021-12-24T01:00:22Z","merged_at":"2021-12-24T01:00:22Z","user_id":32057673,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":808749778,"title":"[oneDNN] updating oneDNN to v2.5.1","body":"This update fixes some performance regressions in benchmark tests.","created_at":"2021-12-22T22:29:04Z","closed_at":"2022-01-04T20:54:03Z","merged_at":"2022-01-04T20:54:03Z","user_id":39842562,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":808737595,"title":"2.8-rc1 cherry-pick request: Add op-determinism changes to the version 2.8 release notes","body":"/CC @mihaimaruseac ","created_at":"2021-12-22T21:58:04Z","closed_at":"2021-12-23T17:14:26Z","merged_at":"2021-12-23T17:14:26Z","user_id":6510203,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":808575345,"title":"[MHLO-Linalg] Lower mhlo.convolution to linalg when padding is non zero.","body":"Lower mhlo.convolution to linalg when padding is non zero.","created_at":"2021-12-22T17:16:34Z","closed_at":"2021-12-28T20:48:47Z","merged_at":"2021-12-28T20:48:47Z","user_id":85476402,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":808413871,"title":"[TF-TRT] Fix a bug in getting the DType string representation for the conversion report.","body":"Previously, we use DType.str method to get the string representation for a DType object. This PR fix this to use dtypes[DType object] to get the string representation for the object.","created_at":"2021-12-22T13:51:20Z","closed_at":"2022-01-06T01:00:39Z","merged_at":"2022-01-06T01:00:39Z","user_id":3193578,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":808374831,"title":"[Go] Document use of tensorflow.ConfigProto protocol message to set session options","body":"PR documents the use of tensorflow.ConfigProto to set session options (e.g., for use in calls to `LoadSavedModel` or `NewSession`), adding a test and two examples.\r\n\r\n@mattn - I also wonder if this is suitable to close #22926?  It looks like that issue was created before the bindings depended on compiled core protos.","created_at":"2021-12-22T12:57:34Z","closed_at":"2022-11-28T17:10:56Z","merged_at":null,"user_id":17497234,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":808206235,"title":"Update backprop.py","body":"Renamed `dz_dy` to `dz_dw` for better readability\r\n\r\n#53499 ","created_at":"2021-12-22T09:02:26Z","closed_at":"2022-01-11T02:16:18Z","merged_at":"2022-01-11T02:16:18Z","user_id":74177924,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":808076988,"title":"[jax] Minor C++ jit path cleanup","body":"* Fix up sticky_device types and usage\r\n* Removes unneeded default_pyclient_","created_at":"2021-12-22T05:04:44Z","closed_at":"2021-12-22T23:09:30Z","merged_at":"2021-12-22T23:09:30Z","user_id":88808,"sentiment":{"polarity":-0.05,"subjectivity":0.2}}
{"_id":808005178,"title":"[jax] Combine GlobalJitState and ThreadLocalJitState into single JitState","body":"This avoids duplication when defining new fields. This change also\r\ncreates standard getters for each field that check if there's\r\nthread-local state defined and make sure a global value is set when\r\nappropriate.","created_at":"2021-12-22T01:42:10Z","closed_at":"2021-12-23T00:02:47Z","merged_at":"2021-12-23T00:02:47Z","user_id":88808,"sentiment":{"polarity":-0.07142857142857142,"subjectivity":0.21428571428571427}}
{"_id":808000340,"title":"Update version numbers for TensorFlow 2.8.0-rc0","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 8 -> 8\nPatch: 0 -> 0\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.8.0\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/tools/pip_package/setup.py:49:2.8.0\ntensorflow/tools/pip_package/setup.py:109:2.8.0\ntensorflow/tools/pip_package/setup.py:111:2.8.0\ntensorflow/tools/pip_package/setup.py:113:2.8.0\ntensorflow/tools/ci_build/release/requirements_common.txt:27:2.8.0\ntensorflow/tools/ci_build/release/requirements_common.txt:28:2.8.0\ntensorflow/tools/ci_build/release/requirements_common.txt:29:2.8.0\ntensorflow/tools/ci_build/install/install_centos_pip_packages.sh:106:2.8.0\ntensorflow/tensorflow.bzl:59:2.8.0\ntensorflow/lite/tools/versioning/runtime_version.cc:98:2.8.0\ntensorflow/lite/tools/versioning/runtime_version.cc:160:2.8.0\ntensorflow/lite/tools/versioning/runtime_version.cc:367:2.8.0\ntensorflow/lite/tools/versioning/runtime_version.cc:368:2.8.0\ntensorflow/lite/tools/versioning/runtime_version.cc:369:2.8.0\ntensorflow/lite/tools/versioning/runtime_version.cc:370:2.8.0\ntensorflow/lite/tools/versioning/runtime_version.cc:371:2.8.0\ntensorflow/lite/tools/versioning/runtime_version.cc:372:2.8.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:102:2.8.0\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.8.0\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/tools/pip_package/setup.py:49:2.8.0\ntensorflow/tools/pip_package/setup.py:109:2.8.0\ntensorflow/tools/pip_package/setup.py:111:2.8.0\ntensorflow/tools/pip_package/setup.py:113:2.8.0\ntensorflow/tools/ci_build/release/requirements_common.txt:27:2.8.0\ntensorflow/tools/ci_build/release/requirements_common.txt:28:2.8.0\ntensorflow/tools/ci_build/release/requirements_common.txt:29:2.8.0\ntensorflow/tools/ci_build/install/install_centos_pip_packages.sh:106:2.8.0\ntensorflow/tensorflow.bzl:59:2.8.0\ntensorflow/lite/tools/versioning/runtime_version.cc:98:2.8.0\ntensorflow/lite/tools/versioning/runtime_version.cc:160:2.8.0\ntensorflow/lite/tools/versioning/runtime_version.cc:367:2.8.0\ntensorflow/lite/tools/versioning/runtime_version.cc:368:2.8.0\ntensorflow/lite/tools/versioning/runtime_version.cc:369:2.8.0\ntensorflow/lite/tools/versioning/runtime_version.cc:370:2.8.0\ntensorflow/lite/tools/versioning/runtime_version.cc:371:2.8.0\ntensorflow/lite/tools/versioning/runtime_version.cc:372:2.8.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:102:2.8.0\n```","created_at":"2021-12-22T01:26:30Z","closed_at":"2021-12-22T01:27:22Z","merged_at":"2021-12-22T01:27:22Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":807998301,"title":"Update release notes for TensorFlow 2.8.0","body":"This PR is intentionally incomplete. One of the Release Owners for 2.8.0\nneeds to fill in the internal release notes for this version before the PR gets\nsubmitted. Click on the :pencil2: icon in the header for `RELEASE.md` under\n\"Files Changed\" above.","created_at":"2021-12-22T01:20:46Z","closed_at":"2021-12-22T02:09:05Z","merged_at":"2021-12-22T02:09:05Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":807899741,"title":"[ROCm] Disabling MKLDNN based Eigen contraction kernels for ROCm build","body":"On some RCm CI nodes (typically those with higher CPU core counts 128/256), the `//tensorflow/c/eager:c_api_distributed_test_gpu` test fails on an intermitent basis.\r\n\r\nWhen it does fail, the failures manifests as segfault at the end of the test, with the stack dump shown at the end of this commit message. The stack dump points the finger to a routine within the MKLDNN implementation. This is further confirmed by the observation that disabling the MKLDNN based Eigen contraction kernels (for ROCm) seems to make the crash go away.\r\n\r\nThis commit worksaround the bug by disabling  MKLDNN based Eigen contraction kernels for ROCm build\r\n\r\n```\r\nThread 191 \"c_api_distribut\" received signal SIGSEGV, Segmentation fault.\r\n[Switching to thread 191 (Thread 0x7ffc777fe700 (LWP 159004))]\r\n0x00007fff54530000 in ?? ()\r\n(gdb) where\r\n#0  0x00007fff54530000 in ?? ()\r\n#1  0x00007fffd5d15ae4 in dnnl::impl::cpu::x64::avx_gemm_f32::sgemm_nocopy_driver(char const*, char const*, long, long, long, float const*, float const*, long, float const*, long, float const*, float*, long, float const*, float*) ()\r\n   from /root/.cache/bazel/_bazel_root/efb88f6336d9c4a18216fb94287b8d97/execroot/org_tensorflow/bazel-out/k8-opt/bin/tensorflow/c/eager/../../../_solib_local/libexternal_Smkl_Udnn_Uv1_Slibmkl_Udnn.so\r\n#2  0x00007fffd5d166e1 in dnnl::impl::cpu::x64::jit_avx_gemm_f32(int, char const*, char const*, long const*, long const*, long const*, float const*, float const*, long const*, float const*, long const*, float const*, float*, long const*, float const*) ()\r\n   from /root/.cache/bazel/_bazel_root/efb88f6336d9c4a18216fb94287b8d97/execroot/org_tensorflow/bazel-out/k8-opt/bin/tensorflow/c/eager/../../../_solib_local/libexternal_Smkl_Udnn_Uv1_Slibmkl_Udnn.so\r\n#3  0x00007fffd5e277ed in dnnl_status_t dnnl::impl::cpu::x64::gemm_driver<float, float, float>(char const*, char const*, char const*, long const*, long const*, long const*, float const*, float const*, long const*, float const*, float const*, long const*, float const*, float const*, float*, long const*, float const*, bool, dnnl::impl::cpu::x64::pack_type, dnnl::impl::cpu::x64::gemm_pack_storage_t*, bool) ()\r\n   from /root/.cache/bazel/_bazel_root/efb88f6336d9c4a18216fb94287b8d97/execroot/org_tensorflow/bazel-out/k8-opt/bin/tensorflow/c/eager/../../../_solib_local/libexternal_Smkl_Udnn_Uv1_Slibmkl_Udnn.so\r\n#4  0x00007fffd5665056 in dnnl::impl::cpu::extended_sgemm(char const*, char const*, long const*, long const*, long const*, float const*, float const*, long const*, float const*, long const*, float const*, float*, long const*, float const*, bool) ()\r\n   from /root/.cache/bazel/_bazel_root/efb88f6336d9c4a18216fb94287b8d97/execroot/org_tensorflow/bazel-out/k8-opt/bin/tensorflow/c/eager/../../../_solib_local/libexternal_Smkl_Udnn_Uv1_Slibmkl_Udnn.so\r\n#5  0x00007fffd52fe983 in dnnl_sgemm ()\r\n   from /root/.cache/bazel/_bazel_root/efb88f6336d9c4a18216fb94287b8d97/execroot/org_tensorflow/bazel-out/k8-opt/bin/tensorflow/c/eager/../../../_solib_local/libexternal_Smkl_Udnn_Uv1_Slibmkl_Udnn.so\r\n#6  0x0000555557187b0b in Eigen::internal::TensorContractionKernel<float, float, float, long, Eigen::internal::blas_data_mapper<float, long, 0, 0, 1>, Eigen::internal::TensorContractionInputMapper<float, long, 1, Eigen::TensorEvaluator<Eigen::TensorMap<Eigen::Tensor<float const, 2, 1, long>, 16, Eigen::MakePointer> const, Eigen::ThreadPoolDevice>, Eigen::array<long, 1ul>, Eigen::array<long, 1ul>, 4, true, false, 0, Eigen::MakePointer>, Eigen::internal::TensorContractionInputMapper<float, long, 0, Eigen::TensorEvaluator<Eigen::TensorMap<Eigen::Tensor<float const, 2, 1, long>, 16, Eigen::MakePointer> const, Eigen::ThreadPoolDevice>, Eigen::array<long, 1ul>, Eigen::array<long, 1ul>, 4, true, false, 0, Eigen::MakePointer> >::invoke(Eigen::internal::blas_data_mapper<float, long, 0, 0, 1> const&, Eigen::internal::ColMajorBlock<float, long> const&, Eigen::internal::ColMajorBlock<float, long> const&, long, long, long, float, float) ()\r\n#7  0x000055555718dc76 in Eigen::TensorEvaluator<Eigen::TensorContractionOp<Eigen::array<Eigen::IndexPair<long>, 1ul> const, Eigen::TensorMap<Eigen::Tensor<float const, 2, 1, long>, 16, Eigen::MakePointer> const, Eigen::TensorMap<Eigen::Tensor<float const, 2, 1, long>, 16, Eigen::MakePointer> const, Eigen::NoOpOutputKernel const> const, Eigen::ThreadPoolDevice>::EvalParallelContext<Eigen::TensorEvaluator<Eigen::TensorContractionOp<Eigen::array<Eigen::IndexPair<long>, 1ul> const, Eigen::TensorMap<Eigen::Tensor<float const, 2, 1, long>, 16, Eigen::MakePointer> const, Eigen::TensorMap<Eigen::Tensor<float const, 2, 1, long>, 16, Eigen::MakePointer> const, Eigen::NoOpOutputKernel const> const, Eigen::ThreadPoolDevice>::NoCallback, true, true, false, 0>::kernel(long, long, long, bool) ()\r\n#8  0x000055555718f327 in Eigen::TensorEvaluator<Eigen::TensorContractionOp<Eigen::array<Eigen::IndexPair<long>, 1ul> const, Eigen::TensorMap<Eigen::Tensor<float const, 2, 1, long>, 16, Eigen::MakePointer> const, Eigen::TensorMap<Eigen::Tensor<float const, 2, 1, long>, 16, Eigen::MakePointer> const, Eigen::NoOpOutputKernel const> const, Eigen::ThreadPoolDevice>::EvalParallelContext<Eigen::TensorEvaluator<Eigen::TensorContractionOp<Eigen::array<Eigen::IndexPair<long>, 1ul> const, Eigen::TensorMap<Eigen::Tensor<float const, 2, 1, long>, 16, Eigen::MakePointer> const, Eigen::TensorMap<Eigen::Tensor<float const, 2, 1, long>, 16, Eigen::MakePointer> const, Eigen::NoOpOutputKernel const> const, Eigen::ThreadPoolDevice>::NoCallback, true, true, false, 0>::signal_kernel(long, long, long, bool, bool) ()\r\n#9  0x00005555571904cb in Eigen::TensorEvaluator<Eigen::TensorContractionOp<Eigen::array<Eigen::IndexPair<long>, 1ul> const, Eigen::TensorMap<Eigen::Tensor<float const, 2, 1, long>, 16, Eigen::MakePointer> const, Eigen::TensorMap<Eigen::Tensor<float const, 2, 1, long>, 16, Eigen::MakePointer> const, Eigen::NoOpOutputKernel const> const, Eigen::ThreadPoolDevice>::EvalParallelContext<Eigen::TensorEvaluator<Eigen::TensorContractionOp<Eigen::array<Eigen::IndexPair<long>, 1ul> const, Eigen::TensorMap<Eigen::Tensor<float const, 2, 1, long>, 16, Eigen::MakePointer> const, Eigen::TensorMap<Eigen::Tensor<float const, 2, 1, long>, 16, Eigen::MakePointer> const, Eigen::NoOpOutputKernel const> const, Eigen::ThreadPoolDevice>::NoCallback, true, true, false, 0>::pack_rhs(long, long) ()\r\n#10 0x000055555718fd69 in Eigen::TensorEvaluator<Eigen::TensorContractionOp<Eigen::array<Eigen::IndexPair<long>, 1ul> const, Eigen::TensorMap<Eigen::Tensor<float const, 2, 1, long>, 16, Eigen::MakePointer> const, Eigen::TensorMap<Eigen::Tensor<float const, 2, 1, long>, 16, Eigen::MakePointer> const, Eigen::NoOpOutputKernel const> const, Eigen::ThreadPoolDevice>::EvalParallelContext<Eigen::TensorEvaluator<Eigen::TensorContractionOp<Eigen::array<Eigen::IndexPair<long>, 1ul> const, Eigen::TensorMap<Eigen::Tensor<float const, 2, 1, long>, 16, Eigen::MakePointer> const, Eigen::TensorMap<Eigen::Tensor<float const, 2, 1, long>, 16, Eigen::MakePointer> const, Eigen::NoOpOutputKernel const> const, Eigen::ThreadPoolDevice>::NoCallback, true, true, false, 0>::enqueue_packing_helper(long, long, long, bool) ()\r\n#11 0x00007ffff6b607a1 in Eigen::ThreadPoolTempl<tensorflow::thread::EigenEnvironment>::WorkerLoop(int) ()\r\n   from /root/.cache/bazel/_bazel_root/efb88f6336d9c4a18216fb94287b8d97/execroot/org_tensorflow/bazel-out/k8-opt/bin/tensorflow/c/eager/../../../_solib_local/_U_S_Stensorflow_Sc_Seager_Cc_Uapi_Udistributed_Utest_Ugpu___Utensorflow/libtensorflow_framework.so.2\r\n#12 0x00007ffff6b5de93 in std::_Function_handler<void (), tensorflow::thread::EigenEnvironment::CreateThread(std::function<void ()>)::{lambda()#1}>::_M_invoke(std::_Any_data const&) ()\r\n   from /root/.cache/bazel/_bazel_root/efb88f6336d9c4a18216fb94287b8d97/execroot/org_tensorflow/bazel-out/k8-opt/bin/tensorflow/c/eager/../../../_solib_local/_U_S_Stensorflow_Sc_Seager_Cc_Uapi_Udistributed_Utest_Ugpu___Utensorflow/libtensorflow_framework.so.2\r\n#13 0x00007ffff6b40107 in tensorflow::(anonymous namespace)::PThread::ThreadFn(void*) ()\r\n   from /root/.cache/bazel/_bazel_root/efb88f6336d9c4a18216fb94287b8d97/execroot/org_tensorflow/bazel-out/k8-opt/bin/tensorflow/c/eager/../../../_solib_local/_U_S_Stensorflow_Sc_Seager_Cc_Uapi_Udistributed_Utest_Ugpu___Utensorflow/libtensorflow_framework.so.2\r\n#14 0x00007fffd1ca86db in start_thread () from /lib/x86_64-linux-gnu/libpthread.so.0\r\n#15 0x00007fffd00b471f in clone () from /lib/x86_64-linux-gnu/libc.so.6\r\n```\r\n\r\n-----------------------------\r\n\r\n/cc @chsigg @cheshire ","created_at":"2021-12-21T21:30:25Z","closed_at":"2021-12-23T18:34:17Z","merged_at":"2021-12-23T18:34:16Z","user_id":36858332,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":807855788,"title":"[ROCm] Dropping support for older ROCm releases","body":"/cc @chsigg @cheshire ","created_at":"2021-12-21T20:09:55Z","closed_at":"2021-12-27T19:16:53Z","merged_at":"2021-12-27T19:16:53Z","user_id":36858332,"sentiment":{"polarity":0.16666666666666666,"subjectivity":0.3333333333333333}}
{"_id":807785041,"title":"[TF:TRT] Use IEinsumLayer from TRT 8.2","body":"This PR refactors the Einsum converter to use IEinsumLayer which is available in TRT 8.2.","created_at":"2021-12-21T18:50:50Z","closed_at":"2022-04-09T00:56:31Z","merged_at":null,"user_id":3671106,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":807767455,"title":"[TF:TRT] Fix Grappler params to enable layout optimizer for the C++ API","body":"This PR sets the VirtualCluster argument while calling the Grappler optimization pass for TF-TRT. Setting the cluster arg is necessary to enable layout optimizer (otherwise layout optimizer returns without changing the graph). This change only affects conversions initiated by the C++ API of TF-TRT #52012.\r\n\r\nTagging @bixia1 for review.","created_at":"2021-12-21T18:20:14Z","closed_at":"2022-02-02T16:21:27Z","merged_at":null,"user_id":3671106,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":807513776,"title":"[ROCm] Explicitly setting the `__launch_bounds__` attribute to 1024 for MLIR generated kernels (for ROCm only)","body":"The following LLVM commit changes the default `__launch_bounds__` attribute from 1024 to 256 (for the ROCm path).\r\n\r\nhttps://github.com/llvm/llvm-project/commit/e1da62910e140cf45eafec64193c813e79796f05#diff-e0acb49d6ec4a97460a1af5fe8f80abc39f04d172d6c9a08c33da1209115cd4b\r\n\r\nThat results in quite a few TF unit-test failures, because TF side assumes/expects the default to be 1024, and launches GPU kernels at runtime with block-size == 1024. As a consequence, all unit-tests that do this, run into an error similar to the following error\r\n\r\n```\r\n...\r\n:3:hip_module.cpp           :363 : 20798447993994 us: 2453 : [7f51477fe700] ihipModuleLaunchKernel ( 0x0x7f5138273b40, 1024, 1, 1, 1024, 1, 1, 0, stream:0x26b7fb0, 0x7f51477fcb30, char array:<null>, event:0, event:0, 0, 0 )\r\n:1:hip_module.cpp           :256 : 20798447993999 us: Launch params (1024, 1, 1) are larger than launch bounds (256) for kernel Mul_GPU_DT_FLOAT_DT_FLOAT_kernel\r\n...\r\n```\r\n\r\nThe fix for this breakage requires changes on the both the TF side and LLVM side\r\n\r\nOn the LLVM side, we need to add the ability to configure/overwrite the default value (256) of the amdgpu-flat-work-group-size attribute for MLIR generated GPU kernels. This is done via the addition of the rocdl.max_flat_work_group_size attribute, which when set on the mlir::GPUFuncOp will override the default value (256) when mlir::GPUFuncOp gets translated to llvm::FuncOp. See the following LLVM PR for details\r\n\r\nhttps://reviews.llvm.org/D115741\r\n\r\nThe above PR has already been merged, and the TF LLVM ptr has been updated to pick up that change.\r\n\r\nOn the TF side, we need to explicitly specify the rocdl.max_flat_work_group_size attribute with value set to 1024 for MLIR generated kernels...which is what this commit does.\r\n\r\n--------------------------------------\r\n\r\n/cc @chsigg @cheshire ","created_at":"2021-12-21T12:58:08Z","closed_at":"2022-03-16T15:40:36Z","merged_at":"2022-03-16T15:40:36Z","user_id":36858332,"sentiment":{"polarity":0.0,"subjectivity":1.0}}
{"_id":807461408,"title":"Add missing dialect dependency on xla-legalize-tf-control-flow","body":"Add missing dialect dependency on xla-legalize-tf-control-flow. This\r\nfixes crashes when using tf-opt to lower tf.while to mhlo.while. The\r\nreason the current test cases for the above pass don't crash is that\r\nthose test cases already have mhlo ops and so the dialect is loaded at\r\nparse time hiding this issue.","created_at":"2021-12-21T11:46:07Z","closed_at":"2021-12-22T22:32:08Z","merged_at":"2021-12-22T22:32:08Z","user_id":7008401,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":807226017,"title":"Update `image_ops_impl.py`","body":"In line 3755， modified tf.image.non_max_suppression_padded to  tf.image.non_max_suppression_with_scores;\r\nIn line 3760，modified tf.image.non_max_suppression_padded to  tf.image.non_max_suppression_with_scores;\r\nFixes #[53453](https://github.com/tensorflow/tensorflow/issues/53453)","created_at":"2021-12-21T06:13:16Z","closed_at":"2021-12-30T17:55:36Z","merged_at":"2021-12-30T17:55:35Z","user_id":84765720,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":807101601,"title":"[ROCm] Switch to ROCm 4.5.2","body":"also a couple of minor changes...see commit messages for details\r\n\r\n---------------------------------\r\n\r\n/cc @chsigg @cheshire ","created_at":"2021-12-21T00:48:41Z","closed_at":"2022-01-04T18:35:40Z","merged_at":"2022-01-04T18:35:40Z","user_id":36858332,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":806697757,"title":"Fix floating point issue on RequantizeManyInNewRange","body":"Hi,\r\nwhile comparing tests `requantize_op_test` and `quantize_down_and_shrink_range_op_test` I noticed that both tests are quite similar, like so\r\n```\r\nTEST_F(QuantizeDownAndShrinkRangeTest, HandCrafted) {\r\n  TF_ASSERT_OK(NodeDefBuilder(\"quantize_down_and_shrink_range_op\",\r\n                              \"QuantizeDownAndShrinkRange\")\r\n                   .Input(FakeInput(DT_QINT32))\r\n                   .Input(FakeInput(DT_FLOAT))\r\n                   .Input(FakeInput(DT_FLOAT))\r\n                   .Attr(\"Tinput\", DataTypeToEnum<qint32>::v())\r\n                   .Attr(\"out_type\", DataTypeToEnum<quint8>::v())\r\n                   .Finalize(node_def()));\r\n  TF_ASSERT_OK(InitOp());\r\n\r\n  // For this test we have an input that has the theoretical range of -256.0f to\r\n  // +256.0f, but the actual values present only span -1.0f to 1.0f. We expect\r\n  // the operator to take advantage of this, and rescale the output to fill up\r\n  // the available range in the lower bit depth, and update to the true min and\r\n  // max ranges.\r\n  const int value_count = 3;\r\n  AddInputFromArray<qint32>(TensorShape({value_count}),\r\n                            {-(1 << 23), 0, (1 << 23)});\r\n  AddInputFromArray<float>(TensorShape({1}), {-256.0f});\r\n  AddInputFromArray<float>(TensorShape({1}), {256.0f});\r\n  TF_ASSERT_OK(RunOpKernel());\r\n  Tensor expected(allocator(), DT_QUINT8, TensorShape({value_count}));\r\n  test::FillValues<quint8>(&expected, {0, 127, 255});\r\n  test::ExpectTensorEqual<quint8>(expected, *GetOutput(0));\r\n  Tensor expected_min(allocator(), DT_FLOAT, TensorShape({}));\r\n  test::FillValues<float>(&expected_min, {-1.0f});\r\n  test::ExpectTensorEqual<float>(expected_min, *GetOutput(1));\r\n  Tensor expected_max(allocator(), DT_FLOAT, TensorShape({}));\r\n  test::FillValues<float>(&expected_max, {1.0f});\r\n  test::ExpectTensorEqual<float>(expected_max, *GetOutput(2));\r\n}\r\n```\r\nand \r\n```\r\n// Runs a manually generated array through the operator, and makes sure that the\r\n// results match the expected hand-calculated values.\r\nTEST_F(RequantizeTest, HandCraftedRequantize) {\r\n  ConfigureRequantize();\r\n  const int value_count = 3;\r\n\r\n  // Requantize to -1 to 1.\r\n  AddInputFromArray<qint32>(TensorShape({value_count}),\r\n                            {-(1 << 23), 0, (1 << 23)});\r\n  AddInputFromArray<float>(TensorShape({1}), {-256.0f});\r\n  AddInputFromArray<float>(TensorShape({1}), {256.0f});\r\n  AddInputFromArray<float>(TensorShape({1}), {-1.0f});\r\n  AddInputFromArray<float>(TensorShape({1}), {1.0f});\r\n  TF_ASSERT_OK(RunOpKernel());\r\n  Tensor expected(allocator(), DT_QUINT8, TensorShape({value_count}));\r\n  test::FillValues<quint8>(&expected, {0, 128, 255});\r\n  test::ExpectTensorEqual<quint8>(expected, *GetOutput(0));\r\n  test::ExpectTensorEqual<float>(test::AsScalar<float>(-1.0f), *GetOutput(1));\r\n  test::ExpectTensorEqual<float>(test::AsScalar<float>(1.0f), *GetOutput(2));\r\n}\r\n```\r\nhowever one expects the result to be 127 and the other 128. \r\n\r\nIf you try to pinpoint the problem `RequantizeManyInNewRange` receives on both tests `min_float` as -1 but on one the bit representation is `10111111100000000000000000000000` and the other one `10111111011111111111111111111111` since `static_cast` just truncates the result differs in both executions. This can be seen on both x86 as well as on Arm. \r\n\r\nThe patch fixes this using a default rounding strategy as well as the expected value on `quantize_down_and_shrink_range_op_test` to match.","created_at":"2021-12-20T14:29:08Z","closed_at":"2021-12-23T02:48:25Z","merged_at":"2021-12-23T02:48:25Z","user_id":16298969,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":806651347,"title":"Document the verbose parameter in EarlyStopping","body":null,"created_at":"2021-12-20T13:37:08Z","closed_at":"2021-12-20T16:21:39Z","merged_at":null,"user_id":1478376,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":806323210,"title":"[MHLO] add BroadcastOp constant folding and identity folding","body":"* add BroadcastOp constant folding and identity folding","created_at":"2021-12-20T06:36:25Z","closed_at":"2021-12-23T02:41:45Z","merged_at":"2021-12-23T02:41:45Z","user_id":29956693,"sentiment":{"polarity":0.0,"subjectivity":0.3333333333333333}}
{"_id":805878290,"title":"[PluggableDevice] Export Grappler symbols for Windows' C API","body":null,"created_at":"2021-12-18T16:56:28Z","closed_at":"2022-01-21T12:42:27Z","merged_at":"2022-01-21T12:42:27Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":805793857,"title":"Add FusedLayerNorm (Eigen and CUDA)","body":"This PR adds FusedLayerNorm and FusedLayerNormGrad to the TF with Eigen and CUDA implementations for CPU and GPU respectively.\r\n\r\n\r\nFYI: @nluehr ","created_at":"2021-12-18T06:11:20Z","closed_at":"2022-03-02T22:44:21Z","merged_at":null,"user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":805762176,"title":"[oneDNN] Keras LayerNormalization fusion with oneDNN CPU backend","body":"- Explicitly cast `size_t` to `ptrdiff_t`\r\n- Cast `void*` to `char*` before doing pointer arithmetic. `void` pointer arithmetic is illegal in C++ and is a GCC extension. ","created_at":"2021-12-18T01:41:53Z","closed_at":"2021-12-21T00:09:54Z","merged_at":"2021-12-21T00:09:54Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":805760725,"title":"[oneDNN] Enable Pad+Conv3D/_FusedConv3D fusion","body":"This PR enables Pad+Conv3D and Pad+_FusedConv3D fusion and adds tests.","created_at":"2021-12-18T01:31:53Z","closed_at":"2022-03-25T15:46:48Z","merged_at":"2022-03-25T15:46:48Z","user_id":42224278,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":805753451,"title":"[oneDNN] Remove is_filter_const attr from _FusedConv3D registeration","body":"Removes the extra attr added to the _FusedConv3D registeration","created_at":"2021-12-18T00:51:53Z","closed_at":"2022-01-04T21:10:24Z","merged_at":"2022-01-04T21:10:24Z","user_id":42224278,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":805706962,"title":"[ROCM] enable self_adjoint_eig op (#1511)","body":"This pr enables self_adjoint_eig_v2_op on rocm. ","created_at":"2021-12-17T22:16:14Z","closed_at":"2022-01-11T00:11:46Z","merged_at":null,"user_id":16394078,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":805598306,"title":"Fixed a minor logging issue in fused batch norm","body":"This PR fixed a minor logging issue in fused batch norm.","created_at":"2021-12-17T18:36:51Z","closed_at":"2022-01-06T01:12:14Z","merged_at":"2022-01-06T01:12:14Z","user_id":4001424,"sentiment":{"polarity":0.025000000000000005,"subjectivity":0.2}}
{"_id":805493409,"title":"Update oneDNN version for AArch64 builds","body":"Builds on AArch64 with `--config=mkl_aarch64` will now pickup\r\noneDNN version 2.5 rather than 2.4.","created_at":"2021-12-17T16:05:16Z","closed_at":"2021-12-21T01:59:53Z","merged_at":"2021-12-21T01:59:53Z","user_id":32057673,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":804990078,"title":"[Go] Improve tests: fix test issues, add cases and locate assets ","body":"PR makes improvements to tensorflow/go tests:\r\n- Fixes several missing checks on returned errors\r\n- Adds test cases for LoadSavedModel (half plus two) and improves consistency of variable naming with funcs and documentation for api\r\n- Locates a minimal set of required test assets inside the module; this addresses issues caused by making relative references elsewhere in the repository and outside of the Go module\r\n- Makes a few grammatical corrections","created_at":"2021-12-17T02:35:28Z","closed_at":"2022-12-29T22:46:20Z","merged_at":"2022-12-29T22:46:20Z","user_id":17497234,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":804987131,"title":"[tflite] fix coreml delegate tmp peak memory issue","body":"fix https://github.com/tensorflow/tensorflow/issues/53461\r\n\r\nIt seems some memory management behaviors changed in Xcode 13 or later so that we need a `@autorelease` block to reduce peak memory usage.","created_at":"2021-12-17T02:26:55Z","closed_at":"2022-01-06T22:01:39Z","merged_at":"2022-01-06T22:01:38Z","user_id":3395998,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":804825713,"title":"[determinism] Add v2.8 release notes","body":"Add op-determinism changes to the version 2.8 release notes in the master branch (prior to the r2.8 branch cut).\r\n\r\n@reedwm, please will you review. This is not much different than the notes for version 2.7. I'm wondering if there any additional enhancements in version 2.8 that I'm not yet aware of.","created_at":"2021-12-16T20:46:40Z","closed_at":"2021-12-22T20:32:50Z","merged_at":"2021-12-22T20:32:50Z","user_id":33532941,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":804547398,"title":"[Go] Return correct backing device name for TensorHandle","body":"In Go, `th.BackingDeviceName` currently returns `TFE_TensorHandleDeviceName`, which may differ from the backing device.","created_at":"2021-12-16T15:12:48Z","closed_at":"2021-12-21T16:08:56Z","merged_at":"2021-12-21T16:08:56Z","user_id":17497234,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":804444212,"title":"Improve `saved_model.load.get_config`","body":"This PR makes two minor, nonfunctional improvements to the `saved_model.load.get_config` function:\r\n\r\n1. **it’s easier to ask for forgiveness than permission:**  \r\nIdiomatic python: It's better to catch the exception of the exceptional case, rather than checking if the attribute exists beforehand. [more on this](https://devblogs.microsoft.com/python/idiomatic-python-eafp-versus-lbyl/)\r\n2.  **Error description:** \r\nThe NotImplementedError now describes two likely root causes of the problem.","created_at":"2021-12-16T13:23:10Z","closed_at":"2021-12-21T17:23:48Z","merged_at":null,"user_id":4815944,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":804224092,"title":"Fixed Typo in  \"iterator_ops.py\"","body":"Changed \"warpped\" to \"wrapped\" in iterator_ops.py","created_at":"2021-12-16T09:05:19Z","closed_at":"2021-12-20T17:01:11Z","merged_at":null,"user_id":86464649,"sentiment":{"polarity":0.1,"subjectivity":0.2}}
{"_id":804180890,"title":"Support for external delegate in label_image.py python example","body":"The PR adds 2 command line arguments to label_image.py python example to load and use an external delegate. The behavior is similar to one provided by external delegate Registrar (class `ExternalDelegateProvider` in  [tensorflow/lite/tools/delegates/external_delegate_provider.cc](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/lite/tools/delegates/external_delegate_provider.cc))","created_at":"2021-12-16T08:07:21Z","closed_at":"2021-12-27T15:55:40Z","merged_at":"2021-12-27T15:55:40Z","user_id":56120470,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":804171885,"title":"Fix typo in `trt_engine_op_shape_test.py`","body":"This PR fixes a small typo introduced in #53327 that prevented the test from being run.\r\n\r\n@DEKHTIARJonathan ","created_at":"2021-12-16T07:53:48Z","closed_at":"2022-03-14T08:23:46Z","merged_at":null,"user_id":3193578,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":803932750,"title":"Update tensorflow-io-gcs-filesystem to 0.23.1","body":"This PR updates tensorflow-io-gcs-filesystem to 0.23.1,\r\nsee https://github.com/tensorflow/io/issues/1591\r\n\r\nThis PR fixes https://github.com/tensorflow/io/issues/1591\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2021-12-15T23:07:27Z","closed_at":"2021-12-16T01:51:45Z","merged_at":"2021-12-16T01:51:45Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":803876020,"title":"[bazel] Remove rules_cc dependency","body":"This public repository is seemingly dead as far as using it as a\r\nreplacement cc toolchain. Because of this, and tensorflow's use of some\r\nfiles under @bazel_tools, this can lead to incompatibilities https://github.com/bazelbuild/bazel/pull/13449#issuecomment-994882040\r\n\r\nSince this repo isn't active, and doesn't provide anything over the\r\ndefault bazel infra that tf needs, we can just drop it.","created_at":"2021-12-15T21:30:46Z","closed_at":"2022-01-04T17:32:07Z","merged_at":null,"user_id":283886,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":803804503,"title":"Allign type of TOSA.Const so that both attribute and Result have the …","body":"Allign type of TOSA.Const so that both attribute and Result have the same type\r\n\r\nbazel test tensorflow/compiler/mlir/tosa/... --test_timeout 240: Passes\r\n","created_at":"2021-12-15T19:42:51Z","closed_at":"2022-02-10T11:14:36Z","merged_at":null,"user_id":7952559,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":803759605,"title":"Integrating cuBLASLt","body":"Adds support for the cuBLASLt library for GEMM operations on GPUs.\r\n\r\nThe library can be activated by setting the environment variable `TF_USE_CUBLASLT=1`.","created_at":"2021-12-15T18:52:30Z","closed_at":"2022-03-23T20:52:56Z","merged_at":null,"user_id":80296164,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":803741293,"title":"Use actual number of classes for output layer","body":"The problem is that in the yoga example's training data there are 5 classes but when using any other amount of classes as training data the training fails. Set the output layer to the actual number of classes instead.\r\n\r\nWithout this fix, a ValueError is raised (e.g. `ValueError: Shapes (None, 7) and (None, 5) are incompatible`).","created_at":"2021-12-15T18:32:35Z","closed_at":"2021-12-20T23:18:48Z","merged_at":"2021-12-20T23:18:48Z","user_id":63608112,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":803472569,"title":"Experimental jax natural allocation emit","body":"**This code is only experimental and should never be used in production!**\r\n\r\nIt could be use to dump a JAX generated mlir module with xla.\r\n\r\n1. Steps: Donwload JAX on github git clone https://github.com/google/jax.\r\n2. Find the Workspace file. Switch to a local tensorflow with this modified mhlo_to_lhlo_with_xla pass.\r\n3. Pick a name of a mlir module and change the string in the modified mhlo_to_lhlo_with_xla.cc.\r\n\r\n> - If you do not know the module names dump all modules with the command of step 5.\r\n\r\n4. Build JAX with  (see [how to build Jax](https://jax.readthedocs.io/en/latest/developer.html) ) \r\n\r\n> - python build/build.py --enable cuda\r\n> - pip install dist/*.whl --force-reinstall \r\n\r\n5. Use this command to generate mlir modues:\r\n> - XLA_FLAGS=\"--xla_dump_to=folder/to/dump\" python3 ./examples/your_example.py\r\n6. JAX will through a exception but the picked module will be dumped with natural allocs.","created_at":"2021-12-15T13:31:35Z","closed_at":"2022-12-29T05:11:54Z","merged_at":null,"user_id":47845686,"sentiment":{"polarity":0.1,"subjectivity":0.4}}
{"_id":803040287,"title":"Bump psutil from 5.6.2 to 5.6.6 in /tensorflow/tools/ci_build/release","body":"Bumps [psutil](https://github.com/giampaolo/psutil) from 5.6.2 to 5.6.6.\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/giampaolo/psutil/blob/master/HISTORY.rst\">psutil's changelog</a>.</em></p>\n<blockquote>\n<h1>5.6.6</h1>\n<p>2019-11-25</p>\n<p><strong>Bug fixes</strong></p>\n<ul>\n<li>1179_: [Linux] Process cmdline() now takes into account misbehaving processes\nrenaming the command line and using inappropriate chars to separate args.</li>\n<li>1616_: use of Py_DECREF instead of Py_CLEAR will result in double free and\nsegfault\n(<code>CVE-2019-18874 &lt;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-18874&gt;</code>__).\n(patch by Riccardo Schirone)</li>\n<li>1619_: [OpenBSD] compilation fails due to C syntax error.  (patch by Nathan\nHoughton)</li>\n</ul>\n<h1>5.6.5</h1>\n<p>2019-11-06</p>\n<p><strong>Bug fixes</strong></p>\n<ul>\n<li>1615_: remove pyproject.toml as it was causing installation issues.</li>\n</ul>\n<h1>5.6.4</h1>\n<p>2019-11-04</p>\n<p><strong>Enhancements</strong></p>\n<ul>\n<li>1527_: [Linux] added Process.cpu_times().iowait counter, which is the time\nspent waiting for blocking I/O to complete.</li>\n<li>1565_: add PEP 517/8 build backend and requirements specification for better\npip integration.  (patch by Bernát Gábor)</li>\n</ul>\n<p><strong>Bug fixes</strong></p>\n<ul>\n<li>875_: [Windows] Process' cmdline(), environ() or cwd() may occasionally fail\nwith ERROR_PARTIAL_COPY which now gets translated to AccessDenied.</li>\n<li>1126_: [Linux] cpu_affinity() segfaults on CentOS 5 / manylinux.\ncpu_affinity() support for CentOS 5 was removed.</li>\n<li>1528_: [AIX] compilation error on AIX 7.2 due to 32 vs 64 bit differences.\n(patch by Arnon Yaari)</li>\n<li>1535_: 'type' and 'family' fields returned by net_connections() are not\nalways turned into enums.</li>\n<li>1536_: [NetBSD] process cmdline() erroneously raise ZombieProcess error if\ncmdline has non encodable chars.</li>\n<li>1546_: usage percent may be rounded to 0 on Python 2.</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/giampaolo/psutil/commit/c6cd256da95ffe9599792759b1c2586ba24fa047\"><code>c6cd256</code></a> pre release</li>\n<li><a href=\"https://github.com/giampaolo/psutil/commit/b2414b83d3d728ec34ea0e35bfb21517ee231401\"><code>b2414b8</code></a> revert <a href=\"https://github-redirect.dependabot.com/giampaolo/psutil/issues/1595\">#1595</a></li>\n<li><a href=\"https://github.com/giampaolo/psutil/commit/c63369e999b458ecbd559bdde895c344b4db2841\"><code>c63369e</code></a> updat HISTORY</li>\n<li><a href=\"https://github.com/giampaolo/psutil/commit/edb20f664f28653dcdd24f0bf0191984738dca6e\"><code>edb20f6</code></a> linux, cmdline(), fix for <a href=\"https://github-redirect.dependabot.com/giampaolo/psutil/issues/1179\">#1179</a>, comment 552984549: sometimes string ends wit...</li>\n<li><a href=\"https://github.com/giampaolo/psutil/commit/d739cbb1a5b207212d467b219dfc25b017911530\"><code>d739cbb</code></a> use PROCESS_QUERY_LIMITED_INFORMATION</li>\n<li><a href=\"https://github.com/giampaolo/psutil/commit/f7e898b0987f97352c7551bdd9b29b594e1236f6\"><code>f7e898b</code></a> <a href=\"https://github-redirect.dependabot.com/giampaolo/psutil/issues/1595\">#1595</a>: use psutil_pid_is_running() instead of GetExitCodeProcess</li>\n<li><a href=\"https://github.com/giampaolo/psutil/commit/72c84cb4edb5c0968a83c1f45ad5cc51235e0af3\"><code>72c84cb</code></a> #fix <a href=\"https://github-redirect.dependabot.com/giampaolo/psutil/issues/1595\">#1595</a> / windows: kill() may not raise AccessDenied</li>\n<li><a href=\"https://github.com/giampaolo/psutil/commit/1f8d432db12a907544ac533b66a5a61ba25321fb\"><code>1f8d432</code></a> Merge branch 'master' of github.com:giampaolo/psutil</li>\n<li><a href=\"https://github.com/giampaolo/psutil/commit/e6faebcd7adaa327d1ce57385cbebe7724d02350\"><code>e6faebc</code></a> release gil around users()/BSD (<a href=\"https://github-redirect.dependabot.com/giampaolo/psutil/issues/1425\">#1425</a>)</li>\n<li><a href=\"https://github.com/giampaolo/psutil/commit/5cb1b0b526765720253fdb2e8eff0bf380bbe0a8\"><code>5cb1b0b</code></a> Merge branch 'master' of github.com:giampaolo/psutil</li>\n<li>Additional commits viewable in <a href=\"https://github.com/giampaolo/psutil/compare/release-5.6.2...release-5.6.6\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=psutil&package-manager=pip&previous-version=5.6.2&new-version=5.6.6)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/tensorflow/tensorflow/network/alerts).\n\n</details>","created_at":"2021-12-15T04:24:07Z","closed_at":"2021-12-16T03:37:22Z","merged_at":null,"user_id":49699333,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":803015108,"title":"Addressed case where quantized tfl.fully_connected output shape mismatches","body":"Need to ensure that the output shape and fully_connected shape are not\r\nrequired to have the same case. Updated so when the RescaleOp is created\r\nit is allowed to infer its own return shape.","created_at":"2021-12-15T03:24:25Z","closed_at":"2021-12-16T22:38:33Z","merged_at":"2021-12-16T22:38:33Z","user_id":5508949,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":802887280,"title":"Hide JPEG symbols on Darwin (to align with Linux)","body":"//tensorflow:tensorflow_framework specifies a version script so that the internal version of libjpeg isn't leaked, however this is not reflected in the darwin settings.  Align them.","created_at":"2021-12-14T22:52:20Z","closed_at":"2021-12-22T21:01:54Z","merged_at":"2021-12-22T21:01:54Z","user_id":97853,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":802509841,"title":"Allign type of TOSA.Const so that both attribute and Result have the …","body":"Allign type of TOSA.Const so that both attribute and Result have the same type\r\n\r\nbazel test tensorflow/compiler/mlir/tosa/... --test_timeout 240: Passes\r\n\r\nChange-Id: I7e83117e8c2a32416160a9f67b95d54caf4f4791\r\nSigned-off-by: Aaron DeBattista <aaron.debattista@arm.com>","created_at":"2021-12-14T16:13:50Z","closed_at":"2021-12-15T19:37:36Z","merged_at":null,"user_id":7952559,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":802504598,"title":"Add a Legalization Enable Option to the TFLite to TOSA pass in order …","body":"Add a Legalization Enable Option to the TFLite to TOSA pass in order to add rewrites dynamically\r\n\r\nChange-Id: I24c29e1e3488a6ebf2a0433a749bd487918e6e3b\r\nSigned-off-by: Aaron DeBattista <aaron.debattista@arm.com>","created_at":"2021-12-14T16:08:18Z","closed_at":"2022-01-11T22:53:52Z","merged_at":"2022-01-11T22:53:52Z","user_id":7952559,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":802487262,"title":"Update tensorflow-io-gcs-filesystem version and add python3.10 support","body":"With the release of 0.23.0 tensorflow-io-gcs-filesystem, it is possible\r\nto update and remove the limitation of python3.10.\r\n\r\n/cc @mihaimaruseac \r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2021-12-14T15:50:52Z","closed_at":"2021-12-14T22:02:32Z","merged_at":"2021-12-14T22:02:32Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":802149889,"title":"Use the same variable","body":null,"created_at":"2021-12-14T09:52:48Z","closed_at":"2022-08-30T19:30:13Z","merged_at":"2022-08-30T19:30:13Z","user_id":6374087,"sentiment":{"polarity":0.0,"subjectivity":0.125}}
{"_id":802142464,"title":"Use the same variable","body":null,"created_at":"2021-12-14T09:44:01Z","closed_at":"2021-12-14T09:44:20Z","merged_at":null,"user_id":6374087,"sentiment":{"polarity":0.0,"subjectivity":0.125}}
{"_id":802069392,"title":"Fixed pip package build with cmake due to missing numpy include path","body":null,"created_at":"2021-12-14T08:18:01Z","closed_at":"2022-01-04T05:49:41Z","merged_at":"2022-01-04T05:49:41Z","user_id":56120470,"sentiment":{"polarity":-0.075,"subjectivity":0.20833333333333334}}
{"_id":802028375,"title":"Added lowerings for mhlo.sine and mhlo.cosine to mhlo preprocessing","body":"We can decompose sine and cosine operations to additional sine, cosing, and\r\nexponential operattions. Includes tests for both operations.","created_at":"2021-12-14T07:17:23Z","closed_at":"2021-12-15T00:18:19Z","merged_at":"2021-12-15T00:18:19Z","user_id":5508949,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":801963977,"title":"[TF:TRT] Use the third_party TRT-OSS plugin for CombinedNMS","body":"This now implements the plugin built locally via the third_party TRT OSS dependency for CombinedNMS.\r\n- Remove the legacy BatchedNMS plugin converter, and replace it entirely with the new EfficientNMS plugin converter.\r\n- Add implicit batch mode support for EfficientNMS.\r\n- Update the commit of the third_party TRT-OSS archive to the 22.02 release, as this includes some plugin updates required for CombinedNMS compatibility.\r\n- Improved the integration test for CombinedNMS for better coverage and representation of the plugin's behavior.","created_at":"2021-12-14T05:13:07Z","closed_at":"2022-11-24T17:57:33Z","merged_at":null,"user_id":75912517,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":801861251,"title":"[Go] Stabilize generated wrappers","body":"Multiple commits each day make white-space only changes to `/tensorflow/go/op/wrappers.go` with commit message `Go: Update generated wrapper functions for TensorFlow ops.`  Example: tensorflow/tensorflow@82c3b11\r\n\r\nPR stabilizes output from the genop library, which generates these wrappers.  The source of the current instability is the text marshaler in google.golang.org/protobuf, which purposefully adds [random whitespace](https://github.com/protocolbuffers/protobuf-go/blob/v1.27.1/internal/encoding/text/encode.go#L226).\r\n- Catch and remove superfluous whitespace when marshaling proto message\r\n- Sort op list (and thus wrapper functions) lexicographically by name\r\n- Re-enable test TestGeneratedOp which was previously disabled due to output instability","created_at":"2021-12-14T01:16:47Z","closed_at":"2021-12-15T16:14:44Z","merged_at":"2021-12-15T16:14:44Z","user_id":17497234,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":801783709,"title":"Patch absl for cuda 11.6 compatibility.","body":"Works around the following compiler errors.\r\n```\r\nerror: expression must have a constant value\r\nnote #2721-D: expression cannot be interpreted\r\n```\r\nAttn: @sanjoy ","created_at":"2021-12-13T22:52:55Z","closed_at":"2021-12-14T17:13:17Z","merged_at":"2021-12-14T17:13:17Z","user_id":1873655,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":800457676,"title":"added download per month badge","body":null,"created_at":"2021-12-11T12:13:44Z","closed_at":"2022-01-30T23:12:56Z","merged_at":null,"user_id":78961713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":800199374,"title":"[oneDNN] Upgrade oneDNN version to 2.5-rc","body":"This PR is to upgrade oneDNN version to 2.5-rc.","created_at":"2021-12-10T19:49:35Z","closed_at":"2021-12-15T03:57:12Z","merged_at":"2021-12-15T03:57:12Z","user_id":43043975,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":800137669,"title":"Adding support for Zstd Compression","body":"The current API of `TFRecordOptions` only supports:\r\n- no compression\r\n- GZIP compression\r\n- ZLIB compression\r\n\r\nWith this PR, I have added support for a 4th compression algorithm, ZSTD: https://github.com/facebook/zstd/\r\n\r\nThe API for `TFRecordOptions` is therefore updated to accept the following parameters:\r\n\r\n```\r\n      compression_type: `\"GZIP\"`, `\"ZLIB\"`, `\"ZSTD\"` or `\"\"` (no compression).\r\n      zstd_input_buffer_size: int or `None`. \r\n      zstd_output_buffer_size: int or `None`.\r\n      zstd_flush_mode: int or `None`.\r\n      zstd_nb_workers: int or `None`.\r\n      zstd_compression_level: 0 to 19, or `None`. Default: ZSTD_CLEVEL_DEFAULT.\r\n      zstd_compression_strategy: 0 to 9, or `None`. Default: 0.\r\n      zstd_window_log: between ZSTD_WINDOWLOG_MIN and ZSTD_WINDOWLOG_MAX. Default: 0.\r\n```\r\n\r\nMaintaining backward compatibility with the current API.\r\n\r\n*Note: the branch is called `adrian-compresssion-r2.6`, as originally it was based on r2.6, but it has been since updated to match current master branch 3038529326066c4eb5cb0453d7f82d929551a24e*","created_at":"2021-12-10T18:10:18Z","closed_at":"2022-10-12T01:44:00Z","merged_at":null,"user_id":562969,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":799152747,"title":"[oneDNN] Making a slight tweak to the cost model based on benchmarking.","body":"This PR tweaks the cost model based on recent benchmarking.","created_at":"2021-12-09T19:56:29Z","closed_at":"2022-01-21T14:28:49Z","merged_at":"2022-01-21T14:28:49Z","user_id":39842562,"sentiment":{"polarity":-0.16666666666666666,"subjectivity":0.16666666666666666}}
{"_id":799113627,"title":"Explicitly reset interpreter to prevent memory leaks when using delegate","body":"Internally at Broadcom, we ran into a memory leak when running the label_image app using an external HW delegate.  The delegate was freed/released before the some of the graph data, causing our libraries to report an memory leak.\r\n\r\nThe fix, calling \"Interpreter.reset()\" is already done in other test apps.  E.g. see: https://github.com/tensorflow/tensorflow/commit/23873d4d6518a6f169600a076001dc2d7a661dd0 by @terryheo \r\n\r\nChange-Id: I884cde7e31d84b1bcd7b90fe77eb4b2321f3df0c","created_at":"2021-12-09T19:08:19Z","closed_at":"2021-12-13T18:24:45Z","merged_at":"2021-12-13T18:24:45Z","user_id":92391026,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":799053419,"title":"[*.h,*.hpp,*.cpp,*.proto] clang-format","body":"`clang-format` 13.0.0 at 9ebfeab\r\n\r\n```\r\n$ fd -eh -ec -ehpp -ecpp -eproto -x clang-format -i --style=Google {} \\;\r\n```\r\n\r\n---\r\n\r\n**Related**:\r\n\r\n   - https://github.com/tensorflow/addons does a bunch of auto format and auto linting\r\n   - My recently merged PR: #53329\r\n   - My #53360\r\n   - My #53374\r\n\r\n**Disadvantages**:\r\n\r\n  - Impact just about every file in the codebase\r\n  - Require open PRs to be modified and forks to be updated\r\n\r\n**Mitigation of disadvantages**:\r\n\r\n  - To avoid stepping on toes, one can write a pull request scanner to avoid touching any file that has a current pull request lodged against it. I'm happy to write this script, but will also need someone to run this internally so it knows what files are being affected by non public PRs\r\n\r\n**Advantages**:\r\n\r\n  - Easier for automated tooling to make automated fixes (whitespace / prettyprinting issues don't get in the way)\r\n  - More consistent codebase (which is somewhat of a quality metric)","created_at":"2021-12-09T17:42:43Z","closed_at":"2021-12-09T17:45:27Z","merged_at":null,"user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":799029376,"title":"[*.py,*.ipynb] blacken","body":"Using version 21.12b0 from Python 3.10:\r\n\r\n```sh\r\n$ python -m black .\r\n[…]\r\nAll done! ✨ 🍰 ✨\r\n2767 files reformatted, 77 files left unchanged.\r\n```\r\n\r\n---\r\n\r\n**Related**:\r\n\r\n   - https://github.com/tensorflow/addons does a bunch of auto format and auto linting\r\n   - My recently merged PR: #53329\r\n   - My #53360\r\n\r\n**Disadvantages**:\r\n\r\n  - Impact just about every file in the codebase\r\n  - Require open PRs to be modified and forks to be updated\r\n\r\n**Mitigation of disadvantages**:\r\n\r\n  - To avoid stepping on toes, one can write a pull request scanner to avoid touching any file that has a current pull request lodged against it. I'm happy to write this script, but will also need someone to run this internally so it knows what files are being affected by non public PRs\r\n\r\n**Advantages**:\r\n\r\n  - Easier for automated tooling to make automated fixes (whitespace / prettyprinting issues don't get in the way)\r\n  - More consistent codebase (which is somewhat of a quality metric)","created_at":"2021-12-09T17:11:39Z","closed_at":"2021-12-09T17:22:27Z","merged_at":null,"user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":798827823,"title":"[MHLO] eliminate redundant transpose","body":"Simplify Transpose(Tsanspose(X)) to Transpose(X)","created_at":"2021-12-09T13:29:58Z","closed_at":"2021-12-15T20:56:51Z","merged_at":"2021-12-15T20:56:51Z","user_id":22370779,"sentiment":{"polarity":-0.2,"subjectivity":0.2}}
{"_id":798675644,"title":"Update Compute Library to 21.11 release","body":"Updates the version of Compute Library for the Arm architecture to 21.11\r\nThis release adds support for bf16 fast-maths-mode to additional\r\noneDNN primitives - inner product and matmul.\r\n\r\noneDNN 2.4 build is patched to expose this functionality to TensorFlow\r\n\r\n`TF_ENABLE_ONEDNN_OPTS` flag (runtime selection of oneDNN backend) is\r\nenabled on AArch64 for builds with `--config=mkl_aarch64` set.","created_at":"2021-12-09T10:21:48Z","closed_at":"2021-12-16T01:19:42Z","merged_at":"2021-12-16T01:19:42Z","user_id":32057673,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":798638100,"title":"[Grappler] Add enforced_layout parameter for LayoutOptimizer","body":"This PR adds an option to enforce a specific layout in the grappler `LayoutOptimizer`.\r\n\r\nThe `enforce_layout` can be set to either `NHCW` or `NCHW`.  When set, the layout optimizer will attempt to convert all the layout sensitive operations to the specified layout (thus, not relying on `NumConvOnDeviceWithDataTypeOverThreshold` anymore).","created_at":"2021-12-09T09:37:58Z","closed_at":"2022-01-13T17:31:41Z","merged_at":"2022-01-13T17:31:41Z","user_id":3193578,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":798564943,"title":"Fix wrong output of tf.stack with 0-dimension tensor","body":"This PR tries to address the issue raised in #53300 where\r\ntf.stack will silently output wrong result with 0-dimension tensor.\r\nThe issue was that the shape check was skipped when num of output elements\r\nwas zero. This PR fixed the issue.\r\n\r\nThis PR fixes #53300.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2021-12-09T08:06:11Z","closed_at":"2022-02-23T16:37:52Z","merged_at":null,"user_id":6932348,"sentiment":{"polarity":-0.5,"subjectivity":0.9}}
{"_id":798409088,"title":"build: bump bazel to 4.2.2","body":null,"created_at":"2021-12-09T03:10:39Z","closed_at":"2021-12-21T22:13:51Z","merged_at":"2021-12-21T22:13:51Z","user_id":1580956,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":797977624,"title":"Update go documenting comment","body":"Working with tensorflow version 2.6.0 it seems that the toy python program mentioned in the comment no longer works.\r\n`tensorflow.ConfigProto()` seems to have been moved to `tensorflow.compat.v1.ConfigProto()`\r\nAnd the byteStream shown bellow `(\\x01\"` seems to correspond to setting the `inter_op` parameter not the `intra_op`","created_at":"2021-12-08T16:12:23Z","closed_at":"2021-12-10T01:14:57Z","merged_at":"2021-12-10T01:14:57Z","user_id":19623477,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":797388932,"title":"R2.7 cherry-picks to fix TFLite ARM PIP build","body":"These cherry-picks are needed to fix TFLite ARM PIP build.","created_at":"2021-12-08T00:58:28Z","closed_at":"2022-01-27T01:40:28Z","merged_at":"2022-01-27T01:40:28Z","user_id":2908505,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":797331692,"title":"[lite] Remove explicit #define for  TFLITE_ENABLE_HEXAGON. This shoul…","body":"…d be enabled by separate build target.\r\n\r\nPiperOrigin-RevId: 414750624\r\nChange-Id: I0650e96f81e840f4f885c7f459a59d75620e3743","created_at":"2021-12-07T23:11:59Z","closed_at":"2022-01-27T01:40:23Z","merged_at":"2022-01-27T01:40:23Z","user_id":44206880,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":797251733,"title":"[lite] Add flag TFLITE_ENABLE_HEXAGON and update build rules to only …","body":"…define it if compiling for arm on non-apple devices.\r\n\r\nPiperOrigin-RevId: 414330792\r\nChange-Id: I88e534e506c03554c2cb6b079ba2bde07f1244e1","created_at":"2021-12-07T20:35:30Z","closed_at":"2022-01-27T01:39:54Z","merged_at":"2022-01-27T01:39:54Z","user_id":44206880,"sentiment":{"polarity":0.0,"subjectivity":1.0}}
{"_id":797235011,"title":"meddling around","body":null,"created_at":"2021-12-07T20:05:42Z","closed_at":"2021-12-09T17:13:48Z","merged_at":null,"user_id":38564728,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":797201269,"title":"Update grouping.py","body":"Added an example and updated format","created_at":"2021-12-07T19:09:51Z","closed_at":"2021-12-08T20:23:58Z","merged_at":"2021-12-08T20:23:57Z","user_id":46058173,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":796794482,"title":"Update array_ops.py","body":"Removed extra double quote(`\"`)","created_at":"2021-12-07T10:48:47Z","closed_at":"2021-12-08T15:57:14Z","merged_at":"2021-12-08T15:57:14Z","user_id":81610181,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":796719676,"title":"Add GPU kernel for SparseSplit","body":"cc @nluehr ","created_at":"2021-12-07T09:24:44Z","closed_at":"2022-02-02T19:46:11Z","merged_at":"2022-02-02T19:46:11Z","user_id":3979096,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":796552812,"title":"[TF-TRT] Add Layout + ConstFold optimization on the TRT engine op","body":"### Motivation\r\nThe introduction of Tensor Cores in recent GPU architectures (and the subsequent changes in cuDNN) made `NHWC` the preferred layout for convolutions in TF.\r\n\r\nHowever, the TensorRT API requires the input for convolution to be in `NCHW`. To satisfy this requirement, TF-TRT was inserting transpose ops around convolutions when necessary.\r\n\r\nThis PR adds a layout optimization pass with a target layout of `NCHW`, which ensures that most of Conv kernels will be in TRT compatible layout. Additionally, the layout optimization pass can eliminate redundant layout transpose operations. This results in a simpler TRT network with a larger potential for optimization.\r\n\r\n### Description\r\nTF-TRT now accomplishes it by running both a grapplers's `GenericLayoutOptimizer` followed by a ConstantFolding optimizers  in the `ConvertGraphDefToEngine`, applying them on a segment level.\r\n\r\nThe LayoutOptimizer ensures that the number of transposition is optimal. This optimization is described in slides 18-21 of [TensorFlow Graph Optimizations presentation ](https://web.stanford.edu/class/cs245/slides/TFGraphOptimizationsStanford.pdf)\r\n\r\nThis PR also modifies the `GenericLayoutOptimizer` to enforce a specific layout is set as layout target, through a ctor parameter.\r\n\r\nThe layout optimizer can be enabled with the environment variable `TF_TRT_ENABLE_LAYOUT_OPTIMIZER` (default=1, set to 0 to disable).\r\n\r\n### Dependency\r\n\r\nThis PR needs the changes in https://github.com/tensorflow/tensorflow/pull/53368\r\n","created_at":"2021-12-07T05:14:03Z","closed_at":"2022-02-04T19:20:59Z","merged_at":"2022-02-04T19:20:59Z","user_id":3193578,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":796528676,"title":"[tensorflow/compiler/xla/python/types.h] add call to `reserve()` before populating vector","body":"Exciting stuff","created_at":"2021-12-07T04:17:15Z","closed_at":"2022-02-16T01:42:30Z","merged_at":null,"user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":796521898,"title":"[.clang-format] Init @ root","body":"Matches https://github.com/tensorflow/tflite-micro/blob/d1a6c79/.clang-format https://github.com/tensorflow/ngraph-bridge/blob/bad873a/.clang-format:\r\n```yml\r\n# Run manually to reformat a file:\r\n# clang-format -i --style=file <file>\r\nBasedOnStyle: Google\r\nDerivePointerAlignment: false\r\n```\r\n\r\nAlternatively can match the [4 year old] one in the xla directory https://github.com/tensorflow/tensorflow/blob/1e67c90/tensorflow/compiler/xla/.clang-format:\r\n```yml\r\nBasedOnStyle: Google\r\nLanguage: Cpp\r\nPointerBindsToType: true\r\n\r\n```","created_at":"2021-12-07T04:03:21Z","closed_at":"2021-12-08T15:25:25Z","merged_at":"2021-12-08T15:25:25Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":796409343,"title":"Update nn_ops.py","body":"Removed the special character which was considering the information in bracket as hyperlink.","created_at":"2021-12-07T00:08:16Z","closed_at":"2021-12-10T07:55:15Z","merged_at":"2021-12-10T07:55:15Z","user_id":73069040,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":796389519,"title":"[TF-TRT] Fix TRTEngineOP Inference Shape","body":"@bixia1 for review\r\nCC: @tfeher\r\n\r\nThis PR addresses that TRTEngineOP do not mention any output shape in the Graphdef, which limit graphdef analysis, and can block large scale deployment with framework like TRITON Inference Server.\r\n\r\nFix : #52934","created_at":"2021-12-06T23:32:27Z","closed_at":"2021-12-07T17:34:42Z","merged_at":"2021-12-07T17:34:41Z","user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":796314014,"title":"[TF:TRT] Fix TF-TRT OSS Components Build","body":null,"created_at":"2021-12-06T21:43:11Z","closed_at":"2021-12-07T19:08:27Z","merged_at":"2021-12-07T19:08:27Z","user_id":30323187,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":796091605,"title":"Add tolerance to ragged square root test so it passes on AARCH64","body":"Fixes #53322 ","created_at":"2021-12-06T17:10:30Z","closed_at":"2022-01-12T17:38:04Z","merged_at":"2022-01-12T17:38:04Z","user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":795640870,"title":"Extract a function for parsing operator MIRROR_PAD","body":"Extract the parsing of op parameters from the flatbuffer out of a\r\nswitch statement case, into a standalone function which can be\r\ncalled by the micro op resolver.\r\n\r\nThis PR is part of the work to port operator MIRROR_PAD\r\nfrom TFL to TFLM, as tracked in issue https://github.com/tensorflow/tflite-micro/issues/741.","created_at":"2021-12-06T08:35:08Z","closed_at":"2021-12-08T00:39:02Z","merged_at":"2021-12-08T00:39:02Z","user_id":5793387,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":795344466,"title":"Freeze ReadVariableOp if the handle name is forwarded by Identity","body":"`FreezeSavedModel` does not convert variables inside functions. To freeze variables in a model with functions, we need to inline the functions first. After inlining a function with resource variables, we have the following node sequence:\r\n\r\n`VarHandleOp` -> `Identity` -> `ReadVariableOP`\r\n\r\nThis PR updates `FreezeSavedModel` to handle SavedModels where the `GraphDef` was inlined. This involves two steps:\r\n- Remove the assumption that `VarHandleOp` is an immediate parent of `ReadVariableOp`.\r\n- Change the dtype of `Identity` to match the dtype of the variable.","created_at":"2021-12-05T18:07:54Z","closed_at":"2022-02-21T08:42:54Z","merged_at":"2022-02-21T08:42:54Z","user_id":3671106,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":795329658,"title":"Remove wheel requirement as it is not needed for the pip package","body":"https://github.com/simonpercivall/astunparse/pull/65\r\n\r\n```\r\nastunparse $ for tag in v1.6.0 v1.6.1 v1.6.2 v1.6.3; do git checkout $tag; echo $tag; grep wheel . -R --exclude-dir=.git; done\r\nPrevious HEAD position was d7ba156 Bump version\r\nHEAD is now at df08255 Bump version and add HISTORY entry.\r\nv1.6.0\r\n./setup.cfg:[wheel]\r\n./Makefile:\tpython setup.py bdist_wheel\r\n./requirements.txt:wheel >= 0.23.0, < 1.0\r\nPrevious HEAD position was df08255 Bump version and add HISTORY entry.\r\nHEAD is now at c73b675 Bump version.\r\nv1.6.1\r\n./setup.cfg:[wheel]\r\n./Makefile:\tpython setup.py bdist_wheel\r\n./requirements.txt:wheel >= 0.23.0, < 1.0\r\nPrevious HEAD position was c73b675 Bump version.\r\nHEAD is now at d7ba156 Bump version\r\nv1.6.2\r\n./setup.cfg:[wheel]\r\n./Makefile:\tpython setup.py bdist_wheel\r\n./requirements.txt:wheel >= 0.23.0, < 1.0\r\nPrevious HEAD position was d7ba156 Bump version\r\nHEAD is now at 2acce01 Merge pull request #42 from simonpercivall/merge/python3.8-support\r\nv1.6.3\r\n./setup.cfg:[wheel]\r\n./Makefile:\tpython setup.py bdist_wheel\r\n./requirements.txt:wheel >= 0.23.0, < 1.0\r\n```","created_at":"2021-12-05T16:38:01Z","closed_at":"2021-12-08T02:07:28Z","merged_at":"2021-12-08T02:07:28Z","user_id":90008,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":794855892,"title":"[oneDNN] Conv3D + Add fusion which has BiasAdd semantics","body":"This PR extends https://github.com/tensorflow/tensorflow/pull/52358 and adds support for Conv3D NDHWC format.\r\nIt also adds support for Conv + Add fusion where the Add is of the form {1,1,1,C} for Conv2D or {1,1,1,1,C} for Conv3D\r\ni.e For NHWC/NDHWC, bias should have 4/5 or less dimensions and should be all 1's except for the channel dimension.","created_at":"2021-12-03T19:43:10Z","closed_at":"2022-03-29T00:24:52Z","merged_at":null,"user_id":42224278,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":794836675,"title":"Update CODEOWNERS","body":null,"created_at":"2021-12-03T19:08:54Z","closed_at":"2021-12-03T19:26:38Z","merged_at":null,"user_id":62030250,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":794228772,"title":"fix: GIT_REPOSITORY for eigen","body":"A missing trailing .git of GIT_REPOSITORY is causing git clone error on centos 6 machine.\r\n\r\nIt seems like this error didn't occur in a ubuntu machine, but it can be reproduced in a centos6 machine.\r\n\r\nReproduce:\r\n1. On a centos 6 machine, add `set(FETCHCONTENT_QUIET FALSE)` to eigen.cmake.\r\n2. run cmake with `cmake ../tensorflow/lite/` (following instructions of https://www.tensorflow.org/lite/guide/build_cmake)\r\n3. Found the following error message:\r\n```\r\n-- Build files have been written to: /tensorflow/tflite_build_centos/_deps/eigen-subbuild\r\n[ 11%] Performing download step (git clone) for 'eigen-populate'\r\nInitialized empty Git repository in \r\n/tensorflow/tflite_build_centos/eigen/.git/\r\nerror: RPC failed; result=22, HTTP code = 422\r\n```\r\n\r\nOn the other hand, the cmake process hung up after this error occured, maybe we can consider adding `set(FETCHCONTENT_QUIET FALSE)` in the `tensorflow/lite/CMakeLists.txt`.","created_at":"2021-12-03T02:53:57Z","closed_at":"2021-12-06T19:04:24Z","merged_at":"2021-12-06T19:04:24Z","user_id":7500954,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":794080712,"title":"[INTEL oneDNN] Disable oneDNN blocked format support","body":"\r\nThis PR intends to disable oneDNN blocked format support in TensorFlow 2.8. \r\n\r\nWe will refactor related code in TensorFlow 2.9  (Note: refactoring work has been done but PR is BIG;  \r\nwe do not submit it because TF 2.8 cutting date is coming). ","created_at":"2021-12-02T21:20:57Z","closed_at":"2021-12-09T08:40:55Z","merged_at":"2021-12-09T08:40:55Z","user_id":29215195,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":794046175,"title":"Refactor TOSA Legalizations to allow a legalization pass, to selectiv…","body":"…ely apply the DECL_CONVERT_OP(*) allowing to choose whether to legalize the OP to TOSA on OP by OP case.","created_at":"2021-12-02T20:26:21Z","closed_at":"2021-12-08T20:50:30Z","merged_at":null,"user_id":7952559,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":794043655,"title":"Refactor the strip_quant_types.cc inorder to only strip quantization …","body":"…types from values that are produced by TOSA and consumed by TOSA ops","created_at":"2021-12-02T20:22:35Z","closed_at":"2021-12-08T20:40:01Z","merged_at":null,"user_id":7952559,"sentiment":{"polarity":0.0,"subjectivity":1.0}}
{"_id":794039456,"title":"Remove type casting that removed quantization information as part of …","body":"…the TOSA legalizations\r\n","created_at":"2021-12-02T20:16:18Z","closed_at":"2021-12-08T20:50:08Z","merged_at":null,"user_id":7952559,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":793622454,"title":"Update autoclustering_xla.ipynb","body":"Changed `lr` to `learning_rate`, which removes a deprecation warning.","created_at":"2021-12-02T11:58:50Z","closed_at":"2022-02-01T13:13:39Z","merged_at":null,"user_id":81610181,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":792777477,"title":"Add tag to tests to allow exclusion on AARCH64","body":"Fixes #53189 ","created_at":"2021-12-01T14:42:11Z","closed_at":"2021-12-08T00:45:50Z","merged_at":"2021-12-08T00:45:49Z","user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":792733884,"title":"Disable caching for ACL softmax primitives","body":"This patch enables the use of ACL softmax primitives in oneDNN, and disables caching of these primitives when used in TensorFlow.","created_at":"2021-12-01T13:58:36Z","closed_at":"2021-12-25T12:42:19Z","merged_at":null,"user_id":43411718,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":792568644,"title":"docs: Removed incorrect note in ctc_beam_search_decoder","body":"Hello there :wave: \r\n\r\nAs mentioned in #21051, there is an issue with the mention in `tf.nn.ctc_beam_search_decoder` claiming that in a special case, it's the same as the greedy decoder. Both from a pure code & theoretical point of view, I would argue that this claim is wrong.\r\n\r\nThis PR simply removes the incorrect note to fix the documentation :ok_hand: \r\n\r\nAny feedback is welcome!\r\n\r\ncc @mihaimaruseac @tatianashp","created_at":"2021-12-01T10:50:13Z","closed_at":"2022-03-17T23:42:25Z","merged_at":"2022-03-17T23:42:25Z","user_id":26927750,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":792366059,"title":"all_reduce_indexed_slices remove not eager context","body":"@crccw So why there is a eager runtime error before?\r\n\r\nall_reduce_indexed_slices can be called in eager mode and runs ok in my environment multiworker mirrored strategy.","created_at":"2021-12-01T06:34:09Z","closed_at":"2023-03-02T21:59:05Z","merged_at":"2023-03-02T21:59:05Z","user_id":2714635,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":792320361,"title":"So why there is a eager runtime error before?","body":"@crccw So why there is a eager runtime error before?","created_at":"2021-12-01T05:03:54Z","closed_at":"2021-12-01T06:09:00Z","merged_at":null,"user_id":2714635,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":792269450,"title":"all_reduce_indexed_slices can be called in eager mode and runs ok in …","body":"…my environment\r\nall_reduce_indexed_slices can be called in eager mode and runs ok","created_at":"2021-12-01T03:14:39Z","closed_at":"2021-12-01T04:47:30Z","merged_at":null,"user_id":2714635,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":792253074,"title":"[bazel] Update to 4.2.1","body":"Bazel 4.2.1 is the first version that works well with M1 macs, and also gets us on newer apple rules","created_at":"2021-12-01T02:44:46Z","closed_at":"2021-12-02T14:57:17Z","merged_at":null,"user_id":283886,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":792180159,"title":"Added logging statements when data loading was detected","body":"These logging statements are placed so they will log when data has been loaded.","created_at":"2021-12-01T00:18:44Z","closed_at":"2022-09-09T01:01:22Z","merged_at":null,"user_id":95321823,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":792153782,"title":"[ROCm] Fix for a regression in the unit test `//tensorflow/python/kernel_tests/nn_ops:pooling_ops_test_gpu`","body":"…\r\n\r\nThe unit-test `//tensorflow/python/kernel_tests/nn_ops:pooling_ops_test_gpu` started failing, after this change in the Eigen repo - https://gitlab.com/libeigen/eigen/-/commit/cc3573ab4451853774cd5c3497373d5fe8914774\r\n\r\n```\r\nINFO: From Testing //tensorflow/python/kernel_tests/nn_ops:pooling_ops_test_gpu:\r\n==================== Test output for //tensorflow/python/kernel_tests/nn_ops:pooling_ops_test_gpu:\r\nRunning tests under Python 3.9.7: /usr/bin/python3\r\n[ RUN      ] PoolingTest.testAvgPoolEmpty0 (pool_func=<function avg_pool at 0x7fb968603f70>, data_format='NHWC', data_type=tf.float32, use_gpu=False, v2=False)\r\n...\r\n...\r\n[ RUN      ] PoolingTest.testAvgPoolKernelSmallerThanStride4 (pool_func=<function avg_pool at 0x7fb968603f70>, data_format='NHWC', data_type=tf.float16, use_gpu=True, v2=False)\r\n2021-11-30 15:31:04.335778: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1525] Created device /device:GPU:0 with 31740 MB memory:  -> device: 0, name: Device 738c, pci bus id: 0000:4a:00.0\r\nINFO:tensorflow:Running NHWC test. False [1, 7, 7, 1] 49 <function avg_pool at 0x7fb968603f70> [1, 2, 2, 1] [1, 3, 3, 1] <dtype: 'float16'>\r\nI1130 15:31:04.335854 140444621272896 pooling_ops_test.py:231] Running NHWC test. False [1, 7, 7, 1] 49 <function avg_pool at 0x7fb968603f70> [1, 2, 2, 1] [1, 3, 3, 1] <dtype: 'float16'>\r\n2021-11-30 15:31:04.336372: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1525] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 31740 MB memory:  -> device: 0, name: Device 738c, pci bus id: 0000:4a:00.0\r\n2021-11-30 15:31:04.341161: I tensorflow/core/common_runtime/gpu_fusion_pass.cc:507] ROCm Fusion is enabled.\r\nMemory access fault by GPU node-4 (Agent handle: 0x486adb0) on address 0x100000000. Reason: Page not present or supervisor privilege.\r\n...\r\n...\r\n```\r\n\r\nThe Eigen commit changes the visibility of the `Packet` type ( `Packet4h2`) for the `Eigen::half` datatype. Prior to the commit, `Packet` type is defined as `Packet4h2` during both the `host` and `device` compile phases of hipcc/nvcc. After the commit the `Packet` type is defined as `Eigen::half` (size == 2) in the `host` compile phase, and as `Packet4h2` (size == 8) in the device compile phase.\r\n\r\n`struct AvgPoolMeanReducer` has a member of type `Packet`(https://github.com/tensorflow/tensorflow/blob/r2.7/tensorflow/core/kernels/eigen_pooling.h#L367), and hence its size will be different during the `host` compile phase and `device` compile phase. It also seems that the implementation of the `average pooling` op ( https://github.com/tensorflow/tensorflow/blob/r2.7/tensorflow/core/kernels/avgpooling_op.h#L34-L38 ) will result in a `struct AvgPoolMeanReducer` argument being passed across the `host` / `device` compile boundary (atleast for `hipcc`) and size mismatch between the two, leads to the subsequent segfault.\r\n\r\nThe fix here is to ensure the `Packet` has the same definitition for both the `host` and `device` compile phases. However changing the type `packetCount_` to `int` unconditionally leads to compile errors, because during the non-gpu / gcc compiles the code within the `!defined(__HIPCC__)` block gets activated, and hence the changes in this commit are guarded by `defined(__HIPCC__)`. Using `int` for `packetCount_` is ok because `PacketAcces`s is already set to `false` within (a different) `defined(__HIPCC__)` block.\r\n\r\n\r\n-----------------------------------------------\r\n\r\n\r\n/cc @cheshire @chsigg \r\n","created_at":"2021-11-30T23:27:31Z","closed_at":"2021-12-03T16:55:35Z","merged_at":"2021-12-03T16:55:35Z","user_id":36858332,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":791974367,"title":"Support CUDNN_HEUR_MODE_B","body":"This PR upgrades the heuristics mode from the previous decision tree to a neural network based solution (i.e., CUDNN_HEUR_MODE_INSTANT to CUDNN_HEUR_MODE_B).\r\nhttps://docs.nvidia.com/deeplearning/cudnn/release-notes/rel_8.html#rel-820.\r\n\r\nIt enables this new mode as default from CUDNN v8.3.\r\n\r\ncc. @nluehr","created_at":"2021-11-30T18:49:51Z","closed_at":"2022-01-06T22:49:00Z","merged_at":"2022-01-06T22:49:00Z","user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":791973395,"title":"The following commit replaces a list of GPU architectures in favor of…","body":"… a single one: 93aa174d0dfa4bfd0bcb6be5bb685edbce490db7\r\n\r\nThis commit fixes the implementation for HIP.\r\n\r\n@frgossen please review this PR.\r\n\r\n/cc @cheshire @chsigg @jurahul ","created_at":"2021-11-30T18:48:20Z","closed_at":"2021-12-02T14:00:55Z","merged_at":null,"user_id":70280935,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":791934181,"title":"🔧 Loosen version constraints on `typing-extensions`","body":"These changes loosen the version constraints on `typing-extensions` to allow TensorFlow to be installed alongside packages that require `typing-extensions >= 3.10`, such as newer versions of Black and PyLint.\r\n\r\nPreviously TensorFlow required a `typing-extensions` version in the `3.7.x` series. However, the newer `3.10.x` series is fully backwards-compatible with the `3.7.x` series (and there are no `3.8.x` or `3.9.x` series). Therefore, these changes allow `typing-extensions` to be installed using either the `3.7.x` or `3.10.x` series.\r\n\r\nIn order to ensure that any future backwards-incompatible changes in the `typing-extensions` package don't cause issues, TensorFlow's dependency on `typing-extensions` does not allow versions from the `3.11.x` series or beyond (`< 3.11`).","created_at":"2021-11-30T17:52:41Z","closed_at":"2022-01-27T01:37:31Z","merged_at":"2022-01-27T01:37:31Z","user_id":1848731,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":791508640,"title":"[PluggableDevice] AsyncOpKernel","body":"This PR is adding kernel C API for `AsyncOpKernel`. The main difference with `OpKernel` is `void (*compute_async_func)(void*, TF_OpKernelContext*, TF_DoneCallback*)` function with an additional `TF_DoneCallback` param.","created_at":"2021-11-30T09:55:24Z","closed_at":"2023-02-22T20:06:49Z","merged_at":"2023-02-22T20:06:49Z","user_id":52769182,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":790670804,"title":"[MHLO]: variadic length input and different types of reduce op lower …","body":"…to linalg","created_at":"2021-11-29T13:19:02Z","closed_at":"2021-12-14T00:13:17Z","merged_at":"2021-12-14T00:13:16Z","user_id":22370779,"sentiment":{"polarity":0.0,"subjectivity":0.6}}
{"_id":790050054,"title":"fix msvc build break on non en-US codepage","body":"`tensorflow/lite/python/analyzer_wrapper/model_analyzer.cc(166): error C2001: 常數中包含新行字元`","created_at":"2021-11-28T07:49:45Z","closed_at":"2021-11-30T20:49:51Z","merged_at":"2021-11-30T20:49:51Z","user_id":10285869,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":789695141,"title":"TF-TRT Enable native segment fallback test with TRT 8","body":"In case there is an error during TRT ICudaEngine engine creation, TF-TRT falls back to native segment (TF function) execution. Previously it was only possible to test this with TRT 7 or earlier, because the method to trigger the error was specific to TRT version < 8.0. \r\n\r\nThis PR introduces an environment variable `TF_TRT_ABORT_CUDA_ENGINE_BUILD`, which can be used  test this fallback mechanism with TRT 8 and later versions.\r\n\r\nAdditionally `DebugString(ITensorProxyPtr)` is corrected for the case when the object is `SimpleITensor`.\r\n\r\nTagging @bixia1 for review and @DEKHTIARJonathan for visibility.","created_at":"2021-11-26T16:26:31Z","closed_at":"2021-12-03T17:09:48Z","merged_at":"2021-12-03T17:09:47Z","user_id":3671106,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":789037353,"title":"cmake: NNAPI delegate uses fp16_headers","body":null,"created_at":"2021-11-25T17:50:42Z","closed_at":"2021-12-07T00:58:39Z","merged_at":"2021-12-07T00:58:39Z","user_id":41016,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":788759950,"title":"Refactor SparseSplit kernel into a device-specific functor","body":"This is in preparation for adding a GPU implementation.\r\nAlso adds a test case for empty input tensors.\r\nNo functional change besides the added test.\r\n\r\ncc @nluehr ","created_at":"2021-11-25T11:36:12Z","closed_at":"2021-12-07T01:28:41Z","merged_at":"2021-12-07T01:28:41Z","user_id":3979096,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":788509753,"title":"If args is a list, the value of parameter `shell` should be true.","body":"If args is a list, shouldn't the value of parameter a be true? Otherwise, only the first item in the args list will be executed as a shell character. ","created_at":"2021-11-25T05:13:36Z","closed_at":"2022-03-28T00:46:11Z","merged_at":null,"user_id":73384585,"sentiment":{"polarity":0.35,"subjectivity":0.65}}
{"_id":788032480,"title":"Fixed performance degradation with RUY library on some platforms (e.g. A53)","body":"The RUY library changed the way to detect target processor to choose btw. kernel implementation optimized for in-order vs. out-of-order CPUs. Instead of micro-benchmark it uses `cpuinfo` library. \r\nRuy started to provide its own `CMakeLists.txt`, where this change is reflected. This patch switches to use the RUY provided CMakeLists.txt, and ensures the RUY is built with CPUINFO library.","created_at":"2021-11-24T14:55:02Z","closed_at":"2021-12-06T01:47:33Z","merged_at":"2021-12-06T01:47:33Z","user_id":56120470,"sentiment":{"polarity":0.1,"subjectivity":0.2}}
{"_id":787714294,"title":"tflite_runtime: Loosen numpy requirement","body":"It's a common use case that using OpenCV with tflite_runtime. Since OpenCV requires minimum 1.19.3, we'd better loosen the numpy requirement of tflite_runtime.\r\n\r\nPiperOrigin-RevId: 411936173\r\nChange-Id: Idfda9382e5af534a2fc1beffcadc6428acc12201","created_at":"2021-11-24T08:45:50Z","closed_at":"2022-01-27T01:35:40Z","merged_at":"2022-01-27T01:35:40Z","user_id":2908505,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":787451284,"title":"TF:TRT Fix shape value collection","body":"TRT has a special API to specify shape value inputs, therefore TF-TRT uses a boolean mask (`is_shape_value_`) that defines which input tensors correspond to shape inputs. \r\n\r\nWhether a tensor is a shape tensor (from TRT's point of view) can be only determined once the TRT network is constructed (or equivalently, the TRT engine is loaded). If the network construction (or engine loading during deserialization) fails, then the input mask might not be correctly initialized, which can lead to an error in the subsequent memory copy. This PR fixes the initialization of the `is_shape_value_` mask to avoid this error.\r\n\r\nTagging @bixia1 for review and @DEKHTIARJonathan for visibility.","created_at":"2021-11-24T00:18:20Z","closed_at":"2021-12-09T16:34:55Z","merged_at":"2021-12-09T16:34:55Z","user_id":3671106,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":787447084,"title":"Should use CMAKE_CURRENT_*_DIR","body":null,"created_at":"2021-11-24T00:09:28Z","closed_at":"2021-11-25T17:21:56Z","merged_at":"2021-11-25T17:21:56Z","user_id":8017489,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":787260378,"title":"cmake: Use real source path for flatbuffers-flatc","body":"This to able to override the source path for flatbuffers-flatc with the\r\nCMake parameter FETCHCONTENT_SOURCE_DIR_FLATBUFFERS.","created_at":"2021-11-23T19:05:59Z","closed_at":"2021-12-07T00:52:47Z","merged_at":"2021-12-07T00:52:47Z","user_id":41016,"sentiment":{"polarity":0.2,"subjectivity":0.30000000000000004}}
{"_id":787219144,"title":"Update documentation of the tf.nn.softmax function","body":"This PR addresses the issue #53112 \r\n\r\nAs discussed, the tf.nn.softmax documentation states that:\r\n\r\n> This function performs the equivalent of\r\n> ```\r\n> softmax = tf.exp(logits) / tf.reduce_sum(tf.exp(logits), axis)\r\n> ```\r\n\r\nHowever the above computation is wrong for tensors with rank greater than 1.\r\n\r\nI belive that the correct description would be:\r\n```\r\nsoftmax = tf.exp(logits) / tf.reduce_sum(tf.exp(logits), axis, keepdims=True)\r\n```","created_at":"2021-11-23T18:02:57Z","closed_at":"2022-01-05T19:19:44Z","merged_at":"2022-01-05T19:19:44Z","user_id":19167453,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":787191352,"title":"[TF-TRT] Add Grappler optimizers to converter","body":"cc @bixia1 @tfeher @DEKHTIARJonathan\r\n\r\nThis mitigates one of the problems seen in https://github.com/tensorflow/tensorrt/issues/255 and makes that BERT Large model (and others) convert successfully.\r\n\r\n- In the previous set of optimizers, `constfold` was duplicating constants unnecessarily due to some control dependencies. `dependency` and `common_subgraph_elimination` do a great job at removing this duplication.\r\n- I also noticed that having a `constfold` before _and_ after `layout` was unnecessary, and in all the models I've tested, equivalent to just having the second one.\r\n\r\nI haven't measured any significant performance impact but the size of converted transformer models tends to be reduced by 50% with this change.\r\n\r\n_Note: I had to change the tests slightly because the dependency optimizer removes the `ReadVariableOp` and keeps a constant `v1` whereas constant folding alone optimizes `ReadVariableOp` to a constant with the value of `v1`. This  also depends on the order of the Grappler passes.","created_at":"2021-11-23T17:23:43Z","closed_at":"2022-01-19T00:13:59Z","merged_at":"2022-01-19T00:13:59Z","user_id":17441062,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":787163527,"title":"Rename the TFLite library convert_type to tfl_convert_type as it conf…","body":"Rename the TFLite library convert_type to tfl_convert_type as it conflicts with the similarly named library in Tensorflow","created_at":"2021-11-23T16:49:49Z","closed_at":"2021-12-24T10:41:45Z","merged_at":null,"user_id":7952559,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":786920933,"title":"Correct use of StringRef and ArrayRef","body":"Current code takes a reference to transient objects which go out of scope and get overwritten. This renders the references taken invalid and leads to incorrect operation and possible SIGSEGV.\r\nThe objects referred to by StringRef and ArrayRef need to have their own independent lifetime.\r\nFixes https://github.com/tensorflow/tensorflow/issues/53166","created_at":"2021-11-23T12:20:56Z","closed_at":"2021-12-22T20:21:53Z","merged_at":"2021-12-22T20:21:53Z","user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":786618352,"title":"gpu floor mod .","body":null,"created_at":"2021-11-23T04:12:43Z","closed_at":"2022-01-24T02:06:46Z","merged_at":null,"user_id":33950866,"sentiment":{"polarity":0.2,"subjectivity":0.4}}
{"_id":786288472,"title":"Update documentation of `DataFormatVecPermute` operation","body":"Resolves #53157 \r\ncc @bixia1 \r\n\r\n- Fixes invalid shape in the example.\r\n- Updated description of supported inputs.","created_at":"2021-11-22T17:50:00Z","closed_at":"2022-04-27T22:02:40Z","merged_at":"2022-04-27T22:02:40Z","user_id":17441062,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":785678723,"title":"Changed some Grammatical errors in README","body":null,"created_at":"2021-11-22T05:54:20Z","closed_at":"2021-11-22T11:55:32Z","merged_at":null,"user_id":58532023,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":785533548,"title":"Fix typo","body":null,"created_at":"2021-11-22T01:10:30Z","closed_at":"2021-11-22T11:52:59Z","merged_at":null,"user_id":2398765,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":785439347,"title":"[MLIR][TF][SCF] {tf.WhileRegion -> scf.while} + optimize region moving","body":"1. Lowered the `tf.WhileRegion` op to `scf.while` in the\r\n`convert-tf-control-flow-to-scf` pass.\r\n2. Modified the implementation of the moving of single-block regions\r\nsuch that it uses the `mergeBlocks()` function instead of the original\r\n`cloneRegionBefore()` function. This was done because the latter has a\r\nnon-trivial cost and could be dropped due to the currently specific\r\nrequirement of moving (not cloning) single-block regions in the\r\n`convert-tf-control-flow-to-scf` pass.\r\n\r\nSigned-off-by: Srishti Srivastava <srishti.srivastava@polymagelabs.com>","created_at":"2021-11-21T17:46:41Z","closed_at":"2021-12-10T07:55:15Z","merged_at":"2021-12-10T07:55:15Z","user_id":85475642,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":785372652,"title":"Naman23 coder","body":null,"created_at":"2021-11-21T11:21:57Z","closed_at":"2021-11-21T11:22:16Z","merged_at":null,"user_id":78961713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":785020362,"title":"[TF-TRT] Migrate saved calibration tables from attribute to asset","body":"This PR does the following:\r\n\r\n@bixia1 for review\r\n\r\nCC: @tfeher @DEKHTIARJonathan\r\n\r\n- Adds functionality to allow saving and loading of calibration tables via asset files\r\n  - It is implemented by attaching the calibrator to the engine cache, so that the calibrator is loaded in during inference time inside the `TRTEngineCacheResource` object.\r\n  - After calibration, each `TRTEngineOp` has its calibration table saved to its own asset file\r\n- Removes the previous code for saving and loading of calibration tables via attributes\r\n- Currently, calibration tables are saved using attributes which means that the calibration tables count towards the 2GB ProtoBuf size limit. By migrating to asset files, the tables no longer count towards the 2GB limit and can be as large as necessary.\r\n","created_at":"2021-11-19T20:49:33Z","closed_at":"2022-12-04T13:16:52Z","merged_at":null,"user_id":39774472,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":784659882,"title":"Fixing version mismatch of Keras and  TF in  2.6","body":"Editing 2.6.0 as default version for Keras  in TF 2.6 Branch , As it is still throwing \r\n\r\n> AlreadyExistsError: Another metric with the same name already exists.\r\n\r\n error for 2.6 users.[Reference1](https://github.com/tensorflow/tensorflow/issues/53077),[Reference2](https://github.com/tensorflow/tensorflow/issues/52922)","created_at":"2021-11-19T12:31:25Z","closed_at":"2022-01-27T01:35:27Z","merged_at":null,"user_id":86464649,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":784578723,"title":"Fix fail to build on AARCH64 for mkl_matmul_op_benchmark","body":null,"created_at":"2021-11-19T10:38:30Z","closed_at":"2021-11-22T20:57:42Z","merged_at":"2021-11-22T20:57:42Z","user_id":10442001,"sentiment":{"polarity":-0.5,"subjectivity":0.29999999999999993}}
{"_id":784454590,"title":"[oneDNN] Fusing Mul(x , Sigmoid(x)) into Swish(x)","body":"This PR implements following fusion : \r\nMul ( x , Sigmoid(x))  ---> Swish (x)\r\nCurrently added support for float and bfloat16.\r\n\r\nOneDNN supports swish eltwise kernel.\r\nWith oneDNN backend, this fusion improves performance of some models by 75%.","created_at":"2021-11-19T07:41:37Z","closed_at":"2021-12-17T14:18:22Z","merged_at":null,"user_id":43043975,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":784413557,"title":"update TensorShape::CheckDimsAtLeast","body":" The declaration of `CheckDimsAtLeast` states that \r\n> REQUIRES: dims() >= NDIMS","created_at":"2021-11-19T06:41:25Z","closed_at":"2021-12-07T22:39:11Z","merged_at":"2021-12-07T22:39:11Z","user_id":1251167,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":784248324,"title":"Give a more actionable error message when libtpu is already in use.","body":null,"created_at":"2021-11-19T00:24:17Z","closed_at":"2021-11-23T03:35:32Z","merged_at":"2021-11-23T03:35:32Z","user_id":7341711,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":784233430,"title":"changing the error message when libtpu is in use","body":null,"created_at":"2021-11-18T23:52:55Z","closed_at":"2021-11-18T23:58:17Z","merged_at":null,"user_id":7341711,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":784211855,"title":"changing the error message when libtpu is in use","body":"changing the error message when libtpu is in use","created_at":"2021-11-18T23:25:44Z","closed_at":"2021-11-18T23:34:41Z","merged_at":null,"user_id":7341711,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":784207480,"title":"changing the error message when libtpu is in use","body":null,"created_at":"2021-11-18T23:21:32Z","closed_at":"2021-11-18T23:25:02Z","merged_at":null,"user_id":7341711,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":784129091,"title":"[TF:TRT] Fix TrtUniquePtr warnings/error for TRT 8.2","body":"In TensorRT 8.2, the `destroy` method was deprecated for API objects. Instead, API users are expected to use `delete` or standard managed pointers after receiving a pointer to an API object created by TensorRT. This change is applied to the `TrtUniquePtr` type used through TF-TRT.","created_at":"2021-11-18T21:22:32Z","closed_at":"2021-11-23T19:21:55Z","merged_at":"2021-11-23T19:21:55Z","user_id":30323187,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":783871832,"title":"[TF-TRT] Provide a way to use different Grappler optimizers for the function library than the main graph","body":"This is a POC that probably needs some refining. During TF-TRT conversion, we need to turn on different optimizers during optimization of the main graph and `TRTEngine` functions. Since other functions are inlined, it is effectively equivalent to using different optimizers for the function library.\r\n\r\n### How it works\r\n\r\n- Add fields to `RewriterConfig` to specify an alternate list of optimizers and custom optimizers, along with a boolean to toggle the use of these alternate lists. The default behavior doesn't change (i.e same optimizers for the main graph and function library)\r\n- Add an optional parameter to `MetaOptimizer::OptimizeGraph()` and helper functions to know whether the main graph or function library is being optimized, and set this parameter when optimizing the function library in `MetaOptimizer::OptimizeConsumeItem()`.\r\n- When optimizing the function library, get the optimizer list from these new fields if the boolean is true.\r\n\r\n### Example of TRT conversion logs (BERT Base)\r\n\r\n```\r\nOptimization results for grappler item: tf_graph\r\n  constant_folding: Graph size after: 2884 nodes (-409), 3897 edges (-410), time = 2186.9751ms.\r\n  layout: Graph size after: 2884 nodes (0), 3897 edges (0), time = 1524.755ms.\r\n  constant_folding: Graph size after: 2884 nodes (0), 3897 edges (0), time = 447.266ms.\r\n  TensorRTOptimizer: Graph size after: 521 nodes (-2363), 664 edges (-3233), time = 4766.79492ms.\r\n  constant_folding: Graph size after: 229 nodes (-292), 445 edges (-219), time = 247.384ms.\r\nOptimization results for grappler item: TRTEngineOp_0_2_native_segment\r\n  constant_folding: Graph size after: 8 nodes (0), 7 edges (0), time = 1.111ms.\r\nOptimization results for grappler item: TRTEngineOp_0_1_native_segment\r\n  constant_folding: Graph size after: 36 nodes (0), 37 edges (0), time = 45.684ms.\r\nOptimization results for grappler item: TRTEngineOp_0_0_native_segment\r\n  constant_folding: Graph size after: 2689 nodes (0), 3132 edges (0), time = 455.876ms.\r\n```\r\n\r\n### TODO\r\n\r\n- [ ] Gather feedback\r\n- [ ] Add tests\r\n- [ ] Change defaults in `trt_convert.py`","created_at":"2021-11-18T15:43:35Z","closed_at":"2022-02-14T17:46:48Z","merged_at":null,"user_id":17441062,"sentiment":{"polarity":0.08333333333333333,"subjectivity":0.4666666666666666}}
{"_id":783512470,"title":"Add missing `clean_dep` for `tf_cc_shared_object`","body":null,"created_at":"2021-11-18T08:49:41Z","closed_at":"2021-11-22T17:50:22Z","merged_at":"2021-11-22T17:50:21Z","user_id":2470081,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":783323455,"title":"support cosn and ofs schema","body":"support cosn and ofs schema","created_at":"2021-11-18T02:42:15Z","closed_at":"2021-11-19T00:30:09Z","merged_at":null,"user_id":4156489,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":783030779,"title":"[TF-TRT] Detailed Non-Conversion Report Added","body":"Follow-up of: #52671 that was reverted.\r\n\r\nCC: @bixia1 @jwoolley for review\r\n\r\nThis PR does the following:\r\n- fix `std::string` into `string`\r\n- fix **un**conversion into **non**conversion\r\n- fix `std::pair` of `std::pair` into `std::tuple`\r\n- various renaming for readability\r\n","created_at":"2021-11-17T19:05:16Z","closed_at":"2021-12-01T17:13:31Z","merged_at":"2021-12-01T17:13:31Z","user_id":10923599,"sentiment":{"polarity":0.4,"subjectivity":0.75}}
{"_id":782687593,"title":"Declare Go import path in coordination service proto","body":"PR declares `go_package` in proto definition and resolves protoc-gen-go error.","created_at":"2021-11-17T12:43:57Z","closed_at":"2021-12-27T18:52:12Z","merged_at":"2021-12-27T18:52:12Z","user_id":17497234,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":782441155,"title":"Remove unused header","body":"`tensorflow/core/lib/core/errors.h` already included","created_at":"2021-11-17T07:29:49Z","closed_at":"2021-12-01T20:35:10Z","merged_at":"2021-12-01T20:35:10Z","user_id":1251167,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":781964482,"title":"ROCm specific fix to enable GPU unit tests to pass.","body":"The reason this is necessary is because of recent changes to the ROCm specific convrunner which requires the workspace_size attribute to be present in the algorithm descriptor.\r\n\r\n/cc @cheshire @chsigg @jurahul ","created_at":"2021-11-16T18:43:02Z","closed_at":"2021-11-19T02:27:05Z","merged_at":"2021-11-19T02:27:05Z","user_id":70280935,"sentiment":{"polarity":0.0,"subjectivity":0.125}}
{"_id":781921786,"title":"[ROCm] Mark a few GPU tests as CUDA only","body":"The CudaMallocAsync tests in `//tensorflow/core/common_runtime/gpu:gpu_device_test_gpu` are CUDA specific. This PR marks these as DISABLED_ on ROCM platforms. ","created_at":"2021-11-16T17:44:51Z","closed_at":"2021-12-02T19:36:40Z","merged_at":"2021-12-02T19:36:39Z","user_id":8660918,"sentiment":{"polarity":-0.1,"subjectivity":0.55}}
{"_id":781720850,"title":"Extend TF:TRT C++ API to handle non-frozen models","body":"This PR extends the C++ converter API of TF-TRT #52012 to handle models that are not frozen (i.e. contains variables).\r\n\r\nDepends on #53310 . Tracker #45481.","created_at":"2021-11-16T14:06:38Z","closed_at":"2022-03-15T23:13:08Z","merged_at":"2022-03-15T23:13:07Z","user_id":3671106,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":780747407,"title":"Tag vectorized_reduce_with_no_vector_registers to allow exclusion","body":"Fixes https://github.com/tensorflow/tensorflow/issues/53067\r\nThe tag can be used on the command line when building on or for AARCH64 platforms to exclude this test that is not applicable.","created_at":"2021-11-15T14:27:19Z","closed_at":"2021-12-16T20:33:22Z","merged_at":"2021-12-16T20:33:22Z","user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":780620808,"title":"Change `min_epsilon` to 0","body":"Compiling issue #37768 on epsilon condition as per users input `\"the value of epsilon is required to be greater or equal to CUDNN_BN_MIN_EPSILON which was defined in the cudnn.h file to the value 1e-5. This threshold value is now lowered to 0.0 to allow a wider range of epsilon value.` in this [document ](https://docs.nvidia.com/deeplearning/cudnn/release-notes/)","created_at":"2021-11-15T11:58:48Z","closed_at":"2022-10-23T00:47:50Z","merged_at":null,"user_id":86464649,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":780567444,"title":"xla cache .","body":null,"created_at":"2021-11-15T10:53:01Z","closed_at":"2022-07-18T14:50:09Z","merged_at":null,"user_id":33950866,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":780070122,"title":"Implement `compute_output_shape` for attention layers","body":"Resolves #53058","created_at":"2021-11-14T11:43:45Z","closed_at":"2021-11-15T08:00:21Z","merged_at":null,"user_id":15159090,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":779666557,"title":"Fix some ROCm related typos.","body":"@cheshire @chsigg @jurahul ","created_at":"2021-11-12T19:17:22Z","closed_at":"2021-11-16T15:34:56Z","merged_at":"2021-11-16T15:34:56Z","user_id":70280935,"sentiment":{"polarity":0.0,"subjectivity":0.4}}
{"_id":779365419,"title":"[TFLite] Enable ApplyLazyDelegateProviders in TF-Lite Python Interpreter.","body":"Fixed #53042 .\r\nEnable XNNPACK delegate in TensorFlow Lite Python Interpreter.","created_at":"2021-11-12T12:27:38Z","closed_at":"2021-11-17T05:29:54Z","merged_at":null,"user_id":17954673,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":778897315,"title":"Facilitation of the cross-compiled unit test run on target","body":"As of now, _-DTFLITE_KERNEL_TEST_ along with _-DTFLITE_HOST_TOOLS_DIR=DIR_ arguments can be used for the TF Lite unit tests cross-compilation using CMake. This builds ~136 unit test executables for target architecture and the description of the corresponding ~136 test runs of the CTest utility.\r\n\r\nThis PR extends this feature by **adding delegate tests** (based on the same executables) **for every enabled delegate in the CMake build run** (XNNPACK, NNAPI, external).\r\n\r\nAs propagation of environment variables to specific tests is not supported by CTest, a new helper CMake module is introduced to work around this (see the updated README file for details).","created_at":"2021-11-11T20:57:01Z","closed_at":"2021-12-09T02:28:08Z","merged_at":"2021-12-09T02:28:08Z","user_id":34263128,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":778759055,"title":"Fix definition of triplet for AARCH64","body":"Fixes https://github.com/tensorflow/tensorflow/issues/53034","created_at":"2021-11-11T17:11:51Z","closed_at":"2021-12-16T20:41:11Z","merged_at":"2021-12-16T20:41:11Z","user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":778202516,"title":"Remove xrange from rest of files","body":null,"created_at":"2021-11-11T03:48:46Z","closed_at":"2021-11-13T16:48:41Z","merged_at":"2021-11-13T16:48:41Z","user_id":47963215,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":777771480,"title":"Disabling wrong regex test.","body":"The test failed for rocm in a weekly sync. Investigation under way but disabled it for rocm for now to keep community CI clean.\r\n@cheshire @chsigg @deven-amd @stevenireeves","created_at":"2021-11-10T16:16:34Z","closed_at":"2021-11-15T19:02:04Z","merged_at":"2021-11-15T19:02:03Z","user_id":32376000,"sentiment":{"polarity":-0.5,"subjectivity":0.9}}
{"_id":777632937,"title":"Fix build of XLA unit tests on AARCH64","body":"Fixes https://github.com/tensorflow/tensorflow/issues/53021","created_at":"2021-11-10T14:06:32Z","closed_at":"2021-12-16T19:58:49Z","merged_at":"2021-12-16T19:58:49Z","user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":777580625,"title":"Update jsoncpp to 1.9.5","body":"This PR update jsoncpp from 1.9.4 to 1.9.5.\r\n\r\nThe biggest reason for update to 1.9.5, is that jsoncpp 1.9.5 now supports bazel build. So the tensorflow-maintained BUILD file can be dropped.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2021-11-10T13:12:16Z","closed_at":"2021-11-16T15:18:36Z","merged_at":"2021-11-16T15:18:36Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":777183573,"title":"Disabling autotune_serialize_test","body":"The test failed for rocm in a weekly sync. Investigation under way but disabled it for rocm for now to keep community CI clean.\r\n@cheshire @chsigg  @deven-amd @stevenireeves ","created_at":"2021-11-10T03:00:10Z","closed_at":"2021-11-15T13:11:28Z","merged_at":"2021-11-15T13:11:28Z","user_id":32376000,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":777180089,"title":"Update curl to 7.79.1","body":"This PR updates curl from 7.78 to 7.79.1.\r\n\r\nThe reason of update is to fix the following vulnerabilities in 7.78:\r\n- CVE-2021-22947: STARTTLS protocol injection via MITM\r\n- CVE-2021-22946: Protocol downgrade required TLS bypassed\r\n- CVE-2021-22945: UAF and double-free in MQTT sending\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2021-11-10T02:50:27Z","closed_at":"2021-11-10T02:50:59Z","merged_at":null,"user_id":13608516,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":777041274,"title":"Use `int64_t` instead of `tensorflow::int64`","body":"I realized `tensorflow::int64` was removed in 0b6b491d21d6a4eb5fbab1cca565bc1e94ca9543, but the lines I modified didn't change, leading to a compile warning when building custom ops:\r\n\r\n```cpp\r\n/tmp/pip-build-env-9xgnct5m/normal/lib/python3.7/site-packages/tensorflow/include/tensorflow/core/framework/tensor_shape.h:305:22: warning: ‘tensorflow::int64’ is deprecated: Use int64_t instead. [-Wdeprecated-declarations]\r\n       gtl::InlinedVector<int64, 4> dim_sizes() const;\r\n    /tmp/pip-build-env-9xgnct5m/normal/lib/python3.7/site-packages/tensorflow/include/tensorflow/core/platform/default/notification.h:61:65: warning: ‘int64’ is deprecated [-Wdeprecated-declarations]\r\n                                                  int64 timeout_in_us);\r\n                                                                     ^\r\n    /tmp/pip-build-env-9xgnct5m/normal/lib/python3.7/site-packages/tensorflow/include/tensorflow/core/platform/default/notification.h:62:58: warning: ‘int64’ is deprecated [-Wdeprecated-declarations]\r\n       bool WaitForNotificationWithTimeout(int64 timeout_in_us) {\r\n                                                              ^\r\n    /tmp/pip-build-env-9xgnct5m/normal/lib/python3.7/site-packages/tensorflow/include/tensorflow/core/platform/default/notification.h:81:63: warning: ‘int64’ is deprecated [-Wdeprecated-declarations]\r\n                                                int64 timeout_in_us) {\r\n```","created_at":"2021-11-09T22:25:49Z","closed_at":"2021-11-12T15:43:21Z","merged_at":"2021-11-12T15:43:20Z","user_id":9496702,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":776759816,"title":"Update autoclustering_xla.ipynb","body":"Changed `lr` to `learning_rate`.\r\nRemoves a deprecation warning. Tested the [updated .ipynb](https://colab.research.google.com/gist/chunduriv/47c56142de41dcd6c7f2b54ac293197e/lr.ipynb) file.","created_at":"2021-11-09T17:06:13Z","closed_at":"2022-12-29T05:13:09Z","merged_at":null,"user_id":74177924,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":776738716,"title":"[TFLite] Add int16x8 support for DEPTH_TO_SPACE and SPACE_TO_DEPTH operators","body":"Hello,\r\n\r\nThis PR adds int16x8 support for DEPTH_TO_SPACE and SPACE_TO_DEPTH operators.\r\n\r\nThanks,\r\nJohan.","created_at":"2021-11-09T16:40:48Z","closed_at":"2022-07-17T00:39:29Z","merged_at":null,"user_id":30185046,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":776490820,"title":"Update `custom_gradient.py`: fix comment w.r.t `gradients` now being `GradientTape`","body":"In TF 2.x 'gradients' should be replaced with 'GradientTape'. Hence made necessary changes. Please refer updated [gist](https://colab.research.google.com/gist/RenuPatelGoogle/8641fd64952c2febb8038a5fb2e1d51a/untitled30.ipynb).","created_at":"2021-11-09T12:24:02Z","closed_at":"2022-12-28T19:21:21Z","merged_at":null,"user_id":89264621,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":776475398,"title":"Declare Go import path in distributed runtime payloads proto","body":"PR declares `go_package` in proto definition and resolves protoc-gen-go error.","created_at":"2021-11-09T12:05:30Z","closed_at":"2021-11-12T18:00:06Z","merged_at":"2021-11-12T18:00:06Z","user_id":17497234,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":776040382,"title":"[TF-TRT] Adding a widget to inform the user that we are still processing `TrtGraphConverterV2.build()`","body":"@bixia1 for review\r\n\r\nThis PR adds a waiting widget to inform the user that we are still processing `TrtGraphConverterV2.build()`.\r\n\r\nPrint message on the console during the duration of the build indicating: `Building TensorRT Engines. Please wait ...`","created_at":"2021-11-08T23:11:58Z","closed_at":"2022-02-10T21:57:14Z","merged_at":null,"user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":776019844,"title":"Remove xrange from tensorflow/python/kernel_tests","body":"Also remove from an autograph file b/c it's no longer a builtin and I didn't want to make a PR to only change 1 line.","created_at":"2021-11-08T22:34:55Z","closed_at":"2021-11-09T16:29:59Z","merged_at":"2021-11-09T16:29:59Z","user_id":47963215,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":776004847,"title":"Remove six from examples","body":"Smaller PR this time so removed all of six instead of just xrange.","created_at":"2021-11-08T22:11:14Z","closed_at":"2021-11-10T16:48:07Z","merged_at":"2021-11-10T16:48:07Z","user_id":47963215,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":775991932,"title":"Remove xrange from tensorflow/compiler","body":"Other usages of six's xrange will be removed in other PR's(there's a lot of them).","created_at":"2021-11-08T21:53:02Z","closed_at":"2021-11-10T19:12:24Z","merged_at":"2021-11-10T19:12:23Z","user_id":47963215,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":775947801,"title":"[ROCm] Added Matrix Inverse Op on ROCm","body":"Primary Development @micmelesse. ","created_at":"2021-11-08T20:51:19Z","closed_at":"2021-11-11T21:20:54Z","merged_at":"2021-11-11T21:20:54Z","user_id":25489675,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":775748798,"title":"[LHLO-Affine] Fix bug in the conversion of lmhlo.gather to affine","body":"  Initially, the code was not checking whether all the predicates\r\n  representing equality between the sum of start index and offset\r\n  and operand index. The mistake was in the upper bound of the loop\r\n  iterating the predicate vector. ","created_at":"2021-11-08T16:47:26Z","closed_at":"2021-11-11T20:56:45Z","merged_at":"2021-11-11T20:56:45Z","user_id":85476402,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":775744941,"title":"Fix TF 2.7 release notes","body":"Fix https://github.com/tensorflow/tensorflow/pull/52670/. The changes is in TF2.7 and not 2.6.\r\n\r\n@mihaimaruseac ","created_at":"2021-11-08T16:42:38Z","closed_at":"2021-11-10T15:47:26Z","merged_at":"2021-11-10T15:47:26Z","user_id":180987,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":775513179,"title":"[TFLite] Add int16x8 support for ARG_MIN and ARG_MAX operators","body":"Hello,\r\n\r\nThis PR adds int16x8 support for ARG_MIN and ARG_MAX operators.\r\n\r\nThanks,\r\nJohan.","created_at":"2021-11-08T12:38:03Z","closed_at":"2022-09-09T01:01:20Z","merged_at":null,"user_id":30185046,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":774701896,"title":"Add op-determinism info to version 2.7 release notes","body":"This is a PR for the r2.7 branch.\r\n\r\nThis PR represents release notes that should have been included with version 2.7. I failed to get this completed before the release. I'm hoping that this information can be added to the release notes on GitHub and included in the master branch version of `RELEASE.md`.\r\n\r\nPlease will someone with experience in this area, such as @goldiegadde, direct a procedure for making sure this information lands in the correct place(s).\r\n\r\nBefore this information is propagated, please will @reedwm and @pkanwar23 review for correctness and completeness. Note that there is a \"TODO: confirm exception added\" that needs to be removed with respect to `tf.math.bincount`.\r\n\r\n","created_at":"2021-11-06T04:17:09Z","closed_at":"2021-11-10T15:46:40Z","merged_at":"2021-11-10T15:46:40Z","user_id":33532941,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":774650944,"title":"[oneDNN] Update MKL auto-mixed precision algorithm","body":"In the current implementation of auto-mixed precision pass, the infer node is added to allow set only if both its upstream and downstream nodes are in the allow list. This could cause cast node being inserted in between fuse-able nodes. To address this problem, a sub-pass is added to place an infer node to allow set if its direct upstream is in allow set.","created_at":"2021-11-06T00:13:33Z","closed_at":"2021-11-11T21:58:11Z","merged_at":"2021-11-11T21:58:11Z","user_id":42156420,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":774562374,"title":"Use the official devel image for presubmit litting","body":"This is temp failing now cause we don't distribute a `pytlint` reference version in our official devel image.\r\nI've tried to fix the missing reference version at https://github.com/tensorflow/tensorflow/pull/48371 but it was not reviewed  and some month later my rationale was reject also in https://github.com/tensorflow/tensorflow/pull/51914#issuecomment-916540675.\r\n\r\nAs I suppose that we don't have too much free time to maintain another potentially unaligned environment I think it is better to lint the PR code in the CI (TF OSS) with exactly the same (prepared) environment that we give to contributors to build, lint and test their contributing code/PR on their own hw resources (or Github workspaces available on this platform).","created_at":"2021-11-05T20:18:42Z","closed_at":"2022-05-24T22:59:07Z","merged_at":null,"user_id":1710528,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":774533294,"title":"Add NVIDIA/TensorRT repo to third_party/tensorrt","body":"Adds ability to download and build TensorRT OSS components (github.com/NVIDIA/TensorRT) to the existing \"third_party/tensorrt\" package. The mechanism used is the same used for building NCCL components. Currently, only the EfficientNMS plugin and some supporting code is built. A small patch is applied to the external code to change file extensions, make include paths compatible, and ensure compatibility with static/shared library builds.","created_at":"2021-11-05T19:35:40Z","closed_at":"2021-12-06T19:16:07Z","merged_at":"2021-12-06T19:16:06Z","user_id":30323187,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":774450540,"title":"Allow doctest compare to work by removing unneeded white space","body":"Fixes https://github.com/tensorflow/tensorflow/issues/52069","created_at":"2021-11-05T17:34:19Z","closed_at":"2021-11-09T17:20:07Z","merged_at":"2021-11-09T17:20:07Z","user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":774249984,"title":"Call hexagon delegate only if TFLITE_ENABLE_HEXAGON is defined.","body":null,"created_at":"2021-11-05T13:32:51Z","closed_at":"2021-12-13T18:17:05Z","merged_at":null,"user_id":92391026,"sentiment":{"polarity":0.0,"subjectivity":1.0}}
{"_id":774241551,"title":"Add external delegate support to the cmake build of benchmark app","body":null,"created_at":"2021-11-05T13:21:07Z","closed_at":"2021-12-24T02:15:37Z","merged_at":"2021-12-24T02:15:37Z","user_id":92391026,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":774234580,"title":"Fix build failure when TFLITE_ENABLE_HEXAGON is not defined","body":null,"created_at":"2021-11-05T13:11:39Z","closed_at":"2021-11-05T13:23:56Z","merged_at":null,"user_id":92391026,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":773810823,"title":"Update Release notes in master","body":"Merge release notes","created_at":"2021-11-05T00:04:17Z","closed_at":"2021-11-05T15:40:43Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":773781571,"title":"Add support for GEMMs with complex element types","body":null,"created_at":"2021-11-04T23:37:50Z","closed_at":"2021-11-30T20:45:21Z","merged_at":"2021-11-30T20:45:21Z","user_id":13824553,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":773750110,"title":"CI: Use Python 3.9 for PyLint presubmit action","body":"A few small maintenance updates to the PyLint presubmit action.\r\n - Use Python 3.9 instead of Python 3.8.\r\n - Update the [setup-python](https://github.com/actions/setup-python) action to v2, which is actively maintained.\r\n - Parse the Python version as a string (`\"3.9\"` instead of `3.9`), since otherwise Python 3.10 will be rounded and processed as Python 3.1 in the future.","created_at":"2021-11-04T22:23:45Z","closed_at":"2021-11-08T14:00:26Z","merged_at":"2021-11-08T14:00:26Z","user_id":15776622,"sentiment":{"polarity":0.1,"subjectivity":0.1}}
{"_id":773678308,"title":"Update version bounds for TF ecosystem packages","body":"These always need to be pinned the same way as TF.","created_at":"2021-11-04T20:41:05Z","closed_at":"2021-11-04T20:56:57Z","merged_at":"2021-11-04T20:56:56Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":773489362,"title":" [TF-TRT] Allow saving calibration cache without the engine pre-built","body":"@bixia1 for review\r\n@tfeher @DEKHTIARJonathan CC\r\n\r\nThis PR does the following:\r\n\r\n- Adds a new parameter called save_gpu_specific_engine inside the `TRTGraphConverterV2.save()` function. \r\n  - When `True` (default), the `.save()` function executes normally. \r\n\r\n  - When `False`, the `.save()` will not save any of the TRT engines that have been built. I.e. any engines that are built during `TRTGraphConverterV2.build()` or during INT8 calibration will not be saved.\r\n\r\n- This change allows us to reuse calibration tables generated during calibration with a different GPU. Therefore only the need to rebuild the engines, not to recalibrate.\r\n  - Originally, when we reloaded INT8 models we would receive an error when we tried to do inference on GPUs that were not similar to the GPUs that calibration was performed on.\r\n  - When we reload INT8 models that are saved with `save_gpu_specific_engine=False`, a new engine will be built using the saved calibration tables (assuming calibration was done before saving). \r\n  - Thus when `using save_gpu_specific_engine=False` we are able to run inference in INT8 on different GPUs, without having to re-calibrate during runtime.\r\n","created_at":"2021-11-04T16:34:06Z","closed_at":"2021-11-18T18:28:45Z","merged_at":"2021-11-18T18:28:45Z","user_id":39774472,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":773369048,"title":"[TF-TRT] Add DataFormatVecPermute converter","body":"Adds a TF-TRT converter for the [DataFormatVecPermute](https://www.tensorflow.org/api_docs/cc/class/tensorflow/ops/data-format-vec-permute) operation.\r\n\r\nExample of a model which can benefit from this: Inception v4 with dynamic shapes (2 candidate segments previously, 1 with this change).","created_at":"2021-11-04T14:29:30Z","closed_at":"2021-12-02T23:55:22Z","merged_at":"2021-12-02T23:55:22Z","user_id":17441062,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":773316418,"title":"ppc: remove the special condition for ppc on convolutions","body":"After a recent change on Eigen Altivec package, we don't need this special condition on convolutions anymore\r\n\r\nhttps://gitlab.com/libeigen/eigen/-/commit/9cf34ee0aed25a7464e6ec14f977cfa940f48f1b","created_at":"2021-11-04T13:27:42Z","closed_at":"2021-11-22T18:06:37Z","merged_at":"2021-11-22T18:06:37Z","user_id":2990132,"sentiment":{"polarity":0.35714285714285715,"subjectivity":0.5714285714285714}}
{"_id":773292910,"title":"the prority of session config","body":"https://github.com/tensorflow/tensorflow/issues/52938","created_at":"2021-11-04T12:57:14Z","closed_at":"2023-02-26T05:51:49Z","merged_at":null,"user_id":33950866,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":772865536,"title":"[TF:TRT] Enable support for TensorRT 8.2","body":"Add support for TensorRT 8.2.\r\n\r\nAdd plugin stubs for TensorRT 8.2.\r\nModify tests to hold an IBuilder to prevent TensorRT 8.2 from releasing builder resources when running parameterized tests.","created_at":"2021-11-03T22:29:15Z","closed_at":"2021-11-11T14:55:04Z","merged_at":"2021-11-11T14:55:04Z","user_id":30323187,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":772852043,"title":"[ROCm] skip gpu_binary_ops_test","body":"This test failed since commit 7de9cf4 from upstream. Disabling for now to keep the CI from complaining. Investigation underway.\r\n\r\n@cheshire @chsigg @deven-amd @reza-amd\r\n","created_at":"2021-11-03T22:05:03Z","closed_at":"2021-11-08T20:45:29Z","merged_at":"2021-11-08T20:45:29Z","user_id":8660918,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":772791695,"title":"Update version numbers for TensorFlow 2.6.2","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 6 -> 6\nPatch: 1 -> 2\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.6.1\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/lite/toco/logging/template.html:142:2.6.1\ntensorflow/lite/toco/logging/testdata/generated.html:142:2.6.1\ntensorflow/tools/ci_build/linux/mkl/Dockerfile.devel-mkl:90:2.6.1\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.6.1\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/lite/toco/logging/template.html:142:2.6.1\ntensorflow/lite/toco/logging/testdata/generated.html:142:2.6.1\ntensorflow/tools/ci_build/linux/mkl/Dockerfile.devel-mkl:90:2.6.1\n```","created_at":"2021-11-03T20:32:47Z","closed_at":"2021-11-03T20:34:02Z","merged_at":"2021-11-03T20:34:02Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":772786345,"title":"Update the version on estimator and tensorboard","body":"Add an upper bound to keras and tensorboard","created_at":"2021-11-03T20:24:14Z","closed_at":"2021-11-03T20:26:12Z","merged_at":"2021-11-03T20:26:12Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":772663903,"title":"Update release notes for TensorFlow 2.6.2","body":"This PR is intentionally incomplete. One of the Release Owners for 2.6.2\nneeds to fill in the internal release notes for this version before the PR gets\nsubmitted. Click on the :pencil2: icon in the header for `RELEASE.md` under\n\"Files Changed\" above.","created_at":"2021-11-03T18:34:56Z","closed_at":"2021-11-03T19:50:33Z","merged_at":"2021-11-03T19:50:33Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":772648588,"title":"Update the keras version used by tf 2.6 release","body":"Since Keras 2.7 is not compatible with tf 2.6, we should limit the Keras version used in tf.\r\n\r\nThis change has been done for tf 2.7 and all the future releases.","created_at":"2021-11-03T18:17:51Z","closed_at":"2021-11-03T18:18:28Z","merged_at":"2021-11-03T18:18:28Z","user_id":5118881,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":772622787,"title":"[TF-TRT] trt_utils.versionTupleToString didn't exist, changing to trt_utils.version_tuple_to_string","body":"Replace the use of versionTupleToString with version_tuple_to_string to fix a bug introduced by a previous change.","created_at":"2021-11-03T17:46:48Z","closed_at":"2021-11-05T16:26:13Z","merged_at":"2021-11-05T16:26:13Z","user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":772601180,"title":"Generate bias with correct type when tfl.fully_connected bias isn't provided","body":"Fix legalization bug when tfl.fully_connected isn't provided with bias and generate incorrect type of const tensor tensor.","created_at":"2021-11-03T17:21:13Z","closed_at":"2021-11-09T23:16:08Z","merged_at":"2021-11-09T23:16:07Z","user_id":67395479,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":772596328,"title":"[ROCm] Skip xla_ops_tests","body":"Invalid bitcast in xla_ops_test and xla_ops_test_gpu_mlir_bridge_test, and filecheck error in gpu_index_test. \r\nInvestigation underway, but skip for now.\r\n\r\n@cheshire @chsigg @deven-amd @stevenireeves ","created_at":"2021-11-03T17:15:18Z","closed_at":"2021-11-15T13:11:29Z","merged_at":"2021-11-15T13:11:29Z","user_id":8660918,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":772063697,"title":"change license to gplv3","body":null,"created_at":"2021-11-03T06:37:09Z","closed_at":"2021-11-03T16:45:43Z","merged_at":null,"user_id":10137,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":771793568,"title":"[INTEL oneDNN] Refactor TF Framework and oneDNN integration","body":"This PR did the following refactoring:\r\n\r\n1. oneDNN namespace change: from \"mkldnn\" to \"dnnl\", as oneDNN will not support \"mkldnn\" namespace soon (in v2.5).\r\n\r\n2. In ALL comments, replace old product names (MKL, MKL-DNN, or MKL DNN) with the new one \"oneDNN\".\r\n\r\n3. Put TODO items under under a common name \"intel-tf\" as specific developers may leave the project\r\n\r\n4. Remove dangling methods and/or data members  (due to original integration with old MKL DNN product).\r\n\r\n5. Remove unnecessary header file inclusion.\r\n\r\nThis PR has been tested with oneDNN 2.5 (dev version).  It works with oneDNN 2.4 (current integration in TF master branch).","created_at":"2021-11-02T20:09:14Z","closed_at":"2021-12-13T06:52:29Z","merged_at":"2021-12-13T06:52:29Z","user_id":29215195,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":771315134,"title":"Restore missing comma to fix build","body":"Fixes https://github.com/tensorflow/tensorflow/issues/52910","created_at":"2021-11-02T10:54:43Z","closed_at":"2021-11-03T09:11:25Z","merged_at":null,"user_id":10442001,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":771266474,"title":"Re-enable building as a standalone submodule","body":"The pattern used to detect if to build via the LLVM external project\r\nmechanism prevented to build MLIR-HLO as a standalone project when added\r\nas a submodule.","created_at":"2021-11-02T09:54:10Z","closed_at":"2021-11-04T19:36:45Z","merged_at":"2021-11-04T19:36:45Z","user_id":8095156,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":770993480,"title":"[TF-TRT] Support for IdentityN added","body":"@bixia1 @meena-at-work for review\r\n\r\nThis PR modifies the Identity Converter to accepts arbitrary number of inputs and convert the IdentityN layer","created_at":"2021-11-02T00:25:23Z","closed_at":"2021-11-03T15:59:16Z","merged_at":"2021-11-03T15:59:16Z","user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":770932195,"title":"[ROCm] skip randomized_tests_mlir_seeded","body":"Disable randomized_tests_mlir_seeded tests on ROCm\r\n\r\n@cheshire @chsigg @deven-amd @reza-amd","created_at":"2021-11-01T22:27:42Z","closed_at":"2022-03-09T15:09:33Z","merged_at":null,"user_id":8660918,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":770894972,"title":"Fix 16-bit Softmax legalization","body":"Old 16-bit softmax tfl.softmax legalization is lowered incorrectly with illegal TOSA operators.\r\nNew legalization fixes it.\r\nAlso add 16-bit softmax legalization test\r\n","created_at":"2021-11-01T21:22:18Z","closed_at":"2021-11-02T22:59:56Z","merged_at":"2021-11-02T22:59:56Z","user_id":67395479,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":770855382,"title":"[oneDNN] Avoid converting memory layout for second matrix in the MatMul op.","body":"This PR reverts a small change in the _FusedMatMul op kernel that has caused regression in some smaller models, particularly when the second tensor to the kernel is not constant.\r\n","created_at":"2021-11-01T20:22:27Z","closed_at":"2021-12-10T11:33:06Z","merged_at":"2021-12-10T11:33:06Z","user_id":27521767,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":770854390,"title":"[ROCm] skip testCategoricalIsInRange","body":"This failure was introduced in commit 7de9cf4 in a weekly sync.\r\nDisable this test for now on ROCm.\r\n\r\n@cheshire @chsigg @deven-amd @reza-amd ","created_at":"2021-11-01T20:21:07Z","closed_at":"2021-11-04T17:54:15Z","merged_at":"2021-11-04T17:54:15Z","user_id":8660918,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":770796404,"title":"Added shape inference support to a lot of the tf-to-tosa legalization","body":"Added the shape inference utility support so that during tensorflow lowering\r\nit is possible to infer intermediate shapes. This does not handle all cases but\r\ndoes handle hte most straight forward cases.","created_at":"2021-11-01T19:00:18Z","closed_at":"2021-11-02T19:45:24Z","merged_at":"2021-11-02T19:45:23Z","user_id":5508949,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":770783779,"title":"[oneDNN] Remove transpose elimination for NHWC/NDHWC conv/maxpool3d ops","body":"This change removes the part of the code in mkl_layout_pass.cc, where we eliminate following transpose operation and replace conv2d(nhwc) / conv3d(ndhwc) / maxpool3d(ndhwc) with mklConv2d(nchw) / mklConv3d(ncdhw) / mklMaxpool3d(ncdhw) respectively :\r\n\r\nFor ex. we eliminate this graph rewrite : \r\ntranposeToNDHWC -> Conv3d(NDHWC) -> transposeToNCDHW -------> _mklConv3D(NCDHW)\r\n\r\nFor NHWC ,in case of conv2d, and NDHWC ,for conv3d / maxpool3d, oneDNN uses AMX kernels, which has significant higher performance than gemm kernels (used for NCHW conv2d or NCDHW conv3d/maxpool3d) and reorder kernel (for tranpose operations) combined.\r\n","created_at":"2021-11-01T18:40:39Z","closed_at":"2021-12-14T20:04:44Z","merged_at":"2021-12-14T20:04:44Z","user_id":43043975,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":770775811,"title":"Update Keras Model Docs for dataset dictionaries","body":"Update the documentation for fit and evaluate to specifically note that datasets returning dictionaries is NOT supported.\r\n\r\nThis is important since previous versions of TF allowed dictionary inputs from datasets, where the name of the input variable was matched to the dictionaries keys.  But this is not longer supported by Keras.\r\n\r\nThis matter is confusing since fit does seem to accept dictionary inputs, but I'm told by Rick Chao that this is not supported.  Passing a dictionary to evaluate gives a weird error message.  \r\n\r\nBetter to be explicit.","created_at":"2021-11-01T18:28:13Z","closed_at":"2021-11-02T05:45:40Z","merged_at":null,"user_id":959911,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":770081897,"title":"Add security updates to relnotes","body":null,"created_at":"2021-11-01T01:30:57Z","closed_at":"2021-11-01T01:31:05Z","merged_at":"2021-11-01T01:31:05Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":770033378,"title":"Remove six.PY2","body":null,"created_at":"2021-10-31T23:01:34Z","closed_at":"2021-11-08T14:59:18Z","merged_at":"2021-11-08T14:59:17Z","user_id":47963215,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":769975631,"title":"Upper bound `tensorflow_estimator` to match release","body":null,"created_at":"2021-10-31T17:09:59Z","closed_at":"2021-10-31T17:10:06Z","merged_at":"2021-10-31T17:10:06Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":769763210,"title":"Disable failing test","body":null,"created_at":"2021-10-30T17:27:02Z","closed_at":"2021-10-30T17:27:14Z","merged_at":"2021-10-30T17:27:14Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":769761916,"title":"Disable failing test","body":null,"created_at":"2021-10-30T17:18:08Z","closed_at":"2021-10-30T17:18:20Z","merged_at":"2021-10-30T17:18:20Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":769663599,"title":"[MHLO]: add BatchNormTraining and BatchNormGrad support in hlo-legalize-to-lhlo","body":"It basically resolved lowering of some op with a result as a tuple of tensors.\r\nThere seem only BatchNormTraining and BatchNormGrad requiring this.\r\nhttps://github.com/tensorflow/mlir-hlo/pull/18","created_at":"2021-10-30T06:51:46Z","closed_at":"2022-06-10T05:01:33Z","merged_at":"2022-06-10T05:01:33Z","user_id":2830594,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":769616692,"title":"Disable failing test","body":null,"created_at":"2021-10-30T00:49:46Z","closed_at":"2021-10-30T00:49:54Z","merged_at":"2021-10-30T00:49:54Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":769613375,"title":"Update version numbers for TensorFlow 2.5.2","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 5 -> 5\nPatch: 1 -> 2\n\nNo lingering old version strings \"2.5.1\" found in source directory \n\"tensorflow/\". Good.\nNo lingering old version strings \"2.5.1\" found in source directory \n\"tensorflow/\". Good.\n```","created_at":"2021-10-30T00:29:37Z","closed_at":"2021-10-30T17:29:35Z","merged_at":"2021-10-30T17:29:35Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":769613274,"title":"Update version numbers for TensorFlow 2.4.4","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 4 -> 4\nPatch: 3 -> 4\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.4.3\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/lite/tools/pip_package/setup_with_bazel.py:69:2.4.3\ntensorflow/lite/tools/pip_package/setup.py:223:2.4.3\ntensorflow/lite/g3doc/tutorials/model_maker_question_answer.ipynb:287:2.4.3\ntensorflow/lite/g3doc/tutorials/model_maker_image_classification.ipynb:210:2.4.3\ntensorflow/lite/g3doc/tutorials/model_maker_text_classification.ipynb:207:2.4.3\ntensorflow/workspace.bzl:1138:2.4.3\ntensorflow/workspace.bzl:1139:2.4.3\ntensorflow/workspace.bzl:1142:2.4.3\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.4.3\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/lite/tools/pip_package/setup_with_bazel.py:69:2.4.3\ntensorflow/lite/tools/pip_package/setup.py:223:2.4.3\ntensorflow/lite/g3doc/tutorials/model_maker_question_answer.ipynb:287:2.4.3\ntensorflow/lite/g3doc/tutorials/model_maker_image_classification.ipynb:210:2.4.3\ntensorflow/lite/g3doc/tutorials/model_maker_text_classification.ipynb:207:2.4.3\ntensorflow/workspace.bzl:1138:2.4.3\ntensorflow/workspace.bzl:1139:2.4.3\ntensorflow/workspace.bzl:1142:2.4.3\n```","created_at":"2021-10-30T00:29:01Z","closed_at":"2021-10-30T17:29:22Z","merged_at":"2021-10-30T17:29:22Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":769613263,"title":"Update version numbers for TensorFlow 2.6.1","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 6 -> 6\nPatch: 0 -> 1\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.6.0\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/python/keras/__init__.py:33:2.6.0\ntensorflow/java/maven/tensorflow-hadoop/pom.xml:17:2.6.0\ntensorflow/tools/ci_build/release/requirements_common.txt:27:2.6.0\ntensorflow/tools/ci_build/release/requirements_common.txt:28:2.6.0\ntensorflow/tools/ci_build/release/requirements_common.txt:29:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:80:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:149:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:155:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:161:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:227:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:334:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:355:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:356:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:357:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:358:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:359:2.6.0\ntensorflow/workspace2.bzl:1051:2.6.0\ntensorflow/workspace2.bzl:1052:2.6.0\ntensorflow/workspace2.bzl:1055:2.6.0\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.6.0\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/python/keras/__init__.py:33:2.6.0\ntensorflow/java/maven/tensorflow-hadoop/pom.xml:17:2.6.0\ntensorflow/tools/ci_build/release/requirements_common.txt:27:2.6.0\ntensorflow/tools/ci_build/release/requirements_common.txt:28:2.6.0\ntensorflow/tools/ci_build/release/requirements_common.txt:29:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:80:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:149:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:155:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:161:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:227:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:334:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:355:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:356:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:357:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:358:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:359:2.6.0\ntensorflow/workspace2.bzl:1051:2.6.0\ntensorflow/workspace2.bzl:1052:2.6.0\ntensorflow/workspace2.bzl:1055:2.6.0\n```","created_at":"2021-10-30T00:28:56Z","closed_at":"2021-10-30T17:29:49Z","merged_at":"2021-10-30T17:29:49Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":769612303,"title":"Update release notes for TensorFlow 2.6.1","body":"This PR is intentionally incomplete. One of the Release Owners for 2.6.1\nneeds to fill in the internal release notes for this version before the PR gets\nsubmitted. Click on the :pencil2: icon in the header for `RELEASE.md` under\n\"Files Changed\" above.","created_at":"2021-10-30T00:24:02Z","closed_at":"2021-10-30T22:57:16Z","merged_at":"2021-10-30T22:57:16Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":769612097,"title":"Update release notes for TensorFlow 2.5.2","body":"This PR is intentionally incomplete. One of the Release Owners for 2.5.2\nneeds to fill in the internal release notes for this version before the PR gets\nsubmitted. Click on the :pencil2: icon in the header for `RELEASE.md` under\n\"Files Changed\" above.","created_at":"2021-10-30T00:22:56Z","closed_at":"2021-10-30T22:58:37Z","merged_at":"2021-10-30T22:58:36Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":769612076,"title":"Update release notes for TensorFlow 2.4.4","body":"This PR is intentionally incomplete. One of the Release Owners for 2.4.4\nneeds to fill in the internal release notes for this version before the PR gets\nsubmitted. Click on the :pencil2: icon in the header for `RELEASE.md` under\n\"Files Changed\" above.","created_at":"2021-10-30T00:22:50Z","closed_at":"2021-10-30T22:59:09Z","merged_at":"2021-10-30T22:59:09Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":769610872,"title":"Disable failing test","body":null,"created_at":"2021-10-30T00:16:33Z","closed_at":"2021-10-30T00:17:41Z","merged_at":"2021-10-30T00:17:41Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":769609175,"title":"Fix bad ident","body":null,"created_at":"2021-10-30T00:09:16Z","closed_at":"2021-10-30T00:17:25Z","merged_at":"2021-10-30T00:17:25Z","user_id":323199,"sentiment":{"polarity":-0.6999999999999998,"subjectivity":0.6666666666666666}}
{"_id":769608728,"title":"Remove merge markers","body":null,"created_at":"2021-10-30T00:07:34Z","closed_at":"2021-10-30T00:16:49Z","merged_at":"2021-10-30T00:16:49Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":769608333,"title":"Update version numbers for TensorFlow 2.7.0","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 7 -> 7\nPatch: 0 -> 0\n\nNo lingering old version strings \"2.7.0-rc1\" found in source directory \n\"tensorflow/\". Good.\nNo lingering old version strings \"2.7.0rc1\" found in source directory \n\"tensorflow/\". Good.\n```","created_at":"2021-10-30T00:06:11Z","closed_at":"2021-10-30T00:22:09Z","merged_at":"2021-10-30T00:22:09Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":769490249,"title":"Add support for the \"--external-delegate-path\" to the CMake build of the benchmark tool","body":"8f7b238: added support for the \"--external-delegate-path\" to the cmake build of the benchmark tool.  The support for external delegates is already part of the bazel build.\r\n\r\n4a85ea5: Adds TFLITE_ENABLE_HEXAGON around code that should have it.","created_at":"2021-10-29T19:15:40Z","closed_at":"2021-11-05T13:09:24Z","merged_at":null,"user_id":92391026,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":769478540,"title":"Fix build on `tensorflow/core/kernels/boosted_trees/stats_ops.cc`","body":null,"created_at":"2021-10-29T18:56:05Z","closed_at":"2021-10-29T18:58:44Z","merged_at":"2021-10-29T18:58:44Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":769478161,"title":"Fix build broken by merge conflict in `tensorflow/core/kernels/sequen…`","body":"…ce_ops.cc`","created_at":"2021-10-29T18:55:23Z","closed_at":"2021-10-29T18:58:25Z","merged_at":"2021-10-29T18:58:25Z","user_id":323199,"sentiment":{"polarity":-0.4,"subjectivity":0.4}}
{"_id":769465866,"title":"Fix build on `tpu_cross_replica_ops.cc`","body":null,"created_at":"2021-10-29T18:33:25Z","closed_at":"2021-10-29T18:35:39Z","merged_at":"2021-10-29T18:35:39Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":769464894,"title":"Fix build on `tensorflow/core/kernels/boosted_trees/stats_ops.cc`","body":null,"created_at":"2021-10-29T18:31:43Z","closed_at":"2021-10-29T18:35:25Z","merged_at":"2021-10-29T18:35:25Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":769463956,"title":"Fix build broken by merge conflict in `tensorflow/core/kernels/sequen…","body":"…ce_ops.cc`","created_at":"2021-10-29T18:30:07Z","closed_at":"2021-10-29T18:35:07Z","merged_at":"2021-10-29T18:35:07Z","user_id":323199,"sentiment":{"polarity":-0.4,"subjectivity":0.4}}
{"_id":769463374,"title":"Added external delegate support to the benchmark tool","body":"Change-Id: I360dc811219948b7de53100fb4be4063a791d006\r\n\r\nThis adds support for the \"--external_delegate_path\" command line flag in the **CMake** build of the benchmark tool.  The _bazel_ build already supports the flag, so this just synchronizes both types of builds.","created_at":"2021-10-29T18:29:03Z","closed_at":"2021-10-29T18:56:11Z","merged_at":null,"user_id":92391026,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":769445697,"title":"Fix broken build due to bad merge conflict resolution","body":null,"created_at":"2021-10-29T18:00:46Z","closed_at":"2021-10-29T18:00:53Z","merged_at":"2021-10-29T18:00:53Z","user_id":323199,"sentiment":{"polarity":-0.40833333333333327,"subjectivity":0.48055555555555557}}
{"_id":769425400,"title":"Fix build broken by merge conflict in `tensorflow/core/kernels/sequen…","body":"…ce_ops.cc`","created_at":"2021-10-29T17:27:39Z","closed_at":"2021-10-29T17:28:53Z","merged_at":"2021-10-29T17:28:53Z","user_id":323199,"sentiment":{"polarity":-0.4,"subjectivity":0.4}}
{"_id":769415125,"title":"Add missing `AddDimWithStatus`","body":null,"created_at":"2021-10-29T17:10:41Z","closed_at":"2021-10-29T17:28:31Z","merged_at":"2021-10-29T17:28:31Z","user_id":323199,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":769410174,"title":"Fix build on `tensorflow/core/kernels/boosted_trees/stats_ops.cc`","body":null,"created_at":"2021-10-29T17:02:38Z","closed_at":"2021-10-29T17:28:16Z","merged_at":"2021-10-29T17:28:16Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":769409365,"title":"Fix build on `tpu_cross_replica_ops.cc`","body":null,"created_at":"2021-10-29T17:01:13Z","closed_at":"2021-10-29T17:27:53Z","merged_at":"2021-10-29T17:27:52Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":769074825,"title":"Upgrade grpc to 1.41.1 and protobuf to 3.19.0","body":"This is a retry of https://github.com/tensorflow/tensorflow/pull/51923","created_at":"2021-10-29T09:35:39Z","closed_at":"2023-02-01T15:10:50Z","merged_at":null,"user_id":4171702,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768879719,"title":"[ROCm] fix for //tensorflow/compiler/tests:cast_ops_test_gpu","body":"This fixes //tensorflow/compiler/tests:cast_ops_test_gpu for ROCM platforms\r\nInspired by changes in cuda side\r\n\r\n@cheshire @chsigg @deven-amd ","created_at":"2021-10-29T03:43:06Z","closed_at":"2021-11-02T16:59:37Z","merged_at":"2021-11-02T16:59:37Z","user_id":8660918,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768804124,"title":"Adding new patch for LLVM to support building on darwin arm64","body":"This should also enable cross-compiling from x86_64 to arm64, without breaking the existing x86_64 builds.\r\n\r\nOver in https://github.com/google/jax/issues/5501, we've been struggling to get JAX to compile properly on the Apple arm64 architecture or cross-compiled from x86_64, since the compiler flags for `llvm-project` don't get set properly. This was the simplest method I could find for getting this to work, without breaking the existing builds. I've tested that I can get JAX to compile and cross-compile properly after applying this patch, but I don't know if there are specific TensorFlow tests that would be good to run too.\r\n\r\nI don't think that it makes sense to submit this upstream to LLVM since (I think!) the version there, based on platforms, should already work, and I don't entirely understand why it doesn't for the TensorFlow build. Folks over there were (correctly, I think) unhappy about exposing a configuration variable like this just as a workaround for our purposes.\r\n\r\nThanks!\r\n\r\n/cc @yashk2810, @hawkinsp","created_at":"2021-10-29T00:07:31Z","closed_at":"2021-10-29T16:00:38Z","merged_at":"2021-10-29T16:00:38Z","user_id":350282,"sentiment":{"polarity":0.13636363636363635,"subjectivity":0.45454545454545453}}
{"_id":768765638,"title":"Merge pull request #51975 from yongtang:51936-max_pool3d","body":"PiperOrigin-RevId: 401245519\r\nChange-Id: I67d2cbb0e21729b94186ca9bf82450ff93132ff2","created_at":"2021-10-28T22:23:24Z","closed_at":"2021-10-28T22:26:35Z","merged_at":"2021-10-28T22:26:35Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768761766,"title":"PR #51732: Fix crash of tf.image.crop_and_resize when input is large …","body":"…number\r\n\r\nImported from GitHub PR https://github.com/tensorflow/tensorflow/pull/51732\r\n\r\nThis PR is part of the effort in #46890 where\r\ntf.image.crop_and_resize will crash if shape consists of large number.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\nCopybara import of the project:\r\n\r\n--\r\nc8d87055a56d8740d27ad8bdc74a7459ede6900e by Yong Tang <yong.tang.github@outlook.com>:\r\n\r\nFix crash of tf.image.crop_and_resize when input is large number\r\n\r\nThis PR is part of the effort in 46890 where\r\ntf.image.crop_and_resize will crash if shape consists of large number.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/tensorflow/tensorflow/pull/51732 from yongtang:46890-tf.image.crop_and_resize c8d87055a56d8740d27ad8bdc74a7459ede6900e\r\nPiperOrigin-RevId: 394109830\r\nChange-Id: If049dad0844df9353722029ee95bc76819eda1f4","created_at":"2021-10-28T22:15:07Z","closed_at":"2021-10-28T22:26:18Z","merged_at":"2021-10-28T22:26:18Z","user_id":323199,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.42857142857142855}}
{"_id":768761746,"title":"PR #51732: Fix crash of tf.image.crop_and_resize when input is large …","body":"…number\r\n\r\nImported from GitHub PR https://github.com/tensorflow/tensorflow/pull/51732\r\n\r\nThis PR is part of the effort in #46890 where\r\ntf.image.crop_and_resize will crash if shape consists of large number.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\nCopybara import of the project:\r\n\r\n--\r\nc8d87055a56d8740d27ad8bdc74a7459ede6900e by Yong Tang <yong.tang.github@outlook.com>:\r\n\r\nFix crash of tf.image.crop_and_resize when input is large number\r\n\r\nThis PR is part of the effort in 46890 where\r\ntf.image.crop_and_resize will crash if shape consists of large number.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/tensorflow/tensorflow/pull/51732 from yongtang:46890-tf.image.crop_and_resize c8d87055a56d8740d27ad8bdc74a7459ede6900e\r\nPiperOrigin-RevId: 394109830\r\nChange-Id: If049dad0844df9353722029ee95bc76819eda1f4","created_at":"2021-10-28T22:15:03Z","closed_at":"2021-10-28T22:26:10Z","merged_at":"2021-10-28T22:26:10Z","user_id":323199,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.42857142857142855}}
{"_id":768761726,"title":"PR #51732: Fix crash of tf.image.crop_and_resize when input is large …","body":"…number\r\n\r\nImported from GitHub PR https://github.com/tensorflow/tensorflow/pull/51732\r\n\r\nThis PR is part of the effort in #46890 where\r\ntf.image.crop_and_resize will crash if shape consists of large number.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\nCopybara import of the project:\r\n\r\n--\r\nc8d87055a56d8740d27ad8bdc74a7459ede6900e by Yong Tang <yong.tang.github@outlook.com>:\r\n\r\nFix crash of tf.image.crop_and_resize when input is large number\r\n\r\nThis PR is part of the effort in 46890 where\r\ntf.image.crop_and_resize will crash if shape consists of large number.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/tensorflow/tensorflow/pull/51732 from yongtang:46890-tf.image.crop_and_resize c8d87055a56d8740d27ad8bdc74a7459ede6900e\r\nPiperOrigin-RevId: 394109830\r\nChange-Id: If049dad0844df9353722029ee95bc76819eda1f4","created_at":"2021-10-28T22:15:01Z","closed_at":"2021-10-28T22:26:02Z","merged_at":"2021-10-28T22:26:02Z","user_id":323199,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.42857142857142855}}
{"_id":768757918,"title":"Merge pull request #51733 from yongtang:46888-tf.math.segment_","body":"PiperOrigin-RevId: 406020083\r\nChange-Id: I179a9a8fe548ed324fc97363e81a46be28aa19b8","created_at":"2021-10-28T22:08:20Z","closed_at":"2021-10-28T22:26:43Z","merged_at":"2021-10-28T22:26:43Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768752975,"title":"Add missing validation","body":null,"created_at":"2021-10-28T21:58:37Z","closed_at":"2021-10-28T22:01:35Z","merged_at":"2021-10-28T22:01:35Z","user_id":323199,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":768752751,"title":"Add missing validation","body":null,"created_at":"2021-10-28T21:58:11Z","closed_at":"2021-10-28T21:58:28Z","merged_at":null,"user_id":323199,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":768752731,"title":"Add missing validation","body":null,"created_at":"2021-10-28T21:58:07Z","closed_at":"2021-10-28T22:01:24Z","merged_at":"2021-10-28T22:01:24Z","user_id":323199,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":768752693,"title":"Add missing validation","body":null,"created_at":"2021-10-28T21:58:03Z","closed_at":"2021-10-28T22:01:14Z","merged_at":"2021-10-28T22:01:14Z","user_id":323199,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":768752659,"title":"Add missing validation","body":null,"created_at":"2021-10-28T21:57:58Z","closed_at":"2021-10-28T22:01:04Z","merged_at":"2021-10-28T22:01:04Z","user_id":323199,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":768744875,"title":"Error checking for zero size filters for tf.nn.convolution (conv2d, c…","body":"…onv3d)\r\n\r\nPreviously, this case was crash (floating point exception).\r\n\r\nPiperOrigin-RevId: 389661784\r\nChange-Id: I65a60c1c1608537d38a37b8839ce0e82e419472e","created_at":"2021-10-28T21:41:58Z","closed_at":"2021-10-28T21:42:37Z","merged_at":"2021-10-28T21:42:37Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768741748,"title":"Adding more validation checks to _ParallelConcatUpdate to avoid NPE.","body":"PiperOrigin-RevId: 402569467\r\nChange-Id: I2db122dab68be2a5e4e8dd3375f5a70c4d2307ec","created_at":"2021-10-28T21:35:40Z","closed_at":"2021-10-28T21:37:14Z","merged_at":"2021-10-28T21:37:14Z","user_id":323199,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":768741324,"title":"Adding more validation checks to _ParallelConcatUpdate to avoid NPE.","body":"PiperOrigin-RevId: 402569467\r\nChange-Id: I2db122dab68be2a5e4e8dd3375f5a70c4d2307ec","created_at":"2021-10-28T21:34:51Z","closed_at":"2021-10-28T21:36:48Z","merged_at":"2021-10-28T21:36:48Z","user_id":323199,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":768733655,"title":"Make Transpose's shape inference function validate that negative `per…","body":"…m` values are within the tensor's rank.\r\n\r\nPiperOrigin-RevId: 403252853\r\nChange-Id: Ia6b31b45b237312668bb31c2c3b3c7bbce2d2610","created_at":"2021-10-28T21:20:47Z","closed_at":"2021-10-28T21:22:24Z","merged_at":"2021-10-28T21:22:24Z","user_id":323199,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":768733640,"title":"Make Transpose's shape inference function validate that negative `per…","body":"…m` values are within the tensor's rank.\r\n\r\nPiperOrigin-RevId: 403252853\r\nChange-Id: Ia6b31b45b237312668bb31c2c3b3c7bbce2d2610","created_at":"2021-10-28T21:20:46Z","closed_at":"2021-10-28T21:22:19Z","merged_at":"2021-10-28T21:22:19Z","user_id":323199,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":768733621,"title":"Make Transpose's shape inference function validate that negative `per…","body":"…m` values are within the tensor's rank.\r\n\r\nPiperOrigin-RevId: 403252853\r\nChange-Id: Ia6b31b45b237312668bb31c2c3b3c7bbce2d2610","created_at":"2021-10-28T21:20:44Z","closed_at":"2021-10-28T21:22:14Z","merged_at":"2021-10-28T21:22:14Z","user_id":323199,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":768730818,"title":"Fix undefined behavior in CollectiveReduceV2 and others","body":"We should not call done after it's moved.\r\n\r\nPiperOrigin-RevId: 400838185\r\nChange-Id: Ifc979740054b8f8c6f4d50acc89472fe60c4fdb1","created_at":"2021-10-28T21:15:47Z","closed_at":"2021-10-28T21:15:58Z","merged_at":"2021-10-28T21:15:58Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768730796,"title":"Mm cp 1 on r2.6","body":null,"created_at":"2021-10-28T21:15:45Z","closed_at":"2021-10-28T21:16:06Z","merged_at":null,"user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768728457,"title":"Update TPU AllToAll op to avoid divide by 0.","body":"PiperOrigin-RevId: 400259638\r\nChange-Id: Ic4cfe4fe7159da38caed8044ee005f898e42cd86","created_at":"2021-10-28T21:11:47Z","closed_at":"2021-10-28T21:12:32Z","merged_at":"2021-10-28T21:12:32Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768728368,"title":"Update TPU AllToAll op to avoid divide by 0.","body":"PiperOrigin-RevId: 400259638\r\nChange-Id: Ic4cfe4fe7159da38caed8044ee005f898e42cd86","created_at":"2021-10-28T21:11:38Z","closed_at":"2021-10-28T21:12:28Z","merged_at":"2021-10-28T21:12:28Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768723251,"title":"Mm cp 2 on r2.4","body":null,"created_at":"2021-10-28T21:03:26Z","closed_at":"2021-10-28T21:03:32Z","merged_at":null,"user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768723188,"title":"Fixing security fixes in boosted trees ops","body":"PiperOrigin-RevId: 405669548\r\nChange-Id: Iae224d240d1779bcc02405c2fff99785644fbd0d","created_at":"2021-10-28T21:03:20Z","closed_at":"2021-10-28T21:05:04Z","merged_at":"2021-10-28T21:05:04Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768723097,"title":"Fixing security fixes in boosted trees ops","body":"PiperOrigin-RevId: 405669548\r\nChange-Id: Iae224d240d1779bcc02405c2fff99785644fbd0d","created_at":"2021-10-28T21:03:11Z","closed_at":"2021-10-28T21:04:59Z","merged_at":"2021-10-28T21:04:59Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768720297,"title":"Fixing security fixes in boosted trees ops","body":"PiperOrigin-RevId: 405669548\r\nChange-Id: Iae224d240d1779bcc02405c2fff99785644fbd0d","created_at":"2021-10-28T20:58:39Z","closed_at":"2021-10-28T21:05:35Z","merged_at":"2021-10-28T21:05:35Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768720129,"title":"Mm cp 5c8c9a8bfe750f9743d0c859bae112060b216f5c on r2.4","body":null,"created_at":"2021-10-28T20:58:21Z","closed_at":"2021-10-28T20:58:27Z","merged_at":null,"user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768716935,"title":"Make SparseFillEmptyRows validate that the length of `values` must be…","body":"… equal to the number of index tuples.\r\n\r\nPiperOrigin-RevId: 399969549\r\nChange-Id: I3c2f2ca1c1d2cc88bb5951c6958b38c16e9436c8","created_at":"2021-10-28T20:52:59Z","closed_at":"2021-10-28T20:54:27Z","merged_at":"2021-10-28T20:54:26Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768716923,"title":"Make SparseFillEmptyRows validate that the length of `values` must be…","body":"… equal to the number of index tuples.\r\n\r\nPiperOrigin-RevId: 399969549\r\nChange-Id: I3c2f2ca1c1d2cc88bb5951c6958b38c16e9436c8","created_at":"2021-10-28T20:52:58Z","closed_at":"2021-10-28T20:54:15Z","merged_at":"2021-10-28T20:54:15Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768693025,"title":"Do not pass adjoint to real-valued CSR Sparse MatMul Op.","body":"Starting in CUDA 11.5, cusparseSpMV no longer supports performing\r\nconjugate transposes on non-complex types. Previously, cublas would\r\nimplicitly interpret this as a simple tranpose.\r\n\r\nThis commit explicitly converts adjoint flags on real valued SpMV ops to\r\ntransposes, recovering the previous behavior.\r\n\r\nCC: @sanjoy ","created_at":"2021-10-28T20:14:04Z","closed_at":"2022-02-17T21:55:55Z","merged_at":"2022-02-17T21:55:54Z","user_id":1873655,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768640353,"title":"Update dtypes.py","body":"Updated apostrophe for terms \"DType s\" and \"Tensor s\" in https://www.tensorflow.org/api_docs/python/tf/dtypes/DType#tf.qint32","created_at":"2021-10-28T18:55:37Z","closed_at":"2021-11-01T18:51:49Z","merged_at":"2021-11-01T18:51:49Z","user_id":59822926,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768615103,"title":"Cherrypick fixes for ImmutableConst op vuln","body":null,"created_at":"2021-10-28T18:28:54Z","closed_at":"2021-10-28T19:54:12Z","merged_at":"2021-10-28T19:54:12Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768615082,"title":"Cherrypick fixes for ImmutableConst op vuln","body":null,"created_at":"2021-10-28T18:28:53Z","closed_at":"2021-10-28T19:54:09Z","merged_at":"2021-10-28T19:54:09Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768615069,"title":"Cherrypick fixes for ImmutableConst op vuln","body":null,"created_at":"2021-10-28T18:28:52Z","closed_at":"2021-10-28T19:54:06Z","merged_at":"2021-10-28T19:54:06Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768615033,"title":"Cherrypick fixes for ImmutableConst op vuln","body":null,"created_at":"2021-10-28T18:28:51Z","closed_at":"2021-10-28T19:54:02Z","merged_at":"2021-10-28T19:54:02Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768606442,"title":"Add shape checks to FusedBatchNorm kernels.","body":"PiperOrigin-RevId: 399755576\r\nChange-Id: If8049fde109cc33badb5509d174b9b95aee1ea5e","created_at":"2021-10-28T18:22:11Z","closed_at":"2021-10-28T18:30:07Z","merged_at":"2021-10-28T18:30:07Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768606343,"title":"Add shape checks to FusedBatchNorm kernels.","body":"PiperOrigin-RevId: 399755576\r\nChange-Id: If8049fde109cc33badb5509d174b9b95aee1ea5e","created_at":"2021-10-28T18:22:07Z","closed_at":"2021-10-28T18:30:02Z","merged_at":"2021-10-28T18:30:02Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768606249,"title":"Add shape checks to FusedBatchNorm kernels.","body":"PiperOrigin-RevId: 399755576\r\nChange-Id: If8049fde109cc33badb5509d174b9b95aee1ea5e","created_at":"2021-10-28T18:22:03Z","closed_at":"2021-10-28T18:29:54Z","merged_at":"2021-10-28T18:29:53Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768545682,"title":"Remove use of `eval` when evaluating the input example.","body":"Use `ast.eval_literal` instead which safely evaluates the expression.\r\n\r\nPiperOrigin-RevId: 400012249\r\nChange-Id: I5ff98608ea2d736d093aa488af723ff4f6707e02","created_at":"2021-10-28T17:13:10Z","closed_at":"2021-10-28T18:12:22Z","merged_at":"2021-10-28T18:12:22Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768545588,"title":"Mm cp e3a672333b56f6281f2e7a40fc06b2233f0c5663 on r2.4","body":null,"created_at":"2021-10-28T17:13:02Z","closed_at":"2021-10-28T17:13:20Z","merged_at":null,"user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768545392,"title":"Remove use of `eval` when evaluating the input example.","body":"Use `ast.eval_literal` instead which safely evaluates the expression.\r\n\r\nPiperOrigin-RevId: 400012249\r\nChange-Id: I5ff98608ea2d736d093aa488af723ff4f6707e02","created_at":"2021-10-28T17:12:44Z","closed_at":"2021-10-28T17:14:38Z","merged_at":"2021-10-28T17:14:38Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768543427,"title":"Merge pull request #52209 from k-w-w/cherrypicks_KM7DE","body":"Remove use of `eval` when evaluating the input example.","created_at":"2021-10-28T17:09:56Z","closed_at":"2021-10-28T17:14:33Z","merged_at":"2021-10-28T17:14:33Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768540002,"title":"[tf.data] Fix memory leak in to_tf_record_op.","body":"PiperOrigin-RevId: 396400385\r\nChange-Id: I13951a206ebff8fa0887f42cd9218f07e9ff27dc","created_at":"2021-10-28T17:05:05Z","closed_at":"2021-10-28T22:02:27Z","merged_at":"2021-10-28T22:02:27Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768534718,"title":"Merge pull request #51733 from yongtang:46888-tf.math.segment_","body":"PiperOrigin-RevId: 406020083\r\nChange-Id: I179a9a8fe548ed324fc97363e81a46be28aa19b8","created_at":"2021-10-28T16:57:40Z","closed_at":"2021-10-28T22:06:06Z","merged_at":"2021-10-28T22:06:06Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768531759,"title":"Merge pull request #51733 from yongtang:46888-tf.math.segment_","body":"PiperOrigin-RevId: 406020083\r\nChange-Id: I179a9a8fe548ed324fc97363e81a46be28aa19b8","created_at":"2021-10-28T16:53:29Z","closed_at":"2021-10-28T22:05:52Z","merged_at":"2021-10-28T22:05:52Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768530135,"title":"Merge pull request #51733 from yongtang:46888-tf.math.segment_","body":"PiperOrigin-RevId: 406020083\r\nChange-Id: I179a9a8fe548ed324fc97363e81a46be28aa19b8","created_at":"2021-10-28T16:51:03Z","closed_at":"2021-10-28T22:05:09Z","merged_at":"2021-10-28T22:05:08Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768485796,"title":"[ROCm] Fix for invalid llvm ir on AMDGPU in reduction","body":"Address Space Casting initial value addr to generic space for a fix for the llvm ir generated on AMD GPU. This is a fix for the invalid llvm IR generated following fc9df104fdbbda6ee9096b40186a50badb147ac7. ","created_at":"2021-10-28T15:53:15Z","closed_at":"2021-11-12T11:52:14Z","merged_at":"2021-11-12T11:52:14Z","user_id":25489675,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768261512,"title":"PR #51732: Fix crash of tf.image.crop_and_resize when input is large …","body":"…number\r\n\r\nImported from GitHub PR https://github.com/tensorflow/tensorflow/pull/51732\r\n\r\nThis PR is part of the effort in #46890 where\r\ntf.image.crop_and_resize will crash if shape consists of large number.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\nCopybara import of the project:\r\n\r\n--\r\nc8d87055a56d8740d27ad8bdc74a7459ede6900e by Yong Tang <yong.tang.github@outlook.com>:\r\n\r\nFix crash of tf.image.crop_and_resize when input is large number\r\n\r\nThis PR is part of the effort in 46890 where\r\ntf.image.crop_and_resize will crash if shape consists of large number.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/tensorflow/tensorflow/pull/51732 from yongtang:46890-tf.image.crop_and_resize c8d87055a56d8740d27ad8bdc74a7459ede6900e\r\nPiperOrigin-RevId: 394109830\r\nChange-Id: If049dad0844df9353722029ee95bc76819eda1f4","created_at":"2021-10-28T11:42:21Z","closed_at":"2021-10-28T22:16:42Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.42857142857142855}}
{"_id":768260557,"title":"PR #51732: Fix crash of tf.image.crop_and_resize when input is large …","body":"…number\r\n\r\nImported from GitHub PR https://github.com/tensorflow/tensorflow/pull/51732\r\n\r\nThis PR is part of the effort in #46890 where\r\ntf.image.crop_and_resize will crash if shape consists of large number.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\nCopybara import of the project:\r\n\r\n--\r\nc8d87055a56d8740d27ad8bdc74a7459ede6900e by Yong Tang <yong.tang.github@outlook.com>:\r\n\r\nFix crash of tf.image.crop_and_resize when input is large number\r\n\r\nThis PR is part of the effort in 46890 where\r\ntf.image.crop_and_resize will crash if shape consists of large number.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/tensorflow/tensorflow/pull/51732 from yongtang:46890-tf.image.crop_and_resize c8d87055a56d8740d27ad8bdc74a7459ede6900e\r\nPiperOrigin-RevId: 394109830\r\nChange-Id: If049dad0844df9353722029ee95bc76819eda1f4","created_at":"2021-10-28T11:40:58Z","closed_at":"2021-10-28T22:16:09Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.42857142857142855}}
{"_id":768252423,"title":"Merge pull request #51658 from yongtang:51618-tf.image.extract_glimpse","body":"PiperOrigin-RevId: 401246064\r\nChange-Id: I9e64ab662b1a0bc8c6be4dcc4f0e620db6708d22","created_at":"2021-10-28T11:29:56Z","closed_at":"2021-10-28T22:18:35Z","merged_at":"2021-10-28T22:18:35Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768249735,"title":"Merge pull request #51658 from yongtang:51618-tf.image.extract_glimpse","body":"PiperOrigin-RevId: 401246064\r\nChange-Id: I9e64ab662b1a0bc8c6be4dcc4f0e620db6708d22","created_at":"2021-10-28T11:26:26Z","closed_at":"2021-10-28T22:18:26Z","merged_at":"2021-10-28T22:18:26Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768248958,"title":"Merge pull request #51658 from yongtang:51618-tf.image.extract_glimpse","body":"PiperOrigin-RevId: 401246064\r\nChange-Id: I9e64ab662b1a0bc8c6be4dcc4f0e620db6708d22","created_at":"2021-10-28T11:25:21Z","closed_at":"2021-10-28T22:18:19Z","merged_at":"2021-10-28T22:18:19Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768241102,"title":"Merge pull request #51717 from yongtang:46890-tf.image.pad_to_boundin…","body":"…g_box\r\n\r\nPiperOrigin-RevId: 398351034\r\nChange-Id: Ia11abe3ab57683ca2efea786fd095338d0c8c3b7","created_at":"2021-10-28T11:15:33Z","closed_at":"2021-10-28T22:20:10Z","merged_at":"2021-10-28T22:20:10Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768239007,"title":"Merge pull request #51717 from yongtang:46890-tf.image.pad_to_boundin…","body":"…g_box\r\n\r\nPiperOrigin-RevId: 398351034\r\nChange-Id: Ia11abe3ab57683ca2efea786fd095338d0c8c3b7","created_at":"2021-10-28T11:12:59Z","closed_at":"2021-10-28T22:20:01Z","merged_at":"2021-10-28T22:20:01Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768236885,"title":"Merge pull request #51717 from yongtang:46890-tf.image.pad_to_boundin…","body":"…g_box\r\n\r\nPiperOrigin-RevId: 398351034\r\nChange-Id: Ia11abe3ab57683ca2efea786fd095338d0c8c3b7","created_at":"2021-10-28T11:10:19Z","closed_at":"2021-10-28T22:19:41Z","merged_at":"2021-10-28T22:19:41Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768227622,"title":"Fixing security fixes in boosted trees ops","body":"PiperOrigin-RevId: 405669548\r\nChange-Id: Iae224d240d1779bcc02405c2fff99785644fbd0d","created_at":"2021-10-28T10:58:16Z","closed_at":"2021-10-28T21:04:30Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768197163,"title":"Fix null pointer exception in shape inference function when tf.ragged…","body":"….cross() is called with invalid inputs.\r\n\r\nPiperOrigin-RevId: 400045848\r\nChange-Id: Ia65501583b85cf1ec14a252d83fbdd716817a516","created_at":"2021-10-28T10:18:28Z","closed_at":"2021-10-28T21:27:04Z","merged_at":"2021-10-28T21:27:04Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768192999,"title":"Fix null pointer exception in shape inference function when tf.ragged…","body":"….cross() is called with invalid inputs.\r\n\r\nPiperOrigin-RevId: 400045848\r\nChange-Id: Ia65501583b85cf1ec14a252d83fbdd716817a516","created_at":"2021-10-28T10:13:27Z","closed_at":"2021-10-28T21:26:57Z","merged_at":"2021-10-28T21:26:57Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768168546,"title":"Adding more validation checks to _ParallelConcatUpdate to avoid NPE.","body":"PiperOrigin-RevId: 402569467\r\nChange-Id: I2db122dab68be2a5e4e8dd3375f5a70c4d2307ec","created_at":"2021-10-28T09:44:14Z","closed_at":"2021-10-28T21:35:21Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":768160516,"title":"Fix out-of-bounds memory error in tf.ragged.cross shape inference whe…","body":"…n it is called with invalid inputs.\r\n\r\nPiperOrigin-RevId: 400049589\r\nChange-Id: Icd535f4c6b96b3c926befb70a0e44e6d2b004c0a","created_at":"2021-10-28T09:34:12Z","closed_at":"2021-10-28T21:28:21Z","merged_at":"2021-10-28T21:28:21Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768159150,"title":"Fix out-of-bounds memory error in tf.ragged.cross shape inference whe…","body":"…n it is called with invalid inputs.\r\n\r\nPiperOrigin-RevId: 400049589\r\nChange-Id: Icd535f4c6b96b3c926befb70a0e44e6d2b004c0a","created_at":"2021-10-28T09:32:31Z","closed_at":"2021-10-28T21:28:12Z","merged_at":"2021-10-28T21:28:12Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768157566,"title":"Fix out-of-bounds memory error in tf.ragged.cross shape inference whe…","body":"…n it is called with invalid inputs.\r\n\r\nPiperOrigin-RevId: 400049589\r\nChange-Id: Icd535f4c6b96b3c926befb70a0e44e6d2b004c0a","created_at":"2021-10-28T09:30:32Z","closed_at":"2021-10-28T21:28:04Z","merged_at":"2021-10-28T21:28:04Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768156588,"title":"Fix out-of-bounds memory error in tf.ragged.cross shape inference whe…","body":"…n it is called with invalid inputs.\r\n\r\nPiperOrigin-RevId: 400049589\r\nChange-Id: Icd535f4c6b96b3c926befb70a0e44e6d2b004c0a","created_at":"2021-10-28T09:29:23Z","closed_at":"2021-10-28T21:27:57Z","merged_at":"2021-10-28T21:27:57Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768144306,"title":"Update TPU AllToAll op to avoid divide by 0.","body":"PiperOrigin-RevId: 400259638\r\nChange-Id: Ic4cfe4fe7159da38caed8044ee005f898e42cd86","created_at":"2021-10-28T09:14:56Z","closed_at":"2021-10-28T21:11:15Z","merged_at":"2021-10-28T21:11:15Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768142192,"title":"Update TPU AllToAll op to avoid divide by 0.","body":"PiperOrigin-RevId: 400259638\r\nChange-Id: Ic4cfe4fe7159da38caed8044ee005f898e42cd86","created_at":"2021-10-28T09:12:29Z","closed_at":"2021-10-28T21:11:06Z","merged_at":"2021-10-28T21:11:06Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768118886,"title":"Error checking for zero size filters for tf.nn.convolution (conv2d, c…","body":"…onv3d)\r\n\r\nPreviously, this case was crash (floating point exception).\r\n\r\nPiperOrigin-RevId: 389661784\r\nChange-Id: I65a60c1c1608537d38a37b8839ce0e82e419472e","created_at":"2021-10-28T08:44:47Z","closed_at":"2021-10-28T21:41:42Z","merged_at":"2021-10-28T21:41:42Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768117488,"title":"Error checking for zero size filters for tf.nn.convolution (conv2d, c…","body":"…onv3d)\r\n\r\nPreviously, this case was crash (floating point exception).\r\n\r\nPiperOrigin-RevId: 389661784\r\nChange-Id: I65a60c1c1608537d38a37b8839ce0e82e419472e","created_at":"2021-10-28T08:43:06Z","closed_at":"2021-10-28T21:41:34Z","merged_at":"2021-10-28T21:41:34Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768098144,"title":"A negative size in one of the split sizes allowed the computed size o…","body":"…f another\r\n\r\nto exceed the total dimension, leading to a segfault and security vulnerability.\r\nAdding a check for negative sizes prevents this.\r\n\r\nPiperOrigin-RevId: 401035665\r\nChange-Id: I79bbe329787dac82aa4bf60397a9129b716aedab","created_at":"2021-10-28T08:18:28Z","closed_at":"2021-10-28T20:57:51Z","merged_at":"2021-10-28T20:57:51Z","user_id":88513897,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":768094576,"title":"A negative size in one of the split sizes allowed the computed size o…","body":"…f another\r\n\r\nto exceed the total dimension, leading to a segfault and security vulnerability.\r\nAdding a check for negative sizes prevents this.\r\n\r\nPiperOrigin-RevId: 401035665\r\nChange-Id: I79bbe329787dac82aa4bf60397a9129b716aedab","created_at":"2021-10-28T08:13:56Z","closed_at":"2021-10-28T20:57:41Z","merged_at":"2021-10-28T20:57:41Z","user_id":88513897,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":768059322,"title":"Add shape checks to FusedBatchNorm kernels.","body":"PiperOrigin-RevId: 399755576\r\nChange-Id: If8049fde109cc33badb5509d174b9b95aee1ea5e","created_at":"2021-10-28T07:36:15Z","closed_at":"2021-10-28T22:27:26Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768035653,"title":"Merge pull request #51138 from yongtang:46911-tile","body":"PiperOrigin-RevId: 397891537\r\nChange-Id: I9b12304000e80dd87e6d4a42614ab10383a967b0","created_at":"2021-10-28T07:01:07Z","closed_at":"2021-10-28T22:11:03Z","merged_at":"2021-10-28T22:11:03Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768034108,"title":"Merge pull request #51138 from yongtang:46911-tile","body":"PiperOrigin-RevId: 397891537\r\nChange-Id: I9b12304000e80dd87e6d4a42614ab10383a967b0","created_at":"2021-10-28T06:58:36Z","closed_at":"2021-10-28T22:10:55Z","merged_at":"2021-10-28T22:10:55Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":768033012,"title":"Merge pull request #51138 from yongtang:46911-tile","body":"PiperOrigin-RevId: 397891537\r\nChange-Id: I9b12304000e80dd87e6d4a42614ab10383a967b0","created_at":"2021-10-28T06:56:46Z","closed_at":"2021-10-28T22:10:47Z","merged_at":"2021-10-28T22:10:47Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":767974093,"title":"PR #51732: Fix crash of tf.image.crop_and_resize when input is large …","body":"…number\r\n\r\nImported from GitHub PR https://github.com/tensorflow/tensorflow/pull/51732\r\n\r\nThis PR is part of the effort in #46890 where\r\ntf.image.crop_and_resize will crash if shape consists of large number.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\nCopybara import of the project:\r\n\r\n--\r\nc8d87055a56d8740d27ad8bdc74a7459ede6900e by Yong Tang <yong.tang.github@outlook.com>:\r\n\r\nFix crash of tf.image.crop_and_resize when input is large number\r\n\r\nThis PR is part of the effort in 46890 where\r\ntf.image.crop_and_resize will crash if shape consists of large number.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/tensorflow/tensorflow/pull/51732 from yongtang:46890-tf.image.crop_and_resize c8d87055a56d8740d27ad8bdc74a7459ede6900e\r\nPiperOrigin-RevId: 394109830\r\nChange-Id: If049dad0844df9353722029ee95bc76819eda1f4","created_at":"2021-10-28T04:50:19Z","closed_at":"2021-10-28T22:15:33Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.42857142857142855}}
{"_id":767938927,"title":"PR #51658: Fix crash of tf.image.extract_glimpse with negative input -merge to r2.5","body":"PiperOrigin-RevId: 401246064\r\nChange-Id: I9e64ab662b1a0bc8c6be4dcc4f0e620db6708d22","created_at":"2021-10-28T03:14:55Z","closed_at":"2021-10-28T03:32:19Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":767933435,"title":"PR #51658: Fix crash of tf.image.extract_glimpse with negative input (merge to 2.6)","body":"PiperOrigin-RevId: 401246064\r\nChange-Id: I9e64ab662b1a0bc8c6be4dcc4f0e620db6708d22","created_at":"2021-10-28T03:01:33Z","closed_at":"2021-10-28T03:32:32Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":767916703,"title":"Merge pull request #51975 from yongtang:51936-max_pool3d","body":"PiperOrigin-RevId: 401245519\r\nChange-Id: I67d2cbb0e21729b94186ca9bf82450ff93132ff2","created_at":"2021-10-28T02:12:21Z","closed_at":"2021-10-28T22:21:40Z","merged_at":"2021-10-28T22:21:40Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":767916041,"title":"Merge pull request #51975 from yongtang:51936-max_pool3d","body":"PiperOrigin-RevId: 401245519\r\nChange-Id: I67d2cbb0e21729b94186ca9bf82450ff93132ff2","created_at":"2021-10-28T02:10:53Z","closed_at":"2021-10-28T22:21:32Z","merged_at":"2021-10-28T22:21:32Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":767915138,"title":"Merge pull request #51975 from yongtang:51936-max_pool3d","body":"PiperOrigin-RevId: 401245519\r\nChange-Id: I67d2cbb0e21729b94186ca9bf82450ff93132ff2","created_at":"2021-10-28T02:08:49Z","closed_at":"2021-10-28T22:23:42Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":767865045,"title":"Make SparseFillEmptyRows validate that the length of `values` must be…","body":"… equal to the number of index tuples.\r\n\r\nPiperOrigin-RevId: 399969549\r\nChange-Id: I3c2f2ca1c1d2cc88bb5951c6958b38c16e9436c8","created_at":"2021-10-27T23:44:10Z","closed_at":"2021-10-28T22:28:05Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":767810211,"title":"Upgrade rules_apple to work with latest Bazel version","body":null,"created_at":"2021-10-27T21:39:56Z","closed_at":"2021-12-02T15:49:10Z","merged_at":null,"user_id":323199,"sentiment":{"polarity":0.5,"subjectivity":0.9}}
{"_id":767799808,"title":"Fixing security fixes in boosted trees ops","body":"PiperOrigin-RevId: 405669548\r\nChange-Id: Iae224d240d1779bcc02405c2fff99785644fbd0d","created_at":"2021-10-27T21:21:01Z","closed_at":"2021-10-28T21:04:11Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":767787941,"title":"Fixing security fixes in boosted trees ops","body":"PiperOrigin-RevId: 405669548\r\nChange-Id: Iae224d240d1779bcc02405c2fff99785644fbd0d","created_at":"2021-10-27T21:01:48Z","closed_at":"2021-10-28T20:59:52Z","merged_at":"2021-10-28T20:59:52Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":767764706,"title":"Adding more validation checks to _ParallelConcatUpdate to avoid NPE.","body":"PiperOrigin-RevId: 402569467\r\nChange-Id: I2db122dab68be2a5e4e8dd3375f5a70c4d2307ec","created_at":"2021-10-27T20:28:34Z","closed_at":"2021-10-28T21:36:38Z","merged_at":"2021-10-28T21:36:38Z","user_id":88513897,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":767763693,"title":"Adding more validation checks to _ParallelConcatUpdate to avoid NPE.","body":"PiperOrigin-RevId: 402569467\r\nChange-Id: I2db122dab68be2a5e4e8dd3375f5a70c4d2307ec","created_at":"2021-10-27T20:26:54Z","closed_at":"2021-10-28T21:36:32Z","merged_at":"2021-10-28T21:36:32Z","user_id":88513897,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":767758326,"title":" Address QuantizeAndDequantizeV* heap oob. Added additional checks fo…","body":"…r the 'axis' attribute.\r\n\r\nPiperOrigin-RevId: 402446942\r\nChange-Id: Id2f6b82e4e740d0550329be02621c46466b5a5b9","created_at":"2021-10-27T20:18:28Z","closed_at":"2021-10-28T21:30:35Z","merged_at":"2021-10-28T21:30:35Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":767757211,"title":" Address QuantizeAndDequantizeV* heap oob. Added additional checks fo…","body":"…r the 'axis' attribute.\r\n\r\nPiperOrigin-RevId: 402446942\r\nChange-Id: Id2f6b82e4e740d0550329be02621c46466b5a5b9","created_at":"2021-10-27T20:16:53Z","closed_at":"2021-10-28T21:30:27Z","merged_at":"2021-10-28T21:30:27Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":767755973,"title":" Address QuantizeAndDequantizeV* heap oob. Added additional checks fo…","body":"…r the 'axis' attribute.\r\n\r\nPiperOrigin-RevId: 402446942\r\nChange-Id: Id2f6b82e4e740d0550329be02621c46466b5a5b9","created_at":"2021-10-27T20:15:05Z","closed_at":"2021-10-28T21:30:20Z","merged_at":"2021-10-28T21:30:20Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":767754994,"title":" Address QuantizeAndDequantizeV* heap oob. Added additional checks fo…","body":"…r the 'axis' attribute.\r\n\r\nPiperOrigin-RevId: 402446942\r\nChange-Id: Id2f6b82e4e740d0550329be02621c46466b5a5b9","created_at":"2021-10-27T20:13:44Z","closed_at":"2021-10-28T21:30:13Z","merged_at":"2021-10-28T21:30:13Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":767750491,"title":"Fix undefined behavior in CollectiveReduceV2 and others","body":"We should not call done after it's moved.\r\n\r\nPiperOrigin-RevId: 400838185\r\nChange-Id: Ifc979740054b8f8c6f4d50acc89472fe60c4fdb1","created_at":"2021-10-27T20:07:27Z","closed_at":"2021-10-28T21:15:36Z","merged_at":"2021-10-28T21:15:36Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":767746581,"title":"Prevent OOB access in QuantizeV2 shape inference","body":"PiperOrigin-RevId: 400309614\r\nChange-Id: I31412c71b05b4f21b677f7fa715a61499cbee39d","created_at":"2021-10-27T20:01:57Z","closed_at":"2021-10-28T21:29:11Z","merged_at":"2021-10-28T21:29:11Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":767745144,"title":"Prevent OOB access in QuantizeV2 shape inference","body":"PiperOrigin-RevId: 400309614\r\nChange-Id: I31412c71b05b4f21b677f7fa715a61499cbee39d","created_at":"2021-10-27T20:00:01Z","closed_at":"2021-10-28T21:29:03Z","merged_at":"2021-10-28T21:29:03Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":767698390,"title":"Fix null pointer exception in shape inference function when tf.ragged…","body":"….cross() is called with invalid inputs.\r\n\r\nPiperOrigin-RevId: 400045848\r\nChange-Id: Ia65501583b85cf1ec14a252d83fbdd716817a516","created_at":"2021-10-27T18:56:25Z","closed_at":"2021-10-28T21:26:49Z","merged_at":"2021-10-28T21:26:48Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":767687227,"title":"Fix null pointer exception in shape inference function when tf.ragged…","body":"….cross() is called with invalid inputs.\r\n\r\nPiperOrigin-RevId: 400045848\r\nChange-Id: Ia65501583b85cf1ec14a252d83fbdd716817a516","created_at":"2021-10-27T18:42:58Z","closed_at":"2021-10-28T21:26:40Z","merged_at":"2021-10-28T21:26:40Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":767687208,"title":"tensorflowtest","body":"tensorflow practice","created_at":"2021-10-27T18:42:57Z","closed_at":"2021-10-27T21:41:16Z","merged_at":null,"user_id":93283893,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":767682899,"title":"Ensuring that the input to DeserializeSparse is not a scalar.","body":"PiperOrigin-RevId: 400554784\r\nChange-Id: Ib658701040d4f707f20b8706e251d5fff46b2671","created_at":"2021-10-27T18:36:24Z","closed_at":"2021-10-28T21:25:30Z","merged_at":"2021-10-28T21:25:30Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":767681929,"title":"Ensuring that the input to DeserializeSparse is not a scalar.","body":"PiperOrigin-RevId: 400554784\r\nChange-Id: Ib658701040d4f707f20b8706e251d5fff46b2671","created_at":"2021-10-27T18:34:56Z","closed_at":"2021-10-28T21:25:21Z","merged_at":"2021-10-28T21:25:20Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":767681018,"title":"Ensuring that the input to DeserializeSparse is not a scalar.","body":"PiperOrigin-RevId: 400554784\r\nChange-Id: Ib658701040d4f707f20b8706e251d5fff46b2671","created_at":"2021-10-27T18:33:33Z","closed_at":"2021-10-28T21:25:12Z","merged_at":"2021-10-28T21:25:12Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":767679743,"title":"Ensuring that the input to DeserializeSparse is not a scalar.","body":"PiperOrigin-RevId: 400554784\r\nChange-Id: Ib658701040d4f707f20b8706e251d5fff46b2671","created_at":"2021-10-27T18:31:28Z","closed_at":"2021-10-28T21:25:05Z","merged_at":"2021-10-28T21:25:05Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":767674891,"title":"Fix the deadlock issue of recursive tf.function.","body":"Replace threading.Lock with threading.RLock to allow recursive tf.function.\r\n\r\nPiperOrigin-RevId: 401282729\r\nChange-Id: I3d10416f2eb2c15e2055bb4f4afee3d62bd6c428","created_at":"2021-10-27T18:25:30Z","closed_at":"2021-10-28T21:24:09Z","merged_at":"2021-10-28T21:24:09Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":767673744,"title":"Fix the deadlock issue of recursive tf.function.","body":"Replace threading.Lock with threading.RLock to allow recursive tf.function.\r\n\r\nPiperOrigin-RevId: 401282729\r\nChange-Id: I3d10416f2eb2c15e2055bb4f4afee3d62bd6c428","created_at":"2021-10-27T18:23:54Z","closed_at":"2021-10-28T21:24:00Z","merged_at":"2021-10-28T21:24:00Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":767672617,"title":"Fix the deadlock issue of recursive tf.function.","body":"Replace threading.Lock with threading.RLock to allow recursive tf.function.\r\n\r\nPiperOrigin-RevId: 401282729\r\nChange-Id: I3d10416f2eb2c15e2055bb4f4afee3d62bd6c428","created_at":"2021-10-27T18:22:19Z","closed_at":"2021-10-28T21:23:50Z","merged_at":"2021-10-28T21:23:50Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":767671238,"title":"Fix the deadlock issue of recursive tf.function.","body":"Replace threading.Lock with threading.RLock to allow recursive tf.function.\r\n\r\nPiperOrigin-RevId: 401282729\r\nChange-Id: I3d10416f2eb2c15e2055bb4f4afee3d62bd6c428","created_at":"2021-10-27T18:20:19Z","closed_at":"2021-10-28T21:23:43Z","merged_at":"2021-10-28T21:23:43Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":767663686,"title":"Make Transpose's shape inference function validate that negative `per…","body":"…m` values are within the tensor's rank.\r\n\r\nPiperOrigin-RevId: 403252853\r\nChange-Id: Ia6b31b45b237312668bb31c2c3b3c7bbce2d2610","created_at":"2021-10-27T18:09:34Z","closed_at":"2021-10-28T21:21:43Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":767660810,"title":"Make Transpose's shape inference function validate that negative `per…","body":"…m` values are within the tensor's rank.\r\n\r\nPiperOrigin-RevId: 403252853\r\nChange-Id: Ia6b31b45b237312668bb31c2c3b3c7bbce2d2610","created_at":"2021-10-27T18:05:19Z","closed_at":"2021-10-28T21:21:22Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":767655443,"title":"Make Transpose's shape inference function validate that negative `per…","body":"…m` values are within the tensor's rank.\r\n\r\nPiperOrigin-RevId: 403252853\r\nChange-Id: Ia6b31b45b237312668bb31c2c3b3c7bbce2d2610","created_at":"2021-10-27T17:57:44Z","closed_at":"2021-10-28T21:20:56Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":767649573,"title":"Make Transpose's shape inference function validate that negative `per…","body":"…m` values are within the tensor's rank.\r\n\r\nPiperOrigin-RevId: 403252853\r\nChange-Id: Ia6b31b45b237312668bb31c2c3b3c7bbce2d2610","created_at":"2021-10-27T17:51:31Z","closed_at":"2021-10-28T21:18:59Z","merged_at":"2021-10-28T21:18:58Z","user_id":88513897,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":767644124,"title":"Fix heap out of bounds error in tf.raw_ops.SparseCountSparseOutput sh…","body":"…ape inference when it is called with invalid inputs, and add a test for it.\r\n\r\nPiperOrigin-RevId: 405766415\r\nChange-Id: I77d244ef35f351ef7b6f821efd959cac2c66db24","created_at":"2021-10-27T17:43:14Z","closed_at":"2021-10-27T22:29:46Z","merged_at":"2021-10-27T22:29:46Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":767642972,"title":"Fix heap out of bounds error in tf.raw_ops.SparseCountSparseOutput sh…","body":"…ape inference when it is called with invalid inputs, and add a test for it.\r\n\r\nPiperOrigin-RevId: 405766415\r\nChange-Id: I77d244ef35f351ef7b6f821efd959cac2c66db24","created_at":"2021-10-27T17:41:33Z","closed_at":"2021-10-27T22:29:39Z","merged_at":"2021-10-27T22:29:39Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":767641708,"title":"Fix heap out of bounds error in tf.raw_ops.SparseCountSparseOutput sh…","body":"…ape inference when it is called with invalid inputs, and add a test for it.\r\n\r\nPiperOrigin-RevId: 405766415\r\nChange-Id: I77d244ef35f351ef7b6f821efd959cac2c66db24","created_at":"2021-10-27T17:39:41Z","closed_at":"2021-10-27T22:29:30Z","merged_at":"2021-10-27T22:29:30Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":767640474,"title":"Fix heap out of bounds error in tf.raw_ops.SparseCountSparseOutput sh…","body":"…ape inference when it is called with invalid inputs, and add a test for it.\r\n\r\nPiperOrigin-RevId: 405766415\r\nChange-Id: I77d244ef35f351ef7b6f821efd959cac2c66db24","created_at":"2021-10-27T17:37:49Z","closed_at":"2021-10-27T22:29:24Z","merged_at":"2021-10-27T22:29:24Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":767635887,"title":"Validate that matrix dimension sizes in SparseMatMul are positive.","body":"PiperOrigin-RevId: 401149683\r\nChange-Id: Ib33eafc561a39c8741ece80b2edce6d4aae9a57d","created_at":"2021-10-27T17:31:06Z","closed_at":"2021-10-28T21:17:42Z","merged_at":"2021-10-28T21:17:42Z","user_id":88513897,"sentiment":{"polarity":0.22727272727272727,"subjectivity":0.5454545454545454}}
{"_id":767634778,"title":"Validate that matrix dimension sizes in SparseMatMul are positive.","body":"PiperOrigin-RevId: 401149683\r\nChange-Id: Ib33eafc561a39c8741ece80b2edce6d4aae9a57d","created_at":"2021-10-27T17:29:29Z","closed_at":"2021-10-28T21:17:32Z","merged_at":"2021-10-28T21:17:32Z","user_id":88513897,"sentiment":{"polarity":0.22727272727272727,"subjectivity":0.5454545454545454}}
{"_id":767633654,"title":"Validate that matrix dimension sizes in SparseMatMul are positive.","body":"PiperOrigin-RevId: 401149683\r\nChange-Id: Ib33eafc561a39c8741ece80b2edce6d4aae9a57d","created_at":"2021-10-27T17:27:51Z","closed_at":"2021-10-28T21:17:25Z","merged_at":"2021-10-28T21:17:25Z","user_id":88513897,"sentiment":{"polarity":0.22727272727272727,"subjectivity":0.5454545454545454}}
{"_id":767632317,"title":"Validate that matrix dimension sizes in SparseMatMul are positive.","body":"PiperOrigin-RevId: 401149683\r\nChange-Id: Ib33eafc561a39c8741ece80b2edce6d4aae9a57d","created_at":"2021-10-27T17:25:58Z","closed_at":"2021-10-28T21:17:19Z","merged_at":"2021-10-28T21:17:19Z","user_id":88513897,"sentiment":{"polarity":0.22727272727272727,"subjectivity":0.5454545454545454}}
{"_id":767614068,"title":"Fix a NPE issue in invalid Exit op. Now it will report an error inste…","body":"…ad of crash.\r\n\r\nPiperOrigin-RevId: 404089902\r\nChange-Id: Ia6ec55445ea70ad045a4d339d354959ad0618f2a","created_at":"2021-10-27T17:02:36Z","closed_at":"2021-10-27T22:26:42Z","merged_at":"2021-10-27T22:26:42Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":767612765,"title":"Fix a NPE issue in invalid Exit op. Now it will report an error inste…","body":"…ad of crash.\r\n\r\nPiperOrigin-RevId: 404089902\r\nChange-Id: Ia6ec55445ea70ad045a4d339d354959ad0618f2a","created_at":"2021-10-27T17:00:57Z","closed_at":"2021-10-27T22:26:33Z","merged_at":"2021-10-27T22:26:33Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":767611341,"title":"Fix a NPE issue in invalid Exit op. Now it will report an error inste…","body":"…ad of crash.\r\n\r\nPiperOrigin-RevId: 404089902\r\nChange-Id: Ia6ec55445ea70ad045a4d339d354959ad0618f2a","created_at":"2021-10-27T16:58:54Z","closed_at":"2021-10-27T22:26:25Z","merged_at":"2021-10-27T22:26:25Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":767609782,"title":"Fix a NPE issue in invalid Exit op. Now it will report an error inste…","body":"…ad of crash.\r\n\r\nPiperOrigin-RevId: 404089902\r\nChange-Id: Ia6ec55445ea70ad045a4d339d354959ad0618f2a","created_at":"2021-10-27T16:56:43Z","closed_at":"2021-10-27T22:26:19Z","merged_at":"2021-10-27T22:26:19Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":767604863,"title":"Fix access to undefined memory during shape inference of Cudnn*.","body":"PiperOrigin-RevId: 400324259\r\nChange-Id: Ie3b7859d19ae24ee9ac2adf413bdc1e851bbc604","created_at":"2021-10-27T16:49:43Z","closed_at":"2021-10-27T22:23:02Z","merged_at":"2021-10-27T22:23:02Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":767603665,"title":"Fix access to undefined memory during shape inference of Cudnn*.","body":"PiperOrigin-RevId: 400324259\r\nChange-Id: Ie3b7859d19ae24ee9ac2adf413bdc1e851bbc604","created_at":"2021-10-27T16:48:03Z","closed_at":"2021-10-27T22:22:54Z","merged_at":"2021-10-27T22:22:54Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":767602434,"title":"Fix access to undefined memory during shape inference of Cudnn*.","body":"PiperOrigin-RevId: 400324259\r\nChange-Id: Ie3b7859d19ae24ee9ac2adf413bdc1e851bbc604","created_at":"2021-10-27T16:46:17Z","closed_at":"2021-10-27T22:22:46Z","merged_at":"2021-10-27T22:22:46Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":767601020,"title":"Fix access to undefined memory during shape inference of Cudnn*.","body":"PiperOrigin-RevId: 400324259\r\nChange-Id: Ie3b7859d19ae24ee9ac2adf413bdc1e851bbc604","created_at":"2021-10-27T16:44:12Z","closed_at":"2021-10-27T22:22:36Z","merged_at":"2021-10-27T22:22:36Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":767563605,"title":"Test for case of undefined behaviour and throw error if found","body":"Casting to a lower precision variable type is undefined behaviour if the value being cast overflows the new type.\r\nRelying on the outcome of such a cast lead to differing outcomes on x86 and AARCH64 in the RangeTest.testLargeStarts unit test. Detect this case before it happens and throw an exception then correct the test case to accept the new exception. In the non-eager case an InvalidArgument exception is re-thrown as a ValueError so both exceptions should be allowed in the test.\r\n\r\nFixes https://github.com/tensorflow/tensorflow/issues/52676","created_at":"2021-10-27T15:58:42Z","closed_at":"2021-12-17T03:28:08Z","merged_at":"2021-12-17T03:28:08Z","user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":767216823,"title":"Enable external delegate for benchmark_model/label_image for tflite","body":null,"created_at":"2021-10-27T09:24:55Z","closed_at":"2022-03-28T00:46:09Z","merged_at":null,"user_id":698804,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":767141473,"title":"Reduce compiler warnings","body":"*  Harmonizes a forward declaration with the declaration\r\n*  Fixes comparisons of integers of different signs","created_at":"2021-10-27T07:54:48Z","closed_at":"2021-10-29T03:16:00Z","merged_at":"2021-10-29T03:16:00Z","user_id":8095156,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":766971065,"title":"A negative size in one of the split sizes allowed the computed size o…","body":"…f another\r\n\r\nto exceed the total dimension, leading to a segfault and security vulnerability.\r\nAdding a check for negative sizes prevents this.\r\n\r\nPiperOrigin-RevId: 401035665\r\nChange-Id: I79bbe329787dac82aa4bf60397a9129b716aedab","created_at":"2021-10-27T01:54:56Z","closed_at":"2021-10-28T20:57:30Z","merged_at":"2021-10-28T20:57:30Z","user_id":88513897,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":766970584,"title":"A negative size in one of the split sizes allowed the computed size o…","body":"…f another\r\n\r\nto exceed the total dimension, leading to a segfault and security vulnerability.\r\nAdding a check for negative sizes prevents this.\r\n\r\nPiperOrigin-RevId: 401035665\r\nChange-Id: I79bbe329787dac82aa4bf60397a9129b716aedab","created_at":"2021-10-27T01:53:21Z","closed_at":"2021-10-28T20:57:21Z","merged_at":"2021-10-28T20:57:21Z","user_id":88513897,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":766954253,"title":"Make SparseFillEmptyRows validate that the length of `values` must be…","body":"… equal to the number of index tuples.\r\n\r\nPiperOrigin-RevId: 399969549\r\nChange-Id: I3c2f2ca1c1d2cc88bb5951c6958b38c16e9436c8","created_at":"2021-10-27T01:04:24Z","closed_at":"2021-10-27T23:23:37Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":766945323,"title":"Make SparseFillEmptyRows validate that the length of `values` must be…","body":"… equal to the number of index tuples.\r\n\r\nPiperOrigin-RevId: 399969549\r\nChange-Id: I3c2f2ca1c1d2cc88bb5951c6958b38c16e9436c8","created_at":"2021-10-27T00:43:14Z","closed_at":"2021-10-28T20:54:00Z","merged_at":"2021-10-28T20:54:00Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":766944903,"title":"Make SparseFillEmptyRows validate that the length of `values` must be…","body":"… equal to the number of index tuples.\r\n\r\nPiperOrigin-RevId: 399969549\r\nChange-Id: I3c2f2ca1c1d2cc88bb5951c6958b38c16e9436c8","created_at":"2021-10-27T00:42:17Z","closed_at":"2021-10-28T20:53:51Z","merged_at":"2021-10-28T20:53:50Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":766941336,"title":"Prevent out-of-bound accesses in SparseBincount.","body":"PiperOrigin-RevId: 399918616\r\nChange-Id: I11d154f4444d3fde1f09c5c40628b8671791a30d","created_at":"2021-10-27T00:33:10Z","closed_at":"2021-10-27T22:11:00Z","merged_at":"2021-10-27T22:11:00Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":766940716,"title":"Prevent out-of-bound accesses in SparseBincount.","body":"PiperOrigin-RevId: 399918616\r\nChange-Id: I11d154f4444d3fde1f09c5c40628b8671791a30d","created_at":"2021-10-27T00:31:42Z","closed_at":"2021-10-27T22:10:51Z","merged_at":"2021-10-27T22:10:51Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":766940116,"title":"Prevent out-of-bound accesses in SparseBincount.","body":"PiperOrigin-RevId: 399918616\r\nChange-Id: I11d154f4444d3fde1f09c5c40628b8671791a30d","created_at":"2021-10-27T00:30:04Z","closed_at":"2021-10-27T22:10:41Z","merged_at":"2021-10-27T22:10:41Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":766939347,"title":"Prevent out-of-bound accesses in SparseBincount.","body":"PiperOrigin-RevId: 399918616\r\nChange-Id: I11d154f4444d3fde1f09c5c40628b8671791a30d","created_at":"2021-10-27T00:28:06Z","closed_at":"2021-10-27T22:10:27Z","merged_at":"2021-10-27T22:10:27Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":766928538,"title":"Minor fix for doc string for `avg_pool3d`","body":null,"created_at":"2021-10-27T00:01:36Z","closed_at":"2021-10-29T17:50:39Z","merged_at":"2021-10-29T17:50:39Z","user_id":6426433,"sentiment":{"polarity":-0.05,"subjectivity":0.2}}
{"_id":766903340,"title":"Prevent unitialized variable use in grappler.","body":"PiperOrigin-RevId: 399702928\r\nChange-Id: Id7e75451fbff297692dfb687f60ea04b25c96b24","created_at":"2021-10-26T22:57:52Z","closed_at":"2021-10-27T22:08:44Z","merged_at":"2021-10-27T22:08:44Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":766902344,"title":"Prevent unitialized variable use in grappler.","body":"PiperOrigin-RevId: 399702928\r\nChange-Id: Id7e75451fbff297692dfb687f60ea04b25c96b24","created_at":"2021-10-26T22:55:23Z","closed_at":"2021-10-27T22:09:07Z","merged_at":"2021-10-27T22:09:07Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":766901641,"title":"Prevent unitialized variable use in grappler.","body":"PiperOrigin-RevId: 399702928\r\nChange-Id: Id7e75451fbff297692dfb687f60ea04b25c96b24","created_at":"2021-10-26T22:53:32Z","closed_at":"2021-10-27T22:08:58Z","merged_at":"2021-10-27T22:08:58Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":766899800,"title":"Prevent unitialized variable use in grappler.","body":"PiperOrigin-RevId: 399702928\r\nChange-Id: Id7e75451fbff297692dfb687f60ea04b25c96b24","created_at":"2021-10-26T22:48:57Z","closed_at":"2021-10-27T22:08:50Z","merged_at":"2021-10-27T22:08:50Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":766829069,"title":"Create a hybrid tf-tfl lowering pipline for TOSA","body":"By adding the pass to lift Flex ops to TensorFlow Dialect operations it is\r\npossible to have a mixture of both TensorFlow and TensorFlow Lite dialects.\r\nHaving a combined set of patterns using TOSA's shape inference frameowrk it is\r\npossible to fully lower / shape infer TFLite models with flex operations.\r\n\r\nThese patterns must be included in a single pass so that shape inference can\r\nexecute on both dialects. If performed separately, lack of cooperating\r\nlowerings may not result in a fully available lowering.","created_at":"2021-10-26T20:43:05Z","closed_at":"2021-10-27T22:31:20Z","merged_at":"2021-10-27T22:31:20Z","user_id":5508949,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":766746964,"title":"Update RELEASE.md","body":"@mihaimaruseac looks like the tensorflow jenkins release script is broken example PR # https://github.com/tensorflow/tensorflow/pull/52116","created_at":"2021-10-26T18:45:48Z","closed_at":"2021-10-27T15:34:51Z","merged_at":null,"user_id":43972606,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":766669488,"title":"[TF:TRT] Better CombinedNMS Support through EfficientNMS TRT Plugin","body":"This replaces the CombinedNMS TFTRT converter with one that uses the EfficientNMS TensorRT plugin, instead of the older BatchedNMS implementation.\r\n\r\nThe converter is #if-gated through a TRT version checker *OR* a build time flag override:\r\n- If the user meets the minimum TRT version requirement, then nothing else is needed, everything will work as expected. \r\n- Otherwise, users on older TRT versions that require this functionality can build the corresponding TensorRT OSS version locally (must use a specific branch for TRT 7.x compatibility, for example), and re-build TFTRT with the appropriate build define flag. This would allow for a temporary solution while the OSS third party dependency is finalized.\r\n\r\nBehavior changes for the new method compared with the previous CombinedNMS converter:\r\n- Supports dynamic shape in all tensor dimensions.\r\n- Does not require a TopK override.\r\n- Padding elements are 0's as is done in the TF op, not -1 as the previous plugin.\r\n- Depending on op configuration, the new EfficientNMS plugin can be considerably faster at inference time (especially when score_threshold >= 0.01).\r\n- Unit tests have been updated to reflect the new behaviors.\r\n- Implicit batch mode support has been dropped for this operation due to incompatibility with the new plugin (implicit batch mode is on its way out anyway).","created_at":"2021-10-26T16:56:05Z","closed_at":"2021-11-22T17:50:21Z","merged_at":"2021-11-22T17:50:20Z","user_id":75912517,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":766624399,"title":"[oneDNN] Bug-fix: add CPU device explicitly in the test.","body":"When TF is build with both cuda and oneDNN, CPU optimization should take place if device placement places CPU device. This PR updates grappler remapper python test with explicitly adding a CPU device.\r\n\r\nFollowing is an example test command\r\n`bazel test --config=cuda --test_env TF_ENABLE_ONEDNN_OPTS=1 -c opt //tensorflow/python/grappler:remapper_test_gpu`","created_at":"2021-10-26T16:00:47Z","closed_at":"2021-10-30T23:40:18Z","merged_at":"2021-10-30T23:40:18Z","user_id":27521767,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":766058880,"title":"[TF-TRT] Adding a detailled non-conversion report capability on demand","body":"@bixia1 @tfeher for review\r\n\r\nThis PR does the following:\r\n- Adds `TF_TRT_SHOW_DETAILED_REPORT=1` capability to modify the conversion report and increase verbosity.\r\n- Changes `struct ConversionParams.output_names` to `struct ConversionParams.input_output_names` to be more precise on the actual use of the parameter.\r\n- Removes `at <layer_name>` from the error message generated for unconverted ops\r\n  - allows similar errors generated at different layers to be grouped together\r\n  - removes some redundancy where the information is \"double printed\", see here: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/compiler/tf2tensorrt/segment/segment.cc#L737-L740","created_at":"2021-10-26T04:53:53Z","closed_at":"2021-11-12T18:11:48Z","merged_at":"2021-11-12T18:11:48Z","user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":765847404,"title":"Add a note about cudaMallocAsync in the release note of TF2.7","body":null,"created_at":"2021-10-25T21:10:04Z","closed_at":"2021-10-25T23:22:33Z","merged_at":"2021-10-25T23:22:33Z","user_id":180987,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":765747167,"title":"Merge pull request #51359 from yongtang:46913-range-overflow","body":"PiperOrigin-RevId: 391529518\r\nChange-Id: Ie3db4ae6d3c0f3dc88404e1dbdc22f7d03cbeb3b","created_at":"2021-10-25T18:51:28Z","closed_at":"2021-10-25T18:54:23Z","merged_at":"2021-10-25T18:54:23Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":765746830,"title":"Merge pull request #51359 from yongtang:46913-range-overflow","body":"PiperOrigin-RevId: 391529518\r\nChange-Id: Ie3db4ae6d3c0f3dc88404e1dbdc22f7d03cbeb3b","created_at":"2021-10-25T18:50:57Z","closed_at":"2021-10-25T18:54:11Z","merged_at":"2021-10-25T18:54:11Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":765745044,"title":"Merge pull request #51359 from yongtang:46913-range-overflow","body":"PiperOrigin-RevId: 391529518\r\nChange-Id: Ie3db4ae6d3c0f3dc88404e1dbdc22f7d03cbeb3b","created_at":"2021-10-25T18:48:12Z","closed_at":"2021-10-25T18:54:00Z","merged_at":"2021-10-25T18:54:00Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":765733390,"title":"Avoid buffer overflow when loading tensors with insufficient data fro…","body":"…m checkpoints.\r\n\r\n`CopyDataFromTensorSliceToTensorSlice` does not (and cannot conveniently)\r\nprovide any bounds checking on its own, so the size is instead checked prior\r\nto passing unvalidated data to that function.\r\n\r\nPiperOrigin-RevId: 392971286\r\nChange-Id: If2073b36d4d5eedd386329f56729395fd7effee1","created_at":"2021-10-25T18:30:32Z","closed_at":"2021-10-25T18:30:49Z","merged_at":"2021-10-25T18:30:49Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":765732313,"title":"Avoid buffer overflow when loading tensors with insufficient data fro…","body":"…m checkpoints.\r\n\r\n`CopyDataFromTensorSliceToTensorSlice` does not (and cannot conveniently)\r\nprovide any bounds checking on its own, so the size is instead checked prior\r\nto passing unvalidated data to that function.\r\n\r\nPiperOrigin-RevId: 392971286\r\nChange-Id: If2073b36d4d5eedd386329f56729395fd7effee1","created_at":"2021-10-25T18:28:56Z","closed_at":"2021-10-25T18:29:11Z","merged_at":"2021-10-25T18:29:11Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":765731312,"title":"Avoid buffer overflow when loading tensors with insufficient data fro…","body":"…m checkpoints.\r\n\r\n`CopyDataFromTensorSliceToTensorSlice` does not (and cannot conveniently)\r\nprovide any bounds checking on its own, so the size is instead checked prior\r\nto passing unvalidated data to that function.\r\n\r\nPiperOrigin-RevId: 392971286\r\nChange-Id: If2073b36d4d5eedd386329f56729395fd7effee1","created_at":"2021-10-25T18:27:29Z","closed_at":"2021-10-25T18:28:15Z","merged_at":"2021-10-25T18:28:15Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":765725205,"title":"Add BuildTensorSlice for building from unvalidated TensorSliceProtos.","body":"This avoids several sources of crashes and undefined behavior when loading\r\ninvalid checkpoints.\r\n\r\nPiperOrigin-RevId: 392785704\r\nChange-Id: Icd9713c768b882f3b58b427eddac376060696833","created_at":"2021-10-25T18:19:19Z","closed_at":"2021-10-25T18:19:25Z","merged_at":"2021-10-25T18:19:25Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":765723153,"title":"Add BuildTensorSlice for building from unvalidated TensorSliceProtos.","body":"This avoids several sources of crashes and undefined behavior when loading\r\ninvalid checkpoints.\r\n\r\nPiperOrigin-RevId: 392785704\r\nChange-Id: Icd9713c768b882f3b58b427eddac376060696833","created_at":"2021-10-25T18:16:42Z","closed_at":"2021-10-25T18:17:06Z","merged_at":"2021-10-25T18:17:06Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":765666112,"title":"2.7 release notes: add link to the extension types guide","body":null,"created_at":"2021-10-25T16:59:46Z","closed_at":"2021-10-25T17:02:34Z","merged_at":"2021-10-25T17:02:34Z","user_id":5790348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":765221721,"title":"GPU DynamicPartition support int32&int64","body":"Currently, DynamicPartitionOp on GPU doesn't support int32&int64. They were implemented but not registered. I tested them in my project and they worked fine.","created_at":"2021-10-25T08:39:07Z","closed_at":"2022-01-05T23:32:17Z","merged_at":"2022-01-05T23:32:16Z","user_id":4970790,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":764855813,"title":"Improve overall readblity of code","body":"Hi,\r\nI made some grammar and spelling fixups to improve overall readablity.\r\n\r\nthanks","created_at":"2021-10-24T11:41:58Z","closed_at":"2021-11-29T19:14:16Z","merged_at":"2021-11-29T19:14:16Z","user_id":51359628,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":764834909,"title":"[tflite] make op profiling work when CoreML Delegate is used","body":"- issue:\r\nWhen running CoreML delegate + op profiling, I met bus error most of the time.\r\n- how to reproduce: on MacOS, \r\n```\r\nbenchmark_mode --graph=.. --use_coreml=1 --enable_op_profiling=1 ...\r\n```\r\non iOS devices, add\r\n\r\n```\r\nuse_coreml : \"true\", \r\nenable_op_profiling : \"true\", \r\n``` \r\n\r\nto  `benchmark_params.json`  of  https://github.com/tensorflow/tensorflow/tree/master/tensorflow/lite/tools/benchmark/ios.\r\n\r\nThe model I used to test this problem is [MobilenetEdgeTPU](https://storage.cloud.google.com/mobilenet_edgetpu/checkpoints/mobilenet_edgetpu_224_1.0.tgz).\r\n\r\n- when it went wrong:\r\n```\r\n% bazel-bin/tensorflow/lite/tools/benchmark/benchmark_model --graph=/tmp/mobilenet_edgetpu_224_1.0_float.tflite --enable_op_profiling=1 --use_coreml=1\r\nSTARTING!\r\nLog parameter values verbosely: [0]\r\nGraph: [/tmp/mobilenet_edgetpu_224_1.0_float.tflite]\r\nEnable op profiling: [1]\r\nUse CoreML: [1]\r\nLoaded model /tmp/mobilenet_edgetpu_224_1.0_float.tflite\r\n2021-10-24 20:34:08.503 benchmark_model[42608:216982] coreml_version must be 2 or 3. Setting to 3.\r\nCOREML delegate created.\r\nINFO: CoreML delegate: 75 nodes delegated out of 77 nodes, with 2 partitions.\r\n\r\nExplicitly applied COREML delegate, and the model graph will be partially executed by the delegate w/ 1 delegate kernels.\r\nThe input model file size (MB): 16.3221\r\nInitialized session in 568.672ms.\r\nRunning benchmark for at least 1 iterations and at least 0.5 seconds but terminate if exceeding 150 seconds.\r\ncount=262 first=3849 curr=1887 min=956 max=11424 avg=1888.11 std=1682\r\n\r\nRunning benchmark for at least 50 iterations and at least 1 seconds but terminate if exceeding 150 seconds.\r\nzsh: bus error  bazel-bin/tensorflow/lite/tools/benchmark/benchmark_model   --use_coreml=1\r\n\r\n```\r\nAfter adding `profiling_string` initialization\r\n```\r\n% bazel-bin/tensorflow/lite/tools/benchmark/benchmark_model --graph=/tmp/mobilenet_edgetpu_224_1.0_float.tflite --enable_op_profiling=1 --use_coreml=1\r\nSTARTING!\r\nLog parameter values verbosely: [0]\r\nGraph: [/tmp/mobilenet_edgetpu_224_1.0_float.tflite]\r\nEnable op profiling: [1]\r\nUse CoreML: [1]\r\nLoaded model /tmp/mobilenet_edgetpu_224_1.0_float.tflite\r\n2021-10-24 20:38:10.823 benchmark_model[45038:226402] coreml_version must be 2 or 3. Setting to 3.\r\nCOREML delegate created.\r\nINFO: CoreML delegate: 75 nodes delegated out of 77 nodes, with 2 partitions.\r\n\r\nExplicitly applied COREML delegate, and the model graph will be partially executed by the delegate w/ 1 delegate kernels.\r\nThe input model file size (MB): 16.3221\r\nInitialized session in 590.552ms.\r\nRunning benchmark for at least 1 iterations and at least 0.5 seconds but terminate if exceeding 150 seconds.\r\ncount=261 first=2610 curr=8604 min=973 max=10389 avg=1908.45 std=1752\r\n\r\nRunning benchmark for at least 50 iterations and at least 1 seconds but terminate if exceeding 150 seconds.\r\ncount=407 first=2088 curr=5167 min=955 max=11235 avg=2388.13 std=2227\r\n\r\nInference timings in us: Init: 590552, First inference: 2610, Warmup (avg): 1908.45, Inference (avg): 2388.13\r\nProfiling Info for Benchmark Initialization:\r\n============================== Run Order ==============================\r\n\t             [node type]\t          [start]\t  [first]\t [avg ms]\t     [%]\t  [cdf%]\t  [mem KB]\t[times called]\t[Name]\r\n\t ModifyGraphWithDelegate\t            0.000\t  576.714\t  576.714\t 99.988%\t 99.988%\t     0.000\t        1\tModifyGraphWithDelegate/0\r\n\t         AllocateTensors\t          576.697\t    0.066\t    0.034\t  0.012%\t100.000%\t     0.000\t        2\tAllocateTensors/0\r\n\r\n============================== Top by Computation Time ==============================\r\n\t             [node type]\t          [start]\t  [first]\t [avg ms]\t     [%]\t  [cdf%]\t  [mem KB]\t[times called]\t[Name]\r\n\t ModifyGraphWithDelegate\t            0.000\t  576.714\t  576.714\t 99.988%\t 99.988%\t     0.000\t        1\tModifyGraphWithDelegate/0\r\n\t         AllocateTensors\t          576.697\t    0.066\t    0.034\t  0.012%\t100.000%\t     0.000\t        2\tAllocateTensors/0\r\n\r\nNumber of nodes executed: 2\r\n============================== Summary by node type ==============================\r\n\t             [Node type]\t  [count]\t  [avg ms]\t    [avg %]\t    [cdf %]\t  [mem KB]\t[times called]\r\n\t ModifyGraphWithDelegate\t        1\t   576.714\t    99.988%\t    99.988%\t     0.000\t        1\r\n\t         AllocateTensors\t        1\t     0.067\t     0.012%\t   100.000%\t     0.000\t        2\r\n\r\nTimings (microseconds): count=1 curr=576781\r\nMemory (bytes): count=0\r\n2 nodes observed\r\n\r\n\r\n\r\nOperator-wise Profiling Info for Regular Benchmark Runs:\r\n============================== Run Order ==============================\r\n\t             [node type]\t          [start]\t  [first]\t [avg ms]\t     [%]\t  [cdf%]\t  [mem KB]\t[times called]\t[Name]\r\n\t    TfLiteCoreMlDelegate\t            0.000\t    2.074\t    2.379\t 99.710%\t 99.710%\t     0.000\t        1\t[MobilenetEdgeTPU/Logits/Conv2d_1c_1x1/BiasAdd]:77\r\n\t                 RESHAPE\t            2.380\t    0.002\t    0.001\t  0.053%\t 99.763%\t     0.000\t        1\t[MobilenetEdgeTPU/Logits/Squeeze]:75\r\n\t                 SOFTMAX\t            2.381\t    0.008\t    0.006\t  0.237%\t100.000%\t     0.000\t        1\t[Softmax]:76\r\n\r\n============================== Top by Computation Time ==============================\r\n\t             [node type]\t          [start]\t  [first]\t [avg ms]\t     [%]\t  [cdf%]\t  [mem KB]\t[times called]\t[Name]\r\n\t    TfLiteCoreMlDelegate\t            0.000\t    2.074\t    2.379\t 99.710%\t 99.710%\t     0.000\t        1\t[MobilenetEdgeTPU/Logits/Conv2d_1c_1x1/BiasAdd]:77\r\n\t                 SOFTMAX\t            2.381\t    0.008\t    0.006\t  0.237%\t 99.947%\t     0.000\t        1\t[Softmax]:76\r\n\t                 RESHAPE\t            2.380\t    0.002\t    0.001\t  0.053%\t100.000%\t     0.000\t        1\t[MobilenetEdgeTPU/Logits/Squeeze]:75\r\n\r\nNumber of nodes executed: 3\r\n============================== Summary by node type ==============================\r\n\t             [Node type]\t  [count]\t  [avg ms]\t    [avg %]\t    [cdf %]\t  [mem KB]\t[times called]\r\n\t    TfLiteCoreMlDelegate\t        1\t     2.379\t    99.748%\t    99.748%\t     0.000\t        1\r\n\t                 SOFTMAX\t        1\t     0.005\t     0.210%\t    99.958%\t     0.000\t        1\r\n\t                 RESHAPE\t        1\t     0.001\t     0.042%\t   100.000%\t     0.000\t        1\r\n\r\nTimings (microseconds): count=407 first=2084 curr=5164 min=955 max=11231 avg=2386.31 std=2227\r\nMemory (bytes): count=0\r\n3 nodes observed\r\n```\r\n\r\n- why it went wrong: in https://github.com/tensorflow/tensorflow/blob/master/tensorflow/lite/interpreter.h#L637-L642\r\nThe interpreter wanted to access non-null string, it profiling_string is not properly set :-(","created_at":"2021-10-24T09:22:31Z","closed_at":"2021-10-29T01:00:08Z","merged_at":"2021-10-29T01:00:08Z","user_id":3395998,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":764755089,"title":"Merge pull request #51715 from yongtang:46909-tf.summary.create_file_…","body":"…writer\r\n\r\nPiperOrigin-RevId: 394109960\r\nChange-Id: I444e59a7f90acd6487832d74b677093403c8a083","created_at":"2021-10-23T21:10:00Z","closed_at":"2021-10-25T19:41:44Z","merged_at":"2021-10-25T19:41:44Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":764754276,"title":"Merge pull request #51715 from yongtang:46909-tf.summary.create_file_…","body":"…writer\r\n\r\nPiperOrigin-RevId: 394109960\r\nChange-Id: I444e59a7f90acd6487832d74b677093403c8a083","created_at":"2021-10-23T21:03:25Z","closed_at":"2021-10-25T19:41:50Z","merged_at":"2021-10-25T19:41:50Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":764751579,"title":"Merge pull request #51715 from yongtang:46909-tf.summary.create_file_…","body":"…writer\r\n\r\nPiperOrigin-RevId: 394109960\r\nChange-Id: I444e59a7f90acd6487832d74b677093403c8a083","created_at":"2021-10-23T20:54:09Z","closed_at":"2021-10-25T19:41:53Z","merged_at":"2021-10-25T19:41:53Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":764748676,"title":"Merge pull request #51359 from yongtang:46913-range-overflow","body":"PiperOrigin-RevId: 391529518\r\nChange-Id: Ie3db4ae6d3c0f3dc88404e1dbdc22f7d03cbeb3b","created_at":"2021-10-23T20:30:58Z","closed_at":"2021-10-25T18:54:18Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":764702266,"title":"Simple improvements to GetTensorListDynamicDims","body":"To be honest, all this code looks very dubious to me.\r\n\r\nI saw it by accident and perhaps it has some kind of secret meaning.\r\nIn general, both the signature and the implementation of the function look strange. \r\n\r\nThese are simple changes that should do a little better(?).\r\nBut I would pay attention to all the uses of this function.\r\n\r\nI'm sorry if I was wrong, correct me if so.","created_at":"2021-10-23T15:35:10Z","closed_at":"2021-10-26T09:10:34Z","merged_at":"2021-10-26T09:10:34Z","user_id":32071355,"sentiment":{"polarity":0.0,"subjectivity":0.35714285714285715}}
{"_id":764560629,"title":"[r2.7] Remove C++ content from tensorflow/c/c_api_macros.h","body":"**Note: This PR is a cherry-pick of #52313 to R2.7**\r\n\r\nThis PR tries to remove C++ conent from tensorflow/c/c_api_macros.h\r\nso that it is possible to include this file from an external plugin\r\nwithout depending on tensorflow's C++ headers (tensorflow/core/platform/status.h).\r\n\r\nThe reason for this move is that for external plugins (e.g., file systems plugins)\r\nthat utilize C API, it cannot include status.h as otherwise the whole tensorflow's\r\nC++ library will be a dependency. This defeat the purpose of C APi modular plugin.\r\n\r\nThis PR place C++ content to tensorflow/core/platform/status.h instead so that\r\neverything will still be combined both for C external plugins and C++ plugins.\r\n\r\n(Note the C++ inclusion was added in PR 51647.)\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\nUpdate to create c_api_macros_internal.h based on review feedback\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2021-10-22T23:22:43Z","closed_at":"2021-10-25T19:52:29Z","merged_at":"2021-10-25T19:52:29Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":764444757,"title":"[TFTRT] Debug Feature - Converter summary added","body":"This PR adds a capability to the converter to print a conversion summary, inspired by the `keras.Model.summary()` API\r\n\r\n@bixia1 @tfeher for review\r\n\r\nDepends on: #53327\r\n\r\n```python\r\nconverter.convert()\r\nconverter.summary(detailed=True)\r\n\r\nTRTEngineOP Name                              # Nodes         Input DType                    Output Dtype                   Input Shape                              Output Shape                             \r\n==============================================================================================================================================================================================================\r\nTRTEngineOp_0_0                               798             ['float32']                    ['float32']                    [[-1, 299, 299, 3]]                      [[-1, 1001]]                             \r\n\r\n        - AvgPool: 10x\r\n        - BiasAdd: 1x\r\n        - ConcatV2: 11x\r\n        - Const: 485x\r\n        - Conv2D: 95x\r\n        - FusedBatchNormV3: 94x\r\n        - Identity: 1x\r\n        - MaxPool: 4x\r\n        - Relu: 94x\r\n        - Squeeze: 1x\r\n        - Transpose: 2x\r\n\r\n==============================================================================================================================================================================================================\r\n[*] Total number of TensorRT engines: 1\r\n[*] % of OPs Converted: 99.75% [798/800]\r\n```","created_at":"2021-10-22T19:06:43Z","closed_at":"2021-12-13T19:57:14Z","merged_at":"2021-12-13T19:57:14Z","user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":764435342,"title":"Removed NV GPU NUMA check for ARM64","body":"NUMA support message on ARM64 system\r\n\r\nWith this patch, on ARM64 system, tested 2 GPUs connected on different sockets.\r\nBoth are functional.\r\n\r\nHardware:\r\nDual socket ARM64 N1 system.\r\n2 GPUs connected on different sockets\r\n\r\nSoftware:\r\nUbuntu 20.04.3 LTS\r\nKernel : 5.4.0-89-generic (Linux devBox 5.4.0-89-generic #100-Ubuntu SMP Fri Sep 24 14:29:20 UTC 2021 aarch64 aarch64 aarch64 GNU/Linux)\r\nCUDA SDK : 11.4 (cuda_11.4.2_470.57.02_linux_sbsa.run)\r\ncuDNN : v8.2 (cudnn-11.4-linux-aarch64sbsa-v8.2.2.26.tgz)\r\nTensorRT: v8.0.1.6 (TensorRT-8.0.1.6.Ubuntu-20.04.aarch64-gnu.cuda-11.3.cudnn8.2.tar.gz)\r\n\r\nGPU: Tesla T4\r\nPCI slot info:\r\n\r\n$lspci | grep -i NVIDIA\r\n0005:01:00.0 3D controller: NVIDIA Corporation TU104GL [Tesla T4] (rev a1)\r\n0009:03:00.0 3D controller: NVIDIA Corporation TU104GL [Tesla T4] (rev a1)\r\n\r\nNUMA Info :\r\n$ cat /sys/devices/pci0005:00/0005:00:01.0/0005:01:00.0/numa_node\r\n0\r\n$ cat /sys/devices/pci0009:00/0009:00:05.0/0009:03:00.0/numa_node\r\n1\r\n\r\nTensorFlow GPU access info:\r\n```\r\nname: \"/device:GPU:0\"\r\ndevice_type: \"GPU\"\r\nmemory_limit: 15558377472\r\nlocality {\r\n  bus_id: 1\r\n  links {\r\n  }\r\n}\r\nincarnation: 11914144743508156396\r\nphysical_device_desc: \"device: 0, name: Tesla T4, pci bus id: 0005:01:00.0, compute capability: 7.5\"\r\nxla_global_id: 416903419\r\n\r\nname: \"/device:GPU:1\"\r\ndevice_type: \"GPU\"\r\nmemory_limit: 15558377472\r\nlocality {\r\n  bus_id: 2\r\n  numa_node: 1\r\n  links {\r\n  }\r\n}\r\nincarnation: 14202384483451516137\r\nphysical_device_desc: \"device: 1, name: Tesla T4, pci bus id: 0009:03:00.0, compute capability: 7.5\"\r\nxla_global_id: 2144165316\r\n```\r\n\r\nScript to get info:\r\n\r\n```\r\nfrom tensorflow.python.client import device_lib\r\n\r\nlocal_device = device_lib.list_local_devices()\r\n\r\nfor x in local_device:\r\n  if x.device_type == 'GPU':\r\n    print(x)\r\n\r\n```","created_at":"2021-10-22T18:49:50Z","closed_at":"2021-10-26T14:10:33Z","merged_at":"2021-10-26T14:10:33Z","user_id":87449534,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":764358248,"title":"Update release notes to have proper indentation","body":"Keras items were missing one level of indent","created_at":"2021-10-22T16:39:37Z","closed_at":"2021-10-22T16:54:17Z","merged_at":"2021-10-22T16:54:17Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":763817218,"title":"[tensorflow/{compiler,core}/**/*.cc] Use `int` for `tuple_shapes_size` to match implementation in \"shape.h\"","body":"Related: #52522\r\n> The correct type is `int`, as per: https://github.com/tensorflow/tensorflow/blob/0b6b491/tensorflow/compiler/xla/shape.h#L136\r\n","created_at":"2021-10-22T02:55:20Z","closed_at":"2021-11-02T08:58:01Z","merged_at":"2021-11-02T08:58:01Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":763725838,"title":"[oneDNN] Conv3D fusions - part 2","body":"Conv3D + Bias + Add\r\nConv3D + Bias + Activation","created_at":"2021-10-21T23:19:57Z","closed_at":"2021-11-12T12:24:32Z","merged_at":"2021-11-12T12:24:32Z","user_id":42224278,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":763716849,"title":"Add BuildTensorSlice for building from unvalidated TensorSliceProtos.","body":"This avoids several sources of crashes and undefined behavior when loading\r\ninvalid checkpoints.\r\n\r\nPiperOrigin-RevId: 392785704\r\nChange-Id: Icd9713c768b882f3b58b427eddac376060696833","created_at":"2021-10-21T23:01:25Z","closed_at":"2021-10-21T23:01:51Z","merged_at":null,"user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":763698009,"title":"Lowering for tfl.sparse_to_dense to tosa","body":"Sparse to dense can be implemented using a series of reshapes, constants,\r\nnumerical operations, and a final scatter. This should work to decompose into\r\na TOSA compatible form.","created_at":"2021-10-21T22:15:58Z","closed_at":"2021-11-01T19:52:48Z","merged_at":"2021-11-01T19:52:48Z","user_id":5508949,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":763324979,"title":"fix building from source failed on Python 3.10 #51776","body":"Building from source failed on Python 3.10\r\n...\r\n    from google.protobuf.pyext import _message\r\nAttributeError: module 'collections' has no attribute 'MutableSequence'\r\n...\r\n\r\nBackport a patch [1] from protobuf to fix it, and merge it\r\nto existed third_party/protobuf/protobuf.patch\r\n\r\n[1] https://github.com/protocolbuffers/protobuf/commit/9d61eada0f47d7be793983638c4a29707b192d0c\r\n\r\nSigned-off-by: Hongxu Jia <hongxu.jia@windriver.com>","created_at":"2021-10-21T14:14:27Z","closed_at":"2021-10-26T15:54:35Z","merged_at":"2021-10-26T15:54:35Z","user_id":5196145,"sentiment":{"polarity":-0.5,"subjectivity":0.3}}
{"_id":763315050,"title":"Specify boolean in the soft_placement docstrings","body":null,"created_at":"2021-10-21T14:04:48Z","closed_at":"2021-10-26T15:54:35Z","merged_at":"2021-10-26T15:54:35Z","user_id":1710528,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":762751353,"title":"Merge pull request #52583 from jhalakp-nvidia:trt-relu6-dynamic-range","body":"PiperOrigin-RevId: 404585433\r\nChange-Id: I876e64dec04e374e90e7e9de5ab2521da05738fe","created_at":"2021-10-20T22:18:44Z","closed_at":"2021-10-25T19:55:30Z","merged_at":"2021-10-25T19:55:30Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":762745645,"title":"Merge pull request #51359 from yongtang:46913-range-overflow","body":"PiperOrigin-RevId: 391529518\r\nChange-Id: Ie3db4ae6d3c0f3dc88404e1dbdc22f7d03cbeb3b","created_at":"2021-10-20T22:07:31Z","closed_at":"2021-10-25T18:54:06Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":762599854,"title":"Merge pull request #51359 from yongtang:46913-range-overflow","body":"PiperOrigin-RevId: 391529518\r\nChange-Id: Ie3db4ae6d3c0f3dc88404e1dbdc22f7d03cbeb3b","created_at":"2021-10-20T18:20:41Z","closed_at":"2021-10-25T18:53:56Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":762530390,"title":"Try to fix MacOS CI tests","body":"Let see if MacOS build pass now. If yes it could be caused by:\r\n\r\nhttps://github.com/bazelbuild/bazel/issues/5572","created_at":"2021-10-20T16:41:31Z","closed_at":"2021-11-04T23:32:06Z","merged_at":null,"user_id":1710528,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":762455199,"title":"[TF:TRT] Move definition of TrtPrecisionMode and ProfileStrategy to a separate header","body":"The TF-TRT cpp converter needs to include the definition of `TrtPrecisionMode` and `ProfileStrategy`. Previously, these were defined in `convert/utils.h` which depends on `third_party/tensorrt/NvInfer.h`.  This third party header is not installed along with the rest of the header files. This PR moves the definitions to a separate header file. This way `trt_converter_api.h` is not dependent on `NvInfer.h` anymore. \r\n\r\nTracker: #45481\r\n\r\nTagging @bixia1 for review.","created_at":"2021-10-20T15:11:53Z","closed_at":"2021-11-17T18:21:32Z","merged_at":"2021-11-17T18:21:31Z","user_id":3671106,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":762342526,"title":"[NNAPI]call memcpy() with null pointer dereference.","body":"1. create `initialize.tflite` with [model_personalization](https://github.com/tensorflow/examples/tree/master/lite/examples/model_personalization) `tflite-transfer-convert`.\r\n1. execute delegate with the following option.\r\n   ```cpp\r\n   tflite::StatefulNnApiDelegate::Options options;\r\n   options.accelerator_name = \"nnapi-reference\"; // use CPU\r\n   auto delegate = new tflite::StatefulNnApiDelegate(options);\r\n   ```\r\n1. fatal error has occurred.\r\n   ```txt\r\n   signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x0\r\n   Cause: null pointer dereference\r\n   ```\r\n1. `nn_input_memory_->get_data_ptr()` returns `nullptr`.\r\n   - [total_input_byte_size](https://github.com/tensorflow/tensorflow/blob/e042c277ab6375bf4060e099dd20a101cc0685e0/tensorflow/lite/delegates/nnapi/nnapi_delegate.cc#L5700-L5701) == 0","created_at":"2021-10-20T13:15:12Z","closed_at":"2021-10-27T16:24:11Z","merged_at":"2021-10-27T16:24:11Z","user_id":11144112,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":761950090,"title":"Revert \"Disabling some tests as they fail with numpy 1.20\"","body":"Reverts tensorflow/tensorflow#52582","created_at":"2021-10-20T03:28:57Z","closed_at":"2021-10-20T03:29:03Z","merged_at":"2021-10-20T03:29:03Z","user_id":323199,"sentiment":{"polarity":-0.5,"subjectivity":0.29999999999999993}}
{"_id":761946335,"title":"Fixes nightly breakage by falling back from a fast path to a slow pat…","body":"…h in _assertAllCloseRecursive when NotImplementedError is raised. Also rolls back a previous fix on a upper level.\r\n\r\nPiperOrigin-RevId: 403213148\r\nChange-Id: I7e94aeb729d6a2351121156f8621e6f5d29e3d67","created_at":"2021-10-20T03:17:54Z","closed_at":"2021-10-20T03:28:42Z","merged_at":"2021-10-20T03:28:42Z","user_id":88513897,"sentiment":{"polarity":-0.03333333333333335,"subjectivity":0.3333333333333333}}
{"_id":761885506,"title":"Adding back setting quantization ranges for ConvertRelu6 ","body":"Fixes accuracy regression with MobilenetV2 i.e. set relu6 output tensor dynamic range to (0, 6)\r\n\r\nAccuracy regression was introduced by https://github.com/tensorflow/tensorflow/commit/b4ae795b6b6f43249cdb72c33053652c9440b88e. \r\n\r\nThis was earlier part of https://github.com/tensorflow/tensorflow/pull/52342. Pulling the change early for TF 2.7.0.\r\n\r\nCC: @DEKHTIARJonathan, @meena-at-work,  and @bixia1\r\n","created_at":"2021-10-20T00:39:13Z","closed_at":"2021-10-20T17:37:56Z","merged_at":"2021-10-20T17:37:56Z","user_id":72053804,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":761873824,"title":"Disabling some tests as they fail with numpy 1.20","body":"PiperOrigin-RevId: 404397416\r\nChange-Id: Ia16b6e548edaa9c60a8807b378ddfedba606ca19","created_at":"2021-10-20T00:11:58Z","closed_at":"2021-10-20T00:20:32Z","merged_at":"2021-10-20T00:20:32Z","user_id":88513897,"sentiment":{"polarity":-0.5,"subjectivity":0.29999999999999993}}
{"_id":761838408,"title":"Lowering dynamic case of tfl.split to tosa","body":"In the dynamic case we can handle the split by using reshapes and splits. This\r\nallows splitting across the dynamic dimension though it assumes the dimension\r\ncan be legally split.","created_at":"2021-10-19T22:41:23Z","closed_at":"2021-11-01T18:10:38Z","merged_at":"2021-11-01T18:10:38Z","user_id":5508949,"sentiment":{"polarity":0.0,"subjectivity":0.16666666666666666}}
{"_id":761745407,"title":"Change test due to np.unique() changing behavior in 1.21.0+","body":"PiperOrigin-RevId: 401110732\r\nChange-Id: Ida039b86a10aab92696efc192a325816d326ccc0","created_at":"2021-10-19T19:57:53Z","closed_at":"2021-10-19T22:58:42Z","merged_at":"2021-10-19T22:58:42Z","user_id":88513897,"sentiment":{"polarity":-0.125,"subjectivity":0.375}}
{"_id":761674220,"title":"r2.7 cherry-pick request: Fixing Mac build issue","body":"Fix a Mac build issue that was caused by https://github.com/tensorflow/tensorflow/pull/52326.\r\nError message:\r\n```\r\ntensorflow/core/common_runtime/eager/execute.cc:1192:7: error: use of undeclared identifier 'IsMKLEnabled'; did you mean 'IsMklEnabled'?\r\n  if (IsMKLEnabled() && kernel != nullptr && !ctx.RunEagerOpAsFunction() &&\r\n      ^~~~~~~~~~~~\r\n      IsMklEnabled\r\n./tensorflow/core/util/port.h:45:6: note: 'IsMklEnabled' declared here\r\nbool IsMklEnabled();\r\n     ^\r\n```\r\n\r\nOriginal fix PR (merged into master): https://github.com/tensorflow/tensorflow/pull/52551","created_at":"2021-10-19T18:11:53Z","closed_at":"2021-10-19T22:52:52Z","merged_at":"2021-10-19T22:52:52Z","user_id":38085909,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":761653913,"title":"r2.7 cherry-pick request: Update oneDNN version for aarch64 backend","body":"Original PR (merged into master): https://github.com/tensorflow/tensorflow/pull/52518\r\n\r\n> Updates oneDNN version used for `--config=mkl_aarch64` to v2.4, enabling removal of the big patch file.\r\n> \r\n> Updates Compute Library (used as optimised oneDNN backend on AArch64) to the latest release (21.08).\r\n> \r\n> This enables support for SVE and BF16 kernels where\r\nhardware supports. It provides a performance uplift of between 1.4x and 3x\r\ndepending on the hardware support.\r\n> \r\n> NOTE: AArch64 build with --config=mkl_aarch64 requires GCC 10.\r\n\r\n","created_at":"2021-10-19T17:41:44Z","closed_at":"2021-10-25T19:53:33Z","merged_at":"2021-10-25T19:53:32Z","user_id":38085909,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":761120844,"title":"[NNAPI]Fix error in axis of reduce_mean.","body":"1. create TensorFlow model.\r\n```python\r\ntf.reduce_mean(x, 0)\r\n```\r\n1. convert to TensorFlow lite model.\r\n1. execute in NNAPI delegate.\r\n1. error occurred.\r\n   `E/tflite: NN API returned error ANEURALNETWORKS_BAD_DATA at line 1465 while setting new operand value from memory for tensor XXX.`","created_at":"2021-10-19T06:58:20Z","closed_at":"2021-10-22T21:27:46Z","merged_at":"2021-10-22T21:27:46Z","user_id":11144112,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":761070396,"title":"Avoid buffer overflow when loading tensors with insufficient data fro…","body":"…m checkpoints.\r\n\r\n`CopyDataFromTensorSliceToTensorSlice` does not (and cannot conveniently)\r\nprovide any bounds checking on its own, so the size is instead checked prior\r\nto passing unvalidated data to that function.\r\n\r\nPiperOrigin-RevId: 392971286\r\nChange-Id: If2073b36d4d5eedd386329f56729395fd7effee1","created_at":"2021-10-19T05:10:38Z","closed_at":"2021-10-25T18:30:44Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":761066083,"title":"Avoid buffer overflow when loading tensors with insufficient data fro…","body":"…m checkpoints.\r\n\r\n`CopyDataFromTensorSliceToTensorSlice` does not (and cannot conveniently)\r\nprovide any bounds checking on its own, so the size is instead checked prior\r\nto passing unvalidated data to that function.\r\n\r\nPiperOrigin-RevId: 392971286\r\nChange-Id: If2073b36d4d5eedd386329f56729395fd7effee1","created_at":"2021-10-19T05:00:20Z","closed_at":"2021-10-25T18:29:24Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":761062446,"title":"Avoid buffer overflow when loading tensors with insufficient data fro…","body":"…m checkpoints.\r\n\r\n`CopyDataFromTensorSliceToTensorSlice` does not (and cannot conveniently)\r\nprovide any bounds checking on its own, so the size is instead checked prior\r\nto passing unvalidated data to that function.\r\n\r\nPiperOrigin-RevId: 392971286\r\nChange-Id: If2073b36d4d5eedd386329f56729395fd7effee1","created_at":"2021-10-19T04:49:38Z","closed_at":"2021-10-25T18:28:24Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":761048164,"title":"Add BuildTensorSlice for building from unvalidated TensorSliceProtos.","body":"This avoids several sources of crashes and undefined behavior when loading\r\ninvalid checkpoints.\r\n\r\nPiperOrigin-RevId: 392785704\r\nChange-Id: Icd9713c768b882f3b58b427eddac376060696833","created_at":"2021-10-19T04:14:07Z","closed_at":"2021-10-25T18:19:33Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":761043145,"title":"Add BuildTensorSlice for building from unvalidated TensorSliceProtos.","body":"This avoids several sources of crashes and undefined behavior when loading\r\ninvalid checkpoints.\r\n\r\nPiperOrigin-RevId: 392785704\r\nChange-Id: Icd9713c768b882f3b58b427eddac376060696833","created_at":"2021-10-19T04:03:07Z","closed_at":"2021-10-25T18:17:03Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":761039763,"title":"Add BuildTensorSlice for building from unvalidated TensorSliceProtos.","body":"This avoids several sources of crashes and undefined behavior when loading\r\ninvalid checkpoints.\r\n\r\nPiperOrigin-RevId: 392785704\r\nChange-Id: Icd9713c768b882f3b58b427eddac376060696833","created_at":"2021-10-19T03:54:29Z","closed_at":"2021-10-25T18:13:33Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":760982802,"title":"[TF-TRT] TrtGraphConverterV2 - Deprecating `conversion_params` in favor of direct arguments","body":"@bixia1 @tfeher for review\r\n\r\nThis PR essentially deprecates: `TrtGraphConverterV2(conversion_params=params)` in favor of direct arguments like `TrtGraphConverterV2(precision_mode=TrtPrecisionMode.FP32,)`.\r\n\r\nEssentially this object `TrtConversionParams` was inherited from C++ and just complicates the API for no good reason.\r\n\r\nShall be removed. The change was made in a way that is backward compatible and shall not break any user code.","created_at":"2021-10-19T01:22:30Z","closed_at":"2021-11-12T18:06:25Z","merged_at":"2021-11-12T18:06:25Z","user_id":10923599,"sentiment":{"polarity":0.1,"subjectivity":0.4}}
{"_id":760959185,"title":"Use BuildTensorShapeBase when parsing unverified TensorShapes during …","body":"…checkpoint loading.\r\n\r\nThis avoids crashing when the TensorShape has negative dimensions.\r\n\r\nPiperOrigin-RevId: 392769882\r\nChange-Id: Id1f7ae7fcf8142193556af47abfda81b13d3cce4","created_at":"2021-10-19T00:25:01Z","closed_at":"2021-10-21T22:49:34Z","merged_at":"2021-10-21T22:49:34Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":760956432,"title":"Use BuildTensorShapeBase when parsing unverified TensorShapes during …","body":"…checkpoint loading.\r\n\r\nThis avoids crashing when the TensorShape has negative dimensions.\r\n\r\nPiperOrigin-RevId: 392769882\r\nChange-Id: Id1f7ae7fcf8142193556af47abfda81b13d3cce4","created_at":"2021-10-19T00:17:46Z","closed_at":"2021-10-21T22:49:36Z","merged_at":"2021-10-21T22:49:36Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":760948629,"title":"Use BuildTensorShapeBase when parsing unverified TensorShapes during …","body":"…checkpoint loading.\r\n\r\nThis avoids crashing when the TensorShape has negative dimensions.\r\n\r\nPiperOrigin-RevId: 392769882\r\nChange-Id: Id1f7ae7fcf8142193556af47abfda81b13d3cce4","created_at":"2021-10-18T23:58:22Z","closed_at":"2021-10-21T22:49:40Z","merged_at":"2021-10-21T22:49:40Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":760842449,"title":"Update version numbers for TensorFlow 2.7.0-rc1","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 7 -> 7\nPatch: 0 -> 0\n\nNo lingering old version strings \"2.7.0-rc0\" found in source directory \n\"tensorflow/\". Good.\nWARNING: Below are potentially instances of lingering old version string \n\"2.7.0rc0\" in source directory \"tensorflow/\" that are not updated by this \nscript. Please check them manually!\ntensorflow/tools/pip_package/setup.py:105:2.7.0rc0\ntensorflow/tools/pip_package/setup.py:108:2.7.0rc0\n```","created_at":"2021-10-18T20:40:50Z","closed_at":"2021-10-18T20:43:54Z","merged_at":"2021-10-18T20:43:54Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":760809096,"title":"Update Readme - Test PR Notification Change","body":null,"created_at":"2021-10-18T19:55:35Z","closed_at":"2021-10-18T20:39:22Z","merged_at":"2021-10-18T20:39:22Z","user_id":1437573,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":760789639,"title":"[oneDNN] Fixing MAC build issue","body":null,"created_at":"2021-10-18T19:26:48Z","closed_at":"2021-10-19T17:54:54Z","merged_at":"2021-10-19T17:54:54Z","user_id":24963061,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":760763891,"title":"Refactor label_image.py functions","body":"Refactor `label_image.py` file.","created_at":"2021-10-18T18:54:52Z","closed_at":"2021-10-22T20:56:29Z","merged_at":"2021-10-22T20:56:28Z","user_id":27055373,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":760723938,"title":"[r2.7 cherry pick] Update RELEASE.md with a note on modular file-system migration to tensorflow-io","body":"This PR updates `RELEASE.md` with a note on the modular-filesystems migration to `tensorflow-io`. This is a follow-up of https://github.com/tensorflow/tensorflow/commit/9fcaf0838677d1095a7573e36ebb4d17511af6ed as those changes were not reflected during the 2.6.0 release.\r\n\r\ncc: @mihaimaruseac @yongtang ","created_at":"2021-10-18T18:02:10Z","closed_at":"2021-10-18T19:42:18Z","merged_at":"2021-10-18T19:42:18Z","user_id":25393945,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":760713423,"title":"r2.7 cherry-pick request: Update oneDNN to version 2.4.1","body":"Update oneDNN to version 2.4.1 to fix XByak-induced crashes on non-Intel systems. Details here:\r\n\r\nhttps://github.com/oneapi-src/oneDNN/commit/ad901e5489564d0035be0b4ec41f1cff4be96610\r\n\r\nPiperOrigin-RevId: 403166809","created_at":"2021-10-18T17:47:08Z","closed_at":"2021-10-18T19:42:39Z","merged_at":"2021-10-18T19:42:39Z","user_id":38085909,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":760688961,"title":"Update RELEASE.md with a note on modular file-system migration to tensorflow-io","body":"This PR updates `RELEASE.md` with a note on the modular-filesystems migration to `tensorflow-io`. This is a follow-up of https://github.com/tensorflow/tensorflow/commit/9fcaf0838677d1095a7573e36ebb4d17511af6ed as those changes were not reflected during the 2.6.0 release.\r\n\r\ncc: @mihaimaruseac @yongtang ","created_at":"2021-10-18T17:12:56Z","closed_at":"2021-10-18T17:48:37Z","merged_at":null,"user_id":25393945,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":760552246,"title":"Update absl-pypyi resulting in small improvment and fix on bazel test flags","body":null,"created_at":"2021-10-18T14:47:55Z","closed_at":"2021-10-21T23:15:36Z","merged_at":"2021-10-21T23:15:36Z","user_id":1710528,"sentiment":{"polarity":-0.25,"subjectivity":0.4}}
{"_id":760380435,"title":"Improve the tf.repeat implementation","body":"- Replaces the old implementation with a simpler algorithm that is significantly more memory and compute efficient.\r\n- Fixes https://github.com/tensorflow/tensorflow/issues/50712\r\n- **Requires https://github.com/tensorflow/tensorflow/pull/52543 to be merged first to avoid performance regression.**\r\n\r\ncc @nluehr ","created_at":"2021-10-18T11:52:25Z","closed_at":"2022-01-19T02:46:38Z","merged_at":"2022-01-19T02:46:38Z","user_id":3979096,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":760354219,"title":"Add GPU implementation for Range op","body":"- This op currently has a GPU kernel registered, but it computes and returns its output on the host, which can cause significant slowdowns due to H2D memcopies and slow CPU execution. I don't know if there is a special reason it's like this (hopefully not).\r\n- This patch adds a proper GPU kernel that returns the output on the device.\r\n\r\ncc @nluehr ","created_at":"2021-10-18T11:17:47Z","closed_at":"2021-12-07T06:59:23Z","merged_at":"2021-12-07T06:59:23Z","user_id":3979096,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":760115227,"title":"Clear global state cached by backend module for moinitored session","body":"Clear global state cached by backend module for moinitored session to avoid memory leak.\r\n\r\nIn TF 2.x, the graph created by monitored_session will be cached by backend.py even after monitored_session exit.\r\n\r\nIf not do clear, it would cause memeory leak, especially when using TF estimator.","created_at":"2021-10-18T06:38:16Z","closed_at":"2021-10-18T07:10:26Z","merged_at":null,"user_id":7519482,"sentiment":{"polarity":0.05000000000000001,"subjectivity":0.19166666666666665}}
{"_id":759750450,"title":"[tensorflow/compiler/xla/**/*.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-945027209 told me to merge into one PR per 'large module/namespace'","created_at":"2021-10-17T01:33:48Z","closed_at":"2021-10-20T15:36:36Z","merged_at":null,"user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":759507462,"title":"[tensorflow/compiler/xla/service/convolution_group_converter.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T21:29:27Z","closed_at":"2021-10-25T08:47:01Z","merged_at":"2021-10-25T08:47:01Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":759506635,"title":"[tensorflow/compiler/xla/client/lib/comparators_test.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T21:28:06Z","closed_at":"2021-10-28T06:58:32Z","merged_at":"2021-10-28T06:58:32Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":759489477,"title":"[tensorflow/compiler/{mlir,tf2xla,xla}/**/*.cc] Make tuple_shapes_size calls and comparators to match actual return type","body":"The correct type is `int`, as per: https://github.com/tensorflow/tensorflow/blob/0b6b491/tensorflow/compiler/xla/shape.h#L136","created_at":"2021-10-15T20:58:45Z","closed_at":"2021-10-20T10:19:57Z","merged_at":"2021-10-20T10:19:57Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":759394442,"title":"Update README.md","body":"Updated TF logo as per brand guidelines \"https://www.tensorflow.org/extras/tensorflow_brand_guidelines.pdf\"\r\nFix for #52355","created_at":"2021-10-15T17:59:21Z","closed_at":"2021-10-21T14:22:56Z","merged_at":"2021-10-21T14:22:56Z","user_id":59822926,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":759090495,"title":"Updates config=mkl_aarch64 build to oneDNN 2.4 and Compute Library 21.08","body":"Updates oneDNN version used for `--config=mkl_aarch64` to 2.4\r\nin line with x86 build.\r\n\r\nUpdates Compute Library (used as optimised oneDNN backend\r\non AArch64) to the latest release (21.08).\r\n\r\nThis enables support for SVE and BF16 kernels where\r\nhardware supports.\r\nThis provides a performance uplift of between 1.4x and 3x\r\ndepending on the hardware support.\r\n\r\nRemoves some patches to oneDNN which are not required for\r\nthe 2.4 release.\r\n\r\nNOTE: AArch64 build with --config=mkl_aarch64 requires GCC 10.\r\n\r\nChange-Id: Iaf7562da729fc928dce922d33c02b8bb0ce74767","created_at":"2021-10-15T10:26:21Z","closed_at":"2021-10-18T21:03:52Z","merged_at":"2021-10-18T21:03:52Z","user_id":32057673,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758885660,"title":"[tensorflow/compiler/xla/service/computation_layout.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:47:42Z","closed_at":"2021-10-20T01:37:52Z","merged_at":"2021-10-20T01:37:52Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758885626,"title":"[tensorflow/compiler/xla/service/batchnorm_expander.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:47:36Z","closed_at":"2021-10-26T17:52:42Z","merged_at":"2021-10-26T17:52:42Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758885583,"title":"[tensorflow/compiler/xla/service/ar_crs_combiner.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:47:27Z","closed_at":"2021-10-20T07:09:11Z","merged_at":"2021-10-20T07:09:11Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758885554,"title":"[tensorflow/compiler/xla/service/allocation_tracker.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:47:20Z","closed_at":"2021-10-20T07:34:36Z","merged_at":"2021-10-20T07:34:36Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758885500,"title":"[tensorflow/compiler/xla/service/algebraic_simplifier_test.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:47:10Z","closed_at":"2021-10-25T07:01:39Z","merged_at":"2021-10-25T07:01:39Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758885440,"title":"[tensorflow/compiler/xla/service/algebraic_simplifier.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:46:57Z","closed_at":"2021-10-20T06:52:36Z","merged_at":"2021-10-20T06:52:36Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758885387,"title":"[tensorflow/compiler/xla/python/tpu_driver/recording_tpu_driver.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:46:49Z","closed_at":"2021-10-20T12:16:30Z","merged_at":"2021-10-20T12:16:30Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758885329,"title":"[tensorflow/compiler/xla/python/tpu_driver/pod_tpu_driver.cc] Use correct size type for `children_ids_size` iterator; Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:46:37Z","closed_at":"2021-10-20T14:00:13Z","merged_at":"2021-10-20T14:00:13Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758885138,"title":"[tensorflow/compiler/xla/python/ops.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:45:52Z","closed_at":"2021-10-21T11:51:39Z","merged_at":"2021-10-21T11:51:39Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758885107,"title":"[tensorflow/compiler/xla/pjrt/utils.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:45:46Z","closed_at":"2021-10-20T10:02:09Z","merged_at":"2021-10-20T10:02:08Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758885065,"title":"[tensorflow/compiler/xla/literal_util.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:45:38Z","closed_at":"2021-10-20T10:58:53Z","merged_at":"2021-10-20T10:58:53Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758885034,"title":"[tensorflow/compiler/xla/literal.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:45:32Z","closed_at":"2021-10-20T11:03:55Z","merged_at":"2021-10-20T11:03:55Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758884989,"title":"[tensorflow/compiler/xla/layout.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:45:22Z","closed_at":"2021-10-21T14:42:48Z","merged_at":"2021-10-21T14:42:48Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758884949,"title":"[tensorflow/compiler/xla/client/xla_builder_test.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:45:15Z","closed_at":"2021-10-21T08:50:53Z","merged_at":"2021-10-21T08:50:53Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758884883,"title":"[tensorflow/compiler/xla/client/xla_builder.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:45:03Z","closed_at":"2021-10-21T11:12:40Z","merged_at":"2021-10-21T11:12:39Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758884815,"title":"[tensorflow/compiler/xla/client/value_inference.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:44:48Z","closed_at":"2021-10-21T10:53:53Z","merged_at":"2021-10-21T10:53:53Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758884773,"title":"[tensorflow/compiler/xla/client/lib/testing.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:44:40Z","closed_at":"2021-10-26T07:21:14Z","merged_at":"2021-10-26T07:21:14Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758884712,"title":"[tensorflow/compiler/xla/client/lib/slicing.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:44:29Z","closed_at":"2021-10-21T12:10:32Z","merged_at":"2021-10-21T12:10:32Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758884651,"title":"[tensorflow/compiler/xla/client/lib/quantize_test.cc] Reduce function calls; add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:44:19Z","closed_at":"2021-10-20T08:02:20Z","merged_at":"2021-10-20T08:02:20Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758884574,"title":"[tensorflow/compiler/xla/client/lib/prng.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:44:03Z","closed_at":"2021-10-20T07:24:07Z","merged_at":"2021-10-20T07:24:07Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758884478,"title":"[tensorflow/compiler/xla/client/lib/approx_topk.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:43:46Z","closed_at":"2021-10-21T14:22:56Z","merged_at":"2021-10-21T14:22:56Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758884436,"title":"[tensorflow/compiler/xla/client/client.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:43:38Z","closed_at":"2021-10-25T07:29:48Z","merged_at":"2021-10-25T07:29:48Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758884409,"title":"[tensorflow/compiler/tf2xla/xla_compiler.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:43:32Z","closed_at":"2021-10-18T06:41:32Z","merged_at":null,"user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758884349,"title":"[tensorflow/compiler/tf2xla/tf2xla_supported_ops.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:43:20Z","closed_at":"2021-10-21T11:46:32Z","merged_at":"2021-10-21T11:46:32Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758884302,"title":"[tensorflow/compiler/tf2xla/lib/data_format.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:43:08Z","closed_at":"2021-10-20T17:18:12Z","merged_at":"2021-10-20T17:18:12Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758884246,"title":"[tensorflow/compiler/tf2xla/kernels/while_op.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:42:57Z","closed_at":"2021-10-21T10:14:36Z","merged_at":"2021-10-21T10:14:36Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758884211,"title":"[tensorflow/compiler/tf2xla/kernels/tensor_list_ops.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:42:50Z","closed_at":"2021-10-21T09:55:43Z","merged_at":"2021-10-21T09:55:43Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758884175,"title":"[tensorflow/compiler/tf2xla/kernels/strided_slice_op.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:42:43Z","closed_at":"2021-10-21T10:05:11Z","merged_at":"2021-10-21T10:05:11Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758884128,"title":"[tensorflow/compiler/tf2xla/kernels/reshape_op.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:42:33Z","closed_at":"2021-10-21T10:26:34Z","merged_at":"2021-10-21T10:26:34Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758884073,"title":"[tensorflow/compiler/tf2xla/kernels/resampler_ops.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:42:23Z","closed_at":"2021-10-21T11:23:35Z","merged_at":"2021-10-21T11:23:35Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758883816,"title":"[tensorflow/compiler/tf2xla/kernels/reduction_ops_common.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:41:31Z","closed_at":"2021-10-21T10:09:50Z","merged_at":"2021-10-21T10:09:50Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758883768,"title":"[tensorflow/compiler/tf2xla/kernels/dynamic_stitch_op.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:41:18Z","closed_at":"2021-10-15T10:04:01Z","merged_at":null,"user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758883733,"title":"[tensorflow/compiler/tf2xla/kernels/dynamic_partition_op.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:41:12Z","closed_at":"2021-10-21T09:49:29Z","merged_at":"2021-10-21T09:49:29Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758883686,"title":"[tensorflow/compiler/tf2xla/kernels/cross_op.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:41:02Z","closed_at":"2021-10-21T09:38:34Z","merged_at":"2021-10-21T09:38:33Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758883649,"title":"[tensorflow/compiler/tf2xla/kernels/case_op.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:40:54Z","closed_at":"2021-10-21T09:28:06Z","merged_at":"2021-10-21T09:28:06Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758883611,"title":"[tensorflow/compiler/tf2xla/functionalize_while.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:40:48Z","closed_at":"2021-10-21T09:32:32Z","merged_at":"2021-10-21T09:32:32Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758883570,"title":"[tensorflow/compiler/tf2tensorrt/kernels/trt_engine_resource_ops.cc] Add calls to `reserve()` before populating vector","body":"Add calls to reserve vector capacity before populating vector.\r\n\r\nThis is split from PR https://github.com/tensorflow/tensorflow/pull/51739.","created_at":"2021-10-15T03:40:40Z","closed_at":"2021-10-22T21:20:54Z","merged_at":"2021-10-22T21:20:53Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758883540,"title":"[tensorflow/compiler/tf2tensorrt/convert/trt_optimization_pass.cc] Add calls to `reserve()` before populating vector","body":"Add calls to reserve vector capacity before populating vector.\r\n\r\nThis is split from PR https://github.com/tensorflow/tensorflow/pull/51739.","created_at":"2021-10-15T03:40:32Z","closed_at":"2021-10-19T18:42:17Z","merged_at":"2021-10-19T18:42:17Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758883500,"title":"[tensorflow/compiler/tf2tensorrt/convert/convert_nodes_test.cc] Add calls to `reserve()` before populating vectors","body":"Add calls to reserve vector capacity before populating vector.\r\n\r\nThis is split from PR https://github.com/tensorflow/tensorflow/pull/51739.","created_at":"2021-10-15T03:40:22Z","closed_at":"2021-10-21T16:16:15Z","merged_at":"2021-10-21T16:16:15Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758883457,"title":"[tensorflow/compiler/tf2tensorrt/convert/convert_nodes.cc] Add calls to `reserve()` before populating vector","body":"Add calls to reserve vector capacity before populating vector.\r\n\r\nThis is split from PR https://github.com/tensorflow/tensorflow/pull/51739.","created_at":"2021-10-15T03:40:14Z","closed_at":"2021-10-20T14:46:59Z","merged_at":"2021-10-20T14:46:59Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758883431,"title":"[tensorflow/compiler/tests/randomized_tests.cc] Reduce function calls; add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:40:07Z","closed_at":"2021-10-21T08:35:58Z","merged_at":"2021-10-21T08:35:58Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758883280,"title":"[tensorflow/compiler/mlir/xla/transforms/legalize_tf.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:39:37Z","closed_at":"2021-10-26T02:15:48Z","merged_at":"2021-10-26T02:15:48Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758883225,"title":"[tensorflow/compiler/mlir/xla/transforms/adjust_layout.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:39:29Z","closed_at":"2021-10-20T01:30:14Z","merged_at":"2021-10-20T01:30:14Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758883159,"title":"[tensorflow/compiler/mlir/xla/ir/mlir_hlo_builder.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:39:15Z","closed_at":"2021-12-04T23:58:25Z","merged_at":null,"user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758883109,"title":"[tensorflow/compiler/mlir/xla/experimental/conv_emitter/conv_emitter.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:39:03Z","closed_at":"2021-12-17T19:46:24Z","merged_at":null,"user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758883070,"title":"[tensorflow/compiler/mlir/tools/kernel_gen/transforms/gpu_kernel_to_blob_pass.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:38:57Z","closed_at":"2021-10-21T14:33:17Z","merged_at":"2021-10-21T14:33:17Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758883022,"title":"[tensorflow/compiler/mlir/tfr/integration/tfr_decompose_ctx_test.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:38:48Z","closed_at":"2021-10-20T17:11:07Z","merged_at":null,"user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758882963,"title":"[tensorflow/compiler/mlir/tensorflow/utils/convert_tensor.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:38:38Z","closed_at":"2021-10-22T21:55:13Z","merged_at":"2021-10-22T21:55:13Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758882912,"title":"[tensorflow/compiler/mlir/tensorflow/transforms/lower_tf.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:38:29Z","closed_at":"2021-10-21T17:41:37Z","merged_at":"2021-10-21T17:41:37Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758882845,"title":"[tensorflow/compiler/mlir/python/mlir.cc] Use correct size type for `node_names.size()` iterator","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:38:15Z","closed_at":"2021-12-04T03:58:38Z","merged_at":null,"user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758882725,"title":"[tensorflow/compiler/mlir/hlo/lib/Analysis/userange_analysis.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:37:52Z","closed_at":"2021-10-26T01:59:36Z","merged_at":"2021-10-26T01:59:36Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758882701,"title":"[tensorflow/compiler/jit/test_util.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:37:46Z","closed_at":"2022-12-29T05:15:06Z","merged_at":null,"user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758882660,"title":"[tensorflow/compiler/jit/increase_dynamism_for_auto_jit_pass.cc] Use correct size type for `NumElements` iterator","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:37:37Z","closed_at":"2022-12-29T05:15:17Z","merged_at":null,"user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758882481,"title":"[tensorflow/compiler/jit/extract_outside_compilation_pass.cc] Fold two loops into one; add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:36:59Z","closed_at":"2021-12-09T00:25:13Z","merged_at":"2021-12-09T00:25:12Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758882374,"title":"[tensorflow/compiler/jit/encapsulate_subgraphs_pass_test.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:36:36Z","closed_at":"2021-10-17T00:36:11Z","merged_at":null,"user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758882340,"title":"[tensorflow/compiler/jit/deadness_analysis.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:36:29Z","closed_at":"2021-10-21T00:55:53Z","merged_at":"2021-10-21T00:55:53Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758882307,"title":"[tensorflow/compiler/jit/compilability_check_util.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:36:22Z","closed_at":"2021-10-21T01:08:33Z","merged_at":"2021-10-21T01:08:33Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758882268,"title":"[tensorflow/cc/saved_model/saved_model_bundle_test.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:36:14Z","closed_at":"2021-10-17T00:35:58Z","merged_at":null,"user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758882246,"title":"[tensorflow/cc/saved_model/saved_model_bundle_lite_test.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:36:09Z","closed_at":"2021-10-17T00:35:51Z","merged_at":null,"user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758882195,"title":"[tensorflow/cc/ops/while_loop.cc] Use matching type for loop iterators","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:36:00Z","closed_at":"2021-10-27T16:24:11Z","merged_at":"2021-10-27T16:24:11Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758882150,"title":"[tensorflow/cc/gradients/functional_grad.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:35:53Z","closed_at":"2021-10-21T00:11:32Z","merged_at":"2021-10-21T00:11:32Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758882105,"title":"[tensorflow/cc/gradients/array_grad.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:35:45Z","closed_at":"2021-10-21T00:05:36Z","merged_at":"2021-10-21T00:05:36Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758882067,"title":"[tensorflow/c/tf_tensor.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:35:38Z","closed_at":"2021-10-21T01:17:08Z","merged_at":"2021-10-21T01:17:07Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758881955,"title":"[tensorflow/c/experimental/filesystem/plugins/gcs/ram_file_block_cache_test.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:35:19Z","closed_at":"2021-10-20T23:35:46Z","merged_at":"2021-10-20T23:35:46Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758881914,"title":"[tensorflow/c/eager/gradients.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:35:10Z","closed_at":"2021-10-21T17:20:08Z","merged_at":"2021-10-21T17:20:08Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758881887,"title":"[tensorflow/c/c_test_util.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:35:05Z","closed_at":"2021-10-25T15:33:10Z","merged_at":"2021-10-25T15:33:10Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758881839,"title":"[tensorflow/c/c_api_function_test.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:34:57Z","closed_at":"2021-10-17T00:32:41Z","merged_at":null,"user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758881797,"title":"[tensorflow/c/c_api.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:34:50Z","closed_at":"2021-10-20T23:59:49Z","merged_at":"2021-10-20T23:59:49Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758881706,"title":"[tensorflow/compiler/xla/service/cpu/cpu_xfeed.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:34:31Z","closed_at":"2021-10-21T09:43:25Z","merged_at":"2021-10-21T09:43:25Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758881671,"title":"[tensorflow/compiler/xla/service/cpu/ir_emitter.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:34:24Z","closed_at":"2021-10-26T08:25:12Z","merged_at":null,"user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758881568,"title":"[tensorflow/compiler/xla/service/cpu/tiled_dot_emitter.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:34:06Z","closed_at":"2021-10-21T10:31:38Z","merged_at":"2021-10-21T10:31:38Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758881531,"title":"[tensorflow/compiler/xla/service/cpu/vector_support_library.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:33:59Z","closed_at":"2021-10-21T10:39:25Z","merged_at":"2021-10-21T10:39:24Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758881493,"title":"[tensorflow/compiler/xla/service/dynamic_dimension_inference.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:33:50Z","closed_at":"2021-10-15T21:18:41Z","merged_at":null,"user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758881438,"title":"[tensorflow/compiler/xla/service/dynamic_index_splitter.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:33:39Z","closed_at":"2021-10-21T10:58:04Z","merged_at":"2021-10-21T10:58:04Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758881391,"title":"[tensorflow/compiler/xla/service/dynamic_padder.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:33:30Z","closed_at":"2021-10-21T10:49:47Z","merged_at":"2021-10-21T10:49:47Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758881362,"title":"[tensorflow/compiler/xla/service/elemental_ir_emitter.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:33:24Z","closed_at":"2021-10-21T11:56:04Z","merged_at":"2021-10-21T11:56:04Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758881344,"title":"[tensorflow/compiler/xla/service/gpu/horizontal_loop_fusion.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:33:19Z","closed_at":"2021-10-21T09:13:03Z","merged_at":"2021-10-21T09:13:03Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758881304,"title":"[tensorflow/compiler/xla/service/gpu/ir_emission_utils.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:33:14Z","closed_at":"2021-11-11T14:44:16Z","merged_at":"2021-11-11T14:44:16Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758881280,"title":"[tensorflow/compiler/xla/service/gpu/ir_emitter_nested.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:33:08Z","closed_at":"2021-10-19T00:30:46Z","merged_at":"2021-10-19T00:30:46Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758881246,"title":"[tensorflow/compiler/xla/service/gpu/ir_emitter_unnested.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:33:02Z","closed_at":"2021-10-25T08:28:33Z","merged_at":"2021-10-25T08:28:33Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758881176,"title":"[tensorflow/compiler/xla/service/gpu/llvm_gpu_backend/gpu_backend_lib.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:32:47Z","closed_at":"2021-10-19T07:33:22Z","merged_at":"2021-10-19T07:33:22Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758881112,"title":"[tensorflow/compiler/xla/service/gpu/tests/mlir_gpu_test_base.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:32:34Z","closed_at":"2021-10-21T07:11:09Z","merged_at":"2021-10-21T07:11:09Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758881043,"title":"[tensorflow/compiler/xla/service/gpu/tests/parallel_reduction_test.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:32:22Z","closed_at":"2021-10-21T07:30:10Z","merged_at":"2021-10-21T07:30:10Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758880974,"title":"[tensorflow/compiler/xla/service/hlo_alias_analysis.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:32:08Z","closed_at":"2021-10-21T11:08:52Z","merged_at":"2021-10-21T11:08:52Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758880906,"title":"[tensorflow/compiler/xla/service/hlo_alias_analysis_test.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:31:57Z","closed_at":"2021-10-20T06:59:52Z","merged_at":"2021-10-20T06:59:52Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758880840,"title":"[tensorflow/compiler/xla/service/hlo_buffer.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:31:42Z","closed_at":"2021-10-19T07:57:18Z","merged_at":null,"user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758880775,"title":"[tensorflow/compiler/xla/service/hlo_dataflow_analysis_test.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:31:31Z","closed_at":"2021-10-21T07:05:00Z","merged_at":"2021-10-21T07:05:00Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758880675,"title":"[tensorflow/compiler/xla/service/hlo_element_type_converter.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:31:14Z","closed_at":"2021-10-20T12:21:55Z","merged_at":"2021-10-20T12:21:54Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758880628,"title":"[tensorflow/compiler/xla/service/hlo_instruction.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:31:05Z","closed_at":"2021-10-20T11:35:16Z","merged_at":"2021-10-20T11:35:16Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758880523,"title":"[tensorflow/compiler/xla/service/hlo_instructions.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:30:45Z","closed_at":"2021-10-21T10:19:46Z","merged_at":"2021-10-21T10:19:46Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758880478,"title":"[tensorflow/compiler/xla/service/hlo_module_group_test.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:30:35Z","closed_at":"2021-10-21T07:46:47Z","merged_at":"2021-10-21T07:46:47Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758880414,"title":"[tensorflow/compiler/xla/service/hlo_runner.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:30:25Z","closed_at":"2021-10-19T07:28:33Z","merged_at":"2021-10-19T07:28:33Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758880311,"title":"[tensorflow/compiler/xla/service/hlo_sharding.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:30:05Z","closed_at":"2021-10-15T11:03:30Z","merged_at":null,"user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758880261,"title":"[tensorflow/compiler/xla/service/hlo_sharding_util.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:29:51Z","closed_at":"2021-10-19T10:56:22Z","merged_at":"2021-10-19T10:56:22Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758880192,"title":"[tensorflow/compiler/xla/service/hlo_verifier_test.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:29:40Z","closed_at":"2021-10-21T09:03:59Z","merged_at":"2021-10-21T09:03:58Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758880153,"title":"[tensorflow/compiler/xla/service/interpreter/executable_base.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:29:32Z","closed_at":"2021-10-25T07:06:59Z","merged_at":"2021-10-25T07:06:59Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758880101,"title":"[tensorflow/compiler/xla/service/layout_assignment.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:29:23Z","closed_at":"2021-10-21T12:14:17Z","merged_at":"2021-10-21T12:14:17Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758880046,"title":"[tensorflow/compiler/xla/service/service.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:29:11Z","closed_at":"2021-10-18T21:11:35Z","merged_at":"2021-10-18T21:11:35Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758879993,"title":"[tensorflow/compiler/xla/service/shape_inference.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:29:02Z","closed_at":"2021-10-26T08:46:21Z","merged_at":"2021-10-26T08:46:21Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758879919,"title":"[tensorflow/compiler/xla/service/sharding_propagation.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:28:49Z","closed_at":"2021-10-20T10:06:26Z","merged_at":"2021-10-20T10:06:26Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758879867,"title":"[tensorflow/compiler/xla/service/space_to_batch_converter.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:28:39Z","closed_at":"2021-10-21T08:59:58Z","merged_at":"2021-10-21T08:59:58Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758879820,"title":"[tensorflow/compiler/xla/service/spmd/dot_handler.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:28:30Z","closed_at":"2021-10-21T09:17:25Z","merged_at":"2021-10-21T09:17:25Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758879760,"title":"[tensorflow/compiler/xla/service/spmd/spmd_partitioner.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:28:19Z","closed_at":"2021-10-18T14:52:03Z","merged_at":"2021-10-18T14:52:03Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758879667,"title":"[tensorflow/compiler/xla/service/spmd/spmd_partitioner_util.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:28:03Z","closed_at":"2021-10-21T09:08:11Z","merged_at":"2021-10-21T09:08:11Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758879604,"title":"[tensorflow/compiler/xla/service/tuple_points_to_analysis_test.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:27:50Z","closed_at":"2021-10-21T07:40:50Z","merged_at":"2021-10-21T07:40:50Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758879559,"title":"[tensorflow/compiler/xla/service/while_loop_all_reduce_code_motion.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:27:42Z","closed_at":"2021-10-15T11:34:00Z","merged_at":null,"user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758879517,"title":"[tensorflow/compiler/xla/service/while_loop_concat_code_motion.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:27:34Z","closed_at":"2021-10-21T08:56:01Z","merged_at":"2021-10-21T08:56:01Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758879486,"title":"[tensorflow/compiler/xla/shape_tree_test.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:27:27Z","closed_at":"2021-10-21T07:18:06Z","merged_at":"2021-10-21T07:18:06Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758879394,"title":"[tensorflow/compiler/xla/shape_util.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:27:10Z","closed_at":"2021-10-21T10:45:10Z","merged_at":"2021-10-21T10:45:10Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758879278,"title":"[tensorflow/compiler/xla/tests/array_elementwise_ops_test.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:26:46Z","closed_at":"2021-10-21T08:04:54Z","merged_at":"2021-10-21T08:04:54Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758879159,"title":"[tensorflow/compiler/xla/tests/collective_ops_test.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:26:25Z","closed_at":"2021-10-21T08:26:25Z","merged_at":"2021-10-21T08:26:25Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758879085,"title":"[tensorflow/compiler/xla/tests/dot_operation_test.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:26:10Z","closed_at":"2021-10-21T08:31:05Z","merged_at":"2021-10-21T08:31:05Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758879034,"title":"[tensorflow/compiler/xla/tests/half_test.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:26:01Z","closed_at":"2021-10-21T08:00:17Z","merged_at":"2021-10-21T08:00:17Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758878978,"title":"[tensorflow/compiler/xla/tests/local_client_execute_test.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:25:51Z","closed_at":"2021-10-21T08:20:51Z","merged_at":"2021-10-21T08:20:51Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758878906,"title":"[tensorflow/compiler/xla/tests/params_test.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:25:41Z","closed_at":"2021-10-21T08:08:27Z","merged_at":"2021-10-21T08:08:27Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758878853,"title":"[tensorflow/compiler/xla/tests/reduce_test.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:25:33Z","closed_at":"2021-10-21T07:24:51Z","merged_at":"2021-10-21T07:24:50Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758878789,"title":"[tensorflow/compiler/xla/tests/select_test.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:25:21Z","closed_at":"2021-10-21T08:15:50Z","merged_at":"2021-10-21T08:15:50Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758878759,"title":"[tensorflow/compiler/xla/tests/test_utils.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:25:16Z","closed_at":"2021-10-21T07:35:39Z","merged_at":"2021-10-21T07:35:39Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758878725,"title":"[tensorflow/compiler/xla/tests/transfer_manager_test.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:25:09Z","closed_at":"2021-10-15T03:42:08Z","merged_at":null,"user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758878690,"title":"[tensorflow/compiler/xla/tests/vector_ops_simple_test.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:25:03Z","closed_at":"2021-10-21T07:52:01Z","merged_at":"2021-10-21T07:52:00Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758878596,"title":"[tensorflow/compiler/xrt/kernels/xrt_execute_op.cc] Add calls to `reserve()` before populating vector","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:24:46Z","closed_at":"2021-10-21T16:16:15Z","merged_at":"2021-10-21T16:16:15Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758878521,"title":"[tensorflow/compiler/xrt/tests/raw_api_test.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:24:32Z","closed_at":"2021-10-17T00:32:25Z","merged_at":null,"user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758878466,"title":"[tensorflow/core/kernels/matmul_op_impl.h] Use correct size type for `batch_size`","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:24:19Z","closed_at":"2021-10-21T00:50:35Z","merged_at":"2021-10-21T00:50:35Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758878330,"title":"[tensorflow/lite/toco/graph_transformations/unroll_batch_matmul.cc] Add calls to `reserve()` before populating vectors","body":"https://github.com/tensorflow/tensorflow/pull/51739#issuecomment-940389562 told me to split the larger PR into one PR per file; thus this (thanks `bash`, `git` and `gh`!)","created_at":"2021-10-15T03:23:53Z","closed_at":"2021-10-21T00:38:01Z","merged_at":"2021-10-21T00:38:01Z","user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758720871,"title":"Fixed tfl.strided_slice lowering to tosa for negative stride","body":"Negative strides should reverse those axis after the slice is performed.\r\nWe insert tosa.reverse operations after the slicing / reshaping work is\r\nfinished.","created_at":"2021-10-14T21:40:26Z","closed_at":"2021-10-19T18:13:26Z","merged_at":"2021-10-19T18:13:26Z","user_id":5508949,"sentiment":{"polarity":-0.09999999999999999,"subjectivity":0.30000000000000004}}
{"_id":758713901,"title":"Fixed tfl.strided_slice lowering to tosa for negative stride","body":"Negative strides should reverse those axis after the slice is performed.\r\nWe insert tosa.reverse operations after the slicing / reshaping work is\r\nfinished.","created_at":"2021-10-14T21:28:04Z","closed_at":"2021-10-14T21:40:14Z","merged_at":null,"user_id":5508949,"sentiment":{"polarity":-0.09999999999999999,"subjectivity":0.30000000000000004}}
{"_id":758573781,"title":"Improve overall readablity of code","body":"Hi,\r\nI am trying to improve the overall readability of the code by correcting grammatical and spelling errors\r\n\r\nthanks","created_at":"2021-10-14T17:57:42Z","closed_at":"2021-10-18T18:36:45Z","merged_at":null,"user_id":51359628,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":758524381,"title":"Push upper and lower limits of python deps for the open source people…","body":"… who might have a different version of the dep that still works. Dep versions are still pinned in CI\r\n\r\nPiperOrigin-RevId: 400270872\r\nChange-Id: Ibf2818764b402b99e637c7624f3af435e78b48b0","created_at":"2021-10-14T16:43:25Z","closed_at":"2021-10-15T21:48:54Z","merged_at":"2021-10-15T21:48:54Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.25}}
{"_id":757836939,"title":"Added lowering for tfl.pad_v2 to tosa.concat operations","body":"tfl.pad_v2 requires specifying the pad value. Tosa.pad defaults to zero so the\r\neasiest method to pad is to concat the values together. This should work for\r\nmost static cases and some dynamic cases.","created_at":"2021-10-13T23:15:53Z","closed_at":"2021-10-14T19:36:22Z","merged_at":"2021-10-14T19:36:21Z","user_id":5508949,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":757760172,"title":"Allow to apply tf-promote-resources-to-args on any function","body":"Allow to specify on which function apply --tf-promote-resources-to-args, with the following command line : `tf-opt --tf-promote-resources-to-args=functions=\"func1,func2\" myfile.mlir`\r\nThe initial behaviour is not broken : --tf-promote-resources-to-args alone still applies on the function \"main\".\r\nRelative to the discussion on the forum [here](https://discuss.tensorflow.org/t/promote-resources-to-args-with-tf-opt/4915/3)","created_at":"2021-10-13T20:47:09Z","closed_at":"2021-10-19T16:46:30Z","merged_at":"2021-10-19T16:46:30Z","user_id":30041903,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":757727624,"title":"Update Readme - minor format change","body":null,"created_at":"2021-10-13T19:57:44Z","closed_at":"2021-10-13T21:06:02Z","merged_at":"2021-10-13T21:06:01Z","user_id":1437573,"sentiment":{"polarity":-0.05,"subjectivity":0.2}}
{"_id":757544144,"title":"[ROCM] enable QR_op on ROCM","body":"This PR enables the QR op on the rocm platform.","created_at":"2021-10-13T15:48:21Z","closed_at":"2021-12-03T18:03:00Z","merged_at":"2021-12-03T18:03:00Z","user_id":16394078,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":757091266,"title":"Add tfl-to-tosa lowering for l2 normalization and batch matmul","body":"L2 Normalization and batch matmul were missing their lowerings. This only includes the\r\nfloat lowering for L2 normalization. Quantized L2 normalization requires more thought for\r\nhow to handle zero values, and correct decomposition.","created_at":"2021-10-13T07:11:20Z","closed_at":"2021-10-13T21:38:28Z","merged_at":"2021-10-13T21:38:28Z","user_id":5508949,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":756932476,"title":"[oneDNN] Enable fusion for Add/AddV2 which has BiasAdd semantics.","body":"because the MR: https://github.com/tensorflow/tensorflow/pull/52226 has Google CLA problem, i create a new branch.\r\n\r\nIf an Add/AddV2 op has one input of Conv2D/DepthwiseConv2D/MatMul in NHWC format,\r\nand the other input is 1-dimension, treat this add node as BiasAdd.\r\nCo-authored-by: Yimei Sun <yimei.sun@intel.com>","created_at":"2021-10-13T01:19:14Z","closed_at":"2021-10-14T19:59:35Z","merged_at":"2021-10-14T19:59:35Z","user_id":35016185,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":756559485,"title":"[oneDNN] fixing nn_fused_batchnorm_test for mkl configuration","body":"This PR fixes the unit test : **//tensorflow/python:nn_fused_batchnorm_test** failure on mkl configuration.\r\n\r\nWith recent commit on public tensorflow : aab9998\r\nThere are new checks added to **fused_batch_norm_ops** and additional unit tests added to validate new op checks.\r\nNewly added unit test makes sure the program raises exception for when op checks are not satisfied.\r\n\r\nThese checks were not present in **mkl_fused_batch_norm_op.cc** and so it failed to raise exceptions with new unit test, hence unit test failed.\r\nWith this PR the op checks are added to **mkl_fused_batch_norm_op.cc**, making it raise exceptions and hence pass the test.","created_at":"2021-10-12T19:47:31Z","closed_at":"2021-10-29T16:43:29Z","merged_at":"2021-10-29T16:43:29Z","user_id":43043975,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":756456840,"title":"Call hexagon delegate only if TFLITE_ENABLE_HEXAGON is defined.Change-Id: I4540ff617562c25144d2ab99f84835ab6b6553f5","body":null,"created_at":"2021-10-12T18:33:54Z","closed_at":"2021-10-29T18:21:30Z","merged_at":null,"user_id":92391026,"sentiment":{"polarity":0.0,"subjectivity":1.0}}
{"_id":756421821,"title":"Added external delegate support to CMAKE build of benchmark tool.  Fixed CMAKE build of benchmark tool for aarch64","body":null,"created_at":"2021-10-12T18:04:02Z","closed_at":"2021-10-12T18:21:16Z","merged_at":null,"user_id":49494444,"sentiment":{"polarity":0.05,"subjectivity":0.15000000000000002}}
{"_id":756416948,"title":"[TFLite] Add int16x8 support for the MIRROR_PAD operator","body":"Hello,\r\n\r\nThis PR adds int16x8 support for the MIRROR_PAD operator.\r\n\r\nThanks,\r\nJohan.","created_at":"2021-10-12T17:57:12Z","closed_at":"2023-02-22T16:17:01Z","merged_at":"2023-02-22T16:17:01Z","user_id":30185046,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":756403288,"title":"Merge branch 'master' of https://github.com/tensorflow/tensorflow\nChange-Id: I5d3282113250bef588be3ae49ea3abc75aa0b5cc","body":null,"created_at":"2021-10-12T17:37:31Z","closed_at":"2021-10-12T17:39:51Z","merged_at":null,"user_id":49494444,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":756380613,"title":"[oneDNN] enable bf16 for Erf","body":null,"created_at":"2021-10-12T17:05:49Z","closed_at":"2021-10-29T17:56:44Z","merged_at":"2021-10-29T17:56:44Z","user_id":42224728,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":756368880,"title":"[oneDNN] Enable bf16 for SparseSoftmaxCrossEntropyWithLogits","body":null,"created_at":"2021-10-12T16:49:59Z","closed_at":"2021-10-14T02:06:36Z","merged_at":"2021-10-14T02:06:36Z","user_id":42224728,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":755900173,"title":"Add Support for TensorRT 8.2","body":"1. Add stub files for TensorRT 8.2\r\n2. Fix accuracy regression with MobilenetV2 i.e. set dynamic range for (-6, 6)\r\n3. Limit GPU memory utilization for TFTRT Integration tests\r\n4. Fix incorrect usage of TRT version to string API\r\n5. TensorRT model_tests update\r\n- Add separate perf tolerance for FP32, FP16, and INT8\r\n- Add separate accuracy tolerance for FP32, FP16, and INT8\r\n- Add functionality to dump histograms for better accuracy validation \r\n\r\nCC: @DEKHTIARJonathan, @tfeher , and @bixia1 ","created_at":"2021-10-12T07:36:28Z","closed_at":"2022-03-28T00:46:07Z","merged_at":null,"user_id":72053804,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":755705575,"title":"Update TF Security Readme","body":null,"created_at":"2021-10-11T23:39:45Z","closed_at":"2021-10-12T16:17:40Z","merged_at":"2021-10-12T16:17:40Z","user_id":1437573,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":755703919,"title":"Update ISSUES.md - minor format change","body":"Add Numbering to the issues list","created_at":"2021-10-11T23:34:18Z","closed_at":"2021-10-11T23:40:36Z","merged_at":null,"user_id":1437573,"sentiment":{"polarity":-0.05,"subjectivity":0.2}}
{"_id":755701404,"title":"2.7-rc1 cherry-pick request: Add shape checks to FusedBatchNorm kernels.","body":"Without this change, passing invalid shapes to various FusedBatchNorm ops can cause invalid memory reads or writes.","created_at":"2021-10-11T23:26:51Z","closed_at":"2021-10-25T20:48:16Z","merged_at":"2021-10-25T20:48:16Z","user_id":6510203,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":755668878,"title":"[INTEL oneDNN] Fix Pooling3D unit test failure","body":"This PR fixes unit test failure of a newly added test case within\r\ntensorflow/python/kernel_tests/pooling_ops_3d_test.py\r\n\r\nThis fix is similar to that of Eigen implementation (core/kernels/pooling_ops_common.h),\r\nin the same way of handling ZERO pooling size.","created_at":"2021-10-11T22:33:43Z","closed_at":"2021-10-29T16:49:04Z","merged_at":"2021-10-29T16:49:04Z","user_id":29215195,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":755660408,"title":"Use Two-level autotuner for Cudnn Frontend APIs","body":"This PR reduces the long startup time by applying a two-level autotuning when using the cudnn frontend APIs. Cudnn frontend supports two engine lists: heuristics and fallback. Heuristics engines are normally faster. In the two-level autotuner, we evaluate the fallback engines only when none of the heuristics engines work. \r\n\r\nWith the two-level autotuner, we no longer filter out those slow eng0, since they are usually in the fallback list and won't be swept over if any heuristics engines work. We keep them to maintain a better functional coverage.\r\n\r\nAlso, we upgrade the heuristics mode from the decision tree to a neural network based solution (i.e., CUDNN_HEUR_MODE_INSTANT to CUDNN_HEUR_MODE_B): https://docs.nvidia.com/deeplearning/cudnn/release-notes/rel_8.html#rel-820\r\n\r\ncc. @nluehr ","created_at":"2021-10-11T22:14:56Z","closed_at":"2021-11-24T19:23:25Z","merged_at":"2021-11-24T19:23:25Z","user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":755598093,"title":"Fixes for various tests on Ampere GPUs","body":"Fixes various tests mostly related to TF32 execution on Ampere.\r\n\r\nCC: @reedwm ","created_at":"2021-10-11T20:20:26Z","closed_at":"2021-11-16T05:09:36Z","merged_at":"2021-11-16T05:09:36Z","user_id":1873655,"sentiment":{"polarity":0.0,"subjectivity":0.5}}
{"_id":755583479,"title":"oneDNN : update python version to 3.8 in docker","body":null,"created_at":"2021-10-11T19:59:28Z","closed_at":"2021-10-19T23:50:24Z","merged_at":null,"user_id":42224728,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":755509978,"title":"r2.7 cherry-pick request: Update MklMatMulPrimitiveFactory to support Arm Compute Library backend","body":"Original PR (merged into master): https://github.com/tensorflow/tensorflow/pull/52261\r\n\r\nAdd support for caching oneDNN matmul primitives in the `mkl_aarch64` build. (Doesn't affect vanilla TF.) The changes in TF are small. Most of the changes are in the patch file for the oneDNN aarch64 repository.\r\n\r\nThis is more of a performance improvement (feature) PR rather than a performance regression fix. Creating a cherry-pick just in case it can be accepted.\r\n\r\n@cfRod Could you please help post some performance numbers here (e.g., how much improvements you saw for some models)? Thank you very much!\r\n\r\n\r\n\r\n","created_at":"2021-10-11T17:57:13Z","closed_at":"2021-10-18T19:43:04Z","merged_at":"2021-10-18T19:43:04Z","user_id":38085909,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":755508186,"title":"Fix the Person tutorial link, direct to tensorflow/tflite-micro","body":"Addresses https://github.com/tensorflow/tensorflow/issues/52321 @advaitjain PTAL, thanks!","created_at":"2021-10-11T17:53:45Z","closed_at":"2021-10-21T17:32:46Z","merged_at":"2021-10-21T17:32:46Z","user_id":19637339,"sentiment":{"polarity":0.1,"subjectivity":0.4}}
{"_id":755499255,"title":"r2.7 cherry-pick request: Fix oneDNN-related eager nightly test failures","body":"Original PR (merged into master): https://github.com/tensorflow/tensorflow/pull/52204 \r\n\r\nFix `//tensorflow/python/kernel_tests:matmul_op_test` and `run_eager_op_as_function_test`, that failed with error \"Could not find device for node:\" when oneDNN is on.\r\n\r\nThese failures are because of the recent `WrapInCallOp` changes https://github.com/tensorflow/tensorflow/commit/1224326\r\n\r\nDetailed explanation from the original PR:\r\n> For MKL : we expect WrapInCallOp to be called before we infer device, which marks the '_kernel' attribute as NameChangeOp label for nodeDef of funcDef.\r\nSince with new commit, WrapInCallOp is called AFTER the device inference, no device is found for the MKL Op as no kernel match is found without namechange label.\r\n>\r\n> In this PR: we mark nodeDef with '_kernel' attribute as NameChange label at both places : a) before inferring the device and b) inside WrapInCallOp (already present in current code base)\r\n\r\n\r\n","created_at":"2021-10-11T17:36:50Z","closed_at":"2021-10-18T19:43:22Z","merged_at":"2021-10-18T19:43:22Z","user_id":38085909,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":754756709,"title":"Remove unused `kFloatValuesPerSseVector` variable","body":"Hi! Thanks for the great library and one of the best open source projects.\r\n\r\nLooks like variable `kFloatValuesPerSseVector` is unused and my compiler (`clang-12`) reports error:\r\n```\r\n/contrib/tensorflow/tensorflow/lite/kernels/internal/optimized/sse_tensor_utils.cc:141:15: error: unused variable 'kFloatValuesPerSseVector' [-Werror,-Wunused-const-variable]\r\nconstexpr int kFloatValuesPerSseVector = 4;\r\n              ^\r\n1 error generated.\r\nmake[2]: *** [tensorflow-lite/CMakeFiles/tensorflow-lite.dir/build.make:356: tensorflow-lite/CMakeFiles/tensorflow-lite.dir/kernels/internal/optimized/sse_tensor_utils.cc.o] Error 1\r\nmake[2]: *** Waiting for unfinished jobs....\r\nmake[1]: *** [CMakeFiles/Makefile2:1948: tensorflow-lite/CMakeFiles/tensorflow-lite.dir/all] Error 2\r\nmake: *** [Makefile:156: all] Error 2\r\n\r\n```","created_at":"2021-10-10T18:24:42Z","closed_at":"2021-10-13T15:49:30Z","merged_at":"2021-10-13T15:49:30Z","user_id":3684697,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":754745338,"title":"Add support of filesystem_set_configuration to tensorflow core","body":"This is a follow up to PR in https://github.com/tensorflow/io/pull/1443 to add set_configuration support to tensorflow core repo.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2021-10-10T17:15:01Z","closed_at":"2021-10-28T19:41:23Z","merged_at":"2021-10-28T19:41:23Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":754718105,"title":"code annotation fix","body":"change input_tensor: A [1, height, width, 3] ----> input_tensor: A [height, width, 3]","created_at":"2021-10-10T14:41:28Z","closed_at":"2021-10-27T01:18:00Z","merged_at":"2021-10-27T01:18:00Z","user_id":22192610,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":754599725,"title":"Remove C++ content from tensorflow/c/c_api_macros.h","body":"This PR tries to remove C++ conent from tensorflow/c/c_api_macros.h\r\nso that it is possible to include this file from an external plugin\r\nwithout depending on tensorflow's C++ headers (tensorflow/core/platform/status.h).\r\n\r\nThe reason for this move is that for external plugins (e.g., file systems plugins)\r\nthat utilize C API, it cannot include status.h as otherwise the whole tensorflow's\r\nC++ library will be a dependency. This defeat the purpose of C APi modular plugin.\r\n\r\nThis PR place C++ content to tensorflow/core/platform/status.h instead so that\r\neverything will still be combined both for C external plugins and C++ plugins.\r\n\r\n(Note the C++ inclusion was added in PR #51647.)\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2021-10-09T23:10:46Z","closed_at":"2021-10-22T21:43:00Z","merged_at":"2021-10-22T21:43:00Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":754414140,"title":"[MLIR] Add two canonicalization patterns for mhlo::DynamicReshapeOp","body":"Add two patterns to do canonicalization for mhlo::DynamicReshapeOp, when the shape is known or partially known.","created_at":"2021-10-09T01:14:05Z","closed_at":"2022-02-10T09:49:13Z","merged_at":null,"user_id":8992445,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":754404379,"title":"Fix the segfault issue when no fallback in AutotuneEntry","body":"The new AutotuneEntry might cause a segfault issue when the no_scratch_fallback is null and its ToString() method is called.\r\n\r\n\r\n\r\ncc. @nluehr ","created_at":"2021-10-09T00:16:16Z","closed_at":"2021-10-14T00:13:59Z","merged_at":"2021-10-14T00:13:59Z","user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":754397551,"title":"Update estimator version in TF-core release branch","body":"PiperOrigin-RevId: 401872511\r\nChange-Id: I554a5f98063c85c37c9a4e444fa72724d9d3b441","created_at":"2021-10-08T23:42:53Z","closed_at":"2021-10-09T17:39:03Z","merged_at":"2021-10-09T17:39:02Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":754068070,"title":"change efficientdet-lite0 --> efficientdet_lite0","body":null,"created_at":"2021-10-08T13:59:59Z","closed_at":"2021-11-10T13:02:15Z","merged_at":"2021-11-10T13:02:15Z","user_id":22192610,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":754015538,"title":"Copy removal","body":"This copy removal pass is based on the UserangeAnalysis. First, all Operations implementing the CopyOpInterface are found, then the useranges of the source and target of the CopyOpInterface are intersected. The only Operation in the intersection must be the CopyOp or Operations that are within the nested region if the CopyOp implements a Region. If this is the case, we can remove the CopyOp.\r\n\r\nThis PR includes an addition to the UserangeAnalysis to intersect two useranges.\r\n\r\nThis is the implementation of the Implementation of a Copy Removal Pass #52029.","created_at":"2021-10-08T12:55:28Z","closed_at":"2021-10-12T11:36:15Z","merged_at":"2021-10-12T11:36:15Z","user_id":47845686,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":753804033,"title":"[TF:TRT]Support dict input for TF-TRT convert","body":"This PR is to support dict input for TF-TRT converter api: build(input_fn) and convert(cal_input_fn).","created_at":"2021-10-08T08:01:49Z","closed_at":"2021-10-28T15:39:51Z","merged_at":"2021-10-28T15:39:51Z","user_id":24780801,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":753569863,"title":"Increase the keras{-nightly} version for the 2.7 release.","body":"PiperOrigin-RevId: 401288349\r\nChange-Id: I386f02aa49813c7a69a1cce3839779e39c8c4232","created_at":"2021-10-07T22:11:56Z","closed_at":"2021-10-11T13:25:26Z","merged_at":"2021-10-11T13:25:26Z","user_id":5118881,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":753462593,"title":"[TF:TRT] Support ConcatV2 op when inputs are constants","body":"Inputs to concatV2 can be constants. Previously, we do not convert concatV2 with constant inputs. This PR extends the converter for explicit batch mode to convert concatV2 with constant inputs.\r\n\r\nModify the unit tests to test the conversion for concatV2 with constant inputs.\r\n\r\nSigned-off-by: Meenakshi Venkataraman <meenakshiv@nvidia.com>\r\n\r\nTagging @bixia1 for review\r\nCC: @tfeher @DEKHTIARJonathan","created_at":"2021-10-07T19:17:56Z","closed_at":"2021-10-13T15:12:16Z","merged_at":"2021-10-13T15:12:16Z","user_id":80416898,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":751338294,"title":"[TF:TRT] Fix native segment execution with int32 tensors","body":"If the TRTEnginOp falls back to native segment execution then we have a problem with device placement of int32 tensors:\r\n- the native segment expects these to be on the host,\r\n- the TRTEnginOp is assigned to  GPU, therefore all of its inputs / outputs are on the GPU.\r\n\r\nThe existing workaround 8b5102cf53 sets IntsOnDevice attribute for the native segment in case we had int32 inputs. It does not handle int32 outputs the same way, becaues that would break native segment execution of CombinedNMS. To fix int32 output, we had an explicit copy inserted into the native segment 6f2656ce2e.\r\n\r\nThe existing workround did not cover all the possible cases that can produce int32 output. This PR reverts the existing workaround (6f2656ce2e and 8b5102cf53) and inserts explicit copy operations before and after the native segment is called.\r\n\r\nTracker: #45481\r\n\r\nTagging @bixia1 for review.\r\n\r\n","created_at":"2021-10-06T10:11:33Z","closed_at":"2021-10-13T17:27:41Z","merged_at":"2021-10-13T17:27:41Z","user_id":3671106,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":751004265,"title":"r2.7 cherry-pick request: Fix missing-device unit test failures ","body":"Fix oneDNN-related test failures that were because of missing device settings.\r\n\r\nOriginal PR has been merged to master: https://github.com/tensorflow/tensorflow/pull/52021/","created_at":"2021-10-06T06:38:58Z","closed_at":"2021-10-18T19:44:05Z","merged_at":"2021-10-18T19:44:05Z","user_id":38085909,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":750787073,"title":"Update README.md","body":null,"created_at":"2021-10-06T03:40:32Z","closed_at":"2021-10-06T07:42:59Z","merged_at":null,"user_id":61283764,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":750431929,"title":"[TF:TRT] Add structured op converter","body":"Adds StructuredOpConverter as a Curiously recurring template pattern (CRTP) template class. This is to prepare for registering more future op converters or refactoring of existing op converters. An example for using StructuredOpConverter is provided in op_converter_registry_test.\r\n\r\nPR's #52248 and #52188 use this class for adding new QDQ op converters and refactoring the resize op converters, respectively.","created_at":"2021-10-05T22:35:40Z","closed_at":"2021-11-01T18:41:37Z","merged_at":"2021-11-01T18:41:37Z","user_id":30323187,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":750427255,"title":"Make scatter ops deterministic.","body":"The GPU deterministic implementation copies the variable to the CPU, runs the scatter op, then copies the result back to the GPU, which is what the Scatter ND ops already do.\r\n\r\nOnly the ResourceVariable scatter ops are made deterministic, not legacy ref variables.","created_at":"2021-10-05T22:31:52Z","closed_at":"2021-10-12T01:04:29Z","merged_at":"2021-10-12T01:04:29Z","user_id":6510203,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":750373600,"title":"[TF:TRT] Remove old ConvertBiasAdd specialization","body":"Removes a branch and helper function for TF-TRT's ConvertBiasAdd converter. The referenced optimization no longer applies in supported versions of TensorRT, and the code in the specialized function `ConvertBiasAddInt8WithoutCalibration` does not handle modes other than non-implicit batch mode.","created_at":"2021-10-05T21:50:33Z","closed_at":"2021-10-12T15:33:27Z","merged_at":"2021-10-12T15:33:27Z","user_id":30323187,"sentiment":{"polarity":0.1,"subjectivity":0.2}}
{"_id":750366909,"title":"[TF:TRT] Support GatherV2 op when indices is constant","body":"Convert the 'indices' input to a GatherV2 op into a constant layer when 'indices' is a constant.\r\n\r\nModify the unit tests to generate constant indices.\r\n\r\nSigned-off-by: Meenakshi Venkataraman <meenakshiv@nvidia.com>\r\n\r\nTagging @bixia1 for review\r\nCC: @tfeher @DEKHTIARJonathan","created_at":"2021-10-05T21:45:33Z","closed_at":"2021-10-11T17:01:35Z","merged_at":"2021-10-11T17:01:35Z","user_id":80416898,"sentiment":{"polarity":0.0,"subjectivity":0.3333333333333333}}
{"_id":750332761,"title":"[r2.7] Bump tensorflow-io-gcs-filesystem to 0.21.0","body":"**NOTE: This PR is a cherry-pick of #51976**\r\n\r\nThis PR bumps tensorflow-io-gcs-filesystem to 0.21.0 so that TF 2.7\r\nbranch cut can carry the latest change which includes the fix that removes the extra\r\nbuild directory in the python pip package (https://github.com/tensorflow/io/pull/1497)\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2021-10-05T21:18:17Z","closed_at":"2021-10-13T02:42:13Z","merged_at":"2021-10-13T02:42:13Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":750119084,"title":"Add single/parametrized test run doc","body":"https://github.com/keras-team/keras/issues/15338 but for Tensorflow core\r\n\r\n/cc @lamberta @MarkDaoust @mihaimaruseac ","created_at":"2021-10-05T17:55:47Z","closed_at":"2021-10-07T15:22:07Z","merged_at":"2021-10-07T15:22:07Z","user_id":1710528,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":749929949,"title":"Update MklMatMulPrimitiveFactory to support Arm Compute Library backend","body":"Related to issue #47415 and PR #47775. Adding support for caching matmul primitives.\r\nUpdates onednn_acl_primitives.patch to include matmul primitives.","created_at":"2021-10-05T14:22:36Z","closed_at":"2021-10-08T14:58:10Z","merged_at":"2021-10-08T14:58:10Z","user_id":65665931,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":749747724,"title":"[Go] Perform validation on slices when converting Go values to tensors","body":"PR adds some validation in NewTensor such that it errors prior to building a tensor in the case of dimension mismatch.  960121c has the side effect of reintroducing the segfaults addressed by #50508, but the approach taken in this latter PR is no longer viable. ","created_at":"2021-10-05T10:53:25Z","closed_at":"2021-10-08T15:23:46Z","merged_at":"2021-10-08T15:23:46Z","user_id":17497234,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":749737419,"title":"[Go] Fix flaky test of NewTensor","body":"PR fixes a flaky test of NewTensor where `tensor` is flagged by GC and its finalizer is executed before comparison to the expected/test value, resulting in occasional failures when the test is run.","created_at":"2021-10-05T10:39:22Z","closed_at":"2021-10-08T13:50:08Z","merged_at":"2021-10-08T13:50:07Z","user_id":17497234,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":749377364,"title":"Remove tf-nightly step from the Use XLA with tf.function guide (jit_compile is stable)","body":"@cheshire \r\n\r\nThis PR removes the `tf-nightly` step, since `jit_compile` has been stable since TF v2.5. The Colab has been run without `tf-nightly` (which is v2.7 now?).\r\n\r\nHope this helps 👍 ","created_at":"2021-10-04T23:13:56Z","closed_at":"2021-10-06T22:26:08Z","merged_at":"2021-10-06T22:26:08Z","user_id":19637339,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":749190677,"title":"[TF:TRT] Enable TensorRT explicit precision (QDQ/QAT) support","body":"Adds TensorRT QDQ support (\"explicit precision mode\"), also sometimes referred to as \"QAT support\", referring to the training algorithm where QDQ nodes are used. From here on, we refer to the existing non-explicit precision pathway in the code base as the \"dynamic range INT8\" mode (DR INT8) and the new mode as the QDQ INT8 mode.\r\n\r\nIn the new mode, TF `QuantizeAndDequantize` operations are converted to TensorRT quantization scaling layers. Both the new QDQ mode logic as well as existing DR mode logic (`ConvertQuantize`) are moved into the file `convert/ops/quantization_ops.cc`. \r\n\r\nIn addition, in QDQ mode it is necessary to prevent the existing Grappler optimizations invoked in `trt_convert.py` on the loaded SavedModel from folding frozen `QuantizeAndDequantizeV2` operations between weighted ops (Conv, Matmul ,etc) and the weight constants. Thus, we depend on the experimental Grappler rewriter config option `experimental_disable_folding_quantization_emulation` and will be affected if it is removed. The alternative is to allow Grappler folding of the QDQ and constant weights and inserting identity QDQ scale factors manually during TensorRT network construction, but the logic becomes extremely verbose .\r\n\r\nA test suite is added in `convert/ops/quantization_ops_test.cc`. It builds a variety of sub-graph patterns and tests for conversion success. Because TRT QDQ mode has evolved significantly in terms of robustness and features between TRT 7 and TRT8, a set of test waive/skip policies are added indicating which patterns of use are appropriate for TRT7 vs TRT8","created_at":"2021-10-04T18:22:03Z","closed_at":"2021-12-06T21:16:40Z","merged_at":"2021-12-06T21:16:40Z","user_id":30323187,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":749154920,"title":"PSv2: Disable parameter_server_strategy_v2_test on macos to unblock 2…","body":"….7 release.\r\n\r\nPiperOrigin-RevId: 400280224\r\nChange-Id: Iec94fb2cf05e8ed2fa1e2dac111470c32b75b60d","created_at":"2021-10-04T17:33:59Z","closed_at":"2021-10-04T19:36:32Z","merged_at":"2021-10-04T19:36:32Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":749108190,"title":"Update README.md :Added TensorFlow: TensorFlow 2 for Deep Learning Specialization to resources tab","body":"Added TensorFlow: TensorFlow 2 for Deep Learning Specialization  to resources tab. Extremely helpful specialization by Dr Kevin Webster for more in depth knowledge of TensorFlow.","created_at":"2021-10-04T16:29:54Z","closed_at":"2021-10-07T14:08:22Z","merged_at":"2021-10-07T14:08:22Z","user_id":58719389,"sentiment":{"polarity":0.0,"subjectivity":0.4}}
{"_id":748558703,"title":"[Go] Update genop shell script to support module-aware installation ","body":"PR updates genop/generate.sh for Go 1.17 compatibility: the use of `go get` to install executables is [deprecated in Go 1.17](https://golang.org/doc/go-get-install-deprecation).","created_at":"2021-10-04T04:29:37Z","closed_at":"2021-10-08T13:44:24Z","merged_at":"2021-10-08T13:44:24Z","user_id":17497234,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":748521013,"title":"feat(base64image): Added Base64 String Image Support for Keras load i…","body":"## Added Base64 Image String types for easier use in web based api \r\n\r\n```python\r\n  image = tf.keras.preprocessing.image.load_base64_2_image(base64_string, color_mode=\"rgb\", target_size=\"nearest\")\r\n\r\n```","created_at":"2021-10-04T03:04:30Z","closed_at":"2021-10-04T06:09:41Z","merged_at":null,"user_id":32350702,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":748386584,"title":"Add mlir-hlo unfuse-batch-norm-training pattern","body":"Add mlir-hlo unfuse-batch-norm-training pattern.\r\nQuestion when adding dynamic shape: how can I convert `index` to `tensor<f32>`? I need to convert the dynamic reduction size to a `tensor` value. @joker-eph","created_at":"2021-10-03T19:21:58Z","closed_at":"2022-04-05T19:18:36Z","merged_at":"2022-04-05T19:18:35Z","user_id":29956693,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":748321737,"title":"Revert \"Add one include file so that compile would succeed.\"","body":"Reverts tensorflow/tensorflow#31372","created_at":"2021-10-03T13:30:40Z","closed_at":"2021-10-04T19:37:30Z","merged_at":null,"user_id":77532751,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":748210836,"title":"Declare go_package in status proto","body":"PR declares `go_package` in status proto definition and resolves protoc-gen-go error (`unable to determine Go import path for \"tensorflow/core/protobuf/status.proto\"`)","created_at":"2021-10-02T23:10:29Z","closed_at":"2021-10-06T17:02:55Z","merged_at":"2021-10-06T17:02:55Z","user_id":17497234,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":748163210,"title":"Pin actions to a full length commit SHA","body":"Pinning an action to a full length commit SHA is currently the only way to use an action as\nan immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a\nbackdoor to the action's repository, as they would need to generate a SHA-1 collision for\na valid Git object payload.\n\nhttps://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-third-party-actions\n\nhttps://github.com/ossf/scorecard/blob/main/docs/checks.md#pinned-dependencies\n","created_at":"2021-10-02T17:14:51Z","closed_at":"2021-10-04T17:49:41Z","merged_at":null,"user_id":172697,"sentiment":{"polarity":0.35,"subjectivity":0.55}}
{"_id":748108668,"title":"Minor typo fixes","body":"The default post-training quantization technique is full interger quantization for the image classification task.\r\n\r\nchange full interger quantization -----> full integer quantization","created_at":"2021-10-02T11:36:16Z","closed_at":"2021-10-06T15:32:00Z","merged_at":"2021-10-06T15:32:00Z","user_id":22192610,"sentiment":{"polarity":-0.05,"subjectivity":0.2}}
{"_id":748055017,"title":"[determinism] Add tests for tf.nn.ctc_loss","body":"Adds deterministic testing for `tf.nn.ctc_loss`, forwards and backwards on CPU and GPU.\r\n\r\nThis pull request resolves issue #[38151](https://github.com/tensorflow/tensorflow/issues/38151).\r\n\r\nNote that in TensorFlow version 2.3 there was a nondeterminism issue that seems to have now been resolved, in TensorFlow version 2.6, if not earlier.\r\n\r\nThis pull request is related to [RFC: Enabling Determinism in TensorFlow](https://github.com/tensorflow/community/blob/master/rfcs/20210119-determinism.md). For status and history of GPU-determinism for this op, see [here](https://github.com/NVIDIA/framework-determinism/blob/master/tensorflow_status.md#ctc-loss).\r\n\r\nCC @reedwm, @sanjoy, @nluehr","created_at":"2021-10-02T05:19:46Z","closed_at":"2021-10-06T04:58:30Z","merged_at":"2021-10-06T04:58:30Z","user_id":33532941,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":748050485,"title":"[oneDNN] Enable fusion for Add/AddV2 which has BiasAdd semantics","body":"If an Add/AddV2 op has one input of Conv2D/DepthwiseConv2D/MatMul in NHWC format,\r\nand the other input is 1-dimension, treat this add node as BiasAdd.\r\n\r\n Co-authored-by: Guangyong Shi <guangyong.shi@intel.com>","created_at":"2021-10-02T04:45:10Z","closed_at":"2021-10-13T16:22:26Z","merged_at":null,"user_id":42156420,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":747956347,"title":"Added GPU floor mod op","body":"Fixes #52179","created_at":"2021-10-01T21:30:25Z","closed_at":"2021-10-29T07:30:06Z","merged_at":null,"user_id":60918872,"sentiment":{"polarity":0.2,"subjectivity":0.4}}
{"_id":747167389,"title":"Fix errors that occurs when the path to python.exe includes space characters","body":"Currently, when `PYTHON_BIN_PATH` includes space characters, the following command will fail (on Windows).\r\n```bat\r\nRem Assume that Python is installed to `C:\\Program Files (x86)\\Python`.\r\nbazel build -c opt --action_env PYTHON_BIN_PATH=\"C://Program Files (x86)//Python//python.exe\" //tensorflow/lite:framework\r\n```\r\n```txt\r\nERROR: An error occurred during the fetch of repository 'local_execution_config_python':\r\n   Traceback (most recent call last):\r\n        File \"C:/users/homul/sources/tensorflow/third_party/py/python_configure.bzl\", line 210, column 33, in _create_local_python_repository\r\n                python_lib = _get_python_lib(repository_ctx, python_bin)\r\n        File \"C:/users/homul/sources/tensorflow/third_party/py/python_configure.bzl\", line 130, column 21, in _get_python_lib\r\n                result = execute(repository_ctx, [python_bin, \"-c\", cmd])\r\n        File \"C:/users/homul/sources/tensorflow/third_party/remote_config/common.bzl\", line 230, column 13, in execute\r\n                fail(\r\nError in fail: Repository command failed\r\n'C:\\Program' is not recognized as an internal or external command,\r\noperable program or batch file.\r\n```\r\n\r\nThis PR makes it sure that the command path will be quoted if it includes space characters.","created_at":"2021-10-01T01:13:17Z","closed_at":"2021-10-05T18:25:55Z","merged_at":"2021-10-05T18:25:55Z","user_id":4690128,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":747138278,"title":"[oneDNN] config updates to CI scripts","body":null,"created_at":"2021-10-01T00:03:53Z","closed_at":"2021-10-06T14:42:31Z","merged_at":"2021-10-06T14:42:30Z","user_id":23745486,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":747120473,"title":"[TF:TRT] Fix profile handling for pruned inputs","body":"Before TRT 8, an input tensor can be pruned if it is not used by the network . This can happen if only the shape of the input tensor is used and the shape of the input tensor is known, that is, min equals max in the shape optimization profile (nvbugs/3153064). This PR fixes optimization profile handling if there are pruned inputs.\r\n\r\nNotes:\r\n- The number TRT network input for INetworkDefinition is always the same as the TF network inputs.\r\n- The number of input bindings for a single profile of an ICudaEngine is not larger than the network inputs.\r\n\r\nTo fix profile handling:\r\n- We add `is_input_pruned_[]` vector to TrtShapeOptimizationProfile. \r\n- We ensure that in `OptimizationProfileConfig` the `min.size()` is always determined by the number of the network inputs, and not by the number of input bindings.\r\n\r\nTracker: #45481\r\n\r\nTagging @bixia1 for review.","created_at":"2021-09-30T23:16:26Z","closed_at":"2021-11-01T21:00:41Z","merged_at":"2021-11-01T21:00:41Z","user_id":3671106,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":747075831,"title":"Remove use of `eval` when evaluating the input example.","body":"Use `ast.eval_literal` instead which safely evaluates the expression.\r\n\r\nPiperOrigin-RevId: 400012249\r\nChange-Id: I5ff98608ea2d736d093aa488af723ff4f6707e02","created_at":"2021-09-30T21:50:49Z","closed_at":"2021-10-25T20:10:10Z","merged_at":"2021-10-25T20:10:10Z","user_id":31663267,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":746941419,"title":"[TF] Creates a Github Issue on PR rollback","body":"Creates a GitHub issue when a Merged PR is rolledback.  \r\n\r\nThe rollback commit is expected to have text `[ROLLBACK_PR=<pr_number>]` in the message.  If the Commit doesn't have this specific tag, this GitHub action is skipped.","created_at":"2021-09-30T18:22:52Z","closed_at":"2021-09-30T20:17:54Z","merged_at":null,"user_id":1437573,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":746939508,"title":"[oneDNN] Fixing eager-related nightly test failures","body":"This PR fixes : //tensorflow/python/kernel_tests:matmul_op_test and run_eager_op_as_function_test,\r\nThese tests which are run with eager op as function enabled, fail with error , \"Could not find device for node:\"\r\n\r\nWith a recent commit on public tensorflow : tensorflow/tensorflow@1224326\r\nEager ops are wrapped, inside function WrapInCallOp, after the device has been inferred for op.\r\n\r\nFor MKL : we expect WrapInCallOp to be called before we infer device, which marks the '_kernel' attribute as NameChangeOp label for nodeDef of funcDef.\r\nSince with new commit, WrapInCallOp is called AFTER the device inference, no device is found for the MKL Op as no kernel match is found without namechange label.\r\n\r\nIn this PR: we mark nodeDef with '_kernel' attribute as NameChange label at both places : a) before inferring the device and b) inside WrapInCallOp (already present in current code base)","created_at":"2021-09-30T18:19:58Z","closed_at":"2021-10-11T17:01:35Z","merged_at":"2021-10-11T17:01:35Z","user_id":24963061,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":746904580,"title":"Fix MacOS TF build by reverting an LLVM commit locally.","body":"Revert https://github.com/llvm/llvm-project/commit/33e1713a00a5291e5de658d0eb0aebdbf1d3aa03 which seems to break macOS CPU TF build.\r\n\r\nPiperOrigin-RevId: 399933600\r\nChange-Id: I2b4b25ff6b558687e29778649b195594a34c0f0d","created_at":"2021-09-30T17:26:46Z","closed_at":"2021-09-30T17:27:09Z","merged_at":"2021-09-30T17:27:08Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":746892611,"title":"Fix MacOS TF build by reverting an LLVM commit locally--merge to r2.7","body":null,"created_at":"2021-09-30T17:10:46Z","closed_at":"2021-09-30T17:33:21Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":746210480,"title":"Removes dependency of resource_var.h in stateful_random_ops_cpu_gpu.h…merge to 2.7","body":"……merge to 2.7","created_at":"2021-09-29T23:33:04Z","closed_at":"2021-09-30T00:13:51Z","merged_at":"2021-09-30T00:13:51Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":746124918,"title":"Mark fail test as nopip..merging to r2.7","body":null,"created_at":"2021-09-29T20:43:22Z","closed_at":"2021-09-29T21:29:46Z","merged_at":"2021-09-29T21:29:46Z","user_id":88513897,"sentiment":{"polarity":-0.5,"subjectivity":0.29999999999999993}}
{"_id":746107086,"title":"[TF:TRT] bilinear resize refactor + workaround","body":"Refactors the `ConvertBilinear` TF-TRT converter:\r\n- Use the new `OpConverterBase` class to implement the converter.\r\n- Move the converter class to `tf2tensorrt/convert/ops/resize.cc`.\r\n\r\nAdds a workaround for conversion of 1bilinear_resize1 when `align_corners=false`:\r\n- When using TensorRT < 8, a workaround consisting of a sequence of transposed convolutions and slice operations is used.\r\n- When using TensorRT > 8, a workaround is not needed. A function is added to use the new TensorRT `SetCoordinateTransform` API for the `IResizeLayer`.\r\n- Adds additional tests on the Python side to test the workaround. Use of the workaround code path can be enforced through an environment variable `TF_TRT_FORCE_BILINEAR_RESIZE_WAR`, which allows for testing the code path with TRT8.","created_at":"2021-09-29T20:14:43Z","closed_at":"2022-04-05T18:14:23Z","merged_at":null,"user_id":30323187,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":745972437,"title":"Fix tfl-to-tosa quantization intermediate type","body":"Intermediate quantized type should be an I32 under all circumstances however\r\nthe lowering assumed the intermediate type was the same as the output type.\r\nThis recently appeared due to some changes in the linalg compilation.","created_at":"2021-09-29T17:37:29Z","closed_at":"2021-09-30T20:01:03Z","merged_at":null,"user_id":5508949,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":745899201,"title":"[TF:TRT] Create execution context with device memory if shape output is present in TRT 7","body":"Workaround for TRT 7 to handle shape outputs.\r\n\r\nPreviously, we use createExecutionContextWithoutDeviceMemory to create IExecutionContext, so that TF-TRT can manage the needed device memory to support the execution using the IExecutionContext. This triggers a bug in TRT 7. To workaround the bug, we switch to use createExecutionContext for creating IExecutionContext when the TRTEngine has int32 output.\r\n\r\nAdd two test cases.\r\n\r\nTracker #45481\r\n\r\nTagging @bixia1 for review.","created_at":"2021-09-29T16:08:48Z","closed_at":"2021-10-12T18:04:16Z","merged_at":"2021-10-12T18:04:16Z","user_id":3671106,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":745849931,"title":"Removing potentially dead-code (stream-executor ThenMatMul* calls)","body":"It looks like there are no calls to the stream executor `ThenMatMul*` APIs. Then APIs seem to have been added in the initial TF commit, and do not seem to have been touched since. This PR/commit removes them, assuming they are indeeded no longer required / dead-code.","created_at":"2021-09-29T15:13:03Z","closed_at":"2021-10-25T07:32:20Z","merged_at":null,"user_id":36858332,"sentiment":{"polarity":0.0,"subjectivity":1.0}}
{"_id":745689301,"title":"[TF:TRT] Always set binding dimension","body":"This PR fixes a bug related to shape value tensor handling and input shape specification: we need to set binding dimensions even if tensor is not an execution tensor\r\n\r\nBackground. According to nvinfer1::ITensor::isExecutionTensor API description:\r\n\r\n> A tensor with isShapeTensor() == false and isExecutionTensor() == false can still show up as an input to the engine if its dimensions are required.\r\n\r\nThis PR fixes optimization profile definition for that case, by always calling execution_context->setBindingDimension().\r\n\r\nA unit test is added to for such a case.\r\n\r\nTracker #45481\r\n\r\nTagging @bixia1 for review.","created_at":"2021-09-29T12:24:08Z","closed_at":"2021-10-04T21:29:31Z","merged_at":"2021-10-04T21:29:31Z","user_id":3671106,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":745336371,"title":"Upgrade abseil to 0.14.1","body":"Please check:\r\nhttps://github.com/keras-team/keras/issues/15338\r\nhttps://github.com/abseil/abseil-py/issues/173\r\n\r\n/cc @haifeng-jin ","created_at":"2021-09-29T03:06:55Z","closed_at":"2021-10-04T16:48:24Z","merged_at":"2021-10-04T16:48:24Z","user_id":1710528,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":745178513,"title":"Add better determinism error messages to some random ops.","body":"Better error messages were added to `tf.image.sample_distorted_bounding_box` and `tf.nn.fractional_max_pool` when determinism is enabled and no seed is passed. Such ops do not use the global seed by default, and so a seed must be passed to such ops.","created_at":"2021-09-28T21:16:16Z","closed_at":"2021-09-29T19:36:57Z","merged_at":"2021-09-29T19:36:57Z","user_id":6510203,"sentiment":{"polarity":0.0,"subjectivity":0.5}}
{"_id":744980770,"title":"Provide pbroadcast functions for Neon","body":"Fixes https://github.com/tensorflow/tensorflow/issues/52164","created_at":"2021-09-28T16:31:46Z","closed_at":"2021-10-12T16:34:47Z","merged_at":null,"user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":744901887,"title":"Document description error","body":"To convert other TensorFlow models to TensorFlow Lite, read about **the the** TensorFlow Lite Converter.\r\nThere's an extra word the","created_at":"2021-09-28T15:00:11Z","closed_at":"2021-10-05T14:28:24Z","merged_at":"2021-10-05T14:28:23Z","user_id":22192610,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":744704985,"title":"Revert \"[MHLO]: refine delete redundant specialization function\"","body":null,"created_at":"2021-09-28T11:23:08Z","closed_at":"2021-10-27T04:09:45Z","merged_at":null,"user_id":77532751,"sentiment":{"polarity":-0.2,"subjectivity":0.2}}
{"_id":744099005,"title":"[PluggableDevice] Add `TF_OpKernelConstruction_GetNodeDef`","body":"Although the API has functions like `TF_OpKernelConstruction_GetAttrInt32`, it lacks an abstract to iterate through all the attributes and get their names as well as their value. Since some device backends have relatively slow kernel creation times, being able to access the `NodeDef` allows them to uniquely identify kernels for caching purposes.","created_at":"2021-09-28T00:46:24Z","closed_at":"2022-08-08T20:54:12Z","merged_at":"2022-08-08T20:54:12Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":742691171,"title":"🔧 Loosen version constraints on `typing-extensions`","body":"These changes loosen the version constraints on `typing-extensions` to allow TensorFlow to be installed alongside packages that require `typing-extensions >= 3.10`, such as newer versions of Black and PyLint.\r\n\r\nPreviously TensorFlow required a `typing-extensions` version in the `3.7.x` series. However, the newer `3.10.x` series is fully backwards-compatible with the `3.7.x` series (and there are no `3.8.x` or `3.9.x` series). Therefore, these changes allow `typing-extensions` to be installed using either the `3.7.x` or `3.10.x` series.\r\n\r\nIn order to ensure that any future backwards-incompatible changes in the `typing-extensions` package don't cause issues, TensorFlow's dependency on `typing-extensions` does not allow versions from the `3.11.x` series or beyond (`< 3.11`).\r\n\r\nFixes #51743.\r\n\r\nI wasn't able to run the unit tests locally due to #47989, but I'm hoping that since this is such a minor change all tests will pass successfully 😅","created_at":"2021-09-25T13:59:35Z","closed_at":"2021-10-04T11:08:02Z","merged_at":null,"user_id":1848731,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":742573734,"title":"Fix tfl.shape and tfl.pseudo_const lowering for dynamic shapes","body":"Dynamic shapes cannot be converted to a constant during the lowering process.\r\nAlso, changed the rewriter to occur top down. This works better for shapes\r\ninference. Pseudo_const also requires a rewriter as they can be generated\r\nduring canonicalization.","created_at":"2021-09-25T00:41:09Z","closed_at":"2021-09-25T00:45:19Z","merged_at":null,"user_id":5508949,"sentiment":{"polarity":0.0,"subjectivity":0.16666666666666666}}
{"_id":742501898,"title":"Update version numbers for TensorFlow 2.7.0-rc0","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 7 -> 7\nPatch: 0 -> 0\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.7.0\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/lite/g3doc/guide/signatures.ipynb:206:2.7.0\ntensorflow/lite/g3doc/performance/quantization_debugger.ipynb:146:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:139:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:142:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:143:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:158:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:159:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:165:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:166:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:173:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:174:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:175:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:176:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:177:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:178:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:179:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:180:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:181:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:182:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:183:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:184:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:185:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:186:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:187:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:188:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:189:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:190:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:191:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:192:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:194:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:194:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:194:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:194:2.7.0\ntensorflow/lite/tools/versioning/runtime_version.cc:97:2.7.0\ntensorflow/lite/tools/versioning/runtime_version.cc:281:2.7.0\ntensorflow/lite/tools/versioning/runtime_version.cc:312:2.7.0\ntensorflow/lite/tools/versioning/runtime_version.cc:365:2.7.0\ntensorflow/tools/pip_package/setup.py:53:2.7.0\ntensorflow/tools/pip_package/setup.py:119:2.7.0\ntensorflow/tools/pip_package/setup.py:121:2.7.0\ntensorflow/tools/pip_package/setup.py:123:2.7.0\nBinary file tensorflow/cc/saved_model/testdata/SimpleV1Model/saved_model.pb \nmatches\ntensorflow/tensorflow.bzl:58:2.7.0\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.7.0\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/lite/g3doc/guide/signatures.ipynb:206:2.7.0\ntensorflow/lite/g3doc/performance/quantization_debugger.ipynb:146:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:139:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:142:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:143:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:158:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:159:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:165:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:166:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:173:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:174:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:175:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:176:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:177:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:178:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:179:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:180:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:181:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:182:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:183:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:184:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:185:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:186:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:187:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:188:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:189:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:190:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:191:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:192:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:194:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:194:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:194:2.7.0\ntensorflow/lite/g3doc/examples/on_device_training/overview.ipynb:194:2.7.0\ntensorflow/lite/tools/versioning/runtime_version.cc:97:2.7.0\ntensorflow/lite/tools/versioning/runtime_version.cc:281:2.7.0\ntensorflow/lite/tools/versioning/runtime_version.cc:312:2.7.0\ntensorflow/lite/tools/versioning/runtime_version.cc:365:2.7.0\ntensorflow/tools/pip_package/setup.py:53:2.7.0\ntensorflow/tools/pip_package/setup.py:119:2.7.0\ntensorflow/tools/pip_package/setup.py:121:2.7.0\ntensorflow/tools/pip_package/setup.py:123:2.7.0\nBinary file tensorflow/cc/saved_model/testdata/SimpleV1Model/saved_model.pb \nmatches\ntensorflow/tensorflow.bzl:58:2.7.0\n```","created_at":"2021-09-24T20:54:17Z","closed_at":"2021-09-25T06:40:15Z","merged_at":"2021-09-25T06:40:15Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":741937978,"title":"Update release notes for TensorFlow 2.7.0","body":"This PR is intentionally incomplete. One of the Release Owners for 2.7.0\nneeds to fill in the internal release notes for this version before the PR gets\nsubmitted. Click on the :pencil2: icon in the header for `RELEASE.md` under\n\"Files Changed\" above.","created_at":"2021-09-24T06:07:50Z","closed_at":"2021-09-28T21:45:02Z","merged_at":"2021-09-28T21:45:02Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":741897601,"title":"Update ops.py","body":"Fixed c++ session API 404 error.","created_at":"2021-09-24T04:15:53Z","closed_at":"2021-11-03T15:31:55Z","merged_at":"2021-11-03T15:31:55Z","user_id":48476109,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":741800918,"title":"Update release notes for TensorFlow 2.8.0","body":null,"created_at":"2021-09-23T23:32:16Z","closed_at":"2021-10-05T18:56:11Z","merged_at":"2021-10-05T18:56:11Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":741504101,"title":"Fix: indentation of block in the `__add__` docstring","body":"currently renders as\r\n![image](https://user-images.githubusercontent.com/5219726/134537284-e7ac0543-8f7d-40e0-bf99-8d45bf7d8498.png)\r\non this URL: https://www.tensorflow.org/api_docs/python/tf/Tensor#__add__","created_at":"2021-09-23T15:29:43Z","closed_at":"2021-09-28T15:39:48Z","merged_at":"2021-09-28T15:39:48Z","user_id":5219726,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":741398442,"title":"TF Lite kernel tests cross-compilation enablement using CMake","body":"This PR implements the enablement of the **TF Lite kernel tests CMake cross-compilation** using the natively built _flatc_ compiler (for details please see the updated build_cmake.md file).\r\n\r\nAs it currently stands in the _master_ branch, the native CMake compilation produces malformed TF Lite kernel tests. Therefore, for testing purposes, this PR also encompasses changes implemented by the currently reviewed [PR](https://github.com/tensorflow/tensorflow/pull/51406) which fixes it.","created_at":"2021-09-23T13:33:21Z","closed_at":"2021-10-09T08:21:14Z","merged_at":"2021-10-09T08:21:14Z","user_id":34263128,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":741129015,"title":"Use \"pluggable_device_host_bfc\" instead of \"cpu\" allocator when `_Send` to (`_Recv` on) host memory","body":"1. Use \"pluggable_device_host_bfc\" instead of \"cpu\" allocator when _Send to (_Recv on) host memory\r\n2. format logs in pluggable device","created_at":"2021-09-23T07:33:04Z","closed_at":"2021-09-23T07:50:31Z","merged_at":null,"user_id":6487326,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":740916375,"title":"[INTEL oneDNN] Upgrade pip version ","body":"Upgrade pip version in mkl docker file","created_at":"2021-09-22T22:42:36Z","closed_at":"2022-02-25T18:15:17Z","merged_at":null,"user_id":32109466,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":740652514,"title":"enable cholesky_op (#1449)","body":"This enables the cholesky op on ROCM","created_at":"2021-09-22T16:59:37Z","closed_at":"2021-09-28T07:05:52Z","merged_at":"2021-09-28T07:05:52Z","user_id":16394078,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":740647833,"title":"[ROCM] enable lu_op (#1433)","body":"This prs the lu_op on rocm. ","created_at":"2021-09-22T16:52:47Z","closed_at":"2022-01-22T04:21:43Z","merged_at":"2022-01-22T04:21:43Z","user_id":16394078,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":740404059,"title":"Update curl to 7.79.1","body":"This PR updates curl from 7.78 to 7.79.1.\r\n\r\nThe reason of update is to fix the following vulnerabilities in 7.78:\r\n- CVE-2021-22947: STARTTLS protocol injection via MITM\r\n- CVE-2021-22946: Protocol downgrade required TLS bypassed\r\n- CVE-2021-22945: UAF and double-free in MQTT sending\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2021-09-22T12:10:45Z","closed_at":"2021-10-06T07:05:47Z","merged_at":"2021-10-06T07:05:47Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":740334808,"title":"Update device_setter guide for v1 compatibility","body":"I came across a problem from the #48684 issue. Updating the doc to fix the example.","created_at":"2021-09-22T10:37:38Z","closed_at":"2021-09-24T16:52:22Z","merged_at":"2021-09-24T16:52:22Z","user_id":43535564,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":740243572,"title":"[MHLO]: refine delete redundant specialization function","body":"using c++ SFINAE auto select map template paramater","created_at":"2021-09-22T08:47:37Z","closed_at":"2021-09-27T17:38:57Z","merged_at":"2021-09-27T17:38:57Z","user_id":22370779,"sentiment":{"polarity":-0.2,"subjectivity":0.2}}
{"_id":739837085,"title":"fix a document typo in registration.h","body":"i found a little typo in the explanation comment of \"TF_NEW_ID_FOR_INIT\"  in registration.h.\r\nline 144:   //   #define M(a, b) TF_NEW_ID_FOR_INIT(M, a, b)\r\n          ->   //   #define M(a, b) TF_NEW_ID_FOR_INIT(M_IMPL, a, b)\r\nlower one is correct. thank you.","created_at":"2021-09-22T00:30:26Z","closed_at":"2021-11-03T15:26:13Z","merged_at":"2021-11-03T15:26:12Z","user_id":51389194,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":739580297,"title":"[XLA] Make EmitFullWarpShuffleDownLoopForReduce test the required condition.","body":"@cheshire \r\n\r\nThis check was recently removed by commit 3b9f82ecd122352c65a26b9b8943e8da73f3e77c. As it is very hard to detect an error, it is better to keep it.","created_at":"2021-09-21T20:57:41Z","closed_at":"2021-09-24T00:03:18Z","merged_at":"2021-09-24T00:03:18Z","user_id":180987,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":739522870,"title":"Removed README.md","body":"Since the URL is showing 404 error and alternative URL is not present in the repo for README file removed URL https://github.com/tensorflow/tensorflow/tree/master/tensorflow/core/profiler/README.md from the file.","created_at":"2021-09-21T20:15:51Z","closed_at":"2021-09-23T15:47:09Z","merged_at":"2021-09-23T15:47:09Z","user_id":73069040,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":739492786,"title":"Migrate fuzzing to new atheris version","body":"Signed-off-by: David Korczynski <david@adalogics.com>\r\n\r\nRecently Atheris the Python fuzzer used by tensorflow-py in the OSS-Fuzz repository had an update. This has caused the fuzzers not to build in OSS-Fuzz and consequentially the fuzzers need to be re-written in the way they handle instrumentation of code. This PR fixes this.\r\n\r\nPlease see the following PR on OSS-Fuzz where the new atheris version is outlined: https://github.com/google/oss-fuzz/pull/6060\r\n\r\nCross-referencing this PR https://github.com/google/oss-fuzz/pull/6417 on the OSS-Fuzz repo as in that PR I outline the build issue in the fuzzers. ","created_at":"2021-09-21T19:55:04Z","closed_at":"2021-09-24T06:11:50Z","merged_at":"2021-09-24T06:11:50Z","user_id":657617,"sentiment":{"polarity":0.13636363636363635,"subjectivity":0.45454545454545453}}
{"_id":738999467,"title":"Correcting Installation from Install","body":"Hey, \r\nI have seen most of the documentation over the internet use the words installation guide so I thought this change would be something useful for the newbies.\r\nLet me know if you have any queries!","created_at":"2021-09-21T14:41:48Z","closed_at":"2021-09-22T15:21:50Z","merged_at":null,"user_id":67012359,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":738918592,"title":"unnecessary casting and condition removed","body":"unnecessary casting and condition removed","created_at":"2021-09-21T13:54:26Z","closed_at":"2021-09-21T14:18:07Z","merged_at":null,"user_id":20985228,"sentiment":{"polarity":-0.4,"subjectivity":0.9}}
{"_id":738771784,"title":"Swap indices in detect_objects, reflecting reordered output tensors","body":"Fixes issue https://github.com/tensorflow/tensorflow/issues/51591","created_at":"2021-09-21T12:23:51Z","closed_at":"2022-07-18T14:08:21Z","merged_at":null,"user_id":141620,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":736870841,"title":"Added explanation to README.md and some changed some spaces which relieve developer's eyes","body":"Add explanation to the tutorial in README.md","created_at":"2021-09-18T08:55:10Z","closed_at":"2021-09-22T13:28:25Z","merged_at":null,"user_id":62587142,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":736796583,"title":"[oneDNN] V2.4_rc upgrade","body":"Upgrading oneDNN version to oneDNN v2.4_rc. \r\nLink: https://github.com/oneapi-src/oneDNN/releases/tag/v2.4-rc\r\n\r\nAttn: @penpornk  PR related to TF2.7","created_at":"2021-09-18T03:19:06Z","closed_at":"2021-09-21T19:19:02Z","merged_at":"2021-09-21T19:19:01Z","user_id":38869685,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":736750565,"title":"[TF-TRT] ConvertReduce with added INT32 support","body":"@bixia1 for Review\r\n\r\nThis PR enables ConvertReduce to work with INT32 precision,  which is enabled since TRT >= 7.\r\nVery useful for BERT, GPT-2, etc.","created_at":"2021-09-18T01:27:06Z","closed_at":"2021-09-22T16:48:28Z","merged_at":"2021-09-22T16:48:28Z","user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":736491963,"title":"Load and select optimization profiles for static TRT engine","body":"This PR implements TRT optimization profile handling in case of static engine:\r\n- Initializes the optimization profile helper class from ICudaEngine\r\n- Select the optimization profile for the input shape\r\n\r\nThis is PR is necessary to use dynamic shape mode with static engines.\r\n\r\nTracker #52012\r\n\r\nTagging @bixia1 for review.","created_at":"2021-09-17T15:45:51Z","closed_at":"2021-09-22T16:20:02Z","merged_at":"2021-09-22T16:20:02Z","user_id":3671106,"sentiment":{"polarity":0.5,"subjectivity":0.9}}
{"_id":736013522,"title":"[TF-TRT] Improve logging message for the unconverted/unsupported OPs","body":"@bixia1 for review\r\n\r\nThis PR improves the log message that reports unsupported operations. Previously, the log messages show a list of not-converted operations. For unsupported operations used multiple times in the graph, the operation appears multiple times in the list. The new log message will show a list of unique unsupported operations with the number of instance they are used in the graph in a better format.","created_at":"2021-09-17T03:10:24Z","closed_at":"2021-09-21T16:45:03Z","merged_at":"2021-09-21T16:45:03Z","user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":735731655,"title":"Fix segfault with static unpack nodes","body":"Models that have dequantize operations can occasionally cause a segfault because the tensors are skipped in the delegate creation process and the code tries to get an element from an empty array which is undefined.","created_at":"2021-09-16T18:57:27Z","closed_at":"2021-12-31T00:53:41Z","merged_at":null,"user_id":19938856,"sentiment":{"polarity":0.5,"subjectivity":0.9}}
{"_id":735583075,"title":"Fix arguments passed to get_environment when failing to locate executables","body":"PR fixes an issue where `get_python_bin` and `get_bash_bin` pass a string in place of `repository_ctx` to `get_environ` if these functions fail to locate an executable.","created_at":"2021-09-16T15:24:41Z","closed_at":"2021-09-21T13:59:51Z","merged_at":"2021-09-21T13:59:51Z","user_id":17497234,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":735548332,"title":"TF-TRT Add n_build_pass attribute","body":"To convert a model with TF-TRT dynamic shapes, one can provide profile information by inferring the segmented model a number of times. Currently the build mode uses [_profile_generation_mode](https://github.com/tensorflow/tensorflow/blob/6ce1270b038b7407bf6eefded34d543fea85a6ed/tensorflow/python/compiler/tensorrt/trt_convert.py#L1203) attribute of the graph to declare that we are in build mode. This requires two rewrites of the graph. Here is the current workflow\r\n1. Rewrite the graph to set `_profile_generation_mode=True`\r\n2. infer the model n_inputs times\r\n3. rewrite the graph to set `_profile_generation_mode=False` \r\n\r\nThis PR introduces a new attribute for TRTEngineOp: `_n_build_pass`, this is can be set by the rewriter config ([example](https://github.com/tfeher/tensorflow/blob/45680b70dc0a59cd5e7ef783b2b35a10a338d4e8/tf_trt_cpp_example/trt_convert.cc#L196)).  If we set this parameter during conversion time then we can avoid rewriting the graph to enable/disable build mode.\r\n\r\nThis PR is not essential to C++ conversion of TF-TRT, it just decreases the number of graph rewrite steps. Alternatively to this PR we could:\r\n- Mirror a the python side workflow on the C++ side: two rewrites of  `_profile_generation_mode`. No changes needed in the TRT optimization pass, but extra work in the C++ converter.\r\n- Set `_profile_generation_mode` to true already during graph conversion. We would need to read this value from the rewriter config (same way as this PR reads the `_n_build_pass`) attribute.\r\n\r\nTagging @bixia1 for discussing these points and for review.\r\n\r\nTracker: #52012","created_at":"2021-09-16T14:45:27Z","closed_at":"2021-09-25T20:02:47Z","merged_at":null,"user_id":3671106,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":735402728,"title":"Implementation of a Copy Removal Pass.","body":"This copy removal pass is based on the `UserangeAnalysis`. First, all `Operations` implementing the `CopyOpInterface` are found, then the useranges of the source and target of the `CopyOpInterface` are intersected. The only `Operation` in the intersection must be the `CopyOp` or  `Operations` that are within the nested region if the CopyOp implements a `Region`. If this is the case, we can remove the CopyOp.\r\n\r\nThis PR includes an addition to the `UserangeAnalysis` to intersect two useranges.","created_at":"2021-09-16T11:51:53Z","closed_at":"2021-09-30T10:15:18Z","merged_at":null,"user_id":10137,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":735018978,"title":"[oneDNN] Fixing couple of unit tests that were failing due to missing device setting","body":"This PR fixes 2 unit tests (node_file_writer_test & nn_fused_batchnorm_deterministic_test) which were failing because device was not set for eager op after device is identified so oneDNN optimization was not able to rewrite the ops.","created_at":"2021-09-16T00:45:50Z","closed_at":"2021-09-23T21:23:31Z","merged_at":"2021-09-23T21:23:31Z","user_id":24963061,"sentiment":{"polarity":-0.1625,"subjectivity":0.21250000000000002}}
{"_id":734973466,"title":"[INTEL MKL] Introduce env variable to simulate frozen weights and filters","body":"This PR introduces an env variable which can be used when running inference on unfrozen models to simulate frozen weights and filters. By setting the variable to one, we enable weight caching in the kernel and call the most performant oneDNN kernel  implementation with pre-packed weights.  ","created_at":"2021-09-15T22:46:07Z","closed_at":"2021-10-06T01:13:47Z","merged_at":"2021-10-06T01:13:47Z","user_id":39842562,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":734887533,"title":"Added shape inference for TFL to Tosa Lowering","body":"Some TFLite operations need the rank/shape of operands to lower to the\r\nappropriate TOSA operations. By performing shape inference during the\r\nlowering, underspecified IR can be lowered without TFLite shapes known during\r\ncompilation.\r\n\r\nNote this splits lowering from quantized type removal as the Dialect Conversion\r\nframework does not agree with multiple sources of types.","created_at":"2021-09-15T20:11:04Z","closed_at":"2021-09-24T21:14:53Z","merged_at":"2021-09-24T21:14:53Z","user_id":5508949,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":734771648,"title":"[INTEL MKL] Enabling simple heuristic based tuning for innerproduct primitive","body":"This PR enables a simple heuristic based approach to determine whether inner product primitive should run single threaded or not. If the matmul fits in L2 we have observed that single threaded operation gives better performance than multi-threaded. ","created_at":"2021-09-15T17:25:32Z","closed_at":"2021-09-22T03:58:41Z","merged_at":"2021-09-22T03:58:40Z","user_id":39842562,"sentiment":{"polarity":0.0,"subjectivity":0.35714285714285715}}
{"_id":734747618,"title":"DGN Tokens","body":null,"created_at":"2021-09-15T16:54:40Z","closed_at":"2021-10-04T19:46:00Z","merged_at":null,"user_id":87216631,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":734716436,"title":"[TFLite] Use integer-only operations for the quantized reference REDUCE_MEAN and REDUCE_SUM kernels","body":"Hello,\r\n\r\nThis PR refactors the different quantized reference reduce mean kernels into a single `QuantizedMeanOrSum` solving the following [TODO](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/lite/kernels/reduce.cc#L359) and also removes the now unused code.\r\n\r\nThe `QuantizedMeanOrSum` kernel is modified to only use integer operations (solving this [TODO](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/lite/kernels/internal/reference/reduce.h#L444)) and to avoid costly divisions by integrating the mean division into the MultiplyByQuantizedMultiplier parameters.\r\n\r\nNote that we currently keep the same int32 `temp_sum` accumulator but we could consider to raise it to int64_t (mainly for int16 but it would also be useful for large int8 tensors).\r\n\r\nThibaut","created_at":"2021-09-15T16:15:06Z","closed_at":"2023-01-24T11:05:58Z","merged_at":"2023-01-24T11:05:58Z","user_id":21028116,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":734589117,"title":"TF-TRT C++ conversion","body":"TF-TRT C++ interface to convert models. \r\n\r\nDifferences compared to the Python API:\r\n- It is assumed that the input graph is frozen. This assumption will be removed in a follow up PR.\r\n- `convert_to_static_engine` conversion param allows to convert dynamic engines to static engines.\r\n- Currently we do not provide a way to save the engine files as assets. \r\n\r\nThe steps for model conversion by `ConvertAndBuild`\r\n1. Inline functions\r\n2. Freeze the graph - omitted since we assume frozen input graph\r\n3. Run Grappler with TRTOptimizer pass\r\n4. Infer the graph to provide shape information (only in dynamic shape mode).\r\n5. Infer the graph to build the engines\r\n6. Convert the graph_def to have static engines\r\n\r\n(On the Python side, steps 4-5 are done by a separate `build` function.)\r\n\r\nRelated PRs:\r\n- #52047 \r\n- Example code for the tensorflow/tensorrt repository https://github.com/tensorflow/tensorrt/pull/271\r\n","created_at":"2021-09-15T13:50:39Z","closed_at":"2021-10-11T23:43:37Z","merged_at":"2021-10-11T23:43:37Z","user_id":3671106,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":734532601,"title":"Update MklDnnMatMulFwdPrimitiveFactory to support Arm Compute Library","body":"Related to issue #47415 and PR #47775. Adding support for caching inner product primitives.\r\nIncludes patch file for oneDNN to include inner product, eltwise primitives and updates to ACL thread binding.","created_at":"2021-09-15T12:45:28Z","closed_at":"2021-09-20T19:00:47Z","merged_at":"2021-09-20T19:00:47Z","user_id":65665931,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":734503426,"title":"Updated keras version","body":"Updating keras to stable version. Reference #51901","created_at":"2021-09-15T12:07:57Z","closed_at":"2021-09-28T21:41:29Z","merged_at":null,"user_id":87846724,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":734497723,"title":"Refactor SparseSliceGradOp to use a functor","body":"- This is in preparation for adding a GPU implementation.\r\n- No functional change.\r\n- Also adds some explicit tests.\r\n\r\ncc @nluehr ","created_at":"2021-09-15T12:00:24Z","closed_at":"2022-03-03T20:02:01Z","merged_at":"2022-03-03T20:02:01Z","user_id":3979096,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":734346868,"title":"Add GPU implementation of SparseSlice","body":"cc @nluehr ","created_at":"2021-09-15T08:40:18Z","closed_at":"2021-12-26T10:29:38Z","merged_at":"2021-12-26T10:29:38Z","user_id":3979096,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":734120302,"title":" [Intel oneDNN] update curl version to 7.78.0-cherrypick to r2.4","body":"PiperOrigin-RevId: 393777488\r\nChange-Id: Iaad20d85315b0bdd42bf7fb389df8c8f13179639","created_at":"2021-09-15T00:17:11Z","closed_at":"2021-10-18T20:05:48Z","merged_at":"2021-10-18T20:05:48Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":733347441,"title":"[ROCm] Fix ROCm logger for kernel name","body":"This PR fixes launch kernel name for logging in ROCm.","created_at":"2021-09-14T06:06:17Z","closed_at":"2021-09-20T14:56:51Z","merged_at":"2021-09-20T14:56:51Z","user_id":79117684,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":733292083,"title":"[MLIR][TF][SCF] Introduce tf.IfRegion -> scf.if lowering","body":"Lowering for `tf.IfRegion` -> `scf.if` implemented in a new pass\r\n`convert-tf-control-flow-to-scf`, which is added in\r\n`tensorflow/transforms` and can be used for all direct control flow\r\nlowerings from the TensorFlow dialect to the SCF dialect (without going\r\nthrough dialects like HLO, which involve tuples, for example). Currently\r\nthis pass has one pattern `ConvertIfRegionOp`. It lowers the\r\n`tf.IfRegion` op to `scf.if`.\r\n\r\nSigned-off-by: Srishti Srivastava <srishti.srivastava@polymagelabs.com>","created_at":"2021-09-14T03:56:17Z","closed_at":"2021-10-25T16:39:06Z","merged_at":"2021-10-25T16:39:06Z","user_id":85475642,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":733193924,"title":"[oneDNN] BatchMatMulV2+Mul+AddV2 fusion with oneDNN CPU backend","body":"This PR does a fusion of BatchMatMulV2 + Mul + AddV2 with oneDNN CPU backend using grappler remapper optimizer. Such pattern is common in Transformer based language models. It improves inference performance for higher batch sizes.","created_at":"2021-09-13T23:32:36Z","closed_at":"2021-12-16T15:59:54Z","merged_at":"2021-12-16T15:59:54Z","user_id":27521767,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":732968670,"title":"revert PR #47351 (doesn't work)","body":"PR 47351 doesn't work as expected. The `msvc_cl_debug` condition would need to be checked against the toolchain, not against the compiler switch, e.g. like this:\r\n```\r\nselects.config_setting_group(\r\n++    name = \"msvc_cl_debug\",\r\n++    match_all = [\r\n++        \"@bazel_tools//src/conditions:windows_msvc\",\r\n++        \":debug\",\r\n++    ],\r\n++    visibility = [\"//visibility:public\"],\r\n++)\r\n```\r\nBut even a fix like this would not lead to the desired outcome because `bazel` will add `/DEBUG:FULL` in `dbg` mode after `/DEBUG:FASTBUILD` and thus override it. The only way to compile with `/DEBUG:FASTBUILD` is using `--compilation_mode=fastbuild` or `--compilation_mode=dbg --features=fastbuild`. So PR 47351 is not necessary. Thus revert it.","created_at":"2021-09-13T17:50:17Z","closed_at":"2021-10-05T20:36:47Z","merged_at":"2021-10-05T20:36:47Z","user_id":44170764,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":732349869,"title":"Bump tensorflow-io-gcs-filesystem to 0.21.0","body":"This PR bumps tensorflow-io-gcs-filesystem to 0.21.0 so that TF 2.7\r\nbranch cut can carry the latest change which includes the fix that removes the extra\r\nbuild directory in the python pip package (https://github.com/tensorflow/io/pull/1497)\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2021-09-13T03:31:27Z","closed_at":"2021-10-05T18:13:27Z","merged_at":"2021-10-05T18:13:27Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":732301521,"title":"Fix crash of max_pool3d when ksize is 0 or negative","body":"This PR tries to address the issue raised in #51936 where\r\nmax_pool3d will crash when any dim of ksize is 0 or negative.\r\n\r\nWhile the original issue was raised toward tf.keras.layers.MaxPooling3D,\r\nthe issue can also be triggered when max_pool3d is called directly\r\nwith tensorflow itself.\r\n\r\nFor that reason a separate fix inside tensorflow is also fixed here.\r\n\r\nThis PR fixes #51936.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2021-09-13T01:18:12Z","closed_at":"2021-10-06T15:15:55Z","merged_at":"2021-10-06T15:15:55Z","user_id":6932348,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":732285991,"title":"Fix tf.pad crashes with large paddings","body":"This PR tries to address the issue raised in #51908 where\r\ntf.pad crashes with large paddings.\r\nIn any case, instead of a crash with undefined behavior,\r\ntensorflow should return an error gracefully.\r\n\r\nThis PR fixes the issue by adding the necessary checks.\r\n\r\nThis PR fixes #51908.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2021-09-13T00:32:01Z","closed_at":"2021-10-27T20:43:22Z","merged_at":null,"user_id":6932348,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.42857142857142855}}
{"_id":732266734,"title":"Added a check","body":"Fixes #49225 ","created_at":"2021-09-12T22:46:21Z","closed_at":"2021-09-14T14:08:39Z","merged_at":"2021-09-14T14:08:39Z","user_id":60918872,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":732193993,"title":"Fix crash with tf.image.resize--cherrypick to r2.4","body":"PiperOrigin-RevId: 391409572\r\nChange-Id: I027c4901c9717ae7ee8266e5f57baba950b3e1e3","created_at":"2021-09-12T16:58:53Z","closed_at":"2021-10-18T20:11:51Z","merged_at":"2021-10-18T20:11:51Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":732191994,"title":"Fix crash with tf.image.resize--cherrypick to r2.5","body":"PiperOrigin-RevId: 391409572\r\nChange-Id: I027c4901c9717ae7ee8266e5f57baba950b3e1e3","created_at":"2021-09-12T16:44:24Z","closed_at":"2021-10-18T20:11:56Z","merged_at":"2021-10-18T20:11:56Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":732175988,"title":"Add label broadcasting to `cross_entropy_with_logits` and `weighted_cross_entropy_with_logits`","body":"Fixes #51967.","created_at":"2021-09-12T15:02:07Z","closed_at":"2022-02-20T00:04:16Z","merged_at":null,"user_id":2437102,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":732163613,"title":"Fixes NaNs in weighted_moments with all-zeros weights.","body":"Fixes #51792","created_at":"2021-09-12T13:44:49Z","closed_at":"2021-10-06T15:09:46Z","merged_at":"2021-10-06T15:09:46Z","user_id":2437102,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":732160647,"title":"B51792","body":"Fixes #51792 ","created_at":"2021-09-12T13:26:45Z","closed_at":"2021-09-12T13:41:53Z","merged_at":null,"user_id":2437102,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":732159939,"title":"Add a initial_best parameter in ModelCheckpoint Callback","body":"Add a initial_best parameter in ModelCheckpoint that is stored as self.best. If a session is stopped and rerun or kernel dies, then the best value of metric is taken as np.inf or -np.inf and the model is saved after the first epoch without taking into consideration the initial performance of model. So modelweights are overwritten even if the previous model performance was better than the current model.\r\nUnit testing notebook can be found [here](https://colab.research.google.com/drive/1MpennD9t136peziuCjef7TwbVendMZcS?usp=sharing)\r\n\r\nCc: @gbaned can  you please take a look at this ","created_at":"2021-09-12T13:22:46Z","closed_at":"2021-09-13T03:54:45Z","merged_at":null,"user_id":56781123,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":732044860,"title":"Avoid buffer overflow when loading tensors--cherrypick to r2.4","body":"PiperOrigin-RevId: 392971286\r\nChange-Id: If2073b36d4d5eedd386329f56729395fd7effee1","created_at":"2021-09-12T00:26:06Z","closed_at":"2021-10-18T20:20:16Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":732041546,"title":"Avoid buffer overflow when loading tensors --cherrypick to r2.5","body":"PiperOrigin-RevId: 392971286\r\nChange-Id: If2073b36d4d5eedd386329f56729395fd7effee1","created_at":"2021-09-12T00:04:59Z","closed_at":"2021-10-18T20:20:22Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":732039127,"title":"Avoid buffer overflow when loading tensors--cherrypick to r2.6","body":"PiperOrigin-RevId: 392971286\r\nChange-Id: If2073b36d4d5eedd386329f56729395fd7effee1","created_at":"2021-09-11T23:36:42Z","closed_at":"2021-10-18T20:20:29Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":732021759,"title":"Fix crash with tf.range when start is large/negative--cherrypick to r2.4","body":"PiperOrigin-RevId: 393844345\r\nChange-Id: I2a72193d4416b8b009bc0b21489a42061f164203","created_at":"2021-09-11T22:59:55Z","closed_at":"2021-10-18T20:09:45Z","merged_at":"2021-10-18T20:09:45Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":732020842,"title":"Fix crash with tf.range when start is large/negative--cherrypick to r2.5","body":"PiperOrigin-RevId: 393844345\r\nChange-Id: I2a72193d4416b8b009bc0b21489a42061f164203","created_at":"2021-09-11T22:49:30Z","closed_at":"2021-10-18T20:09:49Z","merged_at":"2021-10-18T20:09:49Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":732019632,"title":"Fix crash with tf.range when start is large/negative-cherrypick to r2.6","body":"PiperOrigin-RevId: 393844345\r\nChange-Id: I2a72193d4416b8b009bc0b21489a42061f164203","created_at":"2021-09-11T22:35:59Z","closed_at":"2021-10-18T20:09:53Z","merged_at":"2021-10-18T20:09:53Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":732017859,"title":"Add BuildTensorSlice for building from unvalidated TensorSliceProtos-cherrypick to r2.4","body":"This avoids several sources of crashes and undefined behavior when loading\r\ninvalid checkpoints.\r\n\r\nPiperOrigin-RevId: 392785704\r\nChange-Id: Icd9713c768b882f3b58b427eddac376060696833","created_at":"2021-09-11T22:17:13Z","closed_at":"2021-10-18T20:21:03Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":732015274,"title":"Add BuildTensorSlice for building from unvalidated TensorSliceProtos -cherrypick to r2.5","body":"This avoids several sources of crashes and undefined behavior when loading\r\ninvalid checkpoints.\r\n\r\nPiperOrigin-RevId: 392785704\r\nChange-Id: Icd9713c768b882f3b58b427eddac376060696833","created_at":"2021-09-11T21:51:17Z","closed_at":"2021-10-18T20:21:07Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":732013084,"title":"Add BuildTensorSlice for building  cherrypickr2.6","body":"This avoids several sources of crashes and undefined behavior when loading\r\ninvalid checkpoints.\r\n\r\nPiperOrigin-RevId: 392785704\r\nChange-Id: Icd9713c768b882f3b58b427eddac376060696833","created_at":"2021-09-11T21:27:25Z","closed_at":"2021-10-18T20:21:11Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":731993821,"title":"Add a initial_best parameter in ModelCheckpoint Callback","body":"Add a initial_best parameter in ModelCheckpoint that is stored as self.best. If a session is stopped and rerun or kernel dies, then the best value of metric is taken as np.inf or -np.inf and the model is saved after the first epoch without taking into consideration the initial performance of model. So modelweights are overwritten even if the previous model performance was better than the current model.\r\n\r\nUnit testing notebook can be found [here](https://colab.research.google.com/drive/1MpennD9t136peziuCjef7TwbVendMZcS?usp=sharing) . \r\n\r\nCc: @qlzh727 can you give it a look please?","created_at":"2021-09-11T20:09:56Z","closed_at":"2021-09-12T12:43:23Z","merged_at":null,"user_id":56781123,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":731935888,"title":"include abseil/base/attributes.h instead of macos.h","body":"ABSL_DEPRECATED is defined in atributes.h","created_at":"2021-09-11T13:50:25Z","closed_at":"2021-09-14T17:50:07Z","merged_at":"2021-09-14T17:50:07Z","user_id":10111,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":731878528,"title":"[tf.data] move `StructuredFunctionWrapper` into a separate module","body":"This PR refactors `dataset_ops.py` by moving the `StructuredFunctionWrapper` class into a `common` module. This enables further refactoring of function-specific `Dataset`s.\r\n\r\n**side note for future PR's:** after further examination of the function-specific `Dataset` classes (for ex: `MapDataset`), I see that they inherit from `UnaryDataset` which itself inherits from `DatasetV2`. And since the `DatasetV2` class itself needs `MapDataset` for the `def map()` functionality, this poses a circular dependency challenge even if we split the classes into different files. Thus, lazy loading would be imminent and the files might get a bit messy.\r\n\r\ncc: @aaudiber What do you think?","created_at":"2021-09-11T05:46:51Z","closed_at":"2021-10-04T19:21:53Z","merged_at":"2021-10-04T19:21:53Z","user_id":25393945,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":731874624,"title":"cherrypickr2.4","body":"PiperOrigin-RevId: 392769882\r\nChange-Id: Id1f7ae7fcf8142193556af47abfda81b13d3cce4","created_at":"2021-09-11T05:09:15Z","closed_at":"2021-10-18T20:21:27Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":731873318,"title":"cherrypick2.5","body":"PiperOrigin-RevId: 391529518\r\nChange-Id: Ie3db4ae6d3c0f3dc88404e1dbdc22f7d03cbeb3b","created_at":"2021-09-11T04:56:52Z","closed_at":"2021-10-18T20:15:52Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":731864031,"title":"cherrypick for 2.5","body":"PiperOrigin-RevId: 392769882\r\nChange-Id: Id1f7ae7fcf8142193556af47abfda81b13d3cce4","created_at":"2021-09-11T03:47:53Z","closed_at":"2021-10-18T20:21:31Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":731854937,"title":"cherrypick to r2.6","body":"PiperOrigin-RevId: 392769882\r\nChange-Id: Id1f7ae7fcf8142193556af47abfda81b13d3cce4","created_at":"2021-09-11T02:38:58Z","closed_at":"2021-10-18T20:21:35Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":731851969,"title":"cherrypick to r2.5","body":null,"created_at":"2021-09-11T02:13:55Z","closed_at":"2021-09-11T03:22:08Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":731845945,"title":"cherry pick to r2.4","body":"PiperOrigin-RevId: 391529518\r\nChange-Id: Ie3db4ae6d3c0f3dc88404e1dbdc22f7d03cbeb3b","created_at":"2021-09-11T01:25:36Z","closed_at":"2021-10-18T20:15:47Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":731840218,"title":"cherrypick to r2.5","body":null,"created_at":"2021-09-11T00:49:37Z","closed_at":"2021-09-11T00:58:49Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":731816104,"title":"R2.4","body":null,"created_at":"2021-09-10T23:19:39Z","closed_at":"2021-09-10T23:19:51Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":731792197,"title":"cherry pick to 2.4","body":null,"created_at":"2021-09-10T22:19:50Z","closed_at":"2021-09-10T22:56:24Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":731160741,"title":"Remove nanopb's remaining files","body":"This PR removes nanopb's remaining files and references as nanopb\r\nhas been removed from tensorflow in 43adb4ee3b96e250e05533bc2470813c2f70272c\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2021-09-10T04:56:49Z","closed_at":"2021-09-13T20:22:32Z","merged_at":"2021-09-13T20:22:31Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":731152261,"title":"Update grpc to v1.40.0","body":"This PR updates grpc to v1.40.0\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2021-09-10T04:29:59Z","closed_at":"2021-09-11T05:16:51Z","merged_at":"2021-09-11T05:16:51Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":731131429,"title":"[determinism] Add d9m-unimplemented exception for tf.nn.depthwise_conv2d","body":"This current PR adds and tests determinism-unimplemented exception-throwing for `tf.nn.depthwise_conv2d` when determinism is expected but not available. It also tests that the op functions deterministically when determinism is expected and is available (forward/backward CPU and forward/backward GPU using cuDNN).\r\n\r\nThis PR is related to [RFC: Enabling Determinism in TensorFlow](https://github.com/tensorflow/community/blob/master/rfcs/20210119-determinism.md). For status and history of GPU-determinism for this op, see [here](https://github.com/NVIDIA/framework-determinism/blob/master/tensorflow_status.md#depthwise-convolution).\r\n\r\nI believe that when this op uses cuDNN convolution functionality, it benefits from all the determinism solutions associated with that, including deterministic algorithm selection (assuming that still works).\r\n\r\nCC @reedwm, @sanjoy, @nluehr","created_at":"2021-09-10T03:29:25Z","closed_at":"2021-09-15T18:59:08Z","merged_at":"2021-09-15T18:59:08Z","user_id":33532941,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":731103878,"title":"[ROCm]  Update to use ROCm 4.3.1 (when building TF with --config=rocm)","body":"/cc @cheshire @chsigg ","created_at":"2021-09-10T02:09:56Z","closed_at":"2021-09-15T09:40:12Z","merged_at":"2021-09-15T09:40:12Z","user_id":36858332,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":730958637,"title":"Prevent crashes when loading tensor slices with unsupported types.","body":"Also fix the `Tensor(const TensorShape&)` constructor swapping the LOG(FATAL)\r\nmessages for the unset and unsupported types.\r\n\r\nPiperOrigin-RevId: 392695027\r\nChange-Id: I4beda7db950db951d273e3259a7c8534ece49354\r\n(cherry picked from commit abcced051cb1bd8fb05046ac3b6023a7ebcc4578)","created_at":"2021-09-09T21:40:33Z","closed_at":"2021-10-18T20:18:14Z","merged_at":"2021-10-18T20:18:14Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":730956242,"title":"Prevent crashes when loading tensor slices with unsupported types.","body":"Also fix the `Tensor(const TensorShape&)` constructor swapping the LOG(FATAL)\r\nmessages for the unset and unsupported types.\r\n\r\nPiperOrigin-RevId: 392695027\r\nChange-Id: I4beda7db950db951d273e3259a7c8534ece49354\r\n(cherry picked from commit abcced051cb1bd8fb05046ac3b6023a7ebcc4578)","created_at":"2021-09-09T21:35:53Z","closed_at":"2021-10-18T20:18:10Z","merged_at":"2021-10-18T20:18:10Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":730944636,"title":"Prevent crashes when loading tensor slices with unsupported types.","body":"Also fix the `Tensor(const TensorShape&)` constructor swapping the LOG(FATAL)\r\nmessages for the unset and unsupported types.\r\n\r\nPiperOrigin-RevId: 392695027\r\nChange-Id: I4beda7db950db951d273e3259a7c8534ece49354","created_at":"2021-09-09T21:19:05Z","closed_at":"2021-10-18T20:18:06Z","merged_at":"2021-10-18T20:18:06Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":730937218,"title":"Update Dockerfiles to Ubuntu 20.04","body":"This seemed to mostly work locally, so I'm making this change to see if\nour automation will pick it up and succeed. This also updates the\ncontainer Python version to one newer than 3.6 and the CUDA version to\n11.2.\n\nOne notable new requirement is that users must run ldconfig after the\nimage starts to pick up libraries that are mounted by nvidia-docker. If\nthe automation is successful, then I'll look into updating the Docker\nHub page.\n\nWorking with this system is getting to be quite the hassle, so I'm glad\nto be able to drop it in the future.","created_at":"2021-09-09T21:06:57Z","closed_at":"2021-09-14T21:28:52Z","merged_at":"2021-09-14T21:28:52Z","user_id":32465472,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":730844272,"title":"[XLA:GPU] Use arg_num instead of kernel parameter to check resource_updates","body":"Separate some codes into this PR for cleanness from [a previous PR](https://github.com/tensorflow/tensorflow/pull/51353). \r\n\r\nIt turns out this is a bug that can cause buffer_donation (in resource var update) to not work as expected in manual clustering (in addition to auto-clustering). The added test `testUpdateVariableWithCompileTimeConstMemoryUsage` fails without the fix to use `arg_num` (instead of kernel parameters) to check whether a parameter is a resource update or not.\r\n","created_at":"2021-09-09T18:45:52Z","closed_at":"2021-09-14T13:46:33Z","merged_at":"2021-09-14T13:46:33Z","user_id":12016207,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":730840718,"title":"Add support for lowering variadic mhlo.reduce op to lmhlo to LinAlg.","body":"Support reduceOp multiple inputs in the following process\r\nmhlo.reduceOp lower to lhlo.reduce\r\nlhlo.reduce lower to linalg dialect multiple_operand","created_at":"2021-09-09T18:40:24Z","closed_at":"2021-09-23T03:06:22Z","merged_at":"2021-09-23T03:06:22Z","user_id":22370779,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":730758470,"title":"fix Windows MSVC debug build","body":"previous fix in #42676 using partial dummy template specializations (which are not needed but without optimization the compiler doesn't find out about it) stopped working, thus fix using `constexpr`, which is a better fix anyway","created_at":"2021-09-09T16:41:49Z","closed_at":"2021-09-20T15:04:25Z","merged_at":"2021-09-20T15:04:24Z","user_id":44170764,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":730741695,"title":"[oneDNN] Keras LayerNormalization fusion with oneDNN CPU backend","body":"Keras LayerNormalization API creates a set op smaller ops that can be realized by a single operation with oneDNN library on CPU. This PR fuses smaller ops into a single op using grappler remapper optimizer. Current fusion is restricted to the scenario when LayerNormalization uses FusedBatchNorm and the input tensor is 2D/3D.\r\n\r\nThis fusion improves performance for inference with Transformer based language models.","created_at":"2021-09-09T16:17:35Z","closed_at":"2021-12-17T14:30:03Z","merged_at":null,"user_id":27521767,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":730172347,"title":"merge 2.6","body":"PiperOrigin-RevId: 391529518\r\nChange-Id: Ie3db4ae6d3c0f3dc88404e1dbdc22f7d03cbeb3b","created_at":"2021-09-09T04:51:20Z","closed_at":"2021-10-18T20:16:03Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":730153031,"title":"merging to 2.5","body":null,"created_at":"2021-09-09T04:00:57Z","closed_at":"2021-09-09T05:08:41Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":730116112,"title":"Fix crash with tf.image.resize if size is large","body":"This PR tries to address the issue raised in 46914 where\r\ntf.image.resize will crash if size is large, (implicitly\r\ncauses tf.keras.layers.UpSampling2D to crash).\r\n\r\nThis PR adds necessary shape overflow check to prevent\r\ncrash.\r\n\r\nThis PR fixes 46914.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n(cherry picked from commit 660ad5e76d8df64d855f77b5e2e39d8ddb40cab5)\r\nPiperOrigin-RevId: 391409572\r\nChange-Id: I027c4901c9717ae7ee8266e5f57baba950b3e1e3","created_at":"2021-09-09T02:17:57Z","closed_at":"2021-10-18T20:11:59Z","merged_at":"2021-10-18T20:11:59Z","user_id":88513897,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.42857142857142855}}
{"_id":730044703,"title":"merging updated curl file","body":null,"created_at":"2021-09-08T23:14:39Z","closed_at":"2021-09-09T04:15:20Z","merged_at":null,"user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":729964191,"title":"change curl version to 7.78.0","body":"PiperOrigin-RevId: 393777488\r\nChange-Id: Iaad20d85315b0bdd42bf7fb389df8c8f13179639","created_at":"2021-09-08T20:38:05Z","closed_at":"2021-10-18T20:01:13Z","merged_at":"2021-10-18T20:01:13Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":729961441,"title":"change curl version to 7.78.0","body":"PiperOrigin-RevId: 393777488\r\nChange-Id: Iaad20d85315b0bdd42bf7fb389df8c8f13179639","created_at":"2021-09-08T20:33:28Z","closed_at":"2021-10-18T20:01:19Z","merged_at":"2021-10-18T20:01:19Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":729843272,"title":"Fix EinsumHelper::ParseEquation to avoid uninitialized accesses.","body":"EinsumHelper::ParseEquation is supposed to return true or false in\r\ninput_has_ellipsis and output_has_ellipsis to indicate whether there is\r\nellipsis in the inputs and output. Previously, when there is no ellipsis in the\r\ninputs or output, the routine doesn't assign false to the variables. This\r\nchange initializes the two variables with false to fix the problem.\r\nPiperOrigin-RevId: 391772004\r\nChange-Id: I17b6c88aadef4131470378e48cced054bf252e86","created_at":"2021-09-08T17:29:50Z","closed_at":"2021-10-18T20:22:26Z","merged_at":"2021-10-18T20:22:26Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":729840948,"title":"Fix EinsumHelper::ParseEquation to avoid uninitialized accesses.","body":"EinsumHelper::ParseEquation is supposed to return true or false in\r\ninput_has_ellipsis and output_has_ellipsis to indicate whether there is\r\nellipsis in the inputs and output. Previously, when there is no ellipsis in the\r\ninputs or output, the routine doesn't assign false to the variables. This\r\nchange initializes the two variables with false to fix the problem.\r\nPiperOrigin-RevId: 391772004\r\nChange-Id: I17b6c88aadef4131470378e48cced054bf252e86","created_at":"2021-09-08T17:26:22Z","closed_at":"2021-10-18T20:22:24Z","merged_at":"2021-10-18T20:22:24Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":729834492,"title":"Fix EinsumHelper::ParseEquation to avoid uninitialized accesses.","body":"EinsumHelper::ParseEquation is supposed to return true or false in\r\ninput_has_ellipsis and output_has_ellipsis to indicate whether there is\r\nellipsis in the inputs and output. Previously, when there is no ellipsis in the\r\ninputs or output, the routine doesn't assign false to the variables. This\r\nchange initializes the two variables with false to fix the problem.\r\nPiperOrigin-RevId: 391772004\r\nChange-Id: I17b6c88aadef4131470378e48cced054bf252e86","created_at":"2021-09-08T17:16:24Z","closed_at":"2021-10-18T20:22:22Z","merged_at":"2021-10-18T20:22:22Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":729736895,"title":"Add TFL_CAPI_EXPORT to TfLiteXNNPACK*() functions","body":"Without the `TFL_CAPI_EXPORT` annotations the functions don't get exported into the resulting `tensorflowlite_c.dll`.\r\n\r\nThis allows calling them on Windows using the C API, so you can explicitly create a XNNPACK delegate and apply it to an interpreter. I know using pure C API is discouraged, but we need to use it.\r\n\r\n`gl_delegate.h` already does this.\r\n\r\nCloses #47007.","created_at":"2021-09-08T15:07:16Z","closed_at":"2021-09-16T05:28:10Z","merged_at":"2021-09-16T05:28:10Z","user_id":2241548,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":729306554,"title":"Don't constant-fold DT_RESOURCE constants.","body":"PiperOrigin-RevId: 391803952\r\nChange-Id: I0ea3ec31d3e7dfda0f03b4027a237f08d00a3091","created_at":"2021-09-08T05:55:31Z","closed_at":"2021-10-18T20:24:43Z","merged_at":"2021-10-18T20:24:43Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":729302383,"title":"[TF:TRT] Add static registration system for TF->TRT operation converters","body":"This PR is the first stage of refactoring the TF-TRT op converters. It adds a static registration system for the conversion functions which map from Tensorflow operations to TensorRT. The end result is that converters can be defined outside of `convert_nodes.cc` and users can link in their own converter functions, overriding existing functions.\r\nThe following changes are made:\r\n1. TRT Weights-related classes defined in convert_nodes.h are moved into `convert/weights.[h|cc]`. This is required to capture correct class and include dependencies.\r\n2. Static OpConverter registration system is introduced.\r\n3. Changes in `convert_nodes.cc` and `convert_nodes_test.cc` are made in order to use the new registration system.\r\n\r\nMore easily reviewed by commit. The \"TRT Weights classes to seperate files\" commit is purely moving classes around. The main changes are in the final commit, which accomplishes points #2 and #3.","created_at":"2021-09-08T05:45:14Z","closed_at":"2021-10-04T17:59:33Z","merged_at":"2021-10-04T17:59:33Z","user_id":30323187,"sentiment":{"polarity":0.5,"subjectivity":0.9}}
{"_id":729290860,"title":"[tf.data] extend multi-threaded MapDataset based tests to eager mode","body":"This PR attempts to extend the multi-threaded map dataset tests to eager mode.\r\n\r\nThe `cached_session` context is left untouched as it yields a dummy eager session that simulates execution in eager mode.\r\nTEST LOG\r\n```\r\nINFO: Build completed successfully, 20 total actions\r\n//tensorflow/python/data/kernel_tests:map_test                           PASSED in 33.1s\r\n  Stats over 19 runs: max = 33.1s, min = 15.3s, avg = 20.5s, dev = 4.2s\r\n\r\nINFO: Build completed successfully, 20 total actions\r\n```\r\n\r\ncc: @aaudiber I tried removing the session context and executing these tests with eager only combinations and it worked fine. However, the tests fail when the `cached_session` is not used during thread `start` and `join` steps in graph mode. Thus, I kept the `cached_session` intact and let it handle the eager and graph scenarios. Let me know what you think of this approach.","created_at":"2021-09-08T05:15:06Z","closed_at":"2022-02-09T18:18:19Z","merged_at":null,"user_id":25393945,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":729081274,"title":"Don't constant-fold DT_RESOURCE constants.","body":"PiperOrigin-RevId: 391803952\r\nChange-Id: I0ea3ec31d3e7dfda0f03b4027a237f08d00a3091","created_at":"2021-09-08T00:54:32Z","closed_at":"2021-10-18T20:24:44Z","merged_at":"2021-10-18T20:24:44Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":729041114,"title":"[INTEL MKL] Not rewrite conv_grad ops to MKL with explicit padding","body":"This change is for fixing a unit test tensorflow/python/kernel_tests/depthwise_conv_op_test.py. \r\nThe test specifically tests backward ops with explicit padding and oneDNN kernels yet do not support such a case. So we are disabling re-write for such cases.","created_at":"2021-09-07T23:56:25Z","closed_at":"2021-09-22T02:57:59Z","merged_at":"2021-09-22T02:57:59Z","user_id":39842562,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":728968026,"title":"[oneDNN] Fixing tensorflow/python/framework/node_file_writer_test","body":"This PR fixes failure in the test //tensorflow/python/framework/node_file_writer_test when oneDNN is enabled.\r\nThis test tries to write all executed nodes in eager mode to a file with skipping duplicates under certain conditions.\r\nSince we rewrite some ops in eager mode, expected op name can be different. Also number of written nodes can be different since we only rewrite ops that have supported datatypes and are assigned to CPU device.","created_at":"2021-09-07T21:31:25Z","closed_at":"2021-09-09T12:54:21Z","merged_at":"2021-09-09T12:54:21Z","user_id":24963061,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":728889754,"title":"[XLA, GPU] Make kExp not expensive","body":"This trigger better fusion for EfficientNet and allow to increase the mini-batch size used.\r\nThis remove one temporary from the forward to the backward.\r\n\r\nAt the bottom, there is a python script with a snippet of EfficientNet that show the difference in behavior before and after this PR.\r\nUsing replay_computation on the hlo from this script on a V100, I have before this PR:\r\n```\r\n2021-09-07 18:59:47.897674: I tensorflow/compiler/xla/tools/replay_computation.cc:336] Done executing in 0.005307s: a_inference_train_315__XlaMustCompile_true_config_proto___n_007_n_0...02_001_000__executor_type____.188\r\n```\r\nand after this PR\r\n```\r\n2021-09-07 18:59:24.847251: I tensorflow/compiler/xla/tools/replay_computation.cc:336] Done executing in 0.004999s: a_inference_train_315__XlaMustCompile_true_config_proto___n_007_n_0...02_001_000__executor_type____.188\r\n```\r\nSo this also give a speed up on V100. \r\n\r\n```\r\n#!/usr/bin/env python\r\n\r\n# Usage: XLA_FLAGS=\"--xla_dump_to=xla-swish --xla_dump_hlo_as_text --xla_dump_hlo_as_dot --xla_dump_hlo_as_html\" python swish.v3.py\r\n\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\ntf.keras.backend.clear_session()\r\ntf.config.optimizer.set_jit(True)\r\ntf.keras.backend.set_image_data_format('channels_last')\r\npolicy = tf.keras.mixed_precision.experimental.Policy('mixed_float16', loss_scale='dynamic')\r\ntf.keras.mixed_precision.experimental.set_policy(policy)\r\n\r\n# Can't use model = tf.keras.models.Sequential([]) due to BN training\r\nclass Foo(tf.keras.Model):\r\n    def __init__(self):\r\n        super(Foo, self).__init__()\r\n        self.conv1 = tf.keras.layers.DepthwiseConv2D(kernel_size=3, padding='same', data_format='channels_last', use_bias=False)\r\n        self.bn1 = tf.keras.layers.BatchNormalization(axis=-1)\r\n        self.act1 = tf.keras.layers.Activation('swish')\r\n        self.conv2 = tf.keras.layers.DepthwiseConv2D(kernel_size=3, padding='same', data_format='channels_last', use_bias=False)\r\n        self.fc = tf.keras.layers.Dense(10, use_bias=False)\r\n\r\n    def call(self, x):\r\n        x = self.act1(self.bn1(self.conv1(x), training=True))\r\n        return self.fc(self.conv2(x))\r\n\r\nmodel = Foo()\r\n\r\ninp = tf.Variable(np.random.normal(size=(512, 14, 14, 672)), dtype=tf.float16)\r\noup = tf.random.uniform((512, 14, 14, 10), dtype=tf.float16)\r\n\r\n@tf.function(experimental_compile=True)\r\ndef train(inp, oup):\r\n    with tf.GradientTape() as tape:\r\n        preds = model(inp)\r\n        loss = tf.keras.losses.mse(preds, oup)\r\n        grads = tape.gradient(loss, model.trainable_variables)\r\n    return loss, grads\r\n\r\nprint(\"Before train\")\r\ntrain(inp, oup)\r\nprint(\"Script end\")\r\n```\r\n\r\n@sanjoy @cheshire ","created_at":"2021-09-07T19:25:28Z","closed_at":"2021-09-10T21:45:00Z","merged_at":"2021-09-10T21:45:00Z","user_id":180987,"sentiment":{"polarity":0.25,"subjectivity":0.7}}
{"_id":728876811,"title":"Replace distutils.sysconfig.get_python_lib() with sysconfig.get_path('purelib') - python 3.10 support","body":"This is part of the effort for #51776 to get python 3.10 support.\r\nThis PR replace distutils.sysconfig.get_python_lib() with sysconfig.get_path('purelib')\r\nas distutils has been deprecated by python 3.10.\r\n\r\nNote sysconfig has been available since python 3.2.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2021-09-07T19:04:04Z","closed_at":"2022-01-31T00:46:59Z","merged_at":null,"user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":728695474,"title":"Fixed a small typo","body":null,"created_at":"2021-09-07T14:29:07Z","closed_at":"2021-09-07T16:10:48Z","merged_at":null,"user_id":51069520,"sentiment":{"polarity":-0.075,"subjectivity":0.30000000000000004}}
{"_id":728353506,"title":"Replacement for #51392","body":"This is a resubmission of https://github.com/tensorflow/tensorflow/pull/51392 but with the new kernels disabled by default as suggested in https://github.com/tensorflow/tensorflow/pull/51392#issuecomment-912882899 (new changes are all in the second commit).\r\nIt also attempts to fix the determinism test failure on Windows.\r\n\r\ncc @nluehr @reedwm ","created_at":"2021-09-07T06:40:26Z","closed_at":"2021-09-07T18:42:05Z","merged_at":"2021-09-07T18:42:05Z","user_id":3979096,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":728052810,"title":"Add CITATION.cff for GitHub software citation support","body":"Hi,\r\n\r\nGitHub recently has added support for citing software (See official post and documentation [here](https://github.blog/2021-08-19-enhanced-support-citations-github/) and [here](https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/creating-a-repository-on-github/about-citation-files)). For repositories that have a CITATION.cff file in their main branch, GitHub will automatically parse a citation for users.\r\n\r\nI happen to notice that the project website has a page clarifying how to cite TensorFlow. A BibTex is also carefully provided. What I did is simply to turn that BibTex into a valid CITATION.cff.\r\n\r\nIf interested you could also specify version releases in the CITATION.cff. For more information about it, see [here](https://citation-file-format.github.io/) and [here](https://github.com/citation-file-format/citation-file-format).\r\n\r\nThanks for attending to my PR.","created_at":"2021-09-06T15:33:31Z","closed_at":"2021-09-08T01:26:07Z","merged_at":"2021-09-08T01:26:07Z","user_id":35734860,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":728010564,"title":"Bugfix/label image fixes","body":"This PR fixes following issues with label_image TFLite example: \r\n\r\n1. Behavior of _loop count_ (-c) and _warm_up count_ (-w) command line switch:\r\nWithout this patch the warmup_count depends on loop_counts. If the loop_count is less than 2, no warmup loop is performed. E.g. this call will make no warm up loops, however explicitly requested:\r\n`$ ./label_image -c1 -w2`\r\nThis call will make 2 Interptetter::Invoke() loops and 2 warm up calls:\r\n`$ ./label_image -c2 -w2`\r\nWith this patch, both commands will do 1 resp. 2 Intepretter::Invoke loops and 2 warm up loops, as intuitively expected. \r\n\r\n2. Help message printing for label_image:\r\nThere are two paths from where the help message is printed, with different content:\r\n`$ ./label_image -h` will print the help message defined in display_usage(). Moreover it does not even recognize the -h option and getopt print Unrecognized switch error (-h is missing in getopt optstring).\r\n`$ ./label_image --help` prints the help message provided by delegate registrar. \r\nSwitches in both help messages are valid, so none of the help messages provides a complete usage information. \r\nThis patch fix the issue and unites the messages. ","created_at":"2021-09-06T14:30:38Z","closed_at":"2021-11-25T04:04:30Z","merged_at":"2021-11-25T04:04:30Z","user_id":56120470,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":727842033,"title":"UserangeAnalysis clean up and fixes.","body":"Improvements to the Userange Analysis:\r\n- Removed unnecessary copies of data structures.\r\n- Comment clean up.\r\n- Added a `UseInterval` struct.\r\n- Added UsePositions, that stores an Id for each use of a `Value`.\r\n- Added new helper Methods for upcoming passes.\r\n- Minor bug fixes.","created_at":"2021-09-06T10:40:54Z","closed_at":"2021-09-08T15:26:54Z","merged_at":"2021-09-08T15:26:54Z","user_id":10137,"sentiment":{"polarity":0.3666666666666667,"subjectivity":0.7000000000000001}}
{"_id":727820052,"title":"[TFLite] Force the MLIR quantizer to assign the same scale for the quantized operand and result of the FILL op","body":"Hi,\r\n\r\nThis PR forces the MLIR quantizer to assign the same scale for the quantized operand and result of the FILL operator in a way [similar](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/lite/tools/optimize/operator_property.cc#L200) to the old TOCO quantizer as it's [required](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/lite/kernels/fill.cc#L95) by the operator.\r\n\r\nThibaut","created_at":"2021-09-06T10:10:39Z","closed_at":"2021-09-06T11:55:58Z","merged_at":"2021-09-06T11:55:58Z","user_id":21028116,"sentiment":{"polarity":0.0,"subjectivity":0.125}}
{"_id":727630836,"title":"backport pr 45534 to TF 2.4","body":"backport #45534 to TF 2.4, which will solve the issue for CRF function in TensorFlow addons tensorflow/addons#2250 .\r\n\r\nThe credits belongs to @WindQAQ ","created_at":"2021-09-06T05:37:43Z","closed_at":"2021-10-28T22:30:31Z","merged_at":"2021-10-28T22:30:31Z","user_id":1263428,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":727554569,"title":"Add mlir-hlo unfuse-batch-norm-training pattern","body":"Add mlir-hlo unfuse-batch-norm-training pattern.  \r\nShould I add dynamic shape support?","created_at":"2021-09-06T03:15:40Z","closed_at":"2021-09-14T02:48:15Z","merged_at":null,"user_id":29956693,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":727354449,"title":"Added a hyperparameter beta in swish activation function.","body":"As described in (https://arxiv.org/abs/1710.05941) swish consists of a beta hyperparamter that is inputted in the sigmoid activation function. Implemented to paramter beta with default value of 1.0 in order to replicate the same behavior as current if no value is provided.","created_at":"2021-09-05T07:45:10Z","closed_at":"2021-10-29T20:33:25Z","merged_at":"2021-10-29T20:33:25Z","user_id":21031150,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":727028079,"title":"Add snappy compression support on Python API","body":"Currently the the TFRecord Python API lacks support for snappy compression option, which is desirable for developers who prefer to use snappy for their training data.","created_at":"2021-09-03T19:03:54Z","closed_at":"2021-09-03T19:18:25Z","merged_at":null,"user_id":8276465,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":727027762,"title":"Add support for fp16 GEMM BEF thunks","body":"The corresponding TFRT PR is https://github.com/tensorflow/runtime/pull/79\r\n","created_at":"2021-09-03T19:03:20Z","closed_at":"2021-09-10T00:34:51Z","merged_at":"2021-09-10T00:34:51Z","user_id":13824553,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":727013004,"title":"Don't constant-fold DT_RESOURCE constants.","body":"PiperOrigin-RevId: 391803952\r\nChange-Id: I0ea3ec31d3e7dfda0f03b4027a237f08d00a3091","created_at":"2021-09-03T18:31:19Z","closed_at":"2021-10-18T20:24:46Z","merged_at":"2021-10-18T20:24:46Z","user_id":88513897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":726794289,"title":"[PluggableDevice] TensorList support with DEVICE_DEFAULT","body":"Use stream apis to enable the TensorList with DEVICE_DEFAULT including memzero, memset and memset32 and it's only enabled with pluggable device.","created_at":"2021-09-03T13:05:56Z","closed_at":"2021-09-23T06:37:27Z","merged_at":"2021-09-23T06:37:27Z","user_id":2551195,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":726358502,"title":"[Intel MKL] Bug fix for Pattern Matcher","body":"This PR fixes a bug inside pattern matcher for grappler. The bug was due to not considering the nodes_to_preserve in the remapper use case.","created_at":"2021-09-02T23:15:31Z","closed_at":"2021-09-05T11:07:53Z","merged_at":"2021-09-05T11:07:53Z","user_id":27521767,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":726356935,"title":"CUDA Graphs in XLA","body":"Not intended to merge as is.","created_at":"2021-09-02T23:12:22Z","closed_at":"2021-09-03T20:18:30Z","merged_at":null,"user_id":42984676,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":726272518,"title":"Fix abseil compile error using proper HWAES flag on aarch64.","body":"This small PR fixes a compile error on aarch64.\r\n\r\n   - It backports a future [absl upstream fix](https://github.com/abseil/abseil-cpp/commit/2e94e5b6e152df9fa9c2fe8c1b96e1393973d32c) of the issue\r\n   -  Fixes compilation [reported in the issue #51750](https://github.com/tensorflow/tensorflow/issues/51750#issuecomment-910717534) \r\n   \r\nOther way to address the issue is to rise up [abseil requirement](https://github.com/tensorflow/tensorflow/blob/master/third_party/absl/workspace.bzl#L10) to the minimum of this [commit hash](https://github.com/abseil/abseil-cpp/commit/2e94e5b6e152df9fa9c2fe8c1b96e1393973d32c).\r\n\r\nThank you !","created_at":"2021-09-02T20:45:20Z","closed_at":"2021-09-08T17:36:50Z","merged_at":"2021-09-08T17:36:50Z","user_id":3974360,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":725450565,"title":"[PluggableDevice] Add TF_OpkernelConstruction_GetAttrNamesList","body":"Attribute names, along with their corresponding values, could be used in TF 1.15 by devices to compute hashes of kernels and uniquely identify them for caching purposes. I believe this is an important feature to keep because some device backends have relatively slow kernel creation times and need a way to know whether a kernel that was created previously can be reused or not.","created_at":"2021-09-02T06:31:03Z","closed_at":"2021-09-15T17:50:38Z","merged_at":null,"user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":724780213,"title":"fix op does not dominate this use after mhlo-fusion pass","body":"test: tests/mhlo-fusion.mlir: fused_unfused_mix","created_at":"2021-09-01T18:47:26Z","closed_at":"2021-09-04T00:01:10Z","merged_at":"2021-09-04T00:01:10Z","user_id":22370779,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":724354457,"title":"`distutils` is deprecated in Python 3.10 #51776","body":"The `distutils` is deprecated in Python 3.10.\r\n\r\nAs of #51776, In `python_configure.bzl`, the deprecation message will be printed prior to the include path, causing error on return.","created_at":"2021-09-01T10:32:08Z","closed_at":"2021-09-06T14:17:10Z","merged_at":"2021-09-06T14:17:10Z","user_id":36222458,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":724335613,"title":"Tflite GPU OpenGL Delegate Allow HWC Const Add","body":"Allow addition (Add) of constant HWC tensor in OpenGL GPU delegate of Tensorflow Lite.","created_at":"2021-09-01T10:08:48Z","closed_at":"2021-09-14T20:11:31Z","merged_at":"2021-09-14T20:11:31Z","user_id":17670772,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":723930983,"title":"[PluggableDevice] add int32 DEVICE_DEFAULT for BroadcastTo/Pack/StridedSlice","body":"Add int32 DEVICE_DEFAULT for BroadcastTo/Pack/StridedSlice, this PR is for PluggableDevice.","created_at":"2021-09-01T01:39:51Z","closed_at":"2021-12-11T03:31:16Z","merged_at":"2021-12-11T03:31:16Z","user_id":68101902,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":723259743,"title":"Updated log_poisson_loss() function","body":"result is updated in the log_poisson_loss(targets, log_input, compute_full_loss=False, name=None) function. For input values too large, error message is displayed instead of returning NaN.","created_at":"2021-08-31T11:01:48Z","closed_at":"2022-07-02T00:59:48Z","merged_at":null,"user_id":42345018,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":723236284,"title":"Capsule Layer (With Dynamic Routing Between Capsules)","body":"This is an implementation of capsule neural networks as described in \"Dynamic Routing Between Capsules\" paper (https://arxiv.org/abs/1710.09829).\r\n\r\nI made a capsule layer, which was not originally implemented in Tensorflow, which made the developers and researchers job a bit tedious.\r\n\r\nI have implemented fuctions given below:\r\n1.) __init__ :  where you can do all input-independent initialization\r\n2.) build: where you know the shapes of the input tensors and can do the rest of the initialization\r\n3.) call: where you know the shapes of the input tensors and can do the rest of the initialization\r\n4.) squash: an activation function discussed in the paper\r\n5.) softmax: re-implemented softmax\r\n6.) get_config: this function is important for storing the layer config while saving the model.\r\n7.) compute_output_shape: This function helps in parsing the input dimension to the next layer\r\n\r\n\r\n","created_at":"2021-08-31T10:29:10Z","closed_at":"2021-08-31T10:47:27Z","merged_at":null,"user_id":26128602,"sentiment":{"polarity":0.0,"subjectivity":0.16666666666666666}}
{"_id":723041803,"title":"[PluggableDevice] add DEVICE_DEFAULT for ParallelDynamicStitch","body":"Add DEVICE_DEFAULT for ParallelDynamicStitch, this PR is for PluggableDevice.","created_at":"2021-08-31T05:52:34Z","closed_at":"2021-12-21T06:14:59Z","merged_at":"2021-12-21T06:14:59Z","user_id":68101902,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":723040876,"title":"[PluggableDevice] add int32 DEVICE_DEFAULT register for Unpack/Sum ops","body":"Add int32 DEVICE_DEFAULT register for Unpack/Sum ops,  this is PR is for PluggableDevice.","created_at":"2021-08-31T05:50:20Z","closed_at":"2021-12-10T11:01:39Z","merged_at":"2021-12-10T11:01:38Z","user_id":68101902,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":722981898,"title":"[PluggableDevice] Add TF_IsHostMemoryInput and TF_IsHostMemoryOutput to the C API","body":"This reduces boilerplate logic in pluggable devices code that decouple operator registration from kernel implementation. This also makes the transition from TF 1.15 to 2.x easier since the same device code in 1.15 would have been able to use `OpKernelContext::input_memory_type`.","created_at":"2021-08-31T03:20:25Z","closed_at":"2022-08-02T19:58:55Z","merged_at":"2022-08-02T19:58:55Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":722979555,"title":"[PluggableDevice] Add range checks to TF_ExpectedOutputDataType in non-debug builds","body":"The header comments of `TF_ExpectedOutputDataType` mention that the program aborts when passing an out-of-bounds index, but in non-debug builds we get an AV instead since `OpKernelContext::expected_output_dtype` uses `DCHECK_GE` and `DCHECK_LT` instead of `CHECK_GE` and `CHECK_LT`.","created_at":"2021-08-31T03:15:02Z","closed_at":"2022-03-24T22:25:51Z","merged_at":"2022-03-24T22:25:51Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":722894848,"title":"[INTEL MKL] Skip CUDA specific remapper tests","body":"FuseBatchNormGradWithReluGrad and FuseBatchNormGradWithAddAndReluGrad\r\nfusions are not available with MKL","created_at":"2021-08-30T23:29:52Z","closed_at":"2021-09-15T18:59:09Z","merged_at":"2021-09-15T18:59:09Z","user_id":42224278,"sentiment":{"polarity":0.0,"subjectivity":0.125}}
{"_id":722811336,"title":"[tf.data] graduate choose_from_datasets API from experimental to tf.data.Dataset","body":"This PR graduates the `tf.data.experimental.choose_from_datasets` API into `tf.data.Dataset.choose_from_datasets` by making the following changes:\r\n\r\n- [x] Adds the deprecation decorator for the experimental API.\r\n- [x] Add the `choose_from_datasets()` method to DatasetV2 class.\r\n- [x]  Updates example in documentation with new API.\r\n- [x]  Regenerate golden API's.\r\n- [x]  Updated the sample_from_datasets usage in tests.\r\n- [x]  Updated the RELEASE.md file\r\n\r\ncc: @aaudiber ","created_at":"2021-08-30T20:52:21Z","closed_at":"2021-09-10T22:25:27Z","merged_at":"2021-09-10T22:25:27Z","user_id":25393945,"sentiment":{"polarity":0.1,"subjectivity":0.4}}
{"_id":722325217,"title":"\"ZeroDivisionError: integer division or modulo by zero\" while backpropagating #51653","body":"\"ZeroDivisionError: integer division or modulo by zero\" while backpropagating #51653\r\nlogic reference:\r\nhttps://github.com/tensorflow/tensorflow/issues/51653#issuecomment-904756234","created_at":"2021-08-30T09:33:53Z","closed_at":"2022-02-09T11:51:53Z","merged_at":null,"user_id":68156284,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":722042970,"title":"Add calls to `reserve()` before populating vectors","body":"…and am at capacity\r\n\r\nPS: WiP. Will finish going through you codebase adding capacity hints to all vectors with obvious opportunity for this optimisation.","created_at":"2021-08-30T00:03:04Z","closed_at":"2021-10-14T20:57:48Z","merged_at":null,"user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":721857135,"title":"Add missing deps for Legalize to Linalg","body":"When compiling IREE baremetal I ran into mhlo_passes.h.inc file not found\r\n[ 69%] Built target MhloTypeConversion\r\n[ 69%] Building CXX object third_party/llvm-project/llvm/tools/mlir-hlo/lib/Dialect/mhlo/transforms/CMakeFiles/obj.MhloLhloToLinalg.dir/legalize_to_linalg.cc.o\r\nIn file included from /home/foo/github/iree-bare-metal-arm/third_party/iree/third_party/mlir-hlo/lib/Dialect/mhlo/transforms/legalize_to_linalg.cc:24:\r\n/home/foo/github/iree-bare-metal-arm/third_party/iree/third_party/mlir-hlo/include/mlir-hlo/Dialect/mhlo/transforms/PassDetail.h:32:10: fatal error: 'mlir-hlo/Dialect/mhlo/transforms/mhlo_passes.h.inc' file not found\r\n#include \"mlir-hlo/Dialect/mhlo/transforms/mhlo_passes.h.inc\"\r\n         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n1 error generated.\r\nmake[2]: *** [third_party/llvm-project/llvm/tools/mlir-hlo/lib/Dialect/mhlo/transforms/CMakeFiles/obj.MhloLhloToLinalg.dir/build.make:63: third_party/llvm-project/llvm/tools/mlir-hlo/lib/Dialect/mhlo/transforms/CMakeFiles/obj.MhloLhloToLinalg.dir/legalize_to_linalg.cc.o] Error 1\r\nmake[1]: *** [CMakeFiles/Makefile2:52089: third_party/llvm-project/llvm/tools/mlir-hlo/lib/Dialect/mhlo/transforms/CMakeFiles/obj.MhloLhloToLinalg.dir/all] Error 2\r\nmake: *** [Makefile:152: all] Error 2\r\n\r\n\r\n\r\nFix is similar to https://github.com/tensorflow/tensorflow/pull/51085/\r\n\r\nTEST: Builds after the fix","created_at":"2021-08-28T22:59:50Z","closed_at":"2021-08-30T20:33:50Z","merged_at":"2021-08-30T20:33:50Z","user_id":74956,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":721824154,"title":"Upgrade curl from 7.77 to 7.78","body":"This PR upgrades curl from 7.77 to 7.78.\r\nThe following are CVEs that might be related to curl 7.77 (old version):\r\n\r\nCVE-2021-22926: CURLOPT_SSLCERT mixup with Secure Transport\r\nCVE-2021-22925: TELNET stack contents disclosure again\r\nCVE-2021-22924: Bad connection reuse due to flawed path name checks\r\nCVE-2021-22923: Metalink download sends credentials\r\nCVE-2021-22922: Wrong content via metalink not discarded\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2021-08-28T18:03:03Z","closed_at":"2021-08-28T21:45:34Z","merged_at":null,"user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":721818196,"title":"Fix tf.math.segment_max/min/mean/sun/prod crashes(aborts) when segment_ids is large","body":"This PR fixes the issue raised in #46888 where tf.math.segment_max/min/mean/sun/prod crashes(aborts) when segment_ids is large.\r\n    \r\nThis PR fixes #46888.\r\n    \r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2021-08-28T17:17:23Z","closed_at":"2021-10-28T00:38:21Z","merged_at":"2021-10-28T00:38:20Z","user_id":6932348,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.42857142857142855}}
{"_id":721813307,"title":"Fix crash of tf.image.crop_and_resize when input is large number","body":"This PR is part of the effort in #46890 where\r\ntf.image.crop_and_resize will crash if shape consists of large number.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2021-08-28T16:40:19Z","closed_at":"2021-09-01T06:59:41Z","merged_at":null,"user_id":6932348,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.42857142857142855}}
{"_id":721653161,"title":"[Intel MKL] Fuse BiasAdd and Gelu with MatMul","body":"This PR is dependent on #51808.\r\n\r\nThis PR is a fusion of MatMul + BiasAdd + {set of ops from `tf.nn.gelu` python api}. It has been enabled with oneDNN CPU backend only with grappler remapper graph optimizer.\r\n\r\nSince the set of actual ops for `tf.nn.gelu` python api is heavily dependent on various graph optimizers in the grappler that runs before remapper, a python unit test (`tensorflow/python/grappler/remapper_test.py`) has been added.\r\n","created_at":"2021-08-27T22:51:32Z","closed_at":"2021-10-12T18:35:06Z","merged_at":"2021-10-12T18:35:05Z","user_id":27521767,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":721498733,"title":"Fix crash of tf.image.pad_to_bounding_box with large input value.","body":"This PR tries to address one of the issues raised in #46890\r\nwhere tf.image.pad_to_bounding_box will crash with large input\r\nvalue.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2021-08-27T17:29:21Z","closed_at":"2021-09-22T23:02:33Z","merged_at":"2021-09-22T23:02:33Z","user_id":6932348,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.42857142857142855}}
{"_id":721457988,"title":"Fix crash with tf.summary.create_file_writer when non-scalar values are passed","body":"This PR tries to fix the issue raised in #46909 where\r\ntf.summary.create_file_writer crashes when non-scalar values are passed.\r\n\r\nThis PR fixes #46909.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2021-08-27T16:18:20Z","closed_at":"2021-08-31T23:59:28Z","merged_at":"2021-08-31T23:59:28Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":721429640,"title":"R2.2","body":"Hii ","created_at":"2021-08-27T15:34:20Z","closed_at":"2021-08-27T15:36:01Z","merged_at":null,"user_id":89623198,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":721254580,"title":"Fix crash with tf.range when start is large/negative","body":"This PR tries to address the issue raised in 46899 where\r\ntf.range will crash when start is large/negative.\r\n\r\nThis PR fixes #46899.\r\n\r\nThis PR also fixes #46889.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2021-08-27T11:24:43Z","closed_at":"2021-08-30T20:45:58Z","merged_at":"2021-08-30T20:45:58Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":720950531,"title":"[tflite] fix default of xnnpack_delegate_provider","body":"xnnpack delegate was enabled by default on Android ARM platforms in 0b78d40a54a991e0f2b67e2a9aa5224609536552. But the corresponding default setting of xnnpack delegate provider is not changed, so users of xnnpack delegate provider, e.g., benchmark_model doesn't get right value. E.g., when `benchmark_model --help`, I got\r\n\r\n```\r\n...\r\n\t--use_xnnpack=true                       \tbool\toptional\tuse XNNPack\r\n\r\n```\r\n\r\nBut actually, it uses tflite with xnnpack enabled already. That's a bit confusing.\r\n\r\n\r\ntag @multiverse-tf who is the author of 0b78d40","created_at":"2021-08-27T01:24:05Z","closed_at":"2022-01-01T08:57:49Z","merged_at":null,"user_id":3395998,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":720940570,"title":"[PluggableDevice] Add the option to force memory growth","body":"It's currently possible to force memory growth either from the session or the `TF_FORCE_GPU_ALLOW_GROWTH` environment variable, but some pluggable devices may need even more control than that. On some architectures and devices, allocating the memory all at once in a single is simply not an option so the pluggable devices should have the tools to prevent that from being overridden by the user.","created_at":"2021-08-27T00:52:21Z","closed_at":"2022-02-22T17:21:36Z","merged_at":"2022-02-22T17:21:36Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":720899455,"title":"The following upstream commits caused a 15% performance degradation o…","body":"…n the resnet50 model for ROCm:\r\n\r\n4193058f98378f6f67db0cc67fb68332f8396d41: increase row tiling to 64\r\n37ddd35d129280e80a847f09264118c7a0cbd894: enable tree reduction by default\r\n\r\nThe changes were \"undone\" for ROCm by guarding the previous implementation details with the TENSORFLOW_USE_ROCM macro.\r\n\r\nThe commit which increased row tiling to 64 made substantial changes to the reduce_unnested.hlo unit test to accomodate the change so the test fails on ROCm with this commit.\r\n\r\nTherefore, the reduce_unnested.hlo unit test has been disabled.","created_at":"2021-08-26T23:03:08Z","closed_at":"2021-10-26T19:21:07Z","merged_at":"2021-10-26T19:21:07Z","user_id":70280935,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":720841991,"title":"[oneDNN] Add Conv3D fusions","body":"_FusedConv3D op and kernel\r\nConv3D + Bias fusion\r\nConv3D + Bias + activation fusion\r\nConv3D + squeeze + Bias fusion","created_at":"2021-08-26T21:03:44Z","closed_at":"2021-10-04T20:41:24Z","merged_at":"2021-10-04T20:41:24Z","user_id":42224278,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":720384541,"title":"TF-TRT Set binding dimensions even if tensor is not an execution tensor","body":"According to [nvinfer1::ITensor::isExecutionTensor](https://docs.nvidia.com/deeplearning/tensorrt/api/c_api/classnvinfer1_1_1_i_tensor.html#a472db0d89262ae20c1ad247b3a6d64fa) API description:\r\n\r\n> A tensor with isShapeTensor() == false and isExecutionTensor() == false can still show up as an input to the engine if its dimensions are required.\r\n\r\nThis PR fixes optimization profile definition for that case, by always calling profile->setDimension().\r\n\r\nA unit test is added to for such a case.","created_at":"2021-08-26T10:24:59Z","closed_at":"2021-09-29T12:24:48Z","merged_at":null,"user_id":3671106,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":720322144,"title":"Add GpuSelectFlagged helper function and test","body":"This will be used later in GPU op implementations.\r\n\r\ncc @nluehr ","created_at":"2021-08-26T09:03:22Z","closed_at":"2021-08-30T21:12:42Z","merged_at":"2021-08-30T21:12:41Z","user_id":3979096,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":720321946,"title":"Refactor SparseSliceOp to use a functor","body":"This is in preparation for adding a GPU implementation.\r\nNo functional change.\r\nAlso adds a few tests for empty input/output sparse tensors.\r\n\r\ncc @nluehr ","created_at":"2021-08-26T09:03:06Z","closed_at":"2021-09-14T16:08:16Z","merged_at":"2021-09-14T16:08:15Z","user_id":3979096,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":719963366,"title":"[INTEL MKL] Fix MKL related conv_ops_3d_test unit test failure","body":"Fix the issue by adding sanity check for the corner case of \"zero element of filter\" in mkl_conv_ops.cc. With this fix, MKL conv op  returns a right error message which a newly added conv3d unit test (within python/kernel_tests/conv_ops_3d_test.py) expects. \r\n\r\nThe fix just does the same as what the Eigen implements (core/kernels/conv_ops_3d.cc).","created_at":"2021-08-25T19:55:25Z","closed_at":"2021-09-21T19:38:30Z","merged_at":"2021-09-21T19:38:30Z","user_id":29215195,"sentiment":{"polarity":-0.15833333333333335,"subjectivity":0.35000000000000003}}
{"_id":719826767,"title":"build mlir pip","body":null,"created_at":"2021-08-25T16:28:40Z","closed_at":"2021-08-25T16:28:59Z","merged_at":null,"user_id":18471401,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":719576270,"title":"Refactor Slice reference op for port to TFLM","body":"Solves second part of issue #51669, PR2:  Extract the reference implementation out of tensorflow/lite/kernels/internal/reference/reference_ops.h into its own header which can be included without dragging in reference_ops.h's dependences\r\n\r\nChange-Id: I1c8e2a4550d9c6fd792b2d5ad0361579b9d437dd","created_at":"2021-08-25T12:56:44Z","closed_at":"2021-09-15T19:31:38Z","merged_at":"2021-09-15T19:31:38Z","user_id":36964858,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":719520525,"title":"Flatbuffer_conversion changes for Slice","body":"Solves first part of issue #51669, PR1: Extract the code for parsing the op from a flatbuffer out of ParseOpDataTfLite in tensorflow/lite/core/api/flatbuffer_conversions.cc into a standalone function that can be called from micro's op resolver\r\nChange-Id: I6afc247cac3fd3cbf5837f8702c7cc630ab1fdbc","created_at":"2021-08-25T11:42:14Z","closed_at":"2021-08-27T06:43:32Z","merged_at":"2021-08-27T06:43:32Z","user_id":36964858,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":719178787,"title":"Fix `DeprecationWarning: the imp module is deprecated in favour of importlib`","body":"This PR tries to fix the following warning:\r\n```\r\n  /usr/local/lib/python3.9/dist-packages/tensorflow/python/autograph/impl/api.py:22: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses\r\n    import imp\r\n```\r\n\r\nNote: After the fix, the flatbuffer still generates a warning:\r\n```\r\n../usr/local/lib/python3.8/dist-packages/flatbuffers/compat.py:19\r\n  /usr/local/lib/python3.8/dist-packages/flatbuffers/compat.py:19: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses\r\n    import imp\r\n```\r\n\r\nHowever, this PR at least removes the warnings within tensorflow.\r\n\r\nThis PR fixes #31412.\r\n\r\nThis PR fixes #51631.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2021-08-25T01:38:53Z","closed_at":"2021-08-26T19:49:58Z","merged_at":"2021-08-26T19:49:57Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":719084780,"title":"[TF:TRT]  Enable dynamic shape for Slice and StridedSlice operations","body":"Enables dynamic shape support for conversion of \"slice\" and \"strided slice\" Tensorflow operations to the TensorRT ISliceLayer in TF:TRT.","created_at":"2021-08-24T21:41:33Z","closed_at":"2021-08-24T21:42:48Z","merged_at":null,"user_id":30323187,"sentiment":{"polarity":0.0,"subjectivity":0.16666666666666666}}
{"_id":719082630,"title":"[Intel oneDNN] update curl version to 7.78.0","body":"Update Curl version to 7.78.0","created_at":"2021-08-24T21:37:04Z","closed_at":"2021-08-30T15:42:21Z","merged_at":"2021-08-30T15:42:21Z","user_id":38869685,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":719034917,"title":"Fix typo `tpu_system_medata`","body":"Fix typo in docs: tpu_system_medata --> tpu_system_metadata","created_at":"2021-08-24T20:17:15Z","closed_at":"2021-08-31T01:12:12Z","merged_at":"2021-08-31T01:12:12Z","user_id":31600291,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":718981218,"title":"Fix crash of tf.image.extract_glimpse with negative input","body":"This PR tries to fix the issue raised in #51618 where\r\ntf.image.extract_glimpse will crash in case of negative input.\r\n\r\nThis PR adds additional checking to allow graceful error message.\r\n\r\nThis PR fixes #51618.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2021-08-24T18:47:47Z","closed_at":"2021-10-06T15:21:20Z","merged_at":"2021-10-06T15:21:20Z","user_id":6932348,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":718868556,"title":"Fix TF serving build failure on s390x caused by aws lib target","body":"This PR makes the `aws` lib target buildable on s390x and thus resolve a TF serving build failure. Please note that this PR does not aim at enabling any aws features on s390x, as for s390x build `-no-aws` flag is used as default. The only purpose of this PR is make TF serving build pass as TF serving does not support the `-no-aws` flag so this target needs to be analyzed.","created_at":"2021-08-24T15:53:24Z","closed_at":"2021-08-27T15:04:23Z","merged_at":"2021-08-27T15:04:23Z","user_id":66026367,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":718823179,"title":"Disable XNNPACK for s390x machines","body":"This PR disable XNNPACK related build targets and function definitions on s390x because XNNPACK is not supported on s390x: https://github.com/google/XNNPACK#supported-architectures\r\nWithout this patch, a lot of Lite targets that are not necessarily depending on XNNPACK dependencies will fail to build on s390x, and this patch will allow them to build successfully","created_at":"2021-08-24T14:57:31Z","closed_at":"2021-10-18T02:00:20Z","merged_at":"2021-10-18T02:00:20Z","user_id":66026367,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":718657108,"title":"Update Delegate.swift","body":"Fixes \"Using 'class' keyword to define a class-constrained protocol is deprecated; use 'AnyObject' instead\" warning","created_at":"2021-08-24T11:26:58Z","closed_at":"2021-11-18T02:46:44Z","merged_at":"2021-11-18T02:46:44Z","user_id":1756909,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":718376430,"title":"[PluggableDevice] Add pluggable profiler C Interface support","body":"Add TensorFlow profiler support for PluggableDevice.","created_at":"2021-08-24T03:25:31Z","closed_at":"2021-09-14T20:06:05Z","merged_at":"2021-09-14T20:06:05Z","user_id":6346853,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":717791223,"title":"Typo Fix: arugment -> argument","body":"arugment -> argument","created_at":"2021-08-23T12:30:32Z","closed_at":"2021-08-23T14:10:08Z","merged_at":null,"user_id":7629938,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":717705783,"title":"add label_names to make_csv_dataset_v2","body":"[https://github.com/tensorflow/tensorflow/issues/51571](https://github.com/tensorflow/tensorflow/issues/51571)","created_at":"2021-08-23T10:29:46Z","closed_at":"2021-12-17T00:59:28Z","merged_at":null,"user_id":23434805,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":717677659,"title":"Implementation of a Copy Removal Pass.","body":"In this PR we implemented the first version of the CopyRemovalPass. This pass removes operations that implement a `CopyOpInterface` when the source `UseInterval` ends with the copy operation and the properties of dominance are not violated. In the respective `UseInterval` after the copy operation the target value is replaced with the source value.\r\n\r\nThe next iteration should also consider copy operations that copy slices.\r\n\r\nThis PR also includes cleanups of the `UserangeAnalysis` in form of an addition `UseInterval` struct.","created_at":"2021-08-23T09:54:40Z","closed_at":"2021-09-06T10:25:00Z","merged_at":null,"user_id":10137,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":717564576,"title":"[PluggableDevice] Enable TensorList C APIs","body":"This PR adds support for TensorList C APIs following to the Variable RFC ideas. It supports\r\n\r\n1. create or delete TensorList\r\n2. set/get TensorList from Tensor\r\n3. some TensorList's methods like get tensor, get element shape or dtype, deep copy and so on.\r\n\r\nDeveloper can use these C APIs to implement TensorList relative kernels.","created_at":"2021-08-23T07:11:59Z","closed_at":"2021-10-29T01:32:25Z","merged_at":null,"user_id":2551195,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":717132410,"title":"[WIP] Fixing issues in python package","body":"* Fixing typo mistakes\r\n* Fixing type issues\r\n* Fixing documentation\r\n* Fixing OOP conceptual issues\r\n* Refactoring in some cases\r\n* etc","created_at":"2021-08-21T10:34:12Z","closed_at":"2021-08-29T18:20:06Z","merged_at":null,"user_id":57490926,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":717065989,"title":"disable ampere tf32 failures","body":"Some tests use matmul op to compute the reference value. For TF32 those ops are less precise causing some tests to fail. This is PR is to address the issue.","created_at":"2021-08-21T01:17:40Z","closed_at":"2021-09-07T17:15:16Z","merged_at":null,"user_id":42385577,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":716994451,"title":"`third_party/py/BUILD.tpl`: add `stub_shebang` for `py_runtime`","body":"Bazel 4.2.0 by default uses `#!/usr/bin/env python` for all python\r\nscripts, and breaks build on systems that lack a `python` executable.\r\n\r\nThis commit adds a stub_shebang that points to the python binary\r\nspecified by ./configure.py script, the same as the interpreter_path.","created_at":"2021-08-20T20:57:50Z","closed_at":"2022-12-28T19:41:49Z","merged_at":"2022-12-28T19:41:49Z","user_id":89739,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":716732362,"title":"fix __array__ for numpy support","body":"This change is similar to that of fc0f0e61ca9fe3ca3b9b58f51bcf00e0643ed9e3, when an extra parameter is passed to to `__array__` method, it throws an error, the following code can produce this\r\n```\r\nv = tf.Variable([1.0])\r\nprint(np.array(v, dtype=int))\r\n```\r\nWhich throws\r\n> TypeError: \\_\\_array\\_\\_() takes 1 positional argument but 2 were given\r\n\r\nAfter this change, the `np.array` can behave correctly","created_at":"2021-08-20T13:18:54Z","closed_at":"2021-08-25T16:01:15Z","merged_at":"2021-08-25T16:01:15Z","user_id":44433088,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":716259740,"title":"Register unique op for Default device.","body":"Adding unique op for DEVICE_DEFAULT.\r\n@penpornk ","created_at":"2021-08-19T21:03:20Z","closed_at":"2021-08-24T23:06:33Z","merged_at":"2021-08-24T23:06:33Z","user_id":453004,"sentiment":{"polarity":0.375,"subjectivity":1.0}}
{"_id":716214792,"title":"[XLA] Add back: lift bitcast PR ","body":"#50153 was reverted.\r\nI'm adding it back with a fix: now we do not lift if any instruction change the layout.\r\n@akuegel ","created_at":"2021-08-19T19:49:23Z","closed_at":"2021-08-30T23:32:33Z","merged_at":"2021-08-30T23:32:33Z","user_id":180987,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":716125432,"title":"Add missing commas causing unwanted str concat","body":"These are most likely unintentionally and causing the two strings to be implicitly concatenated. These are hard to catch bugs and were found using a Regex.","created_at":"2021-08-19T17:23:43Z","closed_at":"2021-08-23T17:51:38Z","merged_at":"2021-08-23T17:51:38Z","user_id":1619970,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":716119231,"title":"Update flatbuffers in workspace.bzl","body":"Updated Flatbuffers to \"2.0\" Uas dependency change to \"https://github.com/tensorflow/tensorflow/pull/51504\"","created_at":"2021-08-19T17:14:11Z","closed_at":"2021-09-15T23:02:10Z","merged_at":null,"user_id":59822926,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":716013672,"title":"[XLA, test] Fix a test when few GPU memory is available. ","body":"This happens in particular when bazel run many tests on the same GPU.\r\n\r\n@cheshire \r\n\r\nThe error I got:\r\n```\r\n2021-08-18 22:13:48.303536: W tensorflow/stream_executor/stream_executor_pimpl.cc:497] Not enough memory to allocate 3600000000 on device 0 within provided limit. [used=0, limit=2147483648]\r\ntensorflow/compiler/xla/service/gpu/tests/tree_reduction_rewriter_test.cc:47: Failure\r\nValue of: RunMultipleTimes(hlo_text, true, &profiles, \"\", true)\r\n  Actual: false (Failed to allocate request for 3.35GiB (3600000000B) on device ordinal 0)\r\nExpected: true\r\n```\r\n\r\nWhen we tell bazel to run many tests in parallel, it set by default 2 G per jobs. This also speed up the test at the same time.","created_at":"2021-08-19T14:51:22Z","closed_at":"2021-08-23T17:32:17Z","merged_at":"2021-08-23T17:32:17Z","user_id":180987,"sentiment":{"polarity":0.1,"subjectivity":0.25}}
{"_id":715678363,"title":"Add `--config=rbe_lite_linux` in .bazelrc","body":"Both `--config=rbe_cpu_linux` and `--config=rbe_linux_py3` expand to `--config=rbe_linux` which includes link opts for avx instructions. However that won't compile Tensorflow Lite. \r\n\r\nThis PR adds `--config=rbe_lite_linux` which reuses most of existing flags for building Tensorflow Lite with RBE.\r\n\r\nContext: b/195294181","created_at":"2021-08-19T07:31:11Z","closed_at":"2021-08-30T15:24:30Z","merged_at":"2021-08-30T15:24:30Z","user_id":5947531,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":715571891,"title":"Karen/r2.6","body":"update TTP files per legal approval","created_at":"2021-08-19T03:49:08Z","closed_at":"2021-08-19T16:38:58Z","merged_at":null,"user_id":32109466,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":715418877,"title":"Update 20-documentation-issue.md","body":"Update the broken link","created_at":"2021-08-18T21:10:32Z","closed_at":"2021-08-19T20:30:15Z","merged_at":"2021-08-19T20:30:15Z","user_id":43972606,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":715339290,"title":"[XLA] Make replay_computation accept input HLO file with multiple module.","body":"I needed that today.\r\nIt allow to use replay_computation with hlo tests file.\r\n\r\nThis use the same syntax as hlo_to_llvm_ir use.\r\n\r\n@sanjoy ","created_at":"2021-08-18T18:58:11Z","closed_at":"2021-09-14T13:35:12Z","merged_at":"2021-09-14T13:35:12Z","user_id":180987,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":715304524,"title":"Update setup.py","body":"Added latest numpy which is compatible with version of all tensorflow's dependencies ","created_at":"2021-08-18T18:01:43Z","closed_at":"2021-08-18T23:21:32Z","merged_at":null,"user_id":40058558,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":715176513,"title":"replace x86intrin.h to immintrin.h","body":"MSVC didn't have `x86intrin.h`, it cause build break when use `/arch:AVX2`.","created_at":"2021-08-18T15:00:21Z","closed_at":"2021-08-27T04:44:36Z","merged_at":"2021-08-27T04:44:36Z","user_id":10285869,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":714781866,"title":"fix: removed extra blank link at end of last section","body":null,"created_at":"2021-08-18T06:23:15Z","closed_at":"2021-08-18T11:21:22Z","merged_at":null,"user_id":71879662,"sentiment":{"polarity":0.0,"subjectivity":0.05555555555555556}}
{"_id":714618162,"title":"Add dynamic variable failing test without guards","body":"Add an expected failing test for https://github.com/tensorflow/tensorflow/pull/49310#issuecomment-899764850\r\n\r\n/cc \r\n@mdanatg \r\n@mihaimaruseac (as another bug/failing test case) ","created_at":"2021-08-17T23:01:45Z","closed_at":"2021-08-19T19:18:26Z","merged_at":"2021-08-19T19:18:25Z","user_id":1710528,"sentiment":{"polarity":0.0,"subjectivity":0.16666666666666666}}
{"_id":714609036,"title":"Fix minor typos","body":null,"created_at":"2021-08-17T22:36:38Z","closed_at":"2021-08-19T15:34:49Z","merged_at":"2021-08-19T15:34:49Z","user_id":775466,"sentiment":{"polarity":-0.05,"subjectivity":0.2}}
{"_id":714395936,"title":"README-TA.md","body":"I have translated it to Tamil.","created_at":"2021-08-17T16:23:59Z","closed_at":"2021-08-17T17:35:36Z","merged_at":null,"user_id":78357278,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":713632539,"title":"Add negative dim support to tf to tosa expand dims","body":"Also allows for reading tf.expandDims ops with non-scalar dim input. ie 0 vs [0]. \r\nReplaced some asserts with compiler errors.\r\n \r\nAddresses the referenced issue.\r\n\r\n\r\nhttps://github.com/google/iree/issues/6768","created_at":"2021-08-16T17:53:25Z","closed_at":"2021-10-04T20:47:15Z","merged_at":"2021-10-04T20:47:15Z","user_id":34486624,"sentiment":{"polarity":-0.1,"subjectivity":0.45}}
{"_id":713554707,"title":"Update year in LICENSE","body":null,"created_at":"2021-08-16T15:52:48Z","closed_at":"2021-08-17T15:59:17Z","merged_at":null,"user_id":5613295,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":713470040,"title":"Fix endianness issue of internal data views in LiteralUtilTest (F16) on BE machines","body":"`LiteralUtilTest.F16` in test case `//tensorflow/compiler/xla:literal_test` fails on Big-Endian systems because the internal data views are in Little-Endian format. This PR swaps the data on BE machines to make the data format machine endianness dependent, so that this test case would pass on both LE and BE systems.","created_at":"2021-08-16T14:06:46Z","closed_at":"2021-09-20T14:56:52Z","merged_at":"2021-09-20T14:56:52Z","user_id":78156688,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":713380905,"title":"stream_executor/platform/logging.h: catch up with core/platform/logging.h","body":"In [core/platform/logging.h](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/platform/logging.h), TensorFlow used `google/logging.h` while `PLATFORM_GOOGLE*`, `GOOGLE_LOGGING` or `__EMSCRIPTEN__` is defined, but its `stream_executor` only considered two cases (`PLATFORM_GOOGLE` and `PLATFORM_GOOGLE_ANDROID`).\r\nThis PR is aimed to make their behavior same.","created_at":"2021-08-16T12:09:48Z","closed_at":"2021-08-25T15:33:10Z","merged_at":"2021-08-25T15:33:10Z","user_id":20042607,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":713154031,"title":"[WIP] Fixing Minor Issues","body":null,"created_at":"2021-08-16T06:26:20Z","closed_at":"2021-08-21T10:18:36Z","merged_at":null,"user_id":57490926,"sentiment":{"polarity":-0.05,"subjectivity":0.2}}
{"_id":712984481,"title":"Create democam.ipynb#!","body":"import IPython\r\ncamera_code = '''\r\nconst div = document.createElement('div');const video = document.createElement('video');video.style.display = 'block';document.body.appendChild(div);div.appendChild(video);navigator.mediaDevices.getUserMedia({ video: true }).then(function (stream){video.srcObject = stream;video.play();});\r\n'''\r\n\r\nprint(\"testing here only\")\r\ndisplay(IPython.display.Javascript(camera_code))","created_at":"2021-08-15T18:49:35Z","closed_at":"2021-08-17T05:08:28Z","merged_at":null,"user_id":69411211,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":712972484,"title":"Update setup.py","body":"Updated flatbuffers to \"2.0.\"\r\nFix for #51487","created_at":"2021-08-15T17:21:42Z","closed_at":"2021-08-18T12:48:36Z","merged_at":"2021-08-18T12:48:35Z","user_id":59822926,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":712969595,"title":"Fix Typo in Docstring of parsing_ops.py","body":null,"created_at":"2021-08-15T17:02:35Z","closed_at":"2021-08-16T06:53:48Z","merged_at":null,"user_id":65880150,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":712876646,"title":"[TF:TRT] Replace c asserts with CHECK macro","body":"The default Tensorflow build uses `-c opt`, which implies `-NDEBUG`. Thus, c-style assert statements become no-ops. This PR replaces asserts in ITensorProxy with Tensorflow CHECK macro. This induces failures in the tests, which are corrected.\r\n\r\nTest failures indicate no one is using the `-c debug` option, and thus the signal given by the assert statements is being missed. Thus they should be changed to CHECKs.\r\n\r\n@bixia1 \r\n@jhalakpatel \r\n@tfeher ","created_at":"2021-08-15T05:06:34Z","closed_at":"2021-09-03T01:52:06Z","merged_at":"2021-09-03T01:52:06Z","user_id":30323187,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":712873465,"title":"Fix crash with tf.image.resize if size is large","body":"This PR tries to address the issue raised in #46914 where tf.image.resize will crash if size is large, (implicitly causes tf.keras.layers.UpSampling2D to crash).\r\n\r\nThis PR adds necessary shape overflow check to prevent crash.\r\n\r\nThis PR fixes #46914.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2021-08-15T04:24:54Z","closed_at":"2021-08-18T00:21:14Z","merged_at":"2021-08-18T00:21:14Z","user_id":6932348,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.42857142857142855}}
{"_id":712871557,"title":"Reinstate solution #26682.","body":"It is my understanding that this solution was originally failed a test, but, as of now we do not know why. So I am trying to recreate the pull request so as to see what failed so that we can fix it.","created_at":"2021-08-15T04:00:33Z","closed_at":"2021-12-17T00:59:26Z","merged_at":null,"user_id":33294538,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":712152553,"title":"[tflite] add same scale constraint for mirror pad","body":"add `SameOperandsAndResultsScale` to MirrorPad so that when the new MLIR quantizer is used for post-training quantization, all\r\nquantized mirror_pad will have the same quantization scaled for inputs and outputs (as what the old non-MLIR one does).\r\n\r\ncf. the constrain in old [quantizer](https://github.com/tensorflow/tensorflow/blob/r2.6/tensorflow/lite/tools/optimize/operator_property.cc#L1020-L1026)","created_at":"2021-08-13T08:04:36Z","closed_at":"2021-09-09T23:13:55Z","merged_at":"2021-09-09T23:13:55Z","user_id":3395998,"sentiment":{"polarity":0.0,"subjectivity":0.125}}
{"_id":712148624,"title":"add int8 support for tf.tile","body":"add int8 support for tf.tile otherwise there is an error after int8 quantization","created_at":"2021-08-13T07:58:25Z","closed_at":"2021-10-29T03:57:14Z","merged_at":null,"user_id":15250696,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":712058686,"title":"[TF:TRT:]Remove dangerous const_cast in TRT_ShapedWeights::GetValues","body":"This PR splits `TRT_ShapedWeights::GetValues()` into const and non-const methods to obey `const` requirements without using`const_cast`. It changes the method to a template which returns a `T*` or `const T*` pointer (rather than void*), \r\neliminating pointer casting throughout code base when using GetValues(). It also renames GetValues to GetPointer as the template actually a pointer not values.\r\n\r\n@bixia1, @tfeher for review","created_at":"2021-08-13T04:28:55Z","closed_at":"2021-08-20T13:18:18Z","merged_at":"2021-08-20T13:18:18Z","user_id":30323187,"sentiment":{"polarity":-0.6,"subjectivity":0.9}}
{"_id":711780578,"title":"[TF:TRT] Enable dynamic shape for \"slice\" and \"strided slice\" operations.","body":"Enables dynamic shape support during conversion of Tensorflow \"slice\" and \"strided slice\" operations to TensorRT ISliceLayer.\r\n\r\nMoves existing `StridedSliceHelper` function to dedicated `ops/slice_ops.[h|cc]` file and refactors it extensively to support dynamic shape requirements.\r\nTo support the creation of ancillary graphs in the TensorRT network, a helper class TRTNetworkBuilder is added to quickly create familiar operations  (e.g. Nonzero, Sign, ZerosLike) via composition of those layers exposed by TensorRT.\r\nConverter functions which utilize StridedSliceHlper (ConvertStridedSlice, ConvertSlice, ConvertSplit) are updated to use the new helper and gain dynamic shape support.\r\nTests for ConvertStridedSlice are updated to include better documentation and additional tests for dynamic shape. A negative test for new_axis_mask is added.\r\n","created_at":"2021-08-12T23:31:50Z","closed_at":"2021-09-30T17:07:09Z","merged_at":"2021-09-30T17:07:08Z","user_id":30323187,"sentiment":{"polarity":0.0,"subjectivity":0.16666666666666666}}
{"_id":711725336,"title":"update `@pasta` to work when `@org_tensorflow` is *not* the main repo","body":"`@pasta`'s BUILD file uses a helper macro (in `build_defs.bzl`) that lives in `@org_tensorflow` which it references using `@//` (the main repo). This breaks when `@org_tensorflow` isn't the main repo; i.e. if it's a dependency in another workspace.\r\n\r\nThis PR changes the setup for the `@pasta` repo to symlink `build_defs.bzl` into the `@pasta` repo.","created_at":"2021-08-12T22:43:05Z","closed_at":"2021-08-25T15:07:05Z","merged_at":"2021-08-25T15:07:04Z","user_id":7833358,"sentiment":{"polarity":0.16666666666666666,"subjectivity":0.3333333333333333}}
{"_id":711577032,"title":"TF-TRT MNIST test with V2 converter","body":"This PR extends the MNIST test to use the V2 converter. We create a saved model, and convert it both with and without dynamic shape mode.\r\n\r\nTagging @bixia1 for review. Tracker #45481","created_at":"2021-08-12T20:45:49Z","closed_at":"2021-10-04T16:48:25Z","merged_at":"2021-10-04T16:48:25Z","user_id":3671106,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":711438858,"title":"[ROCM] enable some multigpu tests","body":"This PR enables some of the multi-gpu tests that were disabled in a previous pr https://github.com/tensorflow/tensorflow/pull/50331","created_at":"2021-08-12T19:05:32Z","closed_at":"2022-02-10T03:00:07Z","merged_at":"2022-02-10T03:00:07Z","user_id":16394078,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":711397702,"title":"[TF-TRT] Fix an uninitialized variable in ConvertEinsum.","body":"Uninitialized variable `output_has_ellipsis` would periodically result in test failure due to undefined behavior. `EinsumHelper::ParseEquation` apparently does not set this variable under certain parsing conditions.\r\n\r\nRemoved `#if` guard on test as test failure seems unrelated to TRT8.\r\n\r\nFormatting applied after `#if` guard removed.\r\n\r\n@tfeher \r\n@bixia1 ","created_at":"2021-08-12T18:35:40Z","closed_at":"2021-09-22T17:43:20Z","merged_at":null,"user_id":30323187,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":711318009,"title":"[TF:TRT] Enable dynamic batch dim for Conv2dBackpropInput","body":"This PR enables dynamic batch dimension for Conv2dBackpropInput.\r\n\r\nWe enable dynamic batch dimension for Conv2DBackpropInput simply by relaxing the check to allow dynamic batch dimension in the converter. We also add positive and negative tests.\r\n\r\nThe support for dynamic height and width will come later. This is because we will need to add an additional dynamic padding operation in order to support dynamic height and width for Conv2dBackpropinput.","created_at":"2021-08-12T17:40:34Z","closed_at":"2021-08-26T22:56:30Z","merged_at":"2021-08-26T22:56:30Z","user_id":30323187,"sentiment":{"polarity":0.05,"subjectivity":0.3333333333333333}}
{"_id":711190475,"title":"[TF:TRT] Enable Dynamic Shape Support for ConvertResize","body":"The Resize operation now supports full dynamic shapes. This is done by slicing the input tensor's shape, replacing the H and W dims with the corresponding Resize op scales, and concatenating the dims back to a shape tensor that can then be given as a second input to the TRT Resize layer.\r\n\r\nIn case of static shapes, the previous method remains, where the output dims are simply given as a parameter to the TRT Resize layer instead.\r\n\r\nA new use case is now also supported, where the \"size\" may now be given as a tensor input instead of constant weights. This would often happen when working with dynamic shapes, as the output size may need to be calculated on the fly through shape ops. E.g., resizing a tensor by a scale factor of 2 would require the size to be calculated dynamically in the graph based on the input tensor's shape, thus not a constant input that is known during building.\r\n\r\nThe corresponding test was also updated to now expect all 3 TRT modes to pass: kImplicitBatch, kExplicitBatch and kDynamicShape.\r\n\r\nTracker: #45481","created_at":"2021-08-12T16:12:20Z","closed_at":"2021-08-25T16:47:31Z","merged_at":"2021-08-25T16:47:31Z","user_id":75912517,"sentiment":{"polarity":0.0,"subjectivity":0.16666666666666666}}
{"_id":711045847,"title":"Add tensorflow-io-gcs-filesystem dependency","body":"This PR is part of the effort to migrate to modular file systems.\r\nThis PR add the dependency of tensorflow-io-gcs-filesystem package\r\nwhile at the same time, only enable using it with\r\n`TF_USE_MODULAR_FILESYSTEM=1`.\r\n\r\nThis allows end user to not getting impacted by default.\r\n\r\nThe switch off will happen after a period of transition time.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2021-08-12T14:41:03Z","closed_at":"2021-08-13T01:38:41Z","merged_at":"2021-08-13T01:38:41Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":710853316,"title":"Extend cmake-based build of tf lite to support metal delegates and related libraries for iOs target","body":"- **tensorflow/lite/CMakeLists.txt**  - add new option **_TFLITE_ENABLE_METAL_** to enable compilation of all libraries required for metal delegate\r\n- **tensorflow/lite/tools/cmake/modules/ruy/CMakeLists.txt** - in case option above will be enabled we will end up with project with 3 different languages - C, CPP and OBJCPP, in such case CMake not smart enough to handle files with **_cc_** extensions - so in case of ruy library we have to mark source files to be treated as CPP explicitly and filter out gtest-based file.   \r\nNOTE 1: it will lead to number of:   \r\n`clang: warning: treating 'c-header' input as 'c++-header' when in C++ mode, this behavior is deprecated [-Wdeprecated]`. \r\n warning during compilations as source list wihin ruy's srcs list that have headers included\r\nNOTE 2: I have to adjust regex to exclude test.h, otherwise master version failed for me with:   \r\n`In file included from /tensorflow_src/tensorflow/lite/qqq_build/ruy/ruy/test.h:44:\r\n/tensorflow_src/tensorflow/lite/qqq_build/ruy/ruy/gtest_wrapper.h:23:10: fatal error: 'gtest/gtest.h' file not found\r\n#include \"gtest/gtest.h\"  // IWYU pragma: export\r\n`\r\n- **tensorflow/lite/delegates/gpu/CMakeLists.txt** - to generate build scripts for **_libdelegate_metal.a_**\r\n- **_tensorflow/lite/delegates/gpu/metal/CMakeLists.txt_** - to generate build scripts for following libraries, that would be necessary to link with **_libdelegate_metal.a_** in order to use metal delegate:\r\n  - libbuffer.a\r\n  - libbuffer_convert.a\r\n  - libcommon.a\r\n  - libcompute_task.a\r\n  - libinference_context.a\r\n  - liblinear_storage.a\r\n  - libmetal_arguments.a\r\n  - libmetal_device.a\r\n  - libmetal_spatial_tensor.a\r\n  - libtexture2d.a\r\n\r\nNote: I am not sure why some *.mm files we renamed to cc in this [pr](https://github.com/tensorflow/tensorflow/commit/b83ffd2602edef1dbd2bf1722ecc7e423f3d60be#diff-4ad734053f51aefe42a2bc46e23cd8a959f85b609ef25c7f66b20d2d5dc8e635), so I have to mark them as **objcxx** explicitly to have proper compile flags.","created_at":"2021-08-12T12:46:46Z","closed_at":"2021-11-25T17:21:58Z","merged_at":"2021-11-25T17:21:57Z","user_id":3313166,"sentiment":{"polarity":0.0,"subjectivity":0.4}}
{"_id":710774553,"title":"Only preload kernels from running TF instance","body":"Previously, kernels from every installed instance of TensorFlow would be\r\npreloaded, causing potential ABI conflicts.\r\n\r\nFixes #51451","created_at":"2021-08-12T11:55:07Z","closed_at":"2021-08-18T17:53:24Z","merged_at":"2021-08-18T17:53:23Z","user_id":4813047,"sentiment":{"polarity":0.0,"subjectivity":1.0}}
{"_id":710656375,"title":"Fix protobuf errors when using system protobuf","body":"When tensorflow and python protobuf use the same instance of\r\nlibprotobuf, pywrap_tensorflow must be imported before anything\r\nelse that would import protobuf definitions.\r\n\r\nFixes #50545. See that thread for a Dockerfile with a reproduction\r\nof the error.","created_at":"2021-08-12T10:35:10Z","closed_at":"2021-08-18T12:48:36Z","merged_at":"2021-08-18T12:48:36Z","user_id":4813047,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":709810004,"title":"Karen/r2.6","body":"Adding LEGAL-NOTICE and third-party-programs.txt for the release.","created_at":"2021-08-11T23:27:17Z","closed_at":"2021-08-12T22:02:09Z","merged_at":null,"user_id":32109466,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":709695156,"title":"(TF-TRT) Refactor \"convert_nodes_test.cc\" by breaking out major GTest fixture interfaces + other cleanup.","body":"Builds upon this [PR](https://github.com/tensorflow/tensorflow/pull/51235). Only commits from `TF-TRT: Elide dangerous absl::string_view...` are relevant here.\r\n\r\nThis PR's changes are:\r\n\r\nLarger changes:\r\n1. It breaks out the operation conversion GTest test fixture classes into a sub-folder `tf2tensorrt/convert/fixtures`. The actual test instantiations `TEST_F(..., ...)` remain in place in `convert_nodes_test.cc`. The purpose of this is to improve clarity of the unit tests, as currently `convert_nodes_test.cc` has a mess of utility functions, and the test fixture classes chained via inheritance further add to the confusion. By breaking out the fixtures (and separating their definition/implementations), it's easier to understand and assess further improvements for the test infrastructure.\r\n\r\nMedium:\r\n1. Change unit tests for Converter::PrepareTensorForShape into a\r\nvalue-parameterized test suite.\r\n2. Change unit tests for Converter quantization helpers into\r\ntype-parameterized test suite.\r\n3. Create `nvinfer_factory` namespace with utility methods as appropriate under `common/util.h`. This replaces various \"CreateDimsFromX\" functions.\r\n4. Pulled methods out of the OpConverter test fixtures for creating `tensorflow::Tensor` objects with ManagedGpuAllocator and bundled into class `TensorFactory` under `utils/`. \r\n\r\nSmall:\r\n1. Add `ostream<<(ostream, TRT_ShapedWeights)` printing operator so GTest prints reasonable values for TRT_ShapedWeights.\r\n2. Remove incorrect string_view usage in Converter\r\n3. Rearrange utility functions for InputOutputData and nvinfer1::Dims","created_at":"2021-08-11T21:52:48Z","closed_at":"2021-09-01T22:40:33Z","merged_at":null,"user_id":30323187,"sentiment":{"polarity":-0.03125,"subjectivity":0.4375}}
{"_id":709362264,"title":"Update release notes for 2.6.0 release and patch releases","body":null,"created_at":"2021-08-11T17:58:35Z","closed_at":"2021-08-11T18:53:56Z","merged_at":"2021-08-11T18:53:56Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":708146702,"title":"Stateless mhlo rng_uniform to linalg lowering","body":"Added lowering from mhlo rng_uniform to linalg.\r\nBased off modified LCG Algorithm from linalg dialect\r\nthat takes into account the element's indices.","created_at":"2021-08-11T04:11:02Z","closed_at":"2021-08-13T22:00:55Z","merged_at":"2021-08-13T22:00:55Z","user_id":68087699,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":708088046,"title":"[ROCm]: Updating Matrix Solve Op to use rocSolver","body":"Changes in this PR:\r\n\r\n1. Adding rocSolver functions to be used in matrix solve op\r\n              CudaSolver and ROCmSolver classes -> GpuSolver class\r\n2.  Merged cuda_solvers.h and rocm_solvers.h into gpu_solvers.h \r\n","created_at":"2021-08-11T03:18:43Z","closed_at":"2021-09-16T08:26:56Z","merged_at":"2021-09-16T08:26:56Z","user_id":25489675,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":707504216,"title":"[tf.data] graduate sample_from_datasets API from experimental to tf.data.Dataset","body":"This PR graduates the `tf.data.experimental.sample_from_datasets` API into `tf.data.Dataset.sample_from_datasets`  by making the following changes:\r\n\r\n- [x] Adds the deprecation decorator for the experimental API.\r\n- [x] Add the sample_from_datasets() method to DatasetV2 class.\r\n- [x] Updates example in documentation with new API.\r\n- [x] Regenerate golden API's.\r\n- [x] Updated the `sample_from_datasets` usage in tests.\r\n- [x] Updated the RELEASE.md file\r\n\r\nTEST LOG\r\n```\r\nINFO: Elapsed time: 13.473s, Critical Path: 12.85s\r\nINFO: 54 processes: 16 internal, 38 local.\r\nINFO: Build completed successfully, 54 total actions\r\n//tensorflow/python/data/experimental/kernel_tests/service:dynamic_sharding_test PASSED in 9.0s\r\n  Stats over 16 runs: max = 9.0s, min = 7.5s, avg = 8.2s, dev = 0.5s\r\n\r\nINFO: Elapsed time: 0.751s, Critical Path: 0.00s\r\nINFO: 1 process: 1 internal.\r\nINFO: Build completed successfully, 1 total action\r\n//tensorflow/python/data/experimental/kernel_tests:directed_interleave_dataset_test (cached) PASSED in 8.3s\r\n  Stats over 24 runs: max = 8.3s, min = 1.9s, avg = 3.6s, dev = 1.9s\r\n\r\nINFO: Elapsed time: 6.299s, Critical Path: 5.75s\r\nINFO: 13 processes: 3 internal, 10 local.\r\nINFO: Build completed successfully, 13 total actions\r\n//tensorflow/python/data/kernel_tests:rejection_resample_test            PASSED in 5.7s\r\n  Stats over 10 runs: max = 5.7s, min = 2.8s, avg = 4.2s, dev = 1.2s\r\n\r\n```\r\n\r\n@aaudiber The lazy import of `interleave_ops` in `dataset_ops.py` is still applicable as `choose_from_datasets_v2` is still experimental. I can work on promoting `choose_from_datasets` after this PR so that we can proceed with refactoring `dataset_ops`.\r\ncc: @jsimsa ","created_at":"2021-08-10T17:14:25Z","closed_at":"2021-08-26T19:31:14Z","merged_at":null,"user_id":25393945,"sentiment":{"polarity":0.1,"subjectivity":0.4}}
{"_id":707436347,"title":"Add TF-TRT Python integration tests in dynamic shape mode","body":"This PR updates TF-TRT Python unit test to run both implicit batch and dynamic shape tests. \r\n\r\nSome of the test have to be adjusted because the conversion rate is different in dynamic shape mode. Comments that explain the difference are added to the tests.\r\n\r\nApart from updating the test, this PR also removes the requirement to run build mode in dynamic shape mode. The necessary changes in trt_engine_op were implemented already in dynamic shape phase 3, but the Python side error message was not removed at that time.\r\n\r\nTagging @bixia1 for review. Tracker #45481 ","created_at":"2021-08-10T15:03:08Z","closed_at":"2021-09-14T15:43:21Z","merged_at":"2021-09-14T15:43:21Z","user_id":3671106,"sentiment":{"polarity":0.0,"subjectivity":0.16666666666666666}}
{"_id":707359467,"title":"Add pre-load CPU feature guard check","body":"Follow-up from #48024: building the library and Python code loading it.","created_at":"2021-08-10T13:31:55Z","closed_at":"2021-08-17T21:00:56Z","merged_at":"2021-08-17T21:00:56Z","user_id":184179,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":707158695,"title":"TF Lite unit (kernel) tests CMake build fix","body":"The recent changes in the TF Lite kernel tests architecture were reflected in Bazel build system **but not in CMake**, leading to runtime failure when built using this platform.\r\n\r\nThis change **updates the TF Lite kernel tests CMake build configuration** and adds a minor check for easier future debugging. ","created_at":"2021-08-10T08:54:51Z","closed_at":"2021-10-11T06:02:58Z","merged_at":null,"user_id":34263128,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":706768383,"title":"Update version numbers for TensorFlow 2.6.0","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 6 -> 6\nPatch: 0 -> 0\n\nNo lingering old version strings \"2.6.0-rc2\" found in source directory \n\"tensorflow/\". Good.\nNo lingering old version strings \"2.6.0rc2\" found in source directory \n\"tensorflow/\". Good.\n```","created_at":"2021-08-09T19:08:51Z","closed_at":"2021-08-09T19:10:28Z","merged_at":"2021-08-09T19:10:28Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":706729143,"title":"Update keras and estimator deps","body":"PiperOrigin-RevId: 389672438\r\nChange-Id: Iaee9f29c10caeffad752009faa1fcafab7935b67","created_at":"2021-08-09T18:07:00Z","closed_at":"2021-08-09T18:17:57Z","merged_at":"2021-08-09T18:17:57Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":706670612,"title":"2.6 cherry-pick request: Update tensorboard dependencies.","body":"Update tensorboard dependency to 2.6.x and tb-nightly dependency to 2.7.x.\r\nNecessary to have a tensorboard version installed with tensorflow 2.6.0 that will work.\r\n\r\nPiperOrigin-RevId: 389635311\r\nChange-Id: I73e876a3f398463f600c4c61bfd27468a1d7a2dc","created_at":"2021-08-09T16:34:41Z","closed_at":"2021-08-09T17:23:28Z","merged_at":"2021-08-09T17:23:28Z","user_id":17152369,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":706458030,"title":"Use new GPU kernel for [unsorted] segment reductions","body":"- Optionally replaces the old atomics-based kernels with calls to `SegmentReduceGPU` (the same kernel already used for sparse segment reductions). This behavior is enabled by default, but the old kernels can be re-enabled by setting the environment variable `TF_USE_ATOMIC_SEGMENT_REDUCTIONS=1`. On Windows, the old kernels are always used due to a build issue with the new kernel.\r\n- This improves performance, and guarantees that these ops are deterministic. In future it is hoped that the old kernels can be removed completely.\r\n- Also adds a GPU kernel registration for `SegmentMean`, which didn't previously exist.\r\n\r\ncc @nluehr @reedwm @duncanriach ","created_at":"2021-08-09T12:01:53Z","closed_at":"2021-08-26T00:37:14Z","merged_at":"2021-08-26T00:37:14Z","user_id":3979096,"sentiment":{"polarity":0.13636363636363635,"subjectivity":0.45454545454545453}}
{"_id":706412206,"title":"Add GPU kernel for SparseConcat","body":"Adds GPU implementation and enables tests on GPU.\r\n\r\ncc @nluehr @sanjoy ","created_at":"2021-08-09T10:50:31Z","closed_at":"2021-08-31T00:16:06Z","merged_at":"2021-08-31T00:16:06Z","user_id":3979096,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":706126616,"title":"Disable broken/flaky test","body":null,"created_at":"2021-08-08T23:44:39Z","closed_at":"2021-08-08T23:44:52Z","merged_at":"2021-08-08T23:44:52Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":706126613,"title":"Disable broken/flaky test","body":null,"created_at":"2021-08-08T23:44:37Z","closed_at":"2021-08-08T23:44:48Z","merged_at":"2021-08-08T23:44:47Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":706106327,"title":"Fix compile error, no function call needed","body":null,"created_at":"2021-08-08T21:04:52Z","closed_at":"2021-08-08T21:05:02Z","merged_at":"2021-08-08T21:05:02Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":706105427,"title":"Fix compile error, missing implicit conversion","body":null,"created_at":"2021-08-08T20:57:10Z","closed_at":"2021-08-08T20:57:27Z","merged_at":"2021-08-08T20:57:27Z","user_id":323199,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":706105420,"title":"Fix compile error, missing implicit conversion","body":null,"created_at":"2021-08-08T20:57:07Z","closed_at":"2021-08-08T20:57:20Z","merged_at":"2021-08-08T20:57:19Z","user_id":323199,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":706104590,"title":"Disable broken/flaky test","body":null,"created_at":"2021-08-08T20:49:47Z","closed_at":"2021-08-08T20:49:54Z","merged_at":"2021-08-08T20:49:54Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":706023427,"title":"Add expected failing test for path with glob","body":"Add a failing test for https://github.com/tensorflow/tensorflow/issues/35489\r\n\r\n/cc @mihaimaruseac \r\n\r\nYou can test locally with:\r\n`bazel test --test_arg=FileIoTest.testGetMatchingFilesWhenContainsGlob  //tensorflow/python/lib/io:file_io_test`\r\n\r\nWhen the test will fail it is probably fixed and you can remove `@unittest.expectedFailure` to pass the test. \r\nYou could temp comment `#@unittest.expectedFailure` for debugging the failure when you are developing a fix.\r\n\r\nWhen it will be fixed, more in general it is suggested that you will locally test the whole target:\r\n`bazel test --test_arg=FileIoTest.testGetMatchingFilesWhenContainsGlob  //tensorflow/python/lib/io:file_io_test`","created_at":"2021-08-08T11:01:09Z","closed_at":"2021-10-04T20:45:24Z","merged_at":null,"user_id":1710528,"sentiment":{"polarity":-0.1,"subjectivity":0.4}}
{"_id":705977437,"title":"[tflite] add same scale constraint to tflite's mean op","body":"Add SameOperandsAndResultsScal to tflite's mean. Without this constraint, post-training quantization ([PTQ](https://www.tensorflow.org/lite/performance/post_training_quantization)) may result in MEAN with different quantization scales for inputs and outputs. Because NNAPI only supports MEAN with same quantization parameters for inputs and output, this kind of mean ops could not be delegated to NNAPI via the NNAPI delegate.\r\n\r\nE.g., if we do PTQ on the [ResNet 50 from tfhub](https://tfhub.dev/tensorflow/resnet_50/classification/1),\r\n```python\r\nimport itertools\r\nimport os\r\nimport pathlib\r\nimport requests\r\nimport tarfile\r\n\r\nimport tensorflow as tf\r\nimport tensorflow_datasets as tfds\r\n\r\nsaved_model_dir = \"./resnet_saved_model/\"\r\nresnet_saved_model_file = \"https://tfhub.dev/tensorflow/resnet_50/classification/1?tf-hub-format=compressed\"\r\nresponse = requests.get(resnet_saved_model_file, stream=True)\r\nfile = tarfile.open(fileobj=response.raw, mode=\"r|gz\")\r\nfile.extractall(path=saved_model_dir)\r\n\r\nimagenet_validation = tfds.load(name=\"imagenet2012\", split=\"validation\")\r\n\r\ndef representative_data_gen():\r\n  for imagenet_example in imagenet_validation.take(100):\r\n    image, label = imagenet_example[\"image\"], imagenet_example[\"label\"]\r\n    image = tf.cast(image, tf.float32) / 255.0\r\n    image = tf.image.central_crop(image, central_fraction=0.875)\r\n    image = tf.expand_dims(image, 0)\r\n    image = tf.image.resize(image, (224,224))\r\n    yield [image]\r\n\r\nconverter = tf.lite.TFLiteConverter.from_saved_model(saved_model_dir)\r\nconverter.optimizations = [tf.lite.Optimize.DEFAULT]\r\nconverter.representative_dataset = representative_data_gen\r\nconverter.target_spec.supported_ops = [tf.lite.OpsSet.TFLITE_BUILTINS_INT8]\r\nconverter.inference_input_type = tf.int8 \r\nconverter.inference_output_type = tf.int8 \r\ntflite_quant_model = converter.convert()\r\n\r\ntflite_quant_model_file = pathlib.Path('/tmp')/\"resnet50_quant.tflite\"\r\ntflite_quant_model_file.write_bytes(tflite_quant_model)\r\n```\r\nthen `adb push /tmp/resnet50_quant.tflite /data/local/tmp/`, and run `benchmark_model` on device (here I ran it on a Pixel 4)\r\n```\r\n$ ./benchmark_model_validation --graph=resnet50_qnant.tflite   --use_nnapi=1 --enable_op_profiling=1\r\n\r\n```\r\nIt shows something like:\r\n```\r\nSTARTING!\r\nLog parameter values verbosely: [0]\r\nGraph: [resnet_v15_quant_original_mean.tflite]\r\nEnable op profiling: [1]\r\nUse NNAPI: [1]\r\nNNAPI accelerators available: [qti-default,qti-dsp,qti-gpu,google-edgetpu,nnapi-reference]\r\nLoaded model resnet50_quant.tflite\r\nINFO: Initialized TensorFlow Lite runtime.\r\nINFO: Created TensorFlow Lite delegate for NNAPI.\r\nNNAPI delegate created.\r\nWARNING: Operator MEAN (v2) refused by NNAPI delegate: NNAPI requires that the input and output have the same quantization parameters.\r\nINFO: Replacing 75 node(s) with delegate (TfLiteNnapiDelegate) node, yielding 3 partitions.\r\nExplicitly applied NNAPI delegate, and the model graph will be partially executed by the delegate w/ 2 delegate kernels.\r\n.......\r\nOperator-wise Profiling Info for Regular Benchmark Runs:\r\n============================== Run Order ==============================\r\n\t             [node type]\t          [start]\t  [first]\t [avg ms]\t     [%]\t  [cdf%]\t  [mem KB]\t[times called]\t[Name]\r\n\t     TfLiteNnapiDelegate\t            0.009\t   14.431\t   14.449\t 48.545%\t 48.545%\t     0.000\t        1\t[resnet50/activation_48/Relu;resnet50/add_15/add]:76\r\n\t                    MEAN\t           14.460\t   13.399\t   13.501\t 45.359%\t 93.904%\t     0.000\t        1\t[resnet50/reduce_mean/Mean]:73\r\n\t     TfLiteNnapiDelegate\t           27.962\t    1.754\t    1.814\t  6.096%\t100.000%\t     0.000\t        1\t[StatefulPartitionedCall:0]:77\r\n.......\r\nNumber of nodes executed: 3\r\n============================== Summary by node type ==============================\r\n\t             [Node type]\t  [count]\t  [avg ms]\t    [avg %]\t    [cdf %]\t  [mem KB]\t[times called]\r\n\t     TfLiteNnapiDelegate\t        2\t    16.263\t    54.642%\t    54.642%\t     0.000\t        2\r\n\t                    MEAN\t        1\t    13.500\t    45.358%\t   100.000%\t     0.000\t        1\r\n\r\nTimings (microseconds): count=50 first=29584 curr=22585 min=22585 max=33233 avg=29764 std=1779\r\nMemory (bytes): count=0\r\n3 nodes observe\r\n```\r\nWith this constraint applied, for the same ResNet 50 model, I got something like the following:\r\n```\r\n....\r\nNumber of nodes executed: 1\r\n============================== Summary by node type ==============================\r\n\t             [Node type]\t  [count]\t  [avg ms]\t    [avg %]\t    [cdf %]\t  [mem KB]\t[times called]\r\n\t     TfLiteNnapiDelegate\t        1\t    14.762\t   100.000%\t   100.000%\t     0.000\t        1\r\n\r\nTimings (microseconds): count=67 first=14774 curr=15087 min=13959 max=15226 avg=14762.4 std=248\r\nMemory (bytes): count=0\r\n1 nodes observed\r\n```","created_at":"2021-08-08T03:34:23Z","closed_at":"2021-08-09T09:38:37Z","merged_at":null,"user_id":3395998,"sentiment":{"polarity":-0.15625,"subjectivity":0.40625}}
{"_id":705962192,"title":"Fix build","body":null,"created_at":"2021-08-08T00:20:39Z","closed_at":"2021-08-08T00:20:47Z","merged_at":"2021-08-08T00:20:47Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705959128,"title":"Fix build","body":null,"created_at":"2021-08-07T23:49:08Z","closed_at":"2021-08-07T23:49:47Z","merged_at":"2021-08-07T23:49:47Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705959126,"title":"Fix build","body":null,"created_at":"2021-08-07T23:49:06Z","closed_at":"2021-08-07T23:49:42Z","merged_at":"2021-08-07T23:49:42Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705950633,"title":"Update version numbers for TensorFlow 2.4.3","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 4 -> 4\nPatch: 2 -> 3\n\nNo lingering old version strings \"2.4.2\" found in source directory \n\"tensorflow/\". Good.\nNo lingering old version strings \"2.4.2\" found in source directory \n\"tensorflow/\". Good.\n```","created_at":"2021-08-07T21:59:42Z","closed_at":"2021-08-07T22:04:59Z","merged_at":"2021-08-07T22:04:59Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705950571,"title":"Update version numbers for TensorFlow 2.3.4","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 3 -> 3\nPatch: 3 -> 4\n\nNo lingering old version strings \"2.3.3\" found in source directory \n\"tensorflow/\". Good.\nNo lingering old version strings \"2.3.3\" found in source directory \n\"tensorflow/\". Good.\n```","created_at":"2021-08-07T21:59:04Z","closed_at":"2021-08-07T22:04:53Z","merged_at":"2021-08-07T22:04:53Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705950535,"title":"Update version numbers for TensorFlow 2.5.1","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 5 -> 5\nPatch: 0 -> 1\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.5.0\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\nBinary file \ntensorflow/python/compiler/tensorrt/model_tests/sample_model/saved_model.pb \nmatches\ntensorflow/python/keras/__init__.py:33:2.5.0\nBinary file \ntensorflow/lite/python/testdata/control_flow_v1_saved_model/saved_model.pb \nmatches\ntensorflow/lite/micro/tools/ci_build/tflm_bazel/tensorflow.bzl:11:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:64:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:68:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:69:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:105:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:125:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:128:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:194:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:197:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:202:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:206:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:216:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:227:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:249:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:267:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:312:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:328:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:333:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:337:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:340:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:344:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:345:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:346:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:347:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:348:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:349:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:350:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:351:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:352:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:353:2.5.0\ntensorflow/lite/g3doc/guide/op_select_allowlist.md:782:2.5.0\ntensorflow/tools/pip_package/setup.py:104:2.5.0\ntensorflow/tools/pip_package/setup.py:107:2.5.0\ntensorflow/tools/pip_package/setup.py:119:2.5.0\ntensorflow/tools/pip_package/setup.py:121:2.5.0\ntensorflow/tools/pip_package/setup.py:123:2.5.0\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.5.0\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\nBinary file \ntensorflow/python/compiler/tensorrt/model_tests/sample_model/saved_model.pb \nmatches\ntensorflow/python/keras/__init__.py:33:2.5.0\nBinary file \ntensorflow/lite/python/testdata/control_flow_v1_saved_model/saved_model.pb \nmatches\ntensorflow/lite/micro/tools/ci_build/tflm_bazel/tensorflow.bzl:11:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:64:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:68:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:69:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:105:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:125:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:128:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:194:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:197:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:202:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:206:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:216:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:227:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:249:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:267:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:312:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:328:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:333:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:337:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:340:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:344:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:345:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:346:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:347:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:348:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:349:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:350:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:351:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:352:2.5.0\ntensorflow/lite/tools/versioning/runtime_version.cc:353:2.5.0\ntensorflow/lite/g3doc/guide/op_select_allowlist.md:782:2.5.0\ntensorflow/tools/pip_package/setup.py:104:2.5.0\ntensorflow/tools/pip_package/setup.py:107:2.5.0\ntensorflow/tools/pip_package/setup.py:119:2.5.0\ntensorflow/tools/pip_package/setup.py:121:2.5.0\ntensorflow/tools/pip_package/setup.py:123:2.5.0\n```","created_at":"2021-08-07T21:58:34Z","closed_at":"2021-08-07T22:05:03Z","merged_at":"2021-08-07T22:05:03Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705949715,"title":"Update release notes for TensorFlow 2.5.1","body":"This PR is intentionally incomplete. One of the Release Owners for 2.5.1\nneeds to fill in the internal release notes for this version before the PR gets\nsubmitted. Click on the :pencil2: icon in the header for `RELEASE.md` under\n\"Files Changed\" above.","created_at":"2021-08-07T21:49:12Z","closed_at":"2021-08-07T21:55:04Z","merged_at":null,"user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705949709,"title":"Update release notes for TensorFlow 2.4.3","body":"This PR is intentionally incomplete. One of the Release Owners for 2.4.3\nneeds to fill in the internal release notes for this version before the PR gets\nsubmitted. Click on the :pencil2: icon in the header for `RELEASE.md` under\n\"Files Changed\" above.","created_at":"2021-08-07T21:49:10Z","closed_at":"2021-08-07T21:55:03Z","merged_at":null,"user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705949703,"title":"Update release notes for TensorFlow 2.3.4","body":"This PR is intentionally incomplete. One of the Release Owners for 2.3.4\nneeds to fill in the internal release notes for this version before the PR gets\nsubmitted. Click on the :pencil2: icon in the header for `RELEASE.md` under\n\"Files Changed\" above.","created_at":"2021-08-07T21:49:07Z","closed_at":"2021-08-07T21:55:00Z","merged_at":null,"user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705946258,"title":"Update release notes for the new patch release.","body":null,"created_at":"2021-08-07T21:10:16Z","closed_at":"2021-08-07T21:35:28Z","merged_at":"2021-08-07T21:35:28Z","user_id":323199,"sentiment":{"polarity":0.13636363636363635,"subjectivity":0.45454545454545453}}
{"_id":705946252,"title":"Update release notes for the new patch release","body":null,"created_at":"2021-08-07T21:10:15Z","closed_at":"2021-08-07T21:35:34Z","merged_at":"2021-08-07T21:35:34Z","user_id":323199,"sentiment":{"polarity":0.13636363636363635,"subjectivity":0.45454545454545453}}
{"_id":705946250,"title":"Update release notes for the new patch release","body":null,"created_at":"2021-08-07T21:10:14Z","closed_at":"2021-08-07T21:35:42Z","merged_at":"2021-08-07T21:35:42Z","user_id":323199,"sentiment":{"polarity":0.13636363636363635,"subjectivity":0.45454545454545453}}
{"_id":705946244,"title":"Update release notes with the security updates.","body":null,"created_at":"2021-08-07T21:10:09Z","closed_at":"2021-08-07T21:36:09Z","merged_at":"2021-08-07T21:36:09Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705921051,"title":"Fix overflow/crash in tf.range when limits is large","body":"This PR tries to address the issue raised in #46913 where\r\ntf.range (and implicitly tf.keras.layers.RepeatVector)\r\nwill overflow/crash when limits is large.\r\n\r\nThe reason of the overflow is that while calculating\r\nthe size within the kernel, the conditional statements\r\ncomes with `int64 = cond ? int64 : double` will implicitly\r\nconvert to double first and then cast back to int64, causing\r\nthe overflow and crash.\r\n\r\nThis PR fixes the issue by casting to int64 in both selections\r\nwithin the conditional statements first.\r\n\r\nThis PR fixes #46913.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2021-08-07T17:25:15Z","closed_at":"2021-08-18T15:15:59Z","merged_at":"2021-08-18T15:15:58Z","user_id":6932348,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.42857142857142855}}
{"_id":705809435,"title":"Move some methods into runtime_shape.h","body":"Facilitates TFLM code size reductions.\r\n\r\nBUG=b/149862813","created_at":"2021-08-07T00:49:17Z","closed_at":"2021-08-10T01:33:12Z","merged_at":"2021-08-10T01:33:12Z","user_id":6947391,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705701318,"title":"Enable resource update aliasing in auto-clustering","body":"\r\nWe see cases where enabling resource update aliasing greatly reduces memory footprints.\r\n\r\n","created_at":"2021-08-06T19:28:47Z","closed_at":"2022-01-24T18:43:09Z","merged_at":null,"user_id":12016207,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705168856,"title":"fix error message","body":null,"created_at":"2021-08-06T03:49:57Z","closed_at":"2021-08-06T16:01:26Z","merged_at":null,"user_id":15855297,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705142843,"title":"Bump curl dependency to 7.77.0","body":"Handles the following CVEs:\r\n\r\n* [CVE-2021-22901](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-22901)\r\n* [CVE-2021-22898](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-22898)\r\n* [CVE-2021-22876](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-22876)\r\n* [CVE-2021-22897](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-22897)\r\n\r\nPiperOrigin-RevId: 384576784\r\nChange-Id: Iaf4f499736039ea957efb0af596d1a46f3062797","created_at":"2021-08-06T02:23:34Z","closed_at":"2021-08-06T02:34:11Z","merged_at":"2021-08-06T02:34:11Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705142809,"title":"Bump curl dependency to 7.77.0","body":"Handles the following CVEs:\r\n\r\n* [CVE-2021-22901](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-22901)\r\n* [CVE-2021-22898](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-22898)\r\n* [CVE-2021-22876](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-22876)\r\n* [CVE-2021-22897](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-22897)\r\n\r\nPiperOrigin-RevId: 384576784\r\nChange-Id: Iaf4f499736039ea957efb0af596d1a46f3062797","created_at":"2021-08-06T02:23:28Z","closed_at":"2021-08-06T02:33:56Z","merged_at":"2021-08-06T02:33:56Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705142777,"title":"Bump curl dependency to 7.77.0","body":"Handles the following CVEs:\r\n\r\n* [CVE-2021-22901](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-22901)\r\n* [CVE-2021-22898](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-22898)\r\n* [CVE-2021-22876](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-22876)\r\n* [CVE-2021-22897](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-22897)\r\n\r\nPiperOrigin-RevId: 384576784\r\nChange-Id: Iaf4f499736039ea957efb0af596d1a46f3062797","created_at":"2021-08-06T02:23:20Z","closed_at":"2021-08-06T02:33:44Z","merged_at":"2021-08-06T02:33:44Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705138289,"title":"fix segfault on string tensors with mismatched dimensions","body":"This is a cherrypick of #50508","created_at":"2021-08-06T02:10:12Z","closed_at":"2021-08-06T02:33:30Z","merged_at":"2021-08-06T02:33:30Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705135304,"title":"Prevent heap OOB read in TFLite's `gather.cc`.","body":"Passing negative indices is illegal but there was a missing check so that resulted in OOB accesses.\r\n\r\nPiperOrigin-RevId: 387231300\r\nChange-Id: I3111b54b2f232638d795be17efc46abe4ede6bf8","created_at":"2021-08-06T02:02:41Z","closed_at":"2021-08-06T02:33:19Z","merged_at":"2021-08-06T02:33:19Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705135275,"title":"Prevent heap OOB read in TFLite's `gather.cc`.","body":"Passing negative indices is illegal but there was a missing check so that resulted in OOB accesses.\r\n\r\nPiperOrigin-RevId: 387231300\r\nChange-Id: I3111b54b2f232638d795be17efc46abe4ede6bf8","created_at":"2021-08-06T02:02:37Z","closed_at":"2021-08-06T02:33:10Z","merged_at":"2021-08-06T02:33:10Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705135242,"title":"Prevent heap OOB read in TFLite's `gather.cc`.","body":"Passing negative indices is illegal but there was a missing check so that resulted in OOB accesses.\r\n\r\nPiperOrigin-RevId: 387231300\r\nChange-Id: I3111b54b2f232638d795be17efc46abe4ede6bf8","created_at":"2021-08-06T02:02:32Z","closed_at":"2021-08-06T02:33:00Z","merged_at":"2021-08-06T02:33:00Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705107240,"title":"Prevent division by 0 in LSH projection.","body":"PiperOrigin-RevId: 387225857\r\nChange-Id: Iaeb572a763618c64f503e0026f6dd9fd769bf50c","created_at":"2021-08-06T00:30:33Z","closed_at":"2021-08-06T00:34:31Z","merged_at":"2021-08-06T00:34:31Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705107239,"title":"Prevent division by 0 in LSH projection.","body":"PiperOrigin-RevId: 387225857\r\nChange-Id: Iaeb572a763618c64f503e0026f6dd9fd769bf50c","created_at":"2021-08-06T00:30:33Z","closed_at":"2021-08-06T00:34:20Z","merged_at":"2021-08-06T00:34:20Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705107227,"title":"Prevent division by 0 in LSH projection.","body":"PiperOrigin-RevId: 387225857\r\nChange-Id: Iaeb572a763618c64f503e0026f6dd9fd769bf50c","created_at":"2021-08-06T00:30:32Z","closed_at":"2021-08-06T00:34:09Z","merged_at":"2021-08-06T00:34:09Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705104967,"title":"Prevent nullptr dereference in MLIR TFLite dialect/optimizer.","body":"PiperOrigin-RevId: 387220762\r\nChange-Id: Id136ef04bb3d36123b4685d316ae81a9ec924d6b","created_at":"2021-08-06T00:24:21Z","closed_at":"2021-08-06T00:33:57Z","merged_at":"2021-08-06T00:33:57Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705104963,"title":"Prevent nullptr dereference in MLIR TFLite dialect/optimizer.","body":"PiperOrigin-RevId: 387220762\r\nChange-Id: Id136ef04bb3d36123b4685d316ae81a9ec924d6b","created_at":"2021-08-06T00:24:20Z","closed_at":"2021-08-06T00:33:44Z","merged_at":"2021-08-06T00:33:44Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705104953,"title":"Prevent nullptr dereference in MLIR TFLite dialect/optimizer.","body":"PiperOrigin-RevId: 387220762\r\nChange-Id: Id136ef04bb3d36123b4685d316ae81a9ec924d6b","created_at":"2021-08-06T00:24:19Z","closed_at":"2021-08-06T00:33:36Z","merged_at":"2021-08-06T00:33:35Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705100467,"title":"Prevent dereferencing of null pointers in TFLite's `add.cc`.","body":"PiperOrigin-RevId: 387244946\r\nChange-Id: I56094233327fbd8439b92e1dbb1262176e00eeb9","created_at":"2021-08-06T00:11:50Z","closed_at":"2021-08-06T00:33:26Z","merged_at":"2021-08-06T00:33:26Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705100460,"title":"Prevent dereferencing of null pointers in TFLite's `add.cc`.","body":"PiperOrigin-RevId: 387244946\r\nChange-Id: I56094233327fbd8439b92e1dbb1262176e00eeb9","created_at":"2021-08-06T00:11:48Z","closed_at":"2021-08-06T00:33:15Z","merged_at":"2021-08-06T00:33:15Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705100440,"title":"Prevent dereferencing of null pointers in TFLite's `add.cc`.","body":"PiperOrigin-RevId: 387244946\r\nChange-Id: I56094233327fbd8439b92e1dbb1262176e00eeb9","created_at":"2021-08-06T00:11:46Z","closed_at":"2021-08-06T00:33:01Z","merged_at":"2021-08-06T00:33:01Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705097486,"title":"Prevent heap OOB read in TFLite's `gather_nd.cc`.","body":"Passing negative indices is illegal but there was a missing check so that resulted in OOB accesses.\r\n\r\nPiperOrigin-RevId: 387208551\r\nChange-Id: I6b7a8a62d3e7c13a16d81619e5bc23ae2cdbc7fd","created_at":"2021-08-06T00:04:27Z","closed_at":"2021-08-06T00:32:50Z","merged_at":"2021-08-06T00:32:50Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705097480,"title":"Prevent heap OOB read in TFLite's `gather_nd.cc`.","body":"Passing negative indices is illegal but there was a missing check so that resulted in OOB accesses.\r\n\r\nPiperOrigin-RevId: 387208551\r\nChange-Id: I6b7a8a62d3e7c13a16d81619e5bc23ae2cdbc7fd","created_at":"2021-08-06T00:04:26Z","closed_at":"2021-08-06T00:32:39Z","merged_at":"2021-08-06T00:32:39Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705097467,"title":"Prevent heap OOB read in TFLite's `gather_nd.cc`.","body":"Passing negative indices is illegal but there was a missing check so that resulted in OOB accesses.\r\n\r\nPiperOrigin-RevId: 387208551\r\nChange-Id: I6b7a8a62d3e7c13a16d81619e5bc23ae2cdbc7fd","created_at":"2021-08-06T00:04:25Z","closed_at":"2021-08-06T00:32:28Z","merged_at":"2021-08-06T00:32:28Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705094427,"title":"Prevent an OOB read in `expand_dims.cc`","body":"The for loop that follows this check assumes that `axis` is between `0` and `input_dims.size`. If user supplied `axis` is negative, the if code before this check is supposed to bring it back to positive (similar to how in Python one can do `l[-3]` to mean `l[-3 + len(l)]`).\r\n\r\nPiperOrigin-RevId: 387200206\r\nChange-Id: I162f4feba12d547c3a4340833ae682016a2ebfab","created_at":"2021-08-05T23:55:53Z","closed_at":"2021-08-06T00:32:17Z","merged_at":"2021-08-06T00:32:17Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705094422,"title":"Prevent an OOB read in `expand_dims.cc`","body":"The for loop that follows this check assumes that `axis` is between `0` and `input_dims.size`. If user supplied `axis` is negative, the if code before this check is supposed to bring it back to positive (similar to how in Python one can do `l[-3]` to mean `l[-3 + len(l)]`).\r\n\r\nPiperOrigin-RevId: 387200206\r\nChange-Id: I162f4feba12d547c3a4340833ae682016a2ebfab","created_at":"2021-08-05T23:55:51Z","closed_at":"2021-08-06T00:32:04Z","merged_at":"2021-08-06T00:32:04Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705094410,"title":"Prevent an OOB read in `expand_dims.cc`","body":"The for loop that follows this check assumes that `axis` is between `0` and `input_dims.size`. If user supplied `axis` is negative, the if code before this check is supposed to bring it back to positive (similar to how in Python one can do `l[-3]` to mean `l[-3 + len(l)]`).\r\n\r\nPiperOrigin-RevId: 387200206\r\nChange-Id: I162f4feba12d547c3a4340833ae682016a2ebfab","created_at":"2021-08-05T23:55:48Z","closed_at":"2021-08-06T00:31:55Z","merged_at":"2021-08-06T00:31:55Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705085704,"title":"Prevent a division by 0 in average ops.","body":"PiperOrigin-RevId: 385184660\r\nChange-Id: I7affd4554f9b336fca29ac68f633232c094d0bd3","created_at":"2021-08-05T23:28:05Z","closed_at":"2021-08-05T23:43:15Z","merged_at":"2021-08-05T23:43:15Z","user_id":323199,"sentiment":{"polarity":-0.15,"subjectivity":0.39999999999999997}}
{"_id":705085652,"title":"Prevent a division by 0 in average ops.","body":"PiperOrigin-RevId: 385184660\r\nChange-Id: I7affd4554f9b336fca29ac68f633232c094d0bd3","created_at":"2021-08-05T23:27:55Z","closed_at":"2021-08-05T23:43:04Z","merged_at":"2021-08-05T23:43:04Z","user_id":323199,"sentiment":{"polarity":-0.15,"subjectivity":0.39999999999999997}}
{"_id":705085561,"title":"Prevent a division by 0 in average ops.","body":"PiperOrigin-RevId: 385184660\r\nChange-Id: I7affd4554f9b336fca29ac68f633232c094d0bd3","created_at":"2021-08-05T23:27:39Z","closed_at":"2021-08-05T23:42:52Z","merged_at":"2021-08-05T23:42:52Z","user_id":323199,"sentiment":{"polarity":-0.15,"subjectivity":0.39999999999999997}}
{"_id":705082868,"title":"Prevent a division by 0 in division ops.","body":"PiperOrigin-RevId: 385223169\r\nChange-Id: Ia4228960b5d2aa44480385f74bdd70d21a3613c3","created_at":"2021-08-05T23:19:34Z","closed_at":"2021-08-05T23:42:23Z","merged_at":"2021-08-05T23:42:23Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705082859,"title":"Prevent a division by 0 in division ops.","body":"PiperOrigin-RevId: 385223169\r\nChange-Id: Ia4228960b5d2aa44480385f74bdd70d21a3613c3","created_at":"2021-08-05T23:19:33Z","closed_at":"2021-08-05T23:42:15Z","merged_at":"2021-08-05T23:42:15Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705082850,"title":"Prevent a division by 0 in division ops.","body":"PiperOrigin-RevId: 385223169\r\nChange-Id: Ia4228960b5d2aa44480385f74bdd70d21a3613c3","created_at":"2021-08-05T23:19:31Z","closed_at":"2021-08-05T23:42:05Z","merged_at":"2021-08-05T23:42:05Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705079927,"title":"Fix a null pointer exception caused by branching on uninitialized data.","body":"This is due to not checking that the params for the quantization exists. If there is no quantization, we should not access the `.params` field.\r\n\r\nPiperOrigin-RevId: 385173491\r\nChange-Id: I8fc476c4b274fdb21ba741caa0fbc6d1b8840663","created_at":"2021-08-05T23:13:31Z","closed_at":"2021-08-05T23:45:16Z","merged_at":"2021-08-05T23:45:16Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705079920,"title":"Fix a null pointer exception caused by branching on uninitialized data.","body":"This is due to not checking that the params for the quantization exists. If there is no quantization, we should not access the `.params` field.\r\n\r\nPiperOrigin-RevId: 385173491\r\nChange-Id: I8fc476c4b274fdb21ba741caa0fbc6d1b8840663","created_at":"2021-08-05T23:13:30Z","closed_at":"2021-08-05T23:45:07Z","merged_at":"2021-08-05T23:45:07Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705079906,"title":"Fix a null pointer exception caused by branching on uninitialized data.","body":"This is due to not checking that the params for the quantization exists. If there is no quantization, we should not access the `.params` field.\r\n\r\nPiperOrigin-RevId: 385173491\r\nChange-Id: I8fc476c4b274fdb21ba741caa0fbc6d1b8840663","created_at":"2021-08-05T23:13:28Z","closed_at":"2021-08-05T23:44:55Z","merged_at":"2021-08-05T23:44:55Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705079239,"title":"Fix a null pointer exception caused by branching on uninitialized data.","body":"This is due to not checking that the params for the quantization exists. If there is no quantization, we should not access the `.params` field.\r\n\r\nPiperOrigin-RevId: 385168337\r\nChange-Id: I28661e4f12ba1c92cfeae23d22a3fb2df2a2c6a4","created_at":"2021-08-05T23:11:46Z","closed_at":"2021-08-05T23:44:44Z","merged_at":"2021-08-05T23:44:44Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705079224,"title":"Fix a null pointer exception caused by branching on uninitialized data.","body":"This is due to not checking that the params for the quantization exists. If there is no quantization, we should not access the `.params` field.\r\n\r\nPiperOrigin-RevId: 385168337\r\nChange-Id: I28661e4f12ba1c92cfeae23d22a3fb2df2a2c6a4","created_at":"2021-08-05T23:11:44Z","closed_at":"2021-08-05T23:44:34Z","merged_at":"2021-08-05T23:44:34Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705078856,"title":"Fix a null pointer exception caused by branching on uninitialized data.","body":"This is due to not checking that the params for the quantization exists. If there is no quantization, we should not access the `.params` field.\r\n\r\nPiperOrigin-RevId: 385163909\r\nChange-Id: I2beb8d50649b6542db224c163033fbcbaa49314f","created_at":"2021-08-05T23:10:48Z","closed_at":"2021-08-05T23:44:24Z","merged_at":"2021-08-05T23:44:24Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705078843,"title":"Fix a null pointer exception caused by branching on uninitialized data.","body":"This is due to not checking that the params for the quantization exists. If there is no quantization, we should not access the `.params` field.\r\n\r\nPiperOrigin-RevId: 385163909\r\nChange-Id: I2beb8d50649b6542db224c163033fbcbaa49314f","created_at":"2021-08-05T23:10:46Z","closed_at":"2021-08-05T23:44:11Z","merged_at":"2021-08-05T23:44:11Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705078817,"title":"Fix a null pointer exception caused by branching on uninitialized data.","body":"This is due to not checking that the params for the quantization exists. If there is no quantization, we should not access the `.params` field.\r\n\r\nPiperOrigin-RevId: 385163909\r\nChange-Id: I2beb8d50649b6542db224c163033fbcbaa49314f","created_at":"2021-08-05T23:10:43Z","closed_at":"2021-08-05T23:43:59Z","merged_at":"2021-08-05T23:43:59Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705072502,"title":"Fix a null pointer exception in SVDF","body":"This is due to not checking that `GetVariableInput` returns non-null tensor.\r\n\r\nAlso fix a potential null pointer exception in `GetVariableInput`.\r\n\r\nPiperOrigin-RevId: 385160147\r\nChange-Id: Iadf3f0705b036a9014d27caa5a8bbd91f4c4c401","created_at":"2021-08-05T22:54:52Z","closed_at":"2021-08-05T23:43:48Z","merged_at":"2021-08-05T23:43:48Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705072500,"title":"Fix a null pointer exception in SVDF","body":"This is due to not checking that `GetVariableInput` returns non-null tensor.\r\n\r\nAlso fix a potential null pointer exception in `GetVariableInput`.\r\n\r\nPiperOrigin-RevId: 385160147\r\nChange-Id: Iadf3f0705b036a9014d27caa5a8bbd91f4c4c401","created_at":"2021-08-05T22:54:51Z","closed_at":"2021-08-05T23:43:36Z","merged_at":"2021-08-05T23:43:36Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705072492,"title":"Fix a null pointer exception in SVDF","body":"This is due to not checking that `GetVariableInput` returns non-null tensor.\r\n\r\nAlso fix a potential null pointer exception in `GetVariableInput`.\r\n\r\nPiperOrigin-RevId: 385160147\r\nChange-Id: Iadf3f0705b036a9014d27caa5a8bbd91f4c4c401","created_at":"2021-08-05T22:54:50Z","closed_at":"2021-08-05T23:43:27Z","merged_at":"2021-08-05T23:43:27Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705066080,"title":"Prevent division by 0 in `fully_connected.cc`","body":"PiperOrigin-RevId: 385137282\r\nChange-Id: If201e69b6e0048f0be001330b4b977e2b46db2cb","created_at":"2021-08-05T22:36:44Z","closed_at":"2021-08-05T23:45:48Z","merged_at":"2021-08-05T23:45:48Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705066077,"title":"Prevent division by 0 in `fully_connected.cc`","body":"PiperOrigin-RevId: 385137282\r\nChange-Id: If201e69b6e0048f0be001330b4b977e2b46db2cb","created_at":"2021-08-05T22:36:43Z","closed_at":"2021-08-05T23:45:38Z","merged_at":"2021-08-05T23:45:38Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705066075,"title":"Prevent division by 0 in `fully_connected.cc`","body":"PiperOrigin-RevId: 385137282\r\nChange-Id: If201e69b6e0048f0be001330b4b977e2b46db2cb","created_at":"2021-08-05T22:36:42Z","closed_at":"2021-08-05T23:45:29Z","merged_at":"2021-08-05T23:45:29Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705018688,"title":"Fix bug that could cause map_fn to produce incorrect results (rather …","body":"…than an error)\r\n\r\nwhen mapping over a ragged tensor with an inappropriate fn_output_signature.  (Note: there are cases where the default value for fn_output_signature is not appropriate, so the user needs to explicitly specify the correct output signature.)\r\n\r\nPiperOrigin-RevId: 387606546\r\nChange-Id: Ib4ea27b9634e6ab413f211cfe809a69a90f0e2cd","created_at":"2021-08-05T20:59:27Z","closed_at":"2021-08-05T22:13:42Z","merged_at":"2021-08-05T22:13:42Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705018680,"title":"Fix bug that could cause map_fn to produce incorrect results (rather …","body":"…than an error)\r\n\r\nwhen mapping over a ragged tensor with an inappropriate fn_output_signature.  (Note: there are cases where the default value for fn_output_signature is not appropriate, so the user needs to explicitly specify the correct output signature.)\r\n\r\nPiperOrigin-RevId: 387606546\r\nChange-Id: Ib4ea27b9634e6ab413f211cfe809a69a90f0e2cd","created_at":"2021-08-05T20:59:27Z","closed_at":"2021-08-05T22:13:31Z","merged_at":"2021-08-05T22:13:31Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705018667,"title":"Fix bug that could cause map_fn to produce incorrect results (rather …","body":"…than an error)\r\n\r\nwhen mapping over a ragged tensor with an inappropriate fn_output_signature.  (Note: there are cases where the default value for fn_output_signature is not appropriate, so the user needs to explicitly specify the correct output signature.)\r\n\r\nPiperOrigin-RevId: 387606546\r\nChange-Id: Ib4ea27b9634e6ab413f211cfe809a69a90f0e2cd","created_at":"2021-08-05T20:59:26Z","closed_at":"2021-08-05T22:13:15Z","merged_at":"2021-08-05T22:13:15Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705011871,"title":"Use the safer `safe_load` function instead of `unsafe_load` when poss…","body":"…ible\r\n\r\nThere is no need to open ourselves up to arbitrary code execution, especially since this is not in a performance critical loop, so we can take the slowdown due to safety.\r\n\r\nPiperOrigin-RevId: 388501098\r\nChange-Id: I3434318a5e07a798490533b554f46752397837e5","created_at":"2021-08-05T20:46:59Z","closed_at":"2021-08-05T22:16:38Z","merged_at":"2021-08-05T22:16:38Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705011716,"title":"Use the safer `safe_load` function instead of `unsafe_load` when poss…","body":"…ible\r\n\r\nThere is no need to open ourselves up to arbitrary code execution, especially since this is not in a performance critical loop, so we can take the slowdown due to safety.\r\n\r\nPiperOrigin-RevId: 388501098\r\nChange-Id: I3434318a5e07a798490533b554f46752397837e5","created_at":"2021-08-05T20:46:41Z","closed_at":"2021-08-05T22:16:19Z","merged_at":"2021-08-05T22:16:19Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705011658,"title":"Use the safer `safe_load` function instead of `unsafe_load` when poss…","body":"…ible\r\n\r\nThere is no need to open ourselves up to arbitrary code execution, especially since this is not in a performance critical loop, so we can take the slowdown due to safety.\r\n\r\nPiperOrigin-RevId: 388501098\r\nChange-Id: I3434318a5e07a798490533b554f46752397837e5","created_at":"2021-08-05T20:46:35Z","closed_at":"2021-08-05T22:16:05Z","merged_at":"2021-08-05T22:16:05Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705011594,"title":"Use the safer `safe_load` function instead of `unsafe_load` when poss…","body":"…ible\r\n\r\nThere is no need to open ourselves up to arbitrary code execution, especially since this is not in a performance critical loop, so we can take the slowdown due to safety.\r\n\r\nPiperOrigin-RevId: 388501098\r\nChange-Id: I3434318a5e07a798490533b554f46752397837e5","created_at":"2021-08-05T20:46:28Z","closed_at":"2021-08-05T22:15:54Z","merged_at":"2021-08-05T22:15:53Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705004319,"title":"Fix a shape inference issue leading to nullptr deref.","body":"PiperOrigin-RevId: 387712259\r\nChange-Id: I7e670772b259c068a501a187cd89f18773bb95a1","created_at":"2021-08-05T20:32:50Z","closed_at":"2021-08-05T22:15:43Z","merged_at":"2021-08-05T22:15:43Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705004311,"title":"Fix a shape inference issue leading to nullptr deref.","body":"PiperOrigin-RevId: 387712259\r\nChange-Id: I7e670772b259c068a501a187cd89f18773bb95a1","created_at":"2021-08-05T20:32:49Z","closed_at":"2021-08-05T22:15:32Z","merged_at":"2021-08-05T22:15:32Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":705004294,"title":"Fix a shape inference issue leading to nullptr deref.","body":"PiperOrigin-RevId: 387712259\r\nChange-Id: I7e670772b259c068a501a187cd89f18773bb95a1","created_at":"2021-08-05T20:32:48Z","closed_at":"2021-08-05T22:15:20Z","merged_at":"2021-08-05T22:15:20Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704998924,"title":"Prevent division by 0 in common shape functions.","body":"PiperOrigin-RevId: 387712197\r\nChange-Id: Id25c7460e35b68aeeeac23b9a88e455b443ee149","created_at":"2021-08-05T20:23:05Z","closed_at":"2021-08-05T22:15:09Z","merged_at":"2021-08-05T22:15:09Z","user_id":323199,"sentiment":{"polarity":-0.3,"subjectivity":0.5}}
{"_id":704998906,"title":"Prevent division by 0 in common shape functions.","body":"PiperOrigin-RevId: 387712197\r\nChange-Id: Id25c7460e35b68aeeeac23b9a88e455b443ee149","created_at":"2021-08-05T20:23:03Z","closed_at":"2021-08-05T22:14:54Z","merged_at":"2021-08-05T22:14:54Z","user_id":323199,"sentiment":{"polarity":-0.3,"subjectivity":0.5}}
{"_id":704998891,"title":"Prevent division by 0 in common shape functions.","body":"PiperOrigin-RevId: 387712197\r\nChange-Id: Id25c7460e35b68aeeeac23b9a88e455b443ee149","created_at":"2021-08-05T20:23:01Z","closed_at":"2021-08-05T22:14:44Z","merged_at":"2021-08-05T22:14:43Z","user_id":323199,"sentiment":{"polarity":-0.3,"subjectivity":0.5}}
{"_id":704982510,"title":"Prevent a segfault in shape inference due to bad inputs.","body":"PiperOrigin-RevId: 387737970\r\nChange-Id: Ibd1cf3dbdce1dd2ab47fd633d5c5a57f7d8fb6e9","created_at":"2021-08-05T19:55:46Z","closed_at":"2021-08-05T22:14:15Z","merged_at":"2021-08-05T22:14:15Z","user_id":323199,"sentiment":{"polarity":-0.4124999999999999,"subjectivity":0.5208333333333333}}
{"_id":704982504,"title":"Prevent a segfault in shape inference due to bad inputs.","body":"PiperOrigin-RevId: 387737970\r\nChange-Id: Ibd1cf3dbdce1dd2ab47fd633d5c5a57f7d8fb6e9","created_at":"2021-08-05T19:55:45Z","closed_at":"2021-08-05T22:14:04Z","merged_at":"2021-08-05T22:14:04Z","user_id":323199,"sentiment":{"polarity":-0.4124999999999999,"subjectivity":0.5208333333333333}}
{"_id":704982479,"title":"Prevent a segfault in shape inference due to bad inputs.","body":"PiperOrigin-RevId: 387737970\r\nChange-Id: Ibd1cf3dbdce1dd2ab47fd633d5c5a57f7d8fb6e9","created_at":"2021-08-05T19:55:43Z","closed_at":"2021-08-05T22:13:53Z","merged_at":"2021-08-05T22:13:53Z","user_id":323199,"sentiment":{"polarity":-0.4124999999999999,"subjectivity":0.5208333333333333}}
{"_id":704969748,"title":"Add missing validation to `maxpooling_op.cc`","body":"PiperOrigin-RevId: 387932441\r\nChange-Id: I43a0b24e6a12cc965611144ba035accd384594b9","created_at":"2021-08-05T19:34:06Z","closed_at":"2021-08-05T19:43:45Z","merged_at":"2021-08-05T19:43:45Z","user_id":323199,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":704969736,"title":"Add missing validation to `maxpooling_op.cc`","body":"PiperOrigin-RevId: 387932441\r\nChange-Id: I43a0b24e6a12cc965611144ba035accd384594b9","created_at":"2021-08-05T19:34:05Z","closed_at":"2021-08-05T19:43:35Z","merged_at":"2021-08-05T19:43:35Z","user_id":323199,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":704969726,"title":"Add missing validation to `maxpooling_op.cc`","body":"PiperOrigin-RevId: 387932441\r\nChange-Id: I43a0b24e6a12cc965611144ba035accd384594b9","created_at":"2021-08-05T19:34:04Z","closed_at":"2021-08-05T19:43:22Z","merged_at":"2021-08-05T19:43:22Z","user_id":323199,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":704962207,"title":"Prevent a CHECK-fail due to empty tensor input in `map_stage_op.cc`","body":"PiperOrigin-RevId: 387737906\r\nChange-Id: Idc52df0c71c7ed6e2dd633b651a581932f277c8a","created_at":"2021-08-05T19:20:24Z","closed_at":"2021-08-05T19:43:11Z","merged_at":"2021-08-05T19:43:11Z","user_id":323199,"sentiment":{"polarity":-0.11249999999999999,"subjectivity":0.4375}}
{"_id":704962203,"title":"Prevent a CHECK-fail due to empty tensor input in `map_stage_op.cc`","body":"PiperOrigin-RevId: 387737906\r\nChange-Id: Idc52df0c71c7ed6e2dd633b651a581932f277c8a","created_at":"2021-08-05T19:20:24Z","closed_at":"2021-08-05T19:42:56Z","merged_at":"2021-08-05T19:42:56Z","user_id":323199,"sentiment":{"polarity":-0.11249999999999999,"subjectivity":0.4375}}
{"_id":704962182,"title":"Prevent a CHECK-fail due to empty tensor input in `map_stage_op.cc`","body":"PiperOrigin-RevId: 387737906\r\nChange-Id: Idc52df0c71c7ed6e2dd633b651a581932f277c8a","created_at":"2021-08-05T19:20:22Z","closed_at":"2021-08-05T19:42:35Z","merged_at":"2021-08-05T19:42:35Z","user_id":323199,"sentiment":{"polarity":-0.11249999999999999,"subjectivity":0.4375}}
{"_id":704906509,"title":"Add remaining validation to `sdca_internal.cc`","body":"PiperOrigin-RevId: 387738010\r\nChange-Id: I28eedcfd87a53aaf34deb075acea1f8c95470808","created_at":"2021-08-05T17:48:22Z","closed_at":"2021-08-05T19:42:24Z","merged_at":"2021-08-05T19:42:24Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704906490,"title":"Add remaining validation to `sdca_internal.cc`","body":"PiperOrigin-RevId: 387738010\r\nChange-Id: I28eedcfd87a53aaf34deb075acea1f8c95470808","created_at":"2021-08-05T17:48:20Z","closed_at":"2021-08-05T19:42:14Z","merged_at":"2021-08-05T19:42:13Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704906469,"title":"Add remaining validation to `sdca_internal.cc`","body":"PiperOrigin-RevId: 387738010\r\nChange-Id: I28eedcfd87a53aaf34deb075acea1f8c95470808","created_at":"2021-08-05T17:48:18Z","closed_at":"2021-08-05T19:42:03Z","merged_at":"2021-08-05T19:42:03Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704901862,"title":"Prevent nullptr deref in validation of indexes in map ops.","body":"PiperOrigin-RevId: 387738023\r\nChange-Id: I83d18d36a7b82ffd2a40b5124a4e5b4c72238f27","created_at":"2021-08-05T17:40:21Z","closed_at":"2021-08-05T19:41:51Z","merged_at":"2021-08-05T19:41:51Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704901854,"title":"Prevent nullptr deref in validation of indexes in map ops.","body":"PiperOrigin-RevId: 387738023\r\nChange-Id: I83d18d36a7b82ffd2a40b5124a4e5b4c72238f27","created_at":"2021-08-05T17:40:20Z","closed_at":"2021-08-05T19:41:34Z","merged_at":"2021-08-05T19:41:34Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704901843,"title":"Prevent nullptr deref in validation of indexes in map ops.","body":"PiperOrigin-RevId: 387738023\r\nChange-Id: I83d18d36a7b82ffd2a40b5124a4e5b4c72238f27","created_at":"2021-08-05T17:40:19Z","closed_at":"2021-08-05T19:41:20Z","merged_at":"2021-08-05T19:41:19Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704896389,"title":"Prevent overflow due to integer conversion to unsigned.","body":"PiperOrigin-RevId: 387738045\r\nChange-Id: Id7e95bc07e02df1c66b72bd09f389608c87bdebe","created_at":"2021-08-05T17:31:05Z","closed_at":"2021-08-05T19:41:04Z","merged_at":"2021-08-05T19:41:04Z","user_id":323199,"sentiment":{"polarity":-0.125,"subjectivity":0.375}}
{"_id":704896380,"title":"Prevent overflow due to integer conversion to unsigned.","body":"PiperOrigin-RevId: 387738045\r\nChange-Id: Id7e95bc07e02df1c66b72bd09f389608c87bdebe","created_at":"2021-08-05T17:31:04Z","closed_at":"2021-08-05T19:40:52Z","merged_at":"2021-08-05T19:40:52Z","user_id":323199,"sentiment":{"polarity":-0.125,"subjectivity":0.375}}
{"_id":704896360,"title":"Prevent overflow due to integer conversion to unsigned.","body":"PiperOrigin-RevId: 387738045\r\nChange-Id: Id7e95bc07e02df1c66b72bd09f389608c87bdebe","created_at":"2021-08-05T17:31:03Z","closed_at":"2021-08-05T19:40:42Z","merged_at":"2021-08-05T19:40:42Z","user_id":323199,"sentiment":{"polarity":-0.125,"subjectivity":0.375}}
{"_id":704892478,"title":"Prevent CHECK-fail/heap OOB in UpperBound and LowerBound","body":"PiperOrigin-RevId: 387738073\r\nChange-Id: Iee74de95ddad18440d052a75a5a1cb67544f490a","created_at":"2021-08-05T17:25:52Z","closed_at":"2021-08-05T19:40:33Z","merged_at":"2021-08-05T19:40:33Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704892464,"title":"Prevent CHECK-fail/heap OOB in UpperBound and LowerBound","body":"PiperOrigin-RevId: 387738073\r\nChange-Id: Iee74de95ddad18440d052a75a5a1cb67544f490a","created_at":"2021-08-05T17:25:51Z","closed_at":"2021-08-05T19:40:16Z","merged_at":"2021-08-05T19:40:16Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704892434,"title":"Prevent CHECK-fail/heap OOB in UpperBound and LowerBound","body":"PiperOrigin-RevId: 387738073\r\nChange-Id: Iee74de95ddad18440d052a75a5a1cb67544f490a","created_at":"2021-08-05T17:25:50Z","closed_at":"2021-08-05T19:39:51Z","merged_at":"2021-08-05T19:39:51Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704890539,"title":"Update mobilenet_v2.py","body":"Removed \"x = layers.ReLU(6., name=prefix + 'expand_relu')(x)\"\r\nFix for # 50835","created_at":"2021-08-05T17:23:46Z","closed_at":"2021-08-06T12:27:54Z","merged_at":null,"user_id":59822926,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704877569,"title":"Prevent crash/heap OOB due to integer conversion to unsigned in NMS k…","body":"…ernels\r\n\r\nPiperOrigin-RevId: 387938262\r\nChange-Id: Id361a715307e7179977cf5c64391c199a966f2ad","created_at":"2021-08-05T17:08:07Z","closed_at":"2021-08-05T19:39:42Z","merged_at":"2021-08-05T19:39:42Z","user_id":323199,"sentiment":{"polarity":-0.125,"subjectivity":0.375}}
{"_id":704877556,"title":"Prevent crash/heap OOB due to integer conversion to unsigned in NMS k…","body":"…ernels\r\n\r\nPiperOrigin-RevId: 387938262\r\nChange-Id: Id361a715307e7179977cf5c64391c199a966f2ad","created_at":"2021-08-05T17:08:06Z","closed_at":"2021-08-05T19:39:34Z","merged_at":"2021-08-05T19:39:34Z","user_id":323199,"sentiment":{"polarity":-0.125,"subjectivity":0.375}}
{"_id":704877546,"title":"Prevent crash/heap OOB due to integer conversion to unsigned in NMS k…","body":"…ernels\r\n\r\nPiperOrigin-RevId: 387938262\r\nChange-Id: Id361a715307e7179977cf5c64391c199a966f2ad","created_at":"2021-08-05T17:08:05Z","closed_at":"2021-08-05T19:39:18Z","merged_at":"2021-08-05T19:39:18Z","user_id":323199,"sentiment":{"polarity":-0.125,"subjectivity":0.375}}
{"_id":704850101,"title":"Disallow dims input of 0 in tf.raw_ops.UnravelIndex","body":"PiperOrigin-RevId: 384284198\r\nChange-Id: Ia1804ef1aec57b4d857ea507e6891bcccde18e9b","created_at":"2021-08-05T16:24:39Z","closed_at":"2021-08-05T19:39:02Z","merged_at":"2021-08-05T19:39:02Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704850091,"title":"Disallow dims input of 0 in tf.raw_ops.UnravelIndex","body":"PiperOrigin-RevId: 384284198\r\nChange-Id: Ia1804ef1aec57b4d857ea507e6891bcccde18e9b","created_at":"2021-08-05T16:24:39Z","closed_at":"2021-08-05T19:38:48Z","merged_at":"2021-08-05T19:38:48Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704850060,"title":"Disallow dims input of 0 in tf.raw_ops.UnravelIndex","body":"PiperOrigin-RevId: 384284198\r\nChange-Id: Ia1804ef1aec57b4d857ea507e6891bcccde18e9b","created_at":"2021-08-05T16:24:37Z","closed_at":"2021-08-05T19:38:35Z","merged_at":"2021-08-05T19:38:35Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704841026,"title":"Ensure non-empty rt_nested_splits in tf.raw_ops.RaggedTensorToVariant","body":"PiperOrigin-RevId: 387664237\r\nChange-Id: Ia1700c34b5610873d63561abc86e23b46ead93b3","created_at":"2021-08-05T16:11:49Z","closed_at":"2021-08-05T19:38:12Z","merged_at":"2021-08-05T19:38:12Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704841021,"title":"Ensure non-empty rt_nested_splits in tf.raw_ops.RaggedTensorToVariant","body":"PiperOrigin-RevId: 387664237\r\nChange-Id: Ia1700c34b5610873d63561abc86e23b46ead93b3","created_at":"2021-08-05T16:11:49Z","closed_at":"2021-08-05T19:38:03Z","merged_at":"2021-08-05T19:38:03Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704841005,"title":"Ensure non-empty rt_nested_splits in tf.raw_ops.RaggedTensorToVariant","body":"PiperOrigin-RevId: 387664237\r\nChange-Id: Ia1700c34b5610873d63561abc86e23b46ead93b3","created_at":"2021-08-05T16:11:47Z","closed_at":"2021-08-05T19:37:55Z","merged_at":"2021-08-05T19:37:55Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704836292,"title":"Reorganize and add more validation to MKL requantization","body":"PiperOrigin-RevId: 387901341\r\nChange-Id: I2515b9034c64e113db0bcec8337d30643ab0a0f1","created_at":"2021-08-05T16:05:23Z","closed_at":"2021-08-06T02:35:23Z","merged_at":"2021-08-06T02:35:23Z","user_id":323199,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":704836276,"title":"Reorganize and add more validation to MKL requantization","body":"PiperOrigin-RevId: 387901341\r\nChange-Id: I2515b9034c64e113db0bcec8337d30643ab0a0f1","created_at":"2021-08-05T16:05:21Z","closed_at":"2021-08-06T02:35:11Z","merged_at":"2021-08-06T02:35:11Z","user_id":323199,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":704836261,"title":"Reorganize and add more validation to MKL requantization","body":"PiperOrigin-RevId: 387901341\r\nChange-Id: I2515b9034c64e113db0bcec8337d30643ab0a0f1","created_at":"2021-08-05T16:05:20Z","closed_at":"2021-08-06T02:35:00Z","merged_at":"2021-08-06T02:35:00Z","user_id":323199,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":704836230,"title":"Add more validation to `RequantizationRangePerChannel`.","body":"PiperOrigin-RevId: 387693946\r\nChange-Id: Ife8dcbdb021bec4787eef6a4361dd08f17c14bd6","created_at":"2021-08-05T16:05:18Z","closed_at":"2021-08-06T02:34:48Z","merged_at":"2021-08-06T02:34:48Z","user_id":323199,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":704836196,"title":"Add more validation to `RequantizationRangePerChannel`.","body":"PiperOrigin-RevId: 387693946\r\nChange-Id: Ife8dcbdb021bec4787eef6a4361dd08f17c14bd6","created_at":"2021-08-05T16:05:16Z","closed_at":"2021-08-06T02:34:39Z","merged_at":"2021-08-06T02:34:39Z","user_id":323199,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":704836156,"title":"Add more validation to `RequantizationRangePerChannel`.","body":"PiperOrigin-RevId: 387693946\r\nChange-Id: Ife8dcbdb021bec4787eef6a4361dd08f17c14bd6","created_at":"2021-08-05T16:05:13Z","closed_at":"2021-08-06T02:34:29Z","merged_at":"2021-08-06T02:34:29Z","user_id":323199,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":704390361,"title":"[TF:TRT] Reorganize testing utilities.","body":"Creates TF-TRT \"testutils\" library and replaces some utility functions with gMock matchers. Renames GetTestDims to CreateDims. Adds ostream<< printers for nvinfer1 types. Replaces \"const char*\" usage in test fixtures with \"std::string\" types.\r\nMoves two std::vector templated utility functions `InitTestVector` and `CastTestVector` to `trt_testutils.h` from `convert_nodes_test.cc`, and renamed to `CreateVectorIota` and `CastVector` respectively.","created_at":"2021-08-05T05:27:53Z","closed_at":"2021-09-17T17:05:59Z","merged_at":"2021-09-17T17:05:59Z","user_id":30323187,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704308738,"title":"Add remaining missing validation to `BoostedTreesCalculateBestFeature…","body":"…Split`\r\n\r\nPiperOrigin-RevId: 387423006\r\nChange-Id: I8eaf30efb223011519e60707bfa751b275d3a443","created_at":"2021-08-05T02:48:45Z","closed_at":"2021-08-05T02:58:43Z","merged_at":"2021-08-05T02:58:43Z","user_id":323199,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":704308707,"title":"Add remaining missing validation to `BoostedTreesCalculateBestFeature…","body":"…Split`\r\n\r\nPiperOrigin-RevId: 387423006\r\nChange-Id: I8eaf30efb223011519e60707bfa751b275d3a443","created_at":"2021-08-05T02:48:41Z","closed_at":"2021-08-05T02:58:30Z","merged_at":"2021-08-05T02:58:30Z","user_id":323199,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":704308677,"title":"Add remaining missing validation to `BoostedTreesCalculateBestFeature…","body":"…Split`\r\n\r\nPiperOrigin-RevId: 387423006\r\nChange-Id: I8eaf30efb223011519e60707bfa751b275d3a443","created_at":"2021-08-05T02:48:38Z","closed_at":"2021-08-05T02:58:17Z","merged_at":"2021-08-05T02:58:17Z","user_id":323199,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":704302424,"title":"Ensure num_streams >= 0 in tf.raw_ops.BoostedTreesCreateQuantileStrea…","body":"…mResource\r\n\r\nPiperOrigin-RevId: 387452765\r\nChange-Id: I9990c760e177fabca6a3b9b4612ceeaeeba51495","created_at":"2021-08-05T02:34:55Z","closed_at":"2021-08-05T02:58:01Z","merged_at":"2021-08-05T02:58:01Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704302415,"title":"Ensure num_streams >= 0 in tf.raw_ops.BoostedTreesCreateQuantileStrea…","body":"…mResource\r\n\r\nPiperOrigin-RevId: 387452765\r\nChange-Id: I9990c760e177fabca6a3b9b4612ceeaeeba51495","created_at":"2021-08-05T02:34:54Z","closed_at":"2021-08-05T02:57:48Z","merged_at":"2021-08-05T02:57:48Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704302408,"title":"Ensure num_streams >= 0 in tf.raw_ops.BoostedTreesCreateQuantileStrea…","body":"…mResource\r\n\r\nPiperOrigin-RevId: 387452765\r\nChange-Id: I9990c760e177fabca6a3b9b4612ceeaeeba51495","created_at":"2021-08-05T02:34:53Z","closed_at":"2021-08-05T02:57:37Z","merged_at":"2021-08-05T02:57:37Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704293861,"title":"Fix FPE in inpace update ops.","body":"PiperOrigin-RevId: 388303197\r\nChange-Id: Ib48309b6213ffe53eba81004b00e889d653e4b83","created_at":"2021-08-05T02:16:55Z","closed_at":"2021-08-05T02:59:33Z","merged_at":"2021-08-05T02:59:33Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704293855,"title":"Fix FPE in inpace update ops.","body":"PiperOrigin-RevId: 388303197\r\nChange-Id: Ib48309b6213ffe53eba81004b00e889d653e4b83","created_at":"2021-08-05T02:16:54Z","closed_at":"2021-08-05T02:59:20Z","merged_at":"2021-08-05T02:59:20Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704293850,"title":"Fix FPE in inpace update ops.","body":"PiperOrigin-RevId: 388303197\r\nChange-Id: Ib48309b6213ffe53eba81004b00e889d653e4b83","created_at":"2021-08-05T02:16:53Z","closed_at":"2021-08-05T02:59:09Z","merged_at":"2021-08-05T02:59:09Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704293840,"title":"Fix FPE in inpace update ops.","body":"PiperOrigin-RevId: 388303197\r\nChange-Id: Ib48309b6213ffe53eba81004b00e889d653e4b83","created_at":"2021-08-05T02:16:52Z","closed_at":"2021-08-05T02:58:54Z","merged_at":"2021-08-05T02:58:54Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704289793,"title":"Fix nullptr deref and heap OOB access in binary cwise ops.","body":"PiperOrigin-RevId: 387936777\r\nChange-Id: I608b8074cec36a982cca622b7144cb2c43e6e19f","created_at":"2021-08-05T02:09:43Z","closed_at":"2021-08-05T02:19:28Z","merged_at":"2021-08-05T02:19:28Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704289777,"title":"Fix nullptr deref and heap OOB access in binary cwise ops.","body":"PiperOrigin-RevId: 387936777\r\nChange-Id: I608b8074cec36a982cca622b7144cb2c43e6e19f","created_at":"2021-08-05T02:09:41Z","closed_at":"2021-08-05T02:19:15Z","merged_at":"2021-08-05T02:19:15Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704289756,"title":"Fix nullptr deref and heap OOB access in binary cwise ops.","body":"PiperOrigin-RevId: 387936777\r\nChange-Id: I608b8074cec36a982cca622b7144cb2c43e6e19f","created_at":"2021-08-05T02:09:39Z","closed_at":"2021-08-05T02:19:02Z","merged_at":"2021-08-05T02:19:02Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704285577,"title":"Add one missing valdiation to `matrix_set_diag_op.cc`","body":"PiperOrigin-RevId: 387923408\r\nChange-Id: If6a97b9098c13879400f56c22f91555cdf0ce5d7","created_at":"2021-08-05T02:02:47Z","closed_at":"2021-08-05T02:18:50Z","merged_at":"2021-08-05T02:18:50Z","user_id":323199,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":704285554,"title":"Add one missing valdiation to `matrix_set_diag_op.cc`","body":"PiperOrigin-RevId: 387923408\r\nChange-Id: If6a97b9098c13879400f56c22f91555cdf0ce5d7","created_at":"2021-08-05T02:02:45Z","closed_at":"2021-08-05T02:18:38Z","merged_at":"2021-08-05T02:18:38Z","user_id":323199,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":704285530,"title":"Add one missing valdiation to `matrix_set_diag_op.cc`","body":"PiperOrigin-RevId: 387923408\r\nChange-Id: If6a97b9098c13879400f56c22f91555cdf0ce5d7","created_at":"2021-08-05T02:02:42Z","closed_at":"2021-08-05T02:18:24Z","merged_at":"2021-08-05T02:18:24Z","user_id":323199,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":704282745,"title":"Add missing validation to `matrix_diag_op.cc`","body":"PiperOrigin-RevId: 387923533\r\nChange-Id: Idfffeb328d5f9c6748d992d28a56d6e9e45103a0","created_at":"2021-08-05T01:57:03Z","closed_at":"2021-08-05T02:19:48Z","merged_at":"2021-08-05T02:19:48Z","user_id":323199,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":704282718,"title":"Add missing validation to `matrix_diag_op.cc`","body":"PiperOrigin-RevId: 387923533\r\nChange-Id: Idfffeb328d5f9c6748d992d28a56d6e9e45103a0","created_at":"2021-08-05T01:57:00Z","closed_at":"2021-08-05T02:20:01Z","merged_at":"2021-08-05T02:20:01Z","user_id":323199,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":704282605,"title":"Add missing validation to `matrix_diag_op.cc`","body":"PiperOrigin-RevId: 387923533\r\nChange-Id: Idfffeb328d5f9c6748d992d28a56d6e9e45103a0","created_at":"2021-08-05T01:56:50Z","closed_at":"2021-08-05T02:19:38Z","merged_at":"2021-08-05T02:19:38Z","user_id":323199,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":704278282,"title":"Add missing validation to `RaggedTensorToSparse`.","body":"There needs to be a check that the splits allow for valid ragged tensors.\r\n\r\nPiperOrigin-RevId: 387712169\r\nChange-Id: I2499175324b82b65d159a260c7f83b98ceb5cc7d","created_at":"2021-08-05T01:47:43Z","closed_at":"2021-08-05T02:20:37Z","merged_at":"2021-08-05T02:20:36Z","user_id":323199,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":704278259,"title":"Add missing validation to `RaggedTensorToSparse`.","body":"There needs to be a check that the splits allow for valid ragged tensors.\r\n\r\nPiperOrigin-RevId: 387712169\r\nChange-Id: I2499175324b82b65d159a260c7f83b98ceb5cc7d","created_at":"2021-08-05T01:47:41Z","closed_at":"2021-08-05T02:20:27Z","merged_at":"2021-08-05T02:20:27Z","user_id":323199,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":704278234,"title":"Add missing validation to `RaggedTensorToSparse`.","body":"There needs to be a check that the splits allow for valid ragged tensors.\r\n\r\nPiperOrigin-RevId: 387712169\r\nChange-Id: I2499175324b82b65d159a260c7f83b98ceb5cc7d","created_at":"2021-08-05T01:47:38Z","closed_at":"2021-08-05T02:20:15Z","merged_at":"2021-08-05T02:20:15Z","user_id":323199,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":704274559,"title":"Fix heap OOB due to dimension mismatch in `ResourceScatterUpdate`","body":"PiperOrigin-RevId: 388292801\r\nChange-Id: Id9bd7244d98d41b1517d4771850b32782c0cc949","created_at":"2021-08-05T01:38:44Z","closed_at":"2021-08-05T02:21:24Z","merged_at":"2021-08-05T02:21:24Z","user_id":323199,"sentiment":{"polarity":-0.125,"subjectivity":0.375}}
{"_id":704274545,"title":"Fix heap OOB due to dimension mismatch in `ResourceScatterUpdate`","body":"PiperOrigin-RevId: 388292801\r\nChange-Id: Id9bd7244d98d41b1517d4771850b32782c0cc949","created_at":"2021-08-05T01:38:42Z","closed_at":"2021-08-05T02:21:12Z","merged_at":"2021-08-05T02:21:12Z","user_id":323199,"sentiment":{"polarity":-0.125,"subjectivity":0.375}}
{"_id":704274523,"title":"Fix heap OOB due to dimension mismatch in `ResourceScatterUpdate`","body":"PiperOrigin-RevId: 388292801\r\nChange-Id: Id9bd7244d98d41b1517d4771850b32782c0cc949","created_at":"2021-08-05T01:38:40Z","closed_at":"2021-08-05T02:21:02Z","merged_at":"2021-08-05T02:21:02Z","user_id":323199,"sentiment":{"polarity":-0.125,"subjectivity":0.375}}
{"_id":704274498,"title":"Fix heap OOB due to dimension mismatch in `ResourceScatterUpdate`","body":"PiperOrigin-RevId: 388292801\r\nChange-Id: Id9bd7244d98d41b1517d4771850b32782c0cc949","created_at":"2021-08-05T01:38:38Z","closed_at":"2021-08-05T02:20:47Z","merged_at":"2021-08-05T02:20:47Z","user_id":323199,"sentiment":{"polarity":-0.125,"subjectivity":0.375}}
{"_id":704260132,"title":"Prevent heap oob access in `resource_variable_ops.cc`","body":"PiperOrigin-RevId: 387936433\r\nChange-Id: I9e71ddaa8dbd51ec6afbf163a6b3b591f193b4f6","created_at":"2021-08-05T01:12:31Z","closed_at":"2021-08-05T01:17:14Z","merged_at":"2021-08-05T01:17:14Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704260102,"title":"Prevent heap oob access in `resource_variable_ops.cc`","body":"PiperOrigin-RevId: 387936433\r\nChange-Id: I9e71ddaa8dbd51ec6afbf163a6b3b591f193b4f6","created_at":"2021-08-05T01:12:28Z","closed_at":"2021-08-05T01:16:51Z","merged_at":"2021-08-05T01:16:51Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704260073,"title":"Prevent heap oob access in `resource_variable_ops.cc`","body":"PiperOrigin-RevId: 387936433\r\nChange-Id: I9e71ddaa8dbd51ec6afbf163a6b3b591f193b4f6","created_at":"2021-08-05T01:12:26Z","closed_at":"2021-08-05T01:16:38Z","merged_at":"2021-08-05T01:16:38Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704251284,"title":"Prevent division by 0 in `resource_variable_ops.cc`","body":"PiperOrigin-RevId: 387939939\r\nChange-Id: Ib04902d63756633999959a70613f2eaa30c2c151","created_at":"2021-08-05T01:01:27Z","closed_at":"2021-08-05T01:16:26Z","merged_at":"2021-08-05T01:16:26Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704251236,"title":"Prevent division by 0 in `resource_variable_ops.cc`","body":"PiperOrigin-RevId: 387939939\r\nChange-Id: Ib04902d63756633999959a70613f2eaa30c2c151","created_at":"2021-08-05T01:01:24Z","closed_at":"2021-08-05T01:16:15Z","merged_at":"2021-08-05T01:16:15Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704251191,"title":"Prevent division by 0 in `resource_variable_ops.cc`","body":"PiperOrigin-RevId: 387939939\r\nChange-Id: Ib04902d63756633999959a70613f2eaa30c2c151","created_at":"2021-08-05T01:01:20Z","closed_at":"2021-08-05T01:16:01Z","merged_at":"2021-08-05T01:16:00Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704245139,"title":"Prevent use after free.","body":"A very old version of the code used `result` as a simple pointer to a resource. Two years later, the pointer got changed to a `unique_ptr` but author forgot to remove the call to `Unref`. Three years after that, we finally uncover the UAF.\r\n\r\nPiperOrigin-RevId: 387924872\r\nChange-Id: I70fb6f199164de49fac20c168132a07b84903f9b","created_at":"2021-08-05T00:53:34Z","closed_at":"2021-08-05T01:15:32Z","merged_at":"2021-08-05T01:15:32Z","user_id":323199,"sentiment":{"polarity":0.4,"subjectivity":0.8}}
{"_id":704245119,"title":"Prevent use after free.","body":"A very old version of the code used `result` as a simple pointer to a resource. Two years later, the pointer got changed to a `unique_ptr` but author forgot to remove the call to `Unref`. Three years after that, we finally uncover the UAF.\r\n\r\nPiperOrigin-RevId: 387924872\r\nChange-Id: I70fb6f199164de49fac20c168132a07b84903f9b","created_at":"2021-08-05T00:53:33Z","closed_at":"2021-08-05T01:15:13Z","merged_at":"2021-08-05T01:15:13Z","user_id":323199,"sentiment":{"polarity":0.4,"subjectivity":0.8}}
{"_id":704245083,"title":"Prevent use after free.","body":"A very old version of the code used `result` as a simple pointer to a resource. Two years later, the pointer got changed to a `unique_ptr` but author forgot to remove the call to `Unref`. Three years after that, we finally uncover the UAF.\r\n\r\nPiperOrigin-RevId: 387924872\r\nChange-Id: I70fb6f199164de49fac20c168132a07b84903f9b","created_at":"2021-08-05T00:53:31Z","closed_at":"2021-08-05T01:15:00Z","merged_at":"2021-08-05T01:15:00Z","user_id":323199,"sentiment":{"polarity":0.4,"subjectivity":0.8}}
{"_id":704218409,"title":"Validate dimensions of input tensor in `FractionalAvgPoolGrad`","body":"PiperOrigin-RevId: 388286227\r\nChange-Id: Ieb7566155e92acc8993a2212c76deacadc0edc8a","created_at":"2021-08-05T00:28:41Z","closed_at":"2021-08-05T01:14:46Z","merged_at":"2021-08-05T01:14:46Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704218379,"title":"Validate dimensions of input tensor in `FractionalAvgPoolGrad`","body":"PiperOrigin-RevId: 388286227\r\nChange-Id: Ieb7566155e92acc8993a2212c76deacadc0edc8a","created_at":"2021-08-05T00:28:39Z","closed_at":"2021-08-05T01:14:35Z","merged_at":"2021-08-05T01:14:35Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704218344,"title":"Validate dimensions of input tensor in `FractionalAvgPoolGrad`","body":"PiperOrigin-RevId: 388286227\r\nChange-Id: Ieb7566155e92acc8993a2212c76deacadc0edc8a","created_at":"2021-08-05T00:28:38Z","closed_at":"2021-08-05T01:14:24Z","merged_at":"2021-08-05T01:14:24Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704218298,"title":"Validate dimensions of input tensor in `FractionalAvgPoolGrad`","body":"PiperOrigin-RevId: 388286227\r\nChange-Id: Ieb7566155e92acc8993a2212c76deacadc0edc8a","created_at":"2021-08-05T00:28:35Z","closed_at":"2021-08-05T01:14:09Z","merged_at":"2021-08-05T01:14:09Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704208868,"title":"Fix segfault/heap buffer overflow in `{Experimental,}DatasetToTFRecor…","body":"…d` where dataset is numeric.\r\n\r\nCode assumes only strings inputs and then interprets numbers as valid `tstring`s. Then, when trying to compute the CRC of the record this results in heap buffer overflow.\r\n\r\nPiperOrigin-RevId: 387675909\r\nChange-Id: I7396b9b8afc1ac744112af7c0b1cd7bb41e0f556","created_at":"2021-08-05T00:18:03Z","closed_at":"2021-08-05T00:32:42Z","merged_at":"2021-08-05T00:32:42Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704208850,"title":"Fix segfault/heap buffer overflow in `{Experimental,}DatasetToTFRecor…","body":"…d` where dataset is numeric.\r\n\r\nCode assumes only strings inputs and then interprets numbers as valid `tstring`s. Then, when trying to compute the CRC of the record this results in heap buffer overflow.\r\n\r\nPiperOrigin-RevId: 387675909\r\nChange-Id: I7396b9b8afc1ac744112af7c0b1cd7bb41e0f556","created_at":"2021-08-05T00:18:02Z","closed_at":"2021-08-05T00:32:23Z","merged_at":"2021-08-05T00:32:23Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704208834,"title":"Fix segfault/heap buffer overflow in `{Experimental,}DatasetToTFRecor…","body":"…d` where dataset is numeric.\r\n\r\nCode assumes only strings inputs and then interprets numbers as valid `tstring`s. Then, when trying to compute the CRC of the record this results in heap buffer overflow.\r\n\r\nPiperOrigin-RevId: 387675909\r\nChange-Id: I7396b9b8afc1ac744112af7c0b1cd7bb41e0f556","created_at":"2021-08-05T00:18:00Z","closed_at":"2021-08-05T00:32:06Z","merged_at":"2021-08-05T00:32:06Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704190564,"title":"Ensure validation sticks in `save_restore_v2_ops.cc`","body":"PiperOrigin-RevId: 387924206\r\nChange-Id: I6156842eb3230076b5812c0815f3e66bd5241454","created_at":"2021-08-04T23:56:05Z","closed_at":"2021-08-05T00:31:52Z","merged_at":"2021-08-05T00:31:52Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704190541,"title":"Ensure validation sticks in `save_restore_v2_ops.cc`","body":"PiperOrigin-RevId: 387924206\r\nChange-Id: I6156842eb3230076b5812c0815f3e66bd5241454","created_at":"2021-08-04T23:56:02Z","closed_at":"2021-08-05T00:31:35Z","merged_at":"2021-08-05T00:31:35Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704190506,"title":"Ensure validation sticks in `save_restore_v2_ops.cc`","body":"PiperOrigin-RevId: 387924206\r\nChange-Id: I6156842eb3230076b5812c0815f3e66bd5241454","created_at":"2021-08-04T23:55:58Z","closed_at":"2021-08-05T00:31:22Z","merged_at":"2021-08-05T00:31:22Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704180146,"title":"Prevent nullptr deref in SparseTensorSliceDataset","body":"The arguments must determine a valid sparse tensor. This means that when indices are empty then the values must be empty too (and the reverse).\r\n\r\nAlso added test, by modifying existing test with empty sparse tensor to now run with an invalid sparse tensor input.\r\n\r\nPiperOrigin-RevId: 388562757\r\nChange-Id: Id8b54cd7c2316025b4f9a77292c8fb5344d17609","created_at":"2021-08-04T23:45:20Z","closed_at":"2021-08-05T00:31:08Z","merged_at":"2021-08-05T00:31:08Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704180087,"title":"Prevent nullptr deref in SparseTensorSliceDataset","body":"The arguments must determine a valid sparse tensor. This means that when indices are empty then the values must be empty too (and the reverse).\r\n\r\nAlso added test, by modifying existing test with empty sparse tensor to now run with an invalid sparse tensor input.\r\n\r\nPiperOrigin-RevId: 388562757\r\nChange-Id: Id8b54cd7c2316025b4f9a77292c8fb5344d17609","created_at":"2021-08-04T23:45:17Z","closed_at":"2021-08-05T00:30:55Z","merged_at":"2021-08-05T00:30:55Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704180044,"title":"Prevent nullptr deref in SparseTensorSliceDataset","body":"The arguments must determine a valid sparse tensor. This means that when indices are empty then the values must be empty too (and the reverse).\r\n\r\nAlso added test, by modifying existing test with empty sparse tensor to now run with an invalid sparse tensor input.\r\n\r\nPiperOrigin-RevId: 388562757\r\nChange-Id: Id8b54cd7c2316025b4f9a77292c8fb5344d17609","created_at":"2021-08-04T23:45:14Z","closed_at":"2021-08-05T00:30:44Z","merged_at":"2021-08-05T00:30:44Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":704179966,"title":"Prevent nullptr deref in SparseTensorSliceDataset","body":"The arguments must determine a valid sparse tensor. This means that when indices are empty then the values must be empty too (and the reverse).\r\n\r\nAlso added test, by modifying existing test with empty sparse tensor to now run with an invalid sparse tensor input.\r\n\r\nPiperOrigin-RevId: 388562757\r\nChange-Id: Id8b54cd7c2316025b4f9a77292c8fb5344d17609","created_at":"2021-08-04T23:45:10Z","closed_at":"2021-08-05T00:30:33Z","merged_at":"2021-08-05T00:30:33Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":703998354,"title":"Validate axis input in tf.raw_ops.QuantizeAndDequantizeV4Grad","body":"PiperOrigin-RevId: 388291385\r\nChange-Id: I3bab68dc61d935afa96c0da021a7b722c6dc8dc8","created_at":"2021-08-04T20:52:16Z","closed_at":"2021-08-04T21:47:41Z","merged_at":"2021-08-04T21:47:41Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":703998158,"title":"Validate axis input in tf.raw_ops.QuantizeAndDequantizeV4Grad","body":"PiperOrigin-RevId: 388291385\r\nChange-Id: I3bab68dc61d935afa96c0da021a7b722c6dc8dc8","created_at":"2021-08-04T20:52:07Z","closed_at":"2021-08-04T21:47:29Z","merged_at":"2021-08-04T21:47:29Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":703998016,"title":"Validate axis input in tf.raw_ops.QuantizeAndDequantizeV4Grad","body":"PiperOrigin-RevId: 388291385\r\nChange-Id: I3bab68dc61d935afa96c0da021a7b722c6dc8dc8","created_at":"2021-08-04T20:52:00Z","closed_at":"2021-08-04T21:47:11Z","merged_at":"2021-08-04T21:47:11Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":703981743,"title":"[CoreML Delegate] Set the padding explicitly for kTfLiteBuiltinMean operation","body":"Fixes error with CoreML delegate for some models that use the Mean layer by explicitly setting the padding type to SAME\r\n\r\nThe specific error that this fixes:\r\n`Error compiling model Error reading protobuf spec. validator error: Padding type for the pooling layer 'PoolingLayerBuilder (MEAN)_2' is not set.`\r\n\r\nI received the above error on the nightly build of TensorflowLiteSwift (2.5.0) on my iPhone XS device.\r\n\r\nThis seems to be a new error, I've only experienced this with a new object detection model that was converted using MLIR and on the 2.5.0 runtime.\r\n\r\nI did not have this issue with previous object detection models that were converted using Toco and on the 1.14 runtime.\r\n\r\n","created_at":"2021-08-04T20:37:43Z","closed_at":"2021-08-04T21:04:59Z","merged_at":null,"user_id":2061485,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":703981094,"title":"Ensure non-empty padding_value input to tf.raw_ops.MatrixDiagPartV2, …","body":"…if a padding_value is input\r\n\r\nPiperOrigin-RevId: 388314614\r\nChange-Id: If0b51ad58d5d8543a6be6ce8f42ae4755c80d55f","created_at":"2021-08-04T20:37:08Z","closed_at":"2021-08-04T21:46:55Z","merged_at":"2021-08-04T21:46:55Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":703981054,"title":"Ensure non-empty padding_value input to tf.raw_ops.MatrixDiagPartV2, …","body":"…if a padding_value is input\r\n\r\nPiperOrigin-RevId: 388314614\r\nChange-Id: If0b51ad58d5d8543a6be6ce8f42ae4755c80d55f","created_at":"2021-08-04T20:37:06Z","closed_at":"2021-08-04T21:46:41Z","merged_at":"2021-08-04T21:46:41Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":703981017,"title":"Ensure non-empty padding_value input to tf.raw_ops.MatrixDiagPartV2, …","body":"…if a padding_value is input\r\n\r\nPiperOrigin-RevId: 388314614\r\nChange-Id: If0b51ad58d5d8543a6be6ce8f42ae4755c80d55f","created_at":"2021-08-04T20:37:04Z","closed_at":"2021-08-04T21:46:29Z","merged_at":"2021-08-04T21:46:29Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":703980987,"title":"Ensure non-empty padding_value input to tf.raw_ops.MatrixDiagPartV2, …","body":"…if a padding_value is input\r\n\r\nPiperOrigin-RevId: 388314614\r\nChange-Id: If0b51ad58d5d8543a6be6ce8f42ae4755c80d55f","created_at":"2021-08-04T20:37:02Z","closed_at":"2021-08-04T21:46:18Z","merged_at":"2021-08-04T21:46:18Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":703959756,"title":"Fix heap OOB in `tf.raw_ops.RaggedGather`","body":"PiperOrigin-RevId: 388355464\r\nChange-Id: If14d96231d1cd7aad7c4d1c22c1bab1576b75717","created_at":"2021-08-04T20:18:59Z","closed_at":"2021-08-04T20:57:40Z","merged_at":"2021-08-04T20:57:40Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":703959717,"title":"Fix heap OOB in `tf.raw_ops.RaggedGather`","body":"PiperOrigin-RevId: 388355464\r\nChange-Id: If14d96231d1cd7aad7c4d1c22c1bab1576b75717","created_at":"2021-08-04T20:18:57Z","closed_at":"2021-08-04T20:57:26Z","merged_at":"2021-08-04T20:57:26Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":703959683,"title":"Fix heap OOB in `tf.raw_ops.RaggedGather`","body":"PiperOrigin-RevId: 388355464\r\nChange-Id: If14d96231d1cd7aad7c4d1c22c1bab1576b75717","created_at":"2021-08-04T20:18:55Z","closed_at":"2021-08-04T20:57:14Z","merged_at":"2021-08-04T20:57:14Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":703959631,"title":"Fix heap OOB in `tf.raw_ops.RaggedGather`","body":"PiperOrigin-RevId: 388355464\r\nChange-Id: If14d96231d1cd7aad7c4d1c22c1bab1576b75717","created_at":"2021-08-04T20:18:52Z","closed_at":"2021-08-04T20:57:00Z","merged_at":"2021-08-04T20:57:00Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":703946409,"title":"Disallow division by zero FPE in `tf.raw_ops.ResourceScatterDiv`","body":"Had to update a test that was broken.\r\n\r\nPiperOrigin-RevId: 388516976\r\nChange-Id: Ic358e6bf0559e011539974d453fc7aa18b427e9c","created_at":"2021-08-04T20:07:25Z","closed_at":"2021-08-04T20:56:45Z","merged_at":"2021-08-04T20:56:44Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":703946331,"title":"Disallow division by zero FPE in `tf.raw_ops.ResourceScatterDiv`","body":"Had to update a test that was broken.\r\n\r\nPiperOrigin-RevId: 388516976\r\nChange-Id: Ic358e6bf0559e011539974d453fc7aa18b427e9c","created_at":"2021-08-04T20:07:21Z","closed_at":"2021-08-04T20:56:31Z","merged_at":"2021-08-04T20:56:31Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":703946271,"title":"Disallow division by zero FPE in `tf.raw_ops.ResourceScatterDiv`","body":"Had to update a test that was broken.\r\n\r\nPiperOrigin-RevId: 388516976\r\nChange-Id: Ic358e6bf0559e011539974d453fc7aa18b427e9c","created_at":"2021-08-04T20:07:17Z","closed_at":"2021-08-04T20:56:15Z","merged_at":"2021-08-04T20:56:15Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":703946193,"title":"Disallow division by zero FPE in `tf.raw_ops.ResourceScatterDiv`","body":"Had to update a test that was broken.\r\n\r\nPiperOrigin-RevId: 388516976\r\nChange-Id: Ic358e6bf0559e011539974d453fc7aa18b427e9c","created_at":"2021-08-04T20:07:12Z","closed_at":"2021-08-04T20:55:59Z","merged_at":"2021-08-04T20:55:59Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":703929426,"title":"Don't do any work when reshaping 0 elements sparse tensor.","body":"If reshaping to 0 elements tensor, check that input has no elements.\r\nIf reshaping no elements input, check that output has no elements.\r\n\r\nPiperOrigin-RevId: 388296986\r\nChange-Id: Iadc9fe7252e14313ca987e69bf0d7042fd10232a","created_at":"2021-08-04T19:52:06Z","closed_at":"2021-08-04T20:55:45Z","merged_at":"2021-08-04T20:55:45Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":703929260,"title":"Don't do any work when reshaping 0 elements sparse tensor.","body":"If reshaping to 0 elements tensor, check that input has no elements.\r\nIf reshaping no elements input, check that output has no elements.\r\n\r\nPiperOrigin-RevId: 388296986\r\nChange-Id: Iadc9fe7252e14313ca987e69bf0d7042fd10232a","created_at":"2021-08-04T19:51:52Z","closed_at":"2021-08-04T20:55:26Z","merged_at":"2021-08-04T20:55:26Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":703929037,"title":"Mm cherrypick 4923de56ec94fff7770df259ab7f2288a74feb41 on r2.5","body":null,"created_at":"2021-08-04T19:51:33Z","closed_at":"2021-08-04T19:52:00Z","merged_at":null,"user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":703928968,"title":"Mm cherrypick 4923de56ec94fff7770df259ab7f2288a74feb41 on r2.6","body":null,"created_at":"2021-08-04T19:51:28Z","closed_at":"2021-08-04T19:51:41Z","merged_at":null,"user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":703814827,"title":"Fix NPE in restoring code.","body":"PiperOrigin-RevId: 388303253\r\nChange-Id: Ia8c68568cb854bca538909a182b31a618d68ce55","created_at":"2021-08-04T18:17:28Z","closed_at":"2021-08-04T19:54:34Z","merged_at":"2021-08-04T19:54:34Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":703814780,"title":"Fix NPE in restoring code.","body":"PiperOrigin-RevId: 388303253\r\nChange-Id: Ia8c68568cb854bca538909a182b31a618d68ce55","created_at":"2021-08-04T18:17:25Z","closed_at":"2021-08-04T19:54:19Z","merged_at":"2021-08-04T19:54:19Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":703814500,"title":"Fix NPE in restoring code.","body":"PiperOrigin-RevId: 388303253\r\nChange-Id: Ia8c68568cb854bca538909a182b31a618d68ce55","created_at":"2021-08-04T18:17:13Z","closed_at":"2021-08-04T19:54:02Z","merged_at":"2021-08-04T19:54:02Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":703814357,"title":"Fix NPE in restoring code.","body":"PiperOrigin-RevId: 388303253\r\nChange-Id: Ia8c68568cb854bca538909a182b31a618d68ce55","created_at":"2021-08-04T18:17:09Z","closed_at":"2021-08-04T19:53:49Z","merged_at":"2021-08-04T19:53:49Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":703778234,"title":"Prevent heap OOB in sparse reduction ops.","body":"PiperOrigin-RevId: 387934524\r\nChange-Id: I894aa30f1e454f09b471d565b4a325da49322c1a","created_at":"2021-08-04T17:42:36Z","closed_at":"2021-08-04T19:53:37Z","merged_at":"2021-08-04T19:53:37Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":703778117,"title":"Mm cherrypick 87158f43f05f2720a374f3e6d22a7aaa3a33f750 on r2.3","body":null,"created_at":"2021-08-04T17:42:28Z","closed_at":"2021-08-04T17:42:46Z","merged_at":null,"user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":703777794,"title":"Prevent heap OOB in sparse reduction ops.","body":"PiperOrigin-RevId: 387934524\r\nChange-Id: I894aa30f1e454f09b471d565b4a325da49322c1a","created_at":"2021-08-04T17:42:11Z","closed_at":"2021-08-04T19:53:24Z","merged_at":"2021-08-04T19:53:24Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":703777725,"title":"Prevent heap OOB in sparse reduction ops.","body":"PiperOrigin-RevId: 387934524\r\nChange-Id: I894aa30f1e454f09b471d565b4a325da49322c1a","created_at":"2021-08-04T17:42:08Z","closed_at":"2021-08-04T19:53:12Z","merged_at":"2021-08-04T19:53:12Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":703355953,"title":"[MLIR][DISC] bugfix: mismatch result type of tf2mhlo pattern for BiasAdd","body":null,"created_at":"2021-08-04T11:52:24Z","closed_at":"2021-08-09T23:38:38Z","merged_at":"2021-08-09T23:38:38Z","user_id":15364516,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":702925559,"title":"[determinism] Add unimplemented exception to tf.image.adjust_contrast","body":"This current PR adds and tests determinism-unimplemented exception-throwing for `tf.image.adjust_contrast`.\r\n\r\nThis PR is related to [RFC: Enabling Determinism in TensorFlow](https://github.com/tensorflow/community/blob/master/rfcs/20210119-determinism.md). For status and history of GPU-determinism for this op, see [here](https://github.com/NVIDIA/framework-determinism/blob/master/tensorflow_status.md#adjust-contrast).\r\n\r\nCC @reedwm, @sanjoy, @nluehr","created_at":"2021-08-04T03:41:44Z","closed_at":"2021-08-19T21:20:40Z","merged_at":null,"user_id":33532941,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":702915937,"title":"Fix tf.tile crash when n is large","body":"This PR tries to fix the issue raised in #46911 where tf.tile\r\nwill crash when n is large. This PR add additional check\r\nto make sure an error message is rendered (instead of crash).\r\n\r\nThis PR fixes #46911.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2021-08-04T03:23:20Z","closed_at":"2021-09-21T01:51:57Z","merged_at":"2021-09-21T01:51:57Z","user_id":6932348,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.42857142857142855}}
{"_id":702764201,"title":"Add lstm support for TFLM","body":"Signed-off-by: Niranjan Yadla <nyadla@cadence.com>","created_at":"2021-08-04T00:09:04Z","closed_at":"2021-08-07T00:09:28Z","merged_at":null,"user_id":26728802,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":702624047,"title":"Portable double promotion warning fix","body":"","created_at":"2021-08-03T21:17:40Z","closed_at":"2021-09-01T16:57:17Z","merged_at":null,"user_id":26728802,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":702606103,"title":"Conv2d native FP16 compute","body":"This patch enables use of native FP16 hardware acceleration for Conv2D op, if available on system.\r\nIt is tested on ARM Neoverse N1 CPU. With native FP16 vectored instruction up to 45% improvement is\r\nobserved on CNN models (without/very minimal accuracy loss). It is showing very good results in\r\nmixed precision training as well. This will further improve with improved GEMM kernel for FP16.\r\n\r\nBy default native FP16 Conv2D ops are disabled. \r\nTo enable it, environment variable `TF_CONV2D_USE_FP16_ACCUMULATE` must be set to 1.\r\ni.e. without setting environment variable or in absence of environment variable there is no change\r\nin execution of Conv2D operation.\r\n\r\nDefault behavior is disabled. i.e. without environment variable\r\n```\r\n# export TF_CONV2D_USE_FP16_ACCUMULATE=0\r\n# python <TensorFlow Application>.py\r\n```\r\ndoes the same.\r\n\r\nTo Enable native FP16 accumulate\r\n```\r\n# export TF_CONV2D_USE_FP16_ACCUMULATE=1\r\n# python <TensorFlow Application>.py\r\n```\r\n\r\nSystem Software Configuration used to test/build:\r\nUbuntu 20.04.2 LTS\r\nGCC: gcc-11 (Ubuntu 11.1.0-1ubuntu1~20.04) 11.1.0\r\n","created_at":"2021-08-03T20:52:54Z","closed_at":"2021-10-13T16:41:35Z","merged_at":"2021-10-13T16:41:35Z","user_id":87449534,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":702477461,"title":"Update sqlite to sqlite-amalgamation-3360000","body":"This PR updates sqlite to sqlite-amalgamation-3360000 (latest version).\r\n\r\nThis PR is loosely related to #51124 (not directly related).\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2021-08-03T17:48:34Z","closed_at":"2021-08-04T17:32:22Z","merged_at":"2021-08-04T17:32:22Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":702473790,"title":"Fix double-promotion warnings","body":"Signed-off-by: Niranjan Yadla <nyadla@cadence.com>","created_at":"2021-08-03T17:42:22Z","closed_at":"2021-08-03T20:15:54Z","merged_at":null,"user_id":26728802,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":702440321,"title":"[Intel oneDNN] static analysis scan fixes based on r2.6 release tag","body":"Few fixes based on r2.6 release tag to fix some static code analyzer complains","created_at":"2021-08-03T16:49:43Z","closed_at":"2022-02-08T19:30:18Z","merged_at":null,"user_id":38869685,"sentiment":{"polarity":0.5,"subjectivity":0.9}}
{"_id":701881032,"title":"Cherrypick saved model cli fix","body":"","created_at":"2021-08-03T01:16:35Z","closed_at":"2021-08-03T01:44:12Z","merged_at":null,"user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":701864975,"title":"Update version numbers for TensorFlow 2.6.0-rc2","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 6 -> 6\nPatch: 0 -> 0\n\nNo lingering old version strings \"2.6.0-rc1\" found in source directory \n\"tensorflow/\". Good.\nWARNING: Below are potentially instances of lingering old version string \n\"2.6.0rc1\" in source directory \"tensorflow/\" that are not updated by this \nscript. Please check them manually!\ntensorflow/tools/pip_package/setup.py:106:2.6.0rc1\n```","created_at":"2021-08-03T00:26:50Z","closed_at":"2021-08-03T00:34:41Z","merged_at":"2021-08-03T00:34:41Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":701795316,"title":"Trivial typo","body":"Hope to be edited. Thanks.","created_at":"2021-08-02T21:31:07Z","closed_at":"2021-08-03T03:44:52Z","merged_at":null,"user_id":30167174,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":701689295,"title":"[doc fix] Inline help of input_length of the embedding layer","body":"To my understanding, the input_length needs to be specified for the embedding layer only if it is upstream of the flatten and then the dense layers, which means those layers are downstream of the embedding layer.","created_at":"2021-08-02T18:26:36Z","closed_at":"2021-10-28T15:59:58Z","merged_at":null,"user_id":12711237,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":701688279,"title":"Update keras.py","body":"Changed some verbiage & formatting around","created_at":"2021-08-02T18:24:42Z","closed_at":"2021-08-03T03:42:33Z","merged_at":null,"user_id":87130353,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":701623325,"title":"Add missing validation to `maxpooling_op.cc`","body":"PiperOrigin-RevId: 387932441\r\nChange-Id: I43a0b24e6a12cc965611144ba035accd384594b9","created_at":"2021-08-02T16:54:34Z","closed_at":"2021-08-02T19:05:34Z","merged_at":"2021-08-02T19:05:34Z","user_id":323199,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":701620654,"title":"Prevent crash/heap OOB due to integer conversion to unsigned in NMS k…","body":"…ernels\r\n\r\nPiperOrigin-RevId: 387938262\r\nChange-Id: Id361a715307e7179977cf5c64391c199a966f2ad","created_at":"2021-08-02T16:49:45Z","closed_at":"2021-08-02T19:05:18Z","merged_at":"2021-08-02T19:05:18Z","user_id":323199,"sentiment":{"polarity":-0.125,"subjectivity":0.375}}
{"_id":701619454,"title":"Reorganize and add more validation to MKL requantization","body":"PiperOrigin-RevId: 387901341\r\nChange-Id: I2515b9034c64e113db0bcec8337d30643ab0a0f1","created_at":"2021-08-02T16:47:40Z","closed_at":"2021-08-02T21:06:44Z","merged_at":"2021-08-02T21:06:44Z","user_id":323199,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":701617810,"title":"Fix nullptr deref and heap OOB access in binary cwise ops.","body":"PiperOrigin-RevId: 387936777\r\nChange-Id: I608b8074cec36a982cca622b7144cb2c43e6e19f","created_at":"2021-08-02T16:44:51Z","closed_at":"2021-08-02T19:05:00Z","merged_at":"2021-08-02T19:05:00Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":701616506,"title":"Add one missing valdiation to `matrix_set_diag_op.cc`","body":"PiperOrigin-RevId: 387923408\r\nChange-Id: If6a97b9098c13879400f56c22f91555cdf0ce5d7","created_at":"2021-08-02T16:42:21Z","closed_at":"2021-08-02T18:30:16Z","merged_at":"2021-08-02T18:30:16Z","user_id":323199,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":701614598,"title":"Add missing validation to `matrix_diag_op.cc`","body":"PiperOrigin-RevId: 387923533\r\nChange-Id: Idfffeb328d5f9c6748d992d28a56d6e9e45103a0","created_at":"2021-08-02T16:38:43Z","closed_at":"2021-08-02T18:30:00Z","merged_at":"2021-08-02T18:30:00Z","user_id":323199,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":701613220,"title":"Prevent heap oob access in `resource_variable_ops.cc`","body":"PiperOrigin-RevId: 387936433\r\nChange-Id: I9e71ddaa8dbd51ec6afbf163a6b3b591f193b4f6","created_at":"2021-08-02T16:36:11Z","closed_at":"2021-08-02T18:29:45Z","merged_at":"2021-08-02T18:29:45Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":701611249,"title":"Prevent division by 0 in `resource_variable_ops.cc`","body":"PiperOrigin-RevId: 387939939\r\nChange-Id: Ib04902d63756633999959a70613f2eaa30c2c151","created_at":"2021-08-02T16:32:45Z","closed_at":"2021-08-02T23:11:41Z","merged_at":"2021-08-02T23:11:41Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":701609285,"title":"Prevent use after free.","body":"A very old version of the code used `result` as a simple pointer to a resource. Two years later, the pointer got changed to a `unique_ptr` but author forgot to remove the call to `Unref`. Three years after that, we finally uncover the UAF.\r\n\r\nPiperOrigin-RevId: 387924872\r\nChange-Id: I70fb6f199164de49fac20c168132a07b84903f9b","created_at":"2021-08-02T16:29:25Z","closed_at":"2021-08-02T23:11:27Z","merged_at":"2021-08-02T23:11:27Z","user_id":323199,"sentiment":{"polarity":0.4,"subjectivity":0.8}}
{"_id":701609248,"title":"Mm 4","body":"","created_at":"2021-08-02T16:29:22Z","closed_at":"2021-08-02T16:33:54Z","merged_at":null,"user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":701607893,"title":"Ensure validation sticks in `save_restore_v2_ops.cc`","body":"PiperOrigin-RevId: 387924206\r\nChange-Id: I6156842eb3230076b5812c0815f3e66bd5241454","created_at":"2021-08-02T16:27:17Z","closed_at":"2021-08-02T19:46:36Z","merged_at":"2021-08-02T19:46:36Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":701602153,"title":"Prevent heap OOB in sparse reduction ops.","body":"PiperOrigin-RevId: 387934524\r\nChange-Id: I894aa30f1e454f09b471d565b4a325da49322c1a","created_at":"2021-08-02T16:18:48Z","closed_at":"2021-08-02T18:29:10Z","merged_at":"2021-08-02T18:29:10Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":701593912,"title":"Add remaining missing validation to `BoostedTreesCalculateBestFeatureSplit`","body":"(replaces #51059 as that is partial)","created_at":"2021-08-02T16:08:12Z","closed_at":"2021-08-02T18:28:33Z","merged_at":"2021-08-02T18:28:33Z","user_id":323199,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":701444340,"title":"Rollforward \"PR #50519: GPU Symmetric Fake Quantization\"","body":"This PR re-applies #50519 which has been rolled back e4f883065966d41ce6e04061100c3c5d8e0eec7a due to internal CI failures.\r\n\r\nI am resubmitting following https://github.com/tensorflow/tensorflow/pull/50768#issuecomment-886893162 to make sure this doesn't get lost. @Xhark do you have any updates on the internal test failures?","created_at":"2021-08-02T13:01:06Z","closed_at":"2022-01-13T09:33:54Z","merged_at":null,"user_id":13285808,"sentiment":{"polarity":-0.5,"subjectivity":1.0}}
{"_id":701423501,"title":"Fix bug in GpuRadixSort for SparseSegmentReduceGrad","body":"This works around an [issue](https://github.com/NVIDIA/cub/issues/353) in CUB `DeviceRadixSort` where it fails when `begin_bit = end_bit = 0`.\r\n\r\nThis should fix the known bug in `SparseSegmentReduceGrad`, and thus re-enables it (please confirm with internal models before merging).\r\n(The PR also optimizes `SparseSegmentReduceGrad` for this case).\r\n\r\nAlso adds relevant tests.\r\n\r\ncc @nluehr @sanjoy @reedwm ","created_at":"2021-08-02T12:30:03Z","closed_at":"2021-08-11T18:25:00Z","merged_at":"2021-08-11T18:25:00Z","user_id":3979096,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":701071003,"title":"Updated README.md","body":"Corrected Grammar","created_at":"2021-08-02T02:52:10Z","closed_at":"2021-08-18T16:49:23Z","merged_at":null,"user_id":57281769,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":700941162,"title":"add missing dependencies for ChloPasses","body":"I tried to build the IREE project acording to the docs at https://google.github.io/iree/building-from-source/getting-started/.\r\n\r\nDuring compilation I got the following error:\r\n```\r\nScanning dependencies of target obj.ChloPasses\r\n[ 74%] Building CXX object third_party/mlir-hlo/lib/Dialect/mhlo/transforms/CMakeFiles/obj.ChloPasses.dir/chlo_legalize_to_hlo.cc.o\r\n[ 74%] Building CXX object third_party/mlir-hlo/lib/Dialect/mhlo/transforms/CMakeFiles/obj.ChloPasses.dir/chlo_legalize_to_hlo_pass.cc.o\r\nIn file included from /home/stella/iree_self_build/iree/third_party/mlir-hlo/lib/Dialect/mhlo/transforms/chlo_legalize_to_hlo_pass.cc:18:\r\n/home/stella/iree_self_build/iree/third_party/mlir-hlo/include/mlir-hlo/Dialect/mhlo/transforms/PassDetail.h:32:10: fatal error: mlir-hlo/Dialect/mhlo/transforms/mhlo_passes.h.inc: No such file or directory\r\n   32 | #include \"mlir-hlo/Dialect/mhlo/transforms/mhlo_passes.h.inc\"\r\n      |          ^~~~~~~~~~~~\r\ncompilation terminated.\r\nmake[2]:  [third_party/mlir-hlo/lib/Dialect/mhlo/transforms/CMakeFiles/obj.ChloPasses.dir/build.make:76: third_party/mlir-hlo/lib/Dialect/mhlo/transforms/CMakeFiles/obj.ChloPasses.dir/chlo_legalize_to_hlo_pass.cc.o] Error 1\r\nmake[1]:  [CMakeFiles/Makefile2:51799: third_party/mlir-hlo/lib/Dialect/mhlo/transforms/CMakeFiles/obj.ChloPasses.dir/all] Error 2\r\nmake: *** [Makefile:163: all] Error 2\r\n```\r\n\r\nI added the lines:\r\n```\r\nMLIRMhloPassIncGen\r\nMLIRLmhloPassIncGen\r\nMLIRDiscRalPassIncGen\r\n```\r\nto get rid of all the errors. After I fixed the error above I got new errors that why the second and third line needed to be included as well.\r\n\r\n","created_at":"2021-08-01T16:25:52Z","closed_at":"2021-08-03T13:53:54Z","merged_at":"2021-08-03T13:53:54Z","user_id":1640597,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":700794276,"title":"Fix wrong instruction of TFLite iOS profiling tool","body":"Change to \"Product > Profile\" from \"Product > Scheme\"","created_at":"2021-08-01T01:12:22Z","closed_at":"2021-08-02T03:51:27Z","merged_at":"2021-08-02T03:51:27Z","user_id":12150373,"sentiment":{"polarity":-0.5,"subjectivity":0.9}}
{"_id":700633077,"title":"[Cherrypick2.6] Update XNNPACK dependency","body":"PiperOrigin-RevId: 386400181\r\nChange-Id: Ie128b1fea6a6dfa80913c47c9de3945b09f5921a\r\n\r\nXNNPACK build error fixes.\r\nFixes an error in the XNNPACK enabled build of TensorFlow Lite by Bazel. #50920\r\nI have confirmed that the build finishes successfully on armhf and aarch64, x86_64.","created_at":"2021-07-31T01:22:55Z","closed_at":"2021-08-02T16:57:51Z","merged_at":"2021-08-02T16:57:51Z","user_id":33194443,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":700617653,"title":"Prevent division by 0 in common shape functions.","body":null,"created_at":"2021-07-30T23:51:20Z","closed_at":"2021-08-02T15:50:15Z","merged_at":"2021-08-02T15:50:15Z","user_id":53313357,"sentiment":{"polarity":-0.3,"subjectivity":0.5}}
{"_id":700616784,"title":"Fix a shape inference issue leading to nullptr deref.","body":"PiperOrigin-RevId: 387712259\nChange-Id: I7e670772b259c068a501a187cd89f18773bb95a1","created_at":"2021-07-30T23:47:02Z","closed_at":"2021-08-02T15:49:19Z","merged_at":"2021-08-02T15:49:19Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":700616547,"title":"Prevent dereferencing of null pointers in TFLite's `add.cc`.","body":"PiperOrigin-RevId: 387244946\nChange-Id: I56094233327fbd8439b92e1dbb1262176e00eeb9","created_at":"2021-07-30T23:45:52Z","closed_at":"2021-08-02T15:48:58Z","merged_at":"2021-08-02T15:48:58Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":700615712,"title":"Prevent a segfault in shape inference due to bad inputs.","body":"PiperOrigin-RevId: 387737970\nChange-Id: Ibd1cf3dbdce1dd2ab47fd633d5c5a57f7d8fb6e9","created_at":"2021-07-30T23:42:04Z","closed_at":"2021-08-02T15:48:25Z","merged_at":"2021-08-02T15:48:25Z","user_id":53313357,"sentiment":{"polarity":-0.4124999999999999,"subjectivity":0.5208333333333333}}
{"_id":700615132,"title":"Prevent a CHECK-fail due to empty tensor input in `map_stage_op.cc`","body":"PiperOrigin-RevId: 387737906\nChange-Id: Idc52df0c71c7ed6e2dd633b651a581932f277c8a","created_at":"2021-07-30T23:39:27Z","closed_at":"2021-08-02T15:48:08Z","merged_at":"2021-08-02T15:48:08Z","user_id":53313357,"sentiment":{"polarity":-0.11249999999999999,"subjectivity":0.4375}}
{"_id":700614686,"title":"Add remaining validation to `sdca_internal.cc`","body":"PiperOrigin-RevId: 387738010\nChange-Id: I28eedcfd87a53aaf34deb075acea1f8c95470808","created_at":"2021-07-30T23:37:22Z","closed_at":"2021-08-02T15:47:51Z","merged_at":"2021-08-02T15:47:51Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":700614201,"title":"Prevent nullptr deref in validation of indexes in map ops.","body":"PiperOrigin-RevId: 387738023\nChange-Id: I83d18d36a7b82ffd2a40b5124a4e5b4c72238f27","created_at":"2021-07-30T23:35:04Z","closed_at":"2021-08-02T15:46:40Z","merged_at":"2021-08-02T15:46:40Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":700613830,"title":"Prevent overflow due to integer conversion to unsigned.","body":"PiperOrigin-RevId: 387738045\nChange-Id: Id7e95bc07e02df1c66b72bd09f389608c87bdebe","created_at":"2021-07-30T23:33:28Z","closed_at":"2021-08-02T15:46:05Z","merged_at":"2021-08-02T15:46:04Z","user_id":53313357,"sentiment":{"polarity":-0.125,"subjectivity":0.375}}
{"_id":700613392,"title":"Prevent CHECK-fail/heap OOB in UpperBound and LowerBound","body":"PiperOrigin-RevId: 387738073\nChange-Id: Iee74de95ddad18440d052a75a5a1cb67544f490a","created_at":"2021-07-30T23:31:33Z","closed_at":"2021-08-02T15:45:54Z","merged_at":"2021-08-02T15:45:54Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":700612775,"title":"[cherryPick2.6]","body":null,"created_at":"2021-07-30T23:28:51Z","closed_at":"2021-08-02T16:08:36Z","merged_at":null,"user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":700610923,"title":"Ensure non-empty rt_nested_splits in tf.raw_ops.RaggedTensorToVariant","body":"PiperOrigin-RevId: 387664237\nChange-Id: Ia1700c34b5610873d63561abc86e23b46ead93b3","created_at":"2021-07-30T23:21:30Z","closed_at":"2021-08-02T15:42:27Z","merged_at":"2021-08-02T15:42:27Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":700610270,"title":"Add more validation to `RequantizationRangePerChannel`.","body":"PiperOrigin-RevId: 387693946\nChange-Id: Ife8dcbdb021bec4787eef6a4361dd08f17c14bd6","created_at":"2021-07-30T23:19:16Z","closed_at":"2021-08-02T15:42:05Z","merged_at":"2021-08-02T15:42:05Z","user_id":53313357,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":700608850,"title":"[cheerypick2.6]Ensure num_streams >= 0 in tf.raw_ops.BoostedTreesCreateQuantileStreamResource","body":null,"created_at":"2021-07-30T23:15:13Z","closed_at":"2021-08-02T15:41:28Z","merged_at":"2021-08-02T15:41:27Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":700606484,"title":"Add missing validation to `RaggedTensorToSparse`.","body":"There needs to be a check that the splits allow for valid ragged tensors.\n\nPiperOrigin-RevId: 387712169\nChange-Id: I2499175324b82b65d159a260c7f83b98ceb5cc7d","created_at":"2021-07-30T23:08:25Z","closed_at":"2021-08-02T15:40:57Z","merged_at":"2021-08-02T15:40:57Z","user_id":53313357,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":700605608,"title":"Fix segfault/heap buffer overflow in `{Experimental,}DatasetToTFRecord` where dataset is numeric.","body":"Code assumes only strings inputs and then interprets numbers as valid `tstring`s. Then, when trying to compute the CRC of the record this results in heap buffer overflow.\n\nPiperOrigin-RevId: 387675909\nChange-Id: I7396b9b8afc1ac744112af7c0b1cd7bb41e0f556","created_at":"2021-07-30T23:05:53Z","closed_at":"2021-08-02T15:40:22Z","merged_at":"2021-08-02T15:40:22Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":700587749,"title":"remove cast of y_true to y_pred data type in sparse categorical cross…","body":"sparse_categorical_crossentropy in losses.py performs an unnecessary [cast](https://github.com/tensorflow/tensorflow/blob/35639cd25a878ecd7b97c09b48fbcd7119540db2/tensorflow/python/keras/losses.py#L1727) of y_true to y_pred.dtype since it's then [cast](https://github.com/tensorflow/tensorflow/blob/35639cd25a878ecd7b97c09b48fbcd7119540db2/tensorflow/python/keras/backend.py#L4914) to int64 in sparse_categorical_crossentropy in keras.backend.py. Eventual call to sparse_softmax_cross_entropy_with_logits in nn_ops.py is documented to expect int64 as well.\r\n\r\nThis seems to be the same code as in categorical_crossentropy, but causes issues with sparse, especially with mixed precision training and float16 as the loss in precision causes incorrect encodings or labels outside the domain resulting in incorrect or nan loss. With float16, issues start with a couple thousand labels and a couple hundred labels with bfloat16.\r\n\r\nThe error can be found in this [notebook](https://colab.research.google.com/drive/1oRbNOnCo1i2HcXD2V4_-D1Bz2EVxiT65)\r\n\r\nThe [PR](https://github.com/keras-team/keras/pull/15015) in Keras repository has been merged .","created_at":"2021-07-30T22:09:03Z","closed_at":"2021-08-04T16:29:38Z","merged_at":null,"user_id":56781123,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":700429916,"title":"[CherryPick2.6]Fix bug that could cause map_fn to produce incorrect results (rather than an error) when mapping over a ragged tensor with an inappropriate fn_output_signature.  (Note: there are cases where the default value for fn_output_signature is not appropriate, so the user needs to explicitly specify the correct output signature.)","body":"PiperOrigin-RevId: 387606546\nChange-Id: Ib4ea27b9634e6ab413f211cfe809a69a90f0e2cd","created_at":"2021-07-30T16:29:44Z","closed_at":"2021-07-30T17:21:56Z","merged_at":"2021-07-30T17:21:56Z","user_id":53313357,"sentiment":{"polarity":-0.25,"subjectivity":0.5}}
{"_id":700109227,"title":"Update max version of bazel supported by tensorflow to 4.99.0","body":"For fix the issue: https://github.com/tensorflow/tensorflow/issues/50966#issuecomment-888748570\r\n\r\nI'm a member of Microsoft VCPKG team, we recently upgraded the version of bazel used in vcpkg to 4.1.0, then tensorflow build failed with following error:\r\n```\r\nYou have bazel 4.1.0 installed.\r\nPlease downgrade your bazel installation to version 3.99.0 or lower to build TensorFlow! To downgrade: download the installer for the old version (from https://github.com/bazelbuild/bazel/releases) then run the installer.\r\n```\r\nThis issue is due to the fact that tensorflow has set the maximum supported version of bazel to 3.99.0 on line 53 of the https://github.com/tensorflow/tensorflow/blob/master/configure.py file.\r\n\r\nFor fixing this issue, update the max version of bazel supported by tensorflow to 4.99.0.","created_at":"2021-07-30T08:29:36Z","closed_at":"2021-08-02T23:42:09Z","merged_at":"2021-08-02T23:42:09Z","user_id":38240633,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":700100148,"title":"[MLIR][DISC] Bufferize mhlo::LogisticOp","body":"","created_at":"2021-07-30T08:15:39Z","closed_at":"2021-08-02T22:39:21Z","merged_at":"2021-08-02T22:39:21Z","user_id":15364516,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":699971474,"title":"Update max version of bazel supported by tensorflow to 4.1.0","body":"For fix the issue: https://github.com/tensorflow/tensorflow/issues/50966#issuecomment-888748570\r\n\r\nI'm a member of Microsoft VCPKG team, we recently upgraded the version of bazel used in vcpkg to 4.1.0, then tensorflow build failed with following error:\r\n```\r\nYou have bazel 4.1.0 installed.\r\nPlease downgrade your bazel installation to version 3.99.0 or lower to build TensorFlow! To downgrade: download the installer for the old version (from https://github.com/bazelbuild/bazel/releases) then run the installer.\r\n```\r\nThis issue is due to the fact that tensorflow has set the maximum supported version of bazel to 3.99.0 on line 53 of the https://github.com/tensorflow/tensorflow/blob/master/configure.py file.\r\n\r\nFor fixing this issue, update the max version of bazel supported by tensorflow to 4.1.0.","created_at":"2021-07-30T03:15:33Z","closed_at":"2021-07-30T08:18:34Z","merged_at":null,"user_id":38240633,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":699946914,"title":"Fix missing preprocess guards in CUDNN wrapper (Fixes build breakage when CUDNN Frontend not used or CUDNN < 8.1)","body":"Fixes a block of code added by by a [previous PR](https://github.com/tensorflow/tensorflow/pull/50569/commits/07ed03809cbf142229c99ab1b3e6a0dc8641f59b). It is improperly gated by preprocessor macros. It uses `json` symbol which isn't defined unless the header at the top is included, which is gated by macros:\r\n\r\n```\r\n#if CUDNN_VERSION >= 8100 && TF_ENABLE_CUDNN_FRONTEND\r\n#include \"third_party/cudnn_frontend/include/cudnn_frontend.h\"\r\n#endif  // CUDNN_VERSION >= 8100 && TF_ENABLE_CUDNN_FRONTEND\r\n```\r\nThe header indirectly includes `nlohmann/json`, so if this is not present, and your CuDNN version is < 8100, then the build will break.\r\n","created_at":"2021-07-30T02:01:37Z","closed_at":"2021-08-03T13:53:54Z","merged_at":"2021-08-03T13:53:54Z","user_id":30323187,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":699679532,"title":"[r2.6] Update RELEASE.md to add entry for modular file system support (s3 and hdfs)","body":"**NOTE: This PR is for r2.6 branch**\r\n\r\nThis PR update RELEASE.md to add entry for modular file system support (s3 and hdfs).\r\n\r\n/cc @mihaimaruseac Don't know if this is still ok though I think it might make sense to add the entry to 2.6 branch of RELEASE.md\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2021-07-29T16:32:23Z","closed_at":"2021-07-30T17:09:29Z","merged_at":null,"user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":699656804,"title":"Update RELEASE.md to add entry for modular file system support (s3 and hdfs)","body":"This PR update RELEASE.md to add entry for modular file system support (s3 and hdfs).\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2021-07-29T16:01:14Z","closed_at":"2021-08-03T15:15:33Z","merged_at":"2021-08-03T15:15:33Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":699598709,"title":"fix: miss typo codespelling","body":"hello!, i have fixing some miss typo grammar on ```tensorflow```, and fixed with reference words from [Merriam webster dictionary](https://www.merriam-webster.com/)\r\n\r\nthanks !!!","created_at":"2021-07-29T14:46:25Z","closed_at":"2021-09-02T23:37:32Z","merged_at":"2021-09-02T23:37:32Z","user_id":40540262,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":699560732,"title":"Update snappy library to 1.1.9","body":"This PR updates snappy library from 1.1.8 to 1.1.9.\r\nThe previous version 1.1.8 was one and half year old. The latest one (1.1.9)\r\nwas released last month.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2021-07-29T14:00:28Z","closed_at":"2021-07-30T10:13:27Z","merged_at":null,"user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":699560309,"title":"Remove hdfs as support has been moved to modular file systems.","body":"This PR removes hdfs as support has been moved to modular file systems.\r\n\r\nThis PR will help reduce build time of tensorflow core.\r\n\r\n/cc @kvignesh1420  @vnvo2409 @burgerkingeater FYI\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2021-07-29T13:59:55Z","closed_at":"2021-09-10T17:30:51Z","merged_at":null,"user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":699559283,"title":"Remove AWS files as s3 support is now in modular file system","body":"This PR remove AWS files, as s3 support is now in modular file system.\r\n\r\nThis PR will help reduce build time of tensorflow core.\r\n\r\n/cc @kvignesh1420  @vnvo2409 @burgerkingeater FYI\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2021-07-29T13:58:43Z","closed_at":"2021-09-10T16:33:55Z","merged_at":null,"user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":699355293,"title":"Add hlo to mhlo logistic translation","body":"Add `hlo-to-mhlo` logistic op translation.\r\ncc @byronyi ","created_at":"2021-07-29T09:16:04Z","closed_at":"2021-08-03T14:22:33Z","merged_at":"2021-08-03T14:22:33Z","user_id":29956693,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":699227465,"title":"Revert https://github.com/tensorflow/tensorflow/pull/50292","body":"It causes errors like: https://github.com/tensorflow/tensorflow/pull/50292#issuecomment-888581796","created_at":"2021-07-29T05:45:32Z","closed_at":"2021-08-02T13:21:09Z","merged_at":"2021-08-02T13:21:09Z","user_id":1428327,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":699161207,"title":"[determinism] Add unimplemented exception to nearest-neighbor resizing","body":"This current PR adds and tests determinism-unimplemented exception-throwing for `tf.image.resize` when `method=ResizeMethod.NEAREST` and when its GPU-implemented backprop code-path is executed.\r\n\r\nThis PR is related to [RFC: Enabling Determinism in TensorFlow](https://github.com/tensorflow/community/blob/master/rfcs/20210119-determinism.md). For status and history of GPU-determinism for this op, see [here](https://github.com/NVIDIA/framework-determinism/blob/master/tensorflow_status.md#nearest-neighbor-image-resizing).\r\n\r\nCC @reedwm, @sanjoy, @nluehr","created_at":"2021-07-29T02:49:24Z","closed_at":"2021-08-02T13:28:09Z","merged_at":"2021-08-02T13:28:08Z","user_id":33532941,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":699066034,"title":"Disallow negative ngram_widths values in tf.raw_ops.StringNGrams","body":"PiperOrigin-RevId: 387148179\nChange-Id: I641395a09a208be72ef9b3ceb128cf8a83a0775b","created_at":"2021-07-28T22:58:21Z","closed_at":"2021-07-30T17:28:44Z","merged_at":"2021-07-30T17:28:44Z","user_id":53313357,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":699065768,"title":"Disallow negative ngram_widths values in tf.raw_ops.StringNGrams","body":"PiperOrigin-RevId: 387148179\nChange-Id: I641395a09a208be72ef9b3ceb128cf8a83a0775b","created_at":"2021-07-28T22:57:40Z","closed_at":"2021-07-30T17:28:14Z","merged_at":"2021-07-30T17:28:14Z","user_id":53313357,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":699065426,"title":"Disallow negative ngram_widths values in tf.raw_ops.StringNGrams","body":"PiperOrigin-RevId: 387148179\nChange-Id: I641395a09a208be72ef9b3ceb128cf8a83a0775b","created_at":"2021-07-28T22:56:49Z","closed_at":"2021-07-30T17:28:08Z","merged_at":"2021-07-30T17:28:08Z","user_id":53313357,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":699046868,"title":"Disallow negative ngram_widths values in tf.raw_ops.StringNGrams","body":"PiperOrigin-RevId: 387148179\nChange-Id: I641395a09a208be72ef9b3ceb128cf8a83a0775b","created_at":"2021-07-28T22:10:12Z","closed_at":"2021-07-30T17:27:57Z","merged_at":"2021-07-30T17:27:57Z","user_id":53313357,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":699040193,"title":"Prevent heap OOB read in TFLite's `gather.cc`.","body":"Passing negative indices is illegal but there was a missing check so that resulted in OOB accesses.\n\nPiperOrigin-RevId: 387231300\nChange-Id: I3111b54b2f232638d795be17efc46abe4ede6bf8","created_at":"2021-07-28T21:57:03Z","closed_at":"2021-07-30T17:34:26Z","merged_at":"2021-07-30T17:34:26Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":699039858,"title":"Prevent division by 0 in LSH projection.","body":"PiperOrigin-RevId: 387225857\nChange-Id: Iaeb572a763618c64f503e0026f6dd9fd769bf50c","created_at":"2021-07-28T21:56:12Z","closed_at":"2021-07-30T17:34:12Z","merged_at":"2021-07-30T17:34:12Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":699038840,"title":"Prevent nullptr dereference in MLIR TFLite dialect/optimizer.","body":"PiperOrigin-RevId: 387220762\nChange-Id: Id136ef04bb3d36123b4685d316ae81a9ec924d6b","created_at":"2021-07-28T21:53:45Z","closed_at":"2021-07-30T17:34:01Z","merged_at":"2021-07-30T17:34:01Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":699038339,"title":"Prevent heap OOB read in TFLite's `gather_nd.cc`.","body":"Passing negative indices is illegal but there was a missing check so that resulted in OOB accesses.\n\nPiperOrigin-RevId: 387208551\nChange-Id: I6b7a8a62d3e7c13a16d81619e5bc23ae2cdbc7fd","created_at":"2021-07-28T21:52:36Z","closed_at":"2021-07-30T17:32:02Z","merged_at":null,"user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":699037388,"title":"Prevent heap OOB read in TFLite's `gather_nd.cc`.","body":"Passing negative indices is illegal but there was a missing check so that resulted in OOB accesses.\n\nPiperOrigin-RevId: 387208551\nChange-Id: I6b7a8a62d3e7c13a16d81619e5bc23ae2cdbc7fd","created_at":"2021-07-28T21:50:26Z","closed_at":"2021-07-30T17:33:38Z","merged_at":"2021-07-30T17:33:38Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":699036122,"title":"Prevent an OOB read in `expand_dims.cc`","body":"The for loop that follows this check assumes that `axis` is between `0` and `input_dims.size`. If user supplied `axis` is negative, the if code before this check is supposed to bring it back to positive (similar to how in Python one can do `l[-3]` to mean `l[-3 + len(l)]`).\n\nPiperOrigin-RevId: 387200206\nChange-Id: I162f4feba12d547c3a4340833ae682016a2ebfab","created_at":"2021-07-28T21:47:44Z","closed_at":"2021-07-30T17:33:19Z","merged_at":"2021-07-30T17:33:19Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":699024497,"title":"Ensure non-empty input_splits in tf.raw_ops.UnicodeEncode","body":"PiperOrigin-RevId: 387170080\nChange-Id: I3b489acc51c5cb4124c535b9df7cc6e62ef21766","created_at":"2021-07-28T21:23:40Z","closed_at":"2021-07-30T17:26:21Z","merged_at":"2021-07-30T17:26:21Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":699024408,"title":"Ensure non-empty input_splits in tf.raw_ops.UnicodeEncode","body":"PiperOrigin-RevId: 387170080\nChange-Id: I3b489acc51c5cb4124c535b9df7cc6e62ef21766","created_at":"2021-07-28T21:23:30Z","closed_at":"2021-07-30T17:26:11Z","merged_at":"2021-07-30T17:26:11Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":699022004,"title":"Ensure non-empty input_splits in tf.raw_ops.UnicodeEncode","body":"PiperOrigin-RevId: 387170080\nChange-Id: I3b489acc51c5cb4124c535b9df7cc6e62ef21766","created_at":"2021-07-28T21:19:04Z","closed_at":"2021-07-30T17:26:04Z","merged_at":"2021-07-30T17:26:04Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":699021982,"title":"Ensure non-empty input_splits in tf.raw_ops.UnicodeEncode","body":"PiperOrigin-RevId: 387170080\nChange-Id: I3b489acc51c5cb4124c535b9df7cc6e62ef21766","created_at":"2021-07-28T21:19:02Z","closed_at":"2021-07-30T17:25:50Z","merged_at":"2021-07-30T17:25:50Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":699018763,"title":"Secure tf.raw_ops.QuantizeV2","body":"Validate size and shape of min_range and max_range\nEnsure axis is within input dims limits\n\nPiperOrigin-RevId: 387232799\nChange-Id: I36975281f7b5758e9e31a8dcc73fe610ef456318","created_at":"2021-07-28T21:13:27Z","closed_at":"2021-07-30T17:24:47Z","merged_at":"2021-07-30T17:24:47Z","user_id":53313357,"sentiment":{"polarity":0.4,"subjectivity":0.6}}
{"_id":699018436,"title":"Secure tf.raw_ops.QuantizeV2","body":"Validate size and shape of min_range and max_range\nEnsure axis is within input dims limits\n\nPiperOrigin-RevId: 387232799\nChange-Id: I36975281f7b5758e9e31a8dcc73fe610ef456318","created_at":"2021-07-28T21:12:52Z","closed_at":"2021-07-30T17:24:32Z","merged_at":"2021-07-30T17:24:32Z","user_id":53313357,"sentiment":{"polarity":0.4,"subjectivity":0.6}}
{"_id":699018269,"title":"Secure tf.raw_ops.QuantizeV2","body":"Validate size and shape of min_range and max_range\nEnsure axis is within input dims limits\n\nPiperOrigin-RevId: 387232799\nChange-Id: I36975281f7b5758e9e31a8dcc73fe610ef456318","created_at":"2021-07-28T21:12:34Z","closed_at":"2021-07-30T17:24:19Z","merged_at":"2021-07-30T17:24:19Z","user_id":53313357,"sentiment":{"polarity":0.4,"subjectivity":0.6}}
{"_id":699017024,"title":"Secure tf.raw_ops.QuantizeV2","body":"Validate size and shape of min_range and max_range\nEnsure axis is within input dims limits\n\nPiperOrigin-RevId: 387232799\nChange-Id: I36975281f7b5758e9e31a8dcc73fe610ef456318","created_at":"2021-07-28T21:10:26Z","closed_at":"2021-07-30T17:24:14Z","merged_at":"2021-07-30T17:24:14Z","user_id":53313357,"sentiment":{"polarity":0.4,"subjectivity":0.6}}
{"_id":699006087,"title":"[Cherrypick2.6] In tf.raw_ops.BoostedTreesSparseCalculateBestFeatureSplit, limit stat_dim in stats_summary_indices to under stats_dims in stats_summary_shape","body":null,"created_at":"2021-07-28T20:51:16Z","closed_at":"2021-07-30T17:21:43Z","merged_at":"2021-07-30T17:21:43Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":699005014,"title":"[Cherrypick2.5] In tf.raw_ops.BoostedTreesSparseCalculateBestFeatureSplit, limit stat_dim in stats_summary_indices to under stats_dims in stats_summary_shape","body":null,"created_at":"2021-07-28T20:49:25Z","closed_at":"2021-07-30T17:21:29Z","merged_at":"2021-07-30T17:21:29Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":699002769,"title":"[Cherrypick2.4] In tf.raw_ops.BoostedTreesSparseCalculateBestFeatureSplit, limit stat_dim in stats_summary_indices to under stats_dims in stats_summary_shape","body":null,"created_at":"2021-07-28T20:45:22Z","closed_at":"2021-07-30T17:21:17Z","merged_at":"2021-07-30T17:21:17Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":699001514,"title":"[Cherrypick2.3] In tf.raw_ops.BoostedTreesSparseCalculateBestFeatureSplit, limit stat_dim in stats_summary_indices to under stats_dims in stats_summary_shape","body":null,"created_at":"2021-07-28T20:43:11Z","closed_at":"2021-07-30T17:21:06Z","merged_at":"2021-07-30T17:21:06Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":698937762,"title":"[Cherrypick2.5] Disallow empty node_id_range in tf.raw_ops.BoostedTreesCalculateBestFeatureSplitV2 and tf.raw_ops.BoostedTreesCalculateBestGainsPerFeature","body":null,"created_at":"2021-07-28T18:53:02Z","closed_at":"2021-07-30T17:17:18Z","merged_at":"2021-07-30T17:17:18Z","user_id":53313357,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":698936172,"title":"[Cherrypick2.4] Disallow empty node_id_range in tf.raw_ops.BoostedTreesCalculateBestFeatureSplitV2 and tf.raw_ops.BoostedTreesCalculateBestGainsPerFeature","body":null,"created_at":"2021-07-28T18:50:11Z","closed_at":"2021-07-30T17:17:25Z","merged_at":"2021-07-30T17:17:25Z","user_id":53313357,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":698933084,"title":"[Cherrypick2.3] Disallow empty node_id_range in tf.raw_ops.BoostedTreesCalculateBestFeatureSplitV2 and tf.raw_ops.BoostedTreesCalculateBestGainsPerFeature","body":null,"created_at":"2021-07-28T18:44:44Z","closed_at":"2021-07-30T17:17:31Z","merged_at":"2021-07-30T17:17:31Z","user_id":53313357,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":698928366,"title":"[Cherrypick2.6] Disallow empty node_id_range in tf.raw_ops.BoostedTreesCalculateBestFeatureSplitV2 and tf.raw_ops.BoostedTreesCalculateBestGainsPerFeature","body":null,"created_at":"2021-07-28T18:36:18Z","closed_at":"2021-07-30T17:17:56Z","merged_at":"2021-07-30T17:17:56Z","user_id":53313357,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":698819715,"title":"Revert \"Update shape_refiner.cc\"","body":"This reverts commit 1886d486348a93fc328a6e40bdea9ed91f44f0b7.\r\n\r\nThis is not needed on r2.6","created_at":"2021-07-28T15:58:23Z","closed_at":"2021-07-28T17:10:03Z","merged_at":"2021-07-28T17:10:03Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":698769727,"title":"[minor] add missing kwargs to resnet_v2 constructors","body":"thanks","created_at":"2021-07-28T14:55:53Z","closed_at":"2021-07-28T16:12:58Z","merged_at":null,"user_id":128897,"sentiment":{"polarity":-0.125,"subjectivity":0.125}}
{"_id":698398143,"title":"[oneDNN]  Fix for build failure.","body":"Fixes a build error due to a recent commit https://github.com/tensorflow/tensorflow/commit/d6f2afb314f19090e742da1f94367e08be86ef93. Llvm openMP failed to build due to a missing py_binary call that was not copied over from llvm/BUILD to llvm_openmp/BUILD.","created_at":"2021-07-28T06:17:32Z","closed_at":"2021-07-28T22:55:27Z","merged_at":"2021-07-28T22:55:27Z","user_id":25374808,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":698263591,"title":"use `std::make_tuple` in `cupti_tracer.cc`","body":"This reverts commit 501a0b2f8cba60b8fc1343646ec61d71af40e0dc and is splited from #50929.\r\n\r\nThe errors I got during builds were\r\n```\r\nExecution platform: @local_execution_config_platform//:platform\r\ntensorflow/core/profiler/internal/gpu/cupti_tracer.cc: In function 'std::tuple<long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool> tensorflow::profiler::{anonymous}::DecodeDriverMemcpy(CUpti_CallbackId, const void*)':\r\ntensorflow/core/profiler/internal/gpu/cupti_tracer.cc:162:67: error: converting to 'std::tuple<long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool>' from initializer list would use explicit constructor 'constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {const long unsigned int&, tensorflow::profiler::CuptiTracerEventType, bool}; <template-parameter-2-2> = void; _Elements = {long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool}]'\r\n       return {p->ByteCount, CuptiTracerEventType::MemcpyH2D, false};\r\n                                                                   ^\r\ntensorflow/core/profiler/internal/gpu/cupti_tracer.cc:167:66: error: converting to 'std::tuple<long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool>' from initializer list would use explicit constructor 'constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {const long unsigned int&, tensorflow::profiler::CuptiTracerEventType, bool}; <template-parameter-2-2> = void; _Elements = {long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool}]'\r\n       return {p->ByteCount, CuptiTracerEventType::MemcpyH2D, true};\r\n                                                                  ^\r\ntensorflow/core/profiler/internal/gpu/cupti_tracer.cc:171:67: error: converting to 'std::tuple<long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool>' from initializer list would use explicit constructor 'constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {const long unsigned int&, tensorflow::profiler::CuptiTracerEventType, bool}; <template-parameter-2-2> = void; _Elements = {long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool}]'\r\n       return {p->ByteCount, CuptiTracerEventType::MemcpyD2H, false};\r\n                                                                   ^\r\ntensorflow/core/profiler/internal/gpu/cupti_tracer.cc:176:66: error: converting to 'std::tuple<long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool>' from initializer list would use explicit constructor 'constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {const long unsigned int&, tensorflow::profiler::CuptiTracerEventType, bool}; <template-parameter-2-2> = void; _Elements = {long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool}]'\r\n       return {p->ByteCount, CuptiTracerEventType::MemcpyD2H, true};\r\n                                                                  ^\r\ntensorflow/core/profiler/internal/gpu/cupti_tracer.cc:180:67: error: converting to 'std::tuple<long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool>' from initializer list would use explicit constructor 'constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {const long unsigned int&, tensorflow::profiler::CuptiTracerEventType, bool}; <template-parameter-2-2> = void; _Elements = {long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool}]'\r\n       return {p->ByteCount, CuptiTracerEventType::MemcpyD2D, false};\r\n                                                                   ^\r\ntensorflow/core/profiler/internal/gpu/cupti_tracer.cc:185:66: error: converting to 'std::tuple<long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool>' from initializer list would use explicit constructor 'constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {const long unsigned int&, tensorflow::profiler::CuptiTracerEventType, bool}; <template-parameter-2-2> = void; _Elements = {long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool}]'\r\n       return {p->ByteCount, CuptiTracerEventType::MemcpyD2D, true};\r\n                                                                  ^\r\ntensorflow/core/profiler/internal/gpu/cupti_tracer.cc:189:69: error: converting to 'std::tuple<long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool>' from initializer list would use explicit constructor 'constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {const long unsigned int&, tensorflow::profiler::CuptiTracerEventType, bool}; <template-parameter-2-2> = void; _Elements = {long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool}]'\r\n       return {p->ByteCount, CuptiTracerEventType::MemcpyOther, false};\r\n                                                                     ^\r\ntensorflow/core/profiler/internal/gpu/cupti_tracer.cc:193:68: error: converting to 'std::tuple<long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool>' from initializer list would use explicit constructor 'constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {const long unsigned int&, tensorflow::profiler::CuptiTracerEventType, bool}; <template-parameter-2-2> = void; _Elements = {long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool}]'\r\n       return {p->ByteCount, CuptiTracerEventType::MemcpyOther, true};\r\n                                                                    ^\r\ntensorflow/core/profiler/internal/gpu/cupti_tracer.cc:197:61: error: converting to 'std::tuple<long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool>' from initializer list would use explicit constructor 'constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool}; <template-parameter-2-2> = void; _Elements = {long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool}]'\r\n       return {Bytes2D(p->pCopy), MemcpyKind(p->pCopy), false};\r\n                                                             ^\r\ntensorflow/core/profiler/internal/gpu/cupti_tracer.cc:202:60: error: converting to 'std::tuple<long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool>' from initializer list would use explicit constructor 'constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool}; <template-parameter-2-2> = void; _Elements = {long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool}]'\r\n       return {Bytes2D(p->pCopy), MemcpyKind(p->pCopy), true};\r\n                                                            ^\r\ntensorflow/core/profiler/internal/gpu/cupti_tracer.cc:206:60: error: converting to 'std::tuple<long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool>' from initializer list would use explicit constructor 'constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool}; <template-parameter-2-2> = void; _Elements = {long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool}]'\r\n       return {Bytes3D(p->pCopy), MemcpyKind(p->pCopy), true};\r\n                                                            ^\r\ntensorflow/core/profiler/internal/gpu/cupti_tracer.cc:211:60: error: converting to 'std::tuple<long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool>' from initializer list would use explicit constructor 'constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool}; <template-parameter-2-2> = void; _Elements = {long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool}]'\r\n       return {Bytes3D(p->pCopy), MemcpyKind(p->pCopy), true};\r\n                                                            ^\r\ntensorflow/core/profiler/internal/gpu/cupti_tracer.cc:216:76: error: converting to 'std::tuple<long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool>' from initializer list would use explicit constructor 'constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {const long unsigned int&, tensorflow::profiler::CuptiTracerEventType, bool}; <template-parameter-2-2> = void; _Elements = {long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool}]'\r\n       return {p2p_params->ByteCount, CuptiTracerEventType::MemcpyP2P, false};\r\n                                                                            ^\r\ntensorflow/core/profiler/internal/gpu/cupti_tracer.cc:221:75: error: converting to 'std::tuple<long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool>' from initializer list would use explicit constructor 'constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {const long unsigned int&, tensorflow::profiler::CuptiTracerEventType, bool}; <template-parameter-2-2> = void; _Elements = {long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool}]'\r\n       return {p2p_params->ByteCount, CuptiTracerEventType::MemcpyP2P, true};\r\n                                                                           ^\r\ntensorflow/core/profiler/internal/gpu/cupti_tracer.cc:225:58: error: converting to 'std::tuple<long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool>' from initializer list would use explicit constructor 'constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {int, tensorflow::profiler::CuptiTracerEventType, bool}; <template-parameter-2-2> = void; _Elements = {long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool}]'\r\n       return {0, CuptiTracerEventType::Unsupported, false};\r\n                                                          ^\r\ntensorflow/core/profiler/internal/gpu/cupti_tracer.cc: In function 'std::tuple<long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool> tensorflow::profiler::{anonymous}::DecodeDriverMemset(CUpti_CallbackId, const void*)':\r\ntensorflow/core/profiler/internal/gpu/cupti_tracer.cc:235:56: error: converting to 'std::tuple<long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool>' from initializer list would use explicit constructor 'constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {const long unsigned int&, tensorflow::profiler::CuptiTracerEventType, bool}; <template-parameter-2-2> = void; _Elements = {long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool}]'\r\n       return {p->N, CuptiTracerEventType::Memset, false};\r\n                                                        ^\r\ntensorflow/core/profiler/internal/gpu/cupti_tracer.cc:239:56: error: converting to 'std::tuple<long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool>' from initializer list would use explicit constructor 'constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {const long unsigned int&, tensorflow::profiler::CuptiTracerEventType, bool}; <template-parameter-2-2> = void; _Elements = {long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool}]'\r\n       return {p->N, CuptiTracerEventType::Memset, false};\r\n                                                        ^\r\ntensorflow/core/profiler/internal/gpu/cupti_tracer.cc:243:56: error: converting to 'std::tuple<long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool>' from initializer list would use explicit constructor 'constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {const long unsigned int&, tensorflow::profiler::CuptiTracerEventType, bool}; <template-parameter-2-2> = void; _Elements = {long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool}]'\r\n       return {p->N, CuptiTracerEventType::Memset, false};\r\n                                                        ^\r\ntensorflow/core/profiler/internal/gpu/cupti_tracer.cc:247:75: error: converting to 'std::tuple<long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool>' from initializer list would use explicit constructor 'constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool}; <template-parameter-2-2> = void; _Elements = {long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool}]'\r\n       return {p->dstPitch * p->Height, CuptiTracerEventType::Memset, false};\r\n                                                                           ^\r\ntensorflow/core/profiler/internal/gpu/cupti_tracer.cc:251:75: error: converting to 'std::tuple<long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool>' from initializer list would use explicit constructor 'constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool}; <template-parameter-2-2> = void; _Elements = {long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool}]'\r\n       return {p->dstPitch * p->Height, CuptiTracerEventType::Memset, false};\r\n                                                                           ^\r\ntensorflow/core/profiler/internal/gpu/cupti_tracer.cc:255:75: error: converting to 'std::tuple<long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool>' from initializer list would use explicit constructor 'constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool}; <template-parameter-2-2> = void; _Elements = {long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool}]'\r\n       return {p->dstPitch * p->Height, CuptiTracerEventType::Memset, false};\r\n                                                                           ^\r\ntensorflow/core/profiler/internal/gpu/cupti_tracer.cc:259:55: error: converting to 'std::tuple<long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool>' from initializer list would use explicit constructor 'constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {const long unsigned int&, tensorflow::profiler::CuptiTracerEventType, bool}; <template-parameter-2-2> = void; _Elements = {long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool}]'\r\n       return {p->N, CuptiTracerEventType::Memset, true};\r\n                                                       ^\r\ntensorflow/core/profiler/internal/gpu/cupti_tracer.cc:263:55: error: converting to 'std::tuple<long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool>' from initializer list would use explicit constructor 'constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {const long unsigned int&, tensorflow::profiler::CuptiTracerEventType, bool}; <template-parameter-2-2> = void; _Elements = {long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool}]'\r\n       return {p->N, CuptiTracerEventType::Memset, true};\r\n                                                       ^\r\ntensorflow/core/profiler/internal/gpu/cupti_tracer.cc:267:55: error: converting to 'std::tuple<long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool>' from initializer list would use explicit constructor 'constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {const long unsigned int&, tensorflow::profiler::CuptiTracerEventType, bool}; <template-parameter-2-2> = void; _Elements = {long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool}]'\r\n       return {p->N, CuptiTracerEventType::Memset, true};\r\n                                                       ^\r\ntensorflow/core/profiler/internal/gpu/cupti_tracer.cc:272:74: error: converting to 'std::tuple<long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool>' from initializer list would use explicit constructor 'constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool}; <template-parameter-2-2> = void; _Elements = {long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool}]'\r\n       return {p->dstPitch * p->Height, CuptiTracerEventType::Memset, true};\r\n                                                                          ^\r\ntensorflow/core/profiler/internal/gpu/cupti_tracer.cc:277:74: error: converting to 'std::tuple<long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool>' from initializer list would use explicit constructor 'constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool}; <template-parameter-2-2> = void; _Elements = {long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool}]'\r\n       return {p->dstPitch * p->Height, CuptiTracerEventType::Memset, true};\r\n                                                                          ^\r\ntensorflow/core/profiler/internal/gpu/cupti_tracer.cc:282:74: error: converting to 'std::tuple<long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool>' from initializer list would use explicit constructor 'constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool}; <template-parameter-2-2> = void; _Elements = {long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool}]'\r\n       return {p->dstPitch * p->Height, CuptiTracerEventType::Memset, true};\r\n                                                                          ^\r\ntensorflow/core/profiler/internal/gpu/cupti_tracer.cc:286:58: error: converting to 'std::tuple<long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool>' from initializer list would use explicit constructor 'constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {int, tensorflow::profiler::CuptiTracerEventType, bool}; <template-parameter-2-2> = void; _Elements = {long unsigned int, tensorflow::profiler::CuptiTracerEventType, bool}]'\r\n       return {0, CuptiTracerEventType::Unsupported, false};\r\n                                                          ^\r\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\r\n```\r\n\r\n`std::make_tuple` was replaced in 60b9283c9e5308bae6fe19d2db531a6c230baffd. After I restored `std::make_tuple`, the build passed.\r\n\r\ncc @yisitu ","created_at":"2021-07-28T00:07:10Z","closed_at":"2021-07-28T23:13:55Z","merged_at":"2021-07-28T23:13:55Z","user_id":9496702,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":698249430,"title":"Make passthrough alias work for resource updates","body":"\r\nModify `alias_passthrough_params` so that it can work with `resource update alias`. Concretely, `module->input_output_alias_config()` could have some aliases preset by `resource update alias`.\r\n\r\nI will upstream another change to enable `resource update alias` for auto-clustering right after this PR is merged.","created_at":"2021-07-27T23:25:16Z","closed_at":"2021-08-05T03:35:51Z","merged_at":"2021-08-05T03:35:51Z","user_id":12016207,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":698240276,"title":"Fix segmentation fault in shape inference logic.","body":"When running shape functions, some functions (such as `MutableHashTableShape`)\nproduce extra output information in the form of a `ShapeAndType` struct.  The\nshapes embedded in this struct are owned by an inference context that is\ncleaned up almost immediately; if the upstream code attempts to access this\nshape information, it can trigger a segfault.\n\n`ShapeRefiner` is mitigating this for normal output shapes by cloning them\n(and thus putting the newly created shape under ownership of an inference\ncontext that will not die), but we were not doing the same for shapes and\ntypes.  This commit fixes that by doing similar logic on output shapes and\ntypes.\n\nPiperOrigin-RevId: 384761124\nChange-Id: I07c0c42d29dfbb55bfa13ec1f09ef825fb0a1a1d","created_at":"2021-07-27T23:01:51Z","closed_at":"2021-07-28T15:53:32Z","merged_at":"2021-07-28T15:53:32Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":698237874,"title":"Fix segmentation fault in shape inference logic.","body":"When running shape functions, some functions (such as `MutableHashTableShape`)\nproduce extra output information in the form of a `ShapeAndType` struct.  The\nshapes embedded in this struct are owned by an inference context that is\ncleaned up almost immediately; if the upstream code attempts to access this\nshape information, it can trigger a segfault.\n\n`ShapeRefiner` is mitigating this for normal output shapes by cloning them\n(and thus putting the newly created shape under ownership of an inference\ncontext that will not die), but we were not doing the same for shapes and\ntypes.  This commit fixes that by doing similar logic on output shapes and\ntypes.\n\nPiperOrigin-RevId: 384761124\nChange-Id: I07c0c42d29dfbb55bfa13ec1f09ef825fb0a1a1d","created_at":"2021-07-27T22:55:16Z","closed_at":"2021-07-28T15:53:29Z","merged_at":"2021-07-28T15:53:29Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":698232343,"title":"Fix segmentation fault in shape inference logic.","body":"When running shape functions, some functions (such as `MutableHashTableShape`)\nproduce extra output information in the form of a `ShapeAndType` struct.  The\nshapes embedded in this struct are owned by an inference context that is\ncleaned up almost immediately; if the upstream code attempts to access this\nshape information, it can trigger a segfault.\n\n`ShapeRefiner` is mitigating this for normal output shapes by cloning them\n(and thus putting the newly created shape under ownership of an inference\ncontext that will not die), but we were not doing the same for shapes and\ntypes.  This commit fixes that by doing similar logic on output shapes and\ntypes.\n\nPiperOrigin-RevId: 384761124\nChange-Id: I07c0c42d29dfbb55bfa13ec1f09ef825fb0a1a1d","created_at":"2021-07-27T22:40:24Z","closed_at":"2021-07-28T15:53:24Z","merged_at":"2021-07-28T15:53:24Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":697896786,"title":"Add missing closing backtick in parse_sequence_example docstring","body":"","created_at":"2021-07-27T14:08:59Z","closed_at":"2021-07-28T14:45:19Z","merged_at":"2021-07-28T14:45:18Z","user_id":4805513,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":697659281,"title":"[PJRT] add platfrom_version for rocm in pjrt/gpu_device","body":"This PR fixes the returned value from platform_version() for ROCm.\r\n@hawkinsp @deven-amd ","created_at":"2021-07-27T08:44:52Z","closed_at":"2021-08-02T21:44:18Z","merged_at":"2021-08-02T21:44:18Z","user_id":79117684,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":697631587,"title":"add platfrom_version for rocm in pjrt/gpu_device","body":"This PR fixes the returned value from platform_version() for ROCm.\r\n","created_at":"2021-07-27T08:05:33Z","closed_at":"2021-07-27T08:06:40Z","merged_at":null,"user_id":79117684,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":697362416,"title":"Crash fix cudaMallocAsync usage of TF_CUDA_MALLOC_ASYNC_SUPPORTED_PREALLOC.","body":"Some of the refactoring caused crash when using TF_CUDA_MALLOC_ASYNC_SUPPORTED_PREALLOC.\r\nThis PR fix them and add a test to be sure it continue to work.\r\n\r\nThis PR is on top of https://github.com/tensorflow/tensorflow/pull/50961 as otherwise there would be code conflict.\r\n\r\nNow, GpuCudaMallocAsyncAllocator doesn't create its own compute stream. But it use one stream set after construction when GpuCudaMallocAsyncAllocator::SetStream is called. So it is now impossible to preallocate all memory during the object construction.\r\nSo this PR postpone the memory preallocation to when the stream is available, in SetStream.\r\n\r\nThis PR also check that the stream isn't set when SetStream is called.\r\n\r\n@sanjoy ","created_at":"2021-07-26T21:21:50Z","closed_at":"2021-09-11T00:03:08Z","merged_at":"2021-09-11T00:03:08Z","user_id":180987,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":697337624,"title":"Add back \"PR #49173: [Crash fix] Fix cudaMallocAsync crashes.\"","body":"This reverts commit a4553f8ad74f5ad486057da400fb8e101f12e09f that was reverting #49173.\r\n\r\nWhen I run it now, //tensorflow/core/common_runtime/gpu:gpu_device_test in asan give me the same output as before. It was already crashing before this PR with my command line:\r\n\r\n```bazel test --distinct_host_configuration=false --javabase=@bazel_tools//tools/jdk:remote_jdk11 --config=asan -c opt --config=cuda //tensorflow/core/common_runtime/gpu:gpu_device_test```\r\n\r\n@penpornk \r\n\r\nfixes #50669 ","created_at":"2021-07-26T20:41:08Z","closed_at":"2021-08-30T11:45:30Z","merged_at":"2021-08-30T11:45:30Z","user_id":180987,"sentiment":{"polarity":-0.375,"subjectivity":0.5}}
{"_id":697080318,"title":"[MLIR][DISC] add ral logger and registry","body":"add ral logger and registry.","created_at":"2021-07-26T14:25:58Z","closed_at":"2021-09-01T00:20:39Z","merged_at":null,"user_id":15364516,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":696951760,"title":"Update losses.py","body":"Changed the Code Example of Binary Cross Entropy to Fix https://github.com/keras-team/keras/issues/14955","created_at":"2021-07-26T11:42:37Z","closed_at":"2021-07-26T14:10:21Z","merged_at":null,"user_id":48206667,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":696857593,"title":"TF-TRT Apply batch size check for FC conversion path of MatMul","body":"The TF-TRT conversion of the MatMul op has two possible paths: one using TRT IMatrixMultiplyLayer and one using IFullyConnectedLayer (FC). This PR fixes a bug in the FC path: having batch dims (here batch dims mean leading dims of the matrices, eg B.shape[0:-2]) larger than one are not compatible with TensorRT, therefore we cannot use the FC conversion path. In such case we have to use the IMatrixMultiplyLayer.\r\n\r\nTagging @bixia1 for review and @DEKHTIARJonathan for visibility.","created_at":"2021-07-26T09:33:27Z","closed_at":"2021-07-29T14:34:43Z","merged_at":"2021-07-29T14:34:43Z","user_id":3671106,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":696353885,"title":"add colon","body":"add colon","created_at":"2021-07-24T13:48:02Z","closed_at":"2021-07-30T17:59:37Z","merged_at":null,"user_id":10285869,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":696263680,"title":"[oneDNN] Improving Graph Rewrite Performance","body":"This PR improves the latency of graph rewrite by avoiding doing kernel registry lookup more than once per kernel. Similar fix was to done before to eager mode, so the refactoring is done to manage and maintain that kernel registry info in one place (mkl_graph_util.h)","created_at":"2021-07-24T00:15:48Z","closed_at":"2021-09-20T19:07:27Z","merged_at":"2021-09-20T19:07:27Z","user_id":24963061,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":696211743,"title":"[INTEL MKL] Update mkl auto_mixed_precision_lists","body":"Updating the MKL auto_mixed_precision_lists to allow more ops in bfloat16. This significantly reduces the number of Cast ops in models running bf16 inference with auto_mixed_precision and improves broad model performance.","created_at":"2021-07-23T21:09:15Z","closed_at":"2021-07-27T11:36:50Z","merged_at":"2021-07-27T11:36:50Z","user_id":42224728,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":696172926,"title":"Fix numpy 1.20 deprecation warnings (round two)","body":"* Make tf.float64 point to np.float64 (rather than np.double, which\r\n  is almost always np.float64, but not always).\r\n* Replace np.object with np.object_.\r\n* Replace np.string_ with np.bytes_ (which are identical).\r\n* Replace np.str and np.unicode_ with np.str_ (which are identical).","created_at":"2021-07-23T19:43:37Z","closed_at":"2021-07-28T14:18:22Z","merged_at":"2021-07-28T14:18:22Z","user_id":730137,"sentiment":{"polarity":-0.2,"subjectivity":0.4}}
{"_id":696163422,"title":"use `std::make_tuple` instead of non-empty braced-init-lists","body":"Non-empty braced-init-lists cause some errors when I build from source. I don't know the exact reason. It may be related to my build tools, but the safest way is not to use non-empty braced-init-lists.\r\nThe error is:\r\n```\r\nexternal/org_tensorflow/tensorflow/stream_executor/gpu/asm_compiler.cc: In function ‘void stream_executor::LogPtxasTooOld(const string&, int, int)’:\r\nexternal/org_tensorflow/tensorflow/stream_executor/gpu/asm_compiler.cc:190:62: error: converting to ‘absl::lts_2020_02_25::container_internal::raw_hash_set<absl::lts_2020_02_25::container_internal::FlatHashSetPolicy<std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, int> >, absl::lts_2020_02_25::hash_internal::Hash<std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, int> >, std::equal_to<std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, int> >, std::allocator<std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, int> > >::init_type {aka std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, int>}’ from initializer list would use explicit constructor ‘constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int&, int&}; <template-parameter-2-2> = void; _Elements = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, int}]’\r\n   if (already_logged->insert({ptxas_path, cc_major, cc_minor}).second) {\r\n```\r\nhttps://github.com/google/jax/issues/6046#issuecomment-809613061 reported a same error.\r\nUsing `std::make_tuple` instead makes the error disappear.","created_at":"2021-07-23T19:22:44Z","closed_at":"2021-07-27T12:40:34Z","merged_at":"2021-07-27T12:40:34Z","user_id":9496702,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":695939911,"title":"XNNPACK build error fixes #50920","body":"Fixes an error in the XNNPACK enabled build of TensorFlow Lite by Bazel. https://github.com/tensorflow/tensorflow/issues/50920\r\nI have confirmed that the build finishes successfully on armhf and aarch64, x86_64.","created_at":"2021-07-23T13:23:29Z","closed_at":"2021-07-27T16:43:14Z","merged_at":null,"user_id":33194443,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":695631266,"title":"Fix unchecked int32 indexing in some GPU kernels","body":"- Many op kernels use the `To32Bit()` function, which does not do any bounds checking and can cause silent corruption due to int32 overflow.\r\n  E.g., `tf.zeros/ones/fill` silently give incorrect results when the number of elements is >= 2**31.\r\n- This commit adds a new helper function `MaybeWith32BitIndexing()` that checks the indexing bounds and converts tensors to 32-bit only if it is safe to do so (and only for GPU devices). This fixes the cases that were previously broken, and simplifies the ones that already had explicit bounds checks.\r\n\r\ncc @nluehr @sanjoy ","created_at":"2021-07-23T02:53:15Z","closed_at":"2021-08-11T17:13:28Z","merged_at":"2021-08-11T17:13:28Z","user_id":3979096,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":695629354,"title":"[PluggableDevice] fix While segment fault on PluggableDevice","body":"While op will  cause a segment fault when executing on PluggableDevice because of invalid memory copy operation.","created_at":"2021-07-23T02:45:12Z","closed_at":"2021-09-22T16:52:21Z","merged_at":"2021-09-22T16:52:21Z","user_id":68101902,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":695555459,"title":"[XLA:GPU] BatchNorm lowering overhaul for cudnn fast fp16 kernels and act+side input fusion","body":"**Problem Definition:**\r\n1. Currently, BatchNorm, when calling into cuDNN, forces the data layout to be NCHW (not by transforms but by squashing physical dimensions) irrespective of their original layout. This leads to calls into suboptimal BatchNorm kernels in cuDNN resulting in drastic performance regression for NHWC models. Note that latest cuDNN versions have capability of calling into fast semi-persistent NHWC BatchNorm fp16 kernels. \r\n2.  In addition, cuDNN allows fusion of BN+Act and BN+Add+Act (implemented in this PR) that improves BN Training performance (over BatchNorm expansion).  BN Backward fusion has not been implemented yet.\r\nNote, whether or not XLA calls into fused cuDNN BN depends on whether Grappler remaps FusedBatchNormV3 to FusedBatchNormEx. CuDNN FusedBatchNormEx API (which allows fusion)  is only valid\r\na) NHWC datatype,\r\nb) DT_HALF,\r\nc) only ReLU activation,\r\nd) Channel dim has to be a multiple of 4, and\r\ne) BatchNormSpatial Persistent mode.\r\n\r\n**Implementation:**\r\nCalling into the fast semi-persistent  and fused kernels require an overhaul of the BatchNorm lowering since these require additional reserve space (transfer bits from the forward to the backward BatchNorm op) and work space (scratch space).\r\nThis PR modifies BatchNorm lowering from TF2XLA bridge to rewriter optimization to thunks in order to make sure that the performant kernels get called.\r\n","created_at":"2021-07-22T22:44:53Z","closed_at":"2021-12-13T00:41:33Z","merged_at":null,"user_id":42984676,"sentiment":{"polarity":0.2,"subjectivity":0.6}}
{"_id":695553537,"title":"Mention intro-to-graphs in tf.function docstring.","body":"Making it more discoverable.","created_at":"2021-07-22T22:39:10Z","closed_at":"2021-08-02T14:56:16Z","merged_at":"2021-08-02T14:56:16Z","user_id":138060,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":695456367,"title":"Ensure non-empty compressed input in tf.raw_ops.UncompressElement","body":"PiperOrigin-RevId: 383955815\nChange-Id: I072a84fd02738dd2f51b3f42836ed80067dba4a8","created_at":"2021-07-22T19:54:31Z","closed_at":"2021-07-26T20:53:10Z","merged_at":"2021-07-26T20:53:10Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":695455545,"title":"Ensure non-empty compressed input in tf.raw_ops.UncompressElement","body":"PiperOrigin-RevId: 383955815\nChange-Id: I072a84fd02738dd2f51b3f42836ed80067dba4a8","created_at":"2021-07-22T19:53:14Z","closed_at":"2021-07-26T20:52:45Z","merged_at":"2021-07-26T20:52:45Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":695455125,"title":"Ensure non-empty compressed input in tf.raw_ops.UncompressElement","body":"PiperOrigin-RevId: 383955815\nChange-Id: I072a84fd02738dd2f51b3f42836ed80067dba4a8","created_at":"2021-07-22T19:52:32Z","closed_at":"2021-07-26T20:52:24Z","merged_at":"2021-07-26T20:52:24Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":695451892,"title":"Validate num_elements input in tf.raw_ops.TensorListReserve","body":"PiperOrigin-RevId: 383954564\nChange-Id: I454bd78eff85bc4f16ddb7e608596971cca47f8f","created_at":"2021-07-22T19:46:45Z","closed_at":"2021-07-26T20:51:10Z","merged_at":"2021-07-26T20:51:10Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":695451823,"title":"Validate num_elements input in tf.raw_ops.TensorListReserve","body":"PiperOrigin-RevId: 383954564\nChange-Id: I454bd78eff85bc4f16ddb7e608596971cca47f8f","created_at":"2021-07-22T19:46:36Z","closed_at":"2021-07-26T20:50:45Z","merged_at":"2021-07-26T20:50:45Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":695451735,"title":"Validate num_elements input in tf.raw_ops.TensorListReserve","body":"PiperOrigin-RevId: 383954564\nChange-Id: I454bd78eff85bc4f16ddb7e608596971cca47f8f","created_at":"2021-07-22T19:46:28Z","closed_at":"2021-07-26T20:50:26Z","merged_at":"2021-07-26T20:50:26Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":695439110,"title":"Fix null ptr deref in tf.raw_ops.RaggedTensorToTensor","body":"PiperOrigin-RevId: 384257511\nChange-Id: I0484ad285039d132d6c41b284a7fcdd2b774a38e","created_at":"2021-07-22T19:23:40Z","closed_at":"2021-07-26T20:49:22Z","merged_at":"2021-07-26T20:49:22Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":695438808,"title":"Fix null ptr deref in tf.raw_ops.RaggedTensorToTensor","body":"PiperOrigin-RevId: 384257511\nChange-Id: I0484ad285039d132d6c41b284a7fcdd2b774a38e","created_at":"2021-07-22T19:23:06Z","closed_at":"2021-07-26T20:48:57Z","merged_at":"2021-07-26T20:48:57Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":695438723,"title":"Fix null ptr deref in tf.raw_ops.RaggedTensorToTensor","body":"PiperOrigin-RevId: 384257511\nChange-Id: I0484ad285039d132d6c41b284a7fcdd2b774a38e","created_at":"2021-07-22T19:22:55Z","closed_at":"2021-07-26T20:48:39Z","merged_at":"2021-07-26T20:48:39Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":695437282,"title":"Fix accessing possible nullptr in tensorflow::data::CompressElement and UncompressElement which are used in tf.data.service.","body":"PiperOrigin-RevId: 373920841\nChange-Id: Ia88d78aee09fa19bb53a0f163fd19620d0c68743","created_at":"2021-07-22T19:20:19Z","closed_at":"2021-07-26T20:47:51Z","merged_at":"2021-07-26T20:47:50Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":1.0}}
{"_id":695436522,"title":"Fix accessing possible nullptr in tensorflow::data::CompressElement and UncompressElement which are used in tf.data.service.","body":"PiperOrigin-RevId: 373920841\nChange-Id: Ia88d78aee09fa19bb53a0f163fd19620d0c68743","created_at":"2021-07-22T19:19:02Z","closed_at":"2021-07-26T20:47:30Z","merged_at":"2021-07-26T20:47:30Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":1.0}}
{"_id":695435321,"title":"Fix accessing possible nullptr in tensorflow::data::CompressElement and UncompressElement which are used in tf.data.service.","body":"PiperOrigin-RevId: 373920841\nChange-Id: Ia88d78aee09fa19bb53a0f163fd19620d0c68743","created_at":"2021-07-22T19:16:57Z","closed_at":"2021-07-26T20:47:13Z","merged_at":"2021-07-26T20:47:13Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":1.0}}
{"_id":695432903,"title":"Disallow division by zero FPE in tf.raw_ops.SparseDenseCwiseDiv","body":"PiperOrigin-RevId: 383959809\nChange-Id: Ibe88458bdf66a686c93e354b8255dec94285c560","created_at":"2021-07-22T19:13:01Z","closed_at":"2021-07-26T20:45:37Z","merged_at":"2021-07-26T20:45:37Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":695432866,"title":"Disallow division by zero FPE in tf.raw_ops.SparseDenseCwiseDiv","body":"PiperOrigin-RevId: 383959809\nChange-Id: Ibe88458bdf66a686c93e354b8255dec94285c560","created_at":"2021-07-22T19:12:58Z","closed_at":"2021-07-26T20:45:53Z","merged_at":"2021-07-26T20:45:53Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":695432830,"title":"Disallow division by zero FPE in tf.raw_ops.SparseDenseCwiseDiv","body":"PiperOrigin-RevId: 383959809\nChange-Id: Ibe88458bdf66a686c93e354b8255dec94285c560","created_at":"2021-07-22T19:12:54Z","closed_at":"2021-07-26T20:46:30Z","merged_at":"2021-07-26T20:46:30Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":695104517,"title":"Added Python 3.9 support for \"Building TensorFlow Lite Standalone Pip\"","body":"Add support for Python 3.9 to the Standalone Pip build of TensorFlow Lite by Bazel.","created_at":"2021-07-22T11:54:53Z","closed_at":"2021-07-27T00:00:14Z","merged_at":"2021-07-27T00:00:14Z","user_id":33194443,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":694888586,"title":"Enable '--distinct_host_configuration' for arm builds","body":"This option is needed to cross compilation\r\n\r\nPiperOrigin-RevId: 383284957\r\nChange-Id: Ic49c3807c050ea5c71c31995e5a38ae6f06044a8","created_at":"2021-07-22T05:52:40Z","closed_at":"2021-07-27T16:42:43Z","merged_at":"2021-07-27T16:42:43Z","user_id":2908505,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":694700103,"title":"[TF-TRT] Refactoring Top Level __init__ file for TF-TRT","body":"- Builds on #50782\r\n\r\nApplies final cleaning and refactoring on TRT version checking\r\n\r\n@bixia1 : for review","created_at":"2021-07-21T20:51:38Z","closed_at":"2022-03-02T21:39:09Z","merged_at":null,"user_id":10923599,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":694646429,"title":"Update gast mirror URL","body":"Updated the mirrored URL for gast_archive\r\n\r\nFix for #50777","created_at":"2021-07-21T19:20:23Z","closed_at":"2021-07-29T00:18:05Z","merged_at":"2021-07-29T00:18:05Z","user_id":59822926,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":694536755,"title":"2.6rc2 cherry-pick request: Fix issue where disabling TensorFloat-32 had no effect.","body":"This fixes a bug where disabling TensorFloat-32 with `tf.config.experimental.enable_tensor_float_32_execution(False)` had no effect.","created_at":"2021-07-21T16:44:24Z","closed_at":"2021-07-27T16:41:50Z","merged_at":"2021-07-27T16:41:50Z","user_id":6510203,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":694533031,"title":"[CherryPick2.6]Fix segfault on string tensors with mismatched dimensions","body":"PR #50508: [Go] Fix segfault on string tensors with mismatched dimensions\r\n\r\nPiperOrigin-RevId: 384557722","created_at":"2021-07-21T16:38:18Z","closed_at":"2021-07-27T16:40:41Z","merged_at":"2021-07-27T16:40:41Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":694493609,"title":"Backport 'Make element_shape_except_first_dim as a local variable instead of in…' to r2.4","body":"Commit 603d88d fixes a data race bug in TensorListConcat op, which is incoporated into v2.5.0 and later versions, but not backported to 2.4.x versions. This PR is directly performed using\r\n\r\n`git cherry-pick 603d88d72c1f739cc46fb250edfc9924d9517b17`","created_at":"2021-07-21T15:42:55Z","closed_at":"2021-08-06T16:21:36Z","merged_at":"2021-08-06T16:21:36Z","user_id":36412994,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":694460832,"title":"[ROCm] Proper fix for XLA unit test seg fault issue.","body":"This was root caused to be a divergence between the CUDA and HIP\r\nconv_canonicalizer implementation.","created_at":"2021-07-21T15:02:27Z","closed_at":"2021-07-22T16:57:15Z","merged_at":"2021-07-22T16:57:15Z","user_id":70280935,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":694394556,"title":"Support per-channel quantized INT8 weights unpacking in XNNPACK delegate","body":"This MR expands INT8 weights unpacking for FP32 inference in XNNPACK delegate support added in [the previous MR](https://github.com/tensorflow/tensorflow/pull/48751) for per-channel dynamic range quantized model. Previous changes have only supported per-tensor quantization mode, which is obsolete in recent TensorFlow releases.\r\nI have not added proper testing yet, because I'd like to get some suggestions from a maintainer, i.e. the best way to organize such testing while keeping the codebase clean (specifically, how to change testers). Thank you in advance!","created_at":"2021-07-21T13:58:00Z","closed_at":"2021-11-24T00:15:33Z","merged_at":"2021-11-24T00:15:32Z","user_id":5624568,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":694376309,"title":"Allow use of non-system compiler to build mlir_generated tests","body":"Allow setting of LD_LIBRARY_PATH to reach execution environment of tf_to_kernel so it can load correct version of libstdc++ and so avoid build failure when built with non-system gcc\r\nFixes #50873 ","created_at":"2021-07-21T13:34:55Z","closed_at":"2021-09-01T14:59:46Z","merged_at":null,"user_id":10442001,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":693949429,"title":"[CherryPick2.6]Prevent infinite loop in strided slice implementation","body":"Add test to prevent regression\n\nPiperOrigin-RevId: 385190237\nChange-Id: Ie274ffc8e3f1cc5f50760bcebc2242ca824fe85c","created_at":"2021-07-21T00:16:24Z","closed_at":"2021-07-27T16:07:36Z","merged_at":"2021-07-27T16:07:36Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":693948252,"title":"[CherryPick2.6]Prevent a division by 0 in average ops.","body":"PiperOrigin-RevId: 385184660\nChange-Id: I7affd4554f9b336fca29ac68f633232c094d0bd3","created_at":"2021-07-21T00:13:20Z","closed_at":"2021-07-27T16:06:45Z","merged_at":"2021-07-27T16:06:45Z","user_id":53313357,"sentiment":{"polarity":-0.15,"subjectivity":0.39999999999999997}}
{"_id":693943886,"title":"[CherryPick2.6]Prevent a division by 0 in division ops.","body":"PiperOrigin-RevId: 385223169\nChange-Id: Ia4228960b5d2aa44480385f74bdd70d21a3613c3","created_at":"2021-07-21T00:03:30Z","closed_at":"2021-07-27T16:03:03Z","merged_at":"2021-07-27T16:03:03Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":693937853,"title":"[CHerryPick2.6]Fix a null pointer exception caused by branching on uninitialized data.","body":"This is due to not checking that the params for the quantization exists. If there is no quantization, we should not access the `.params` field.\n\nPiperOrigin-RevId: 385173491\nChange-Id: I8fc476c4b274fdb21ba741caa0fbc6d1b8840663","created_at":"2021-07-20T23:45:53Z","closed_at":"2021-07-27T16:02:32Z","merged_at":"2021-07-27T16:02:32Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":693936122,"title":"[CherryPick2.6]Fix a null pointer exception caused by branching on uninitialized data.","body":"This is due to not checking that the params for the quantization exists. If there is no quantization, we should not access the `.params` field.\n\nPiperOrigin-RevId: 385168337\nChange-Id: I28661e4f12ba1c92cfeae23d22a3fb2df2a2c6a4","created_at":"2021-07-20T23:39:54Z","closed_at":"2021-07-27T16:02:05Z","merged_at":"2021-07-27T16:02:05Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":693933549,"title":"[CherryPick2.6]Fix a null pointer exception caused by branching on uninitialized data.","body":"This is due to not checking that the params for the quantization exists. If there is no quantization, we should not access the `.params` field.\n\nPiperOrigin-RevId: 385163909\nChange-Id: I2beb8d50649b6542db224c163033fbcbaa49314f","created_at":"2021-07-20T23:31:48Z","closed_at":"2021-07-27T16:01:23Z","merged_at":"2021-07-27T16:01:23Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":693931578,"title":"[CherryPick:2.6]Fix a null pointer exception in SVDF","body":"This is due to not checking that `GetVariableInput` returns non-null tensor.\n\nAlso fix a potential null pointer exception in `GetVariableInput`.\n\nPiperOrigin-RevId: 385160147\nChange-Id: Iadf3f0705b036a9014d27caa5a8bbd91f4c4c401","created_at":"2021-07-20T23:25:38Z","closed_at":"2021-07-27T16:00:52Z","merged_at":"2021-07-27T16:00:52Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":693930354,"title":"[CherryPick2.6]Prevent division by 0 in `fully_connected.cc`","body":"PiperOrigin-RevId: 385137282\nChange-Id: If201e69b6e0048f0be001330b4b977e2b46db2cb","created_at":"2021-07-20T23:22:03Z","closed_at":"2021-07-27T16:00:18Z","merged_at":"2021-07-27T16:00:18Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":693885367,"title":"[Cherrypick:2.6]Disallow dims input of 0 in tf.raw_ops.UnravelIndex","body":"PiperOrigin-RevId: 384284198\nChange-Id: Ia1804ef1aec57b4d857ea507e6891bcccde18e9b","created_at":"2021-07-20T21:54:33Z","closed_at":"2021-07-27T15:58:33Z","merged_at":"2021-07-27T15:58:33Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":693564323,"title":"Fix numerical stability issue in binary search","body":"Binary search algorithm implementation can result in an overflow caused by a variable that holds the index of the middle element of the input array. If the number of elements is very large, the operation left + right for calculating the middle index has a risk of overflow. Please refer the following link for more information: https://en.wikipedia.org/wiki/Binary_search_algorithm#Implementation_issues.\r\nmid = left + (right - left + 1)/2 is mathematically equivalent to mid = (left + right +1)/2, but more numerically stable.\r\nmid = left + (right - left + 1)/2 = left + right/2 - left/2 + ½ = left/2 + right/2 + ½ = (left + right +1)/2.\r\nThis fix follows the implementation in PyTorch.","created_at":"2021-07-20T15:28:48Z","closed_at":"2021-09-02T17:49:54Z","merged_at":"2021-09-02T17:49:54Z","user_id":26368249,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":693205656,"title":"Merge pull request #1 from tensorflow/master","body":"update","created_at":"2021-07-20T06:58:08Z","closed_at":"2021-07-21T13:46:03Z","merged_at":null,"user_id":33412859,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":693121531,"title":"[MLIR][TF] Canonicalize tf.DivNoNan and tf.MulNoNan","body":"Added and used a template to canonicalize tf.DivNoNan and tf.MulNoNan.\r\nWhen the divisor/multiplier of tf.DivNoNan/tf.MulNoNan, respectively is\r\na constant with all the elements in its tensor (with float/complex type)\r\nbeing zero, tf.DivNoNan/tf.MulNoNan is replaced with its\r\ndivisor/multiplier, respectively. Further, when the divisor/multiplier\r\nof tf.DivNoNan/tf.MulNoNan, respectively is a constant with all the\r\nelements in its tensor (with float/complex type) being non-zero,\r\ntf.DivNoNan/tf.MulNoNan is replaced with tf.Div/tf.Mul, respectively.\r\nRelevant test cases are added as well.\r\n\r\nSigned-off-by: Srishti Srivastava <srishti.srivastava@polymagelabs.com>","created_at":"2021-07-20T05:10:35Z","closed_at":"2021-07-23T23:38:18Z","merged_at":"2021-07-23T23:38:18Z","user_id":85475642,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":693032446,"title":"[CherryPick2.6]Ensure non-empty compressed input in tf.raw_ops.UncompressElement","body":"PiperOrigin-RevId: 383955815\nChange-Id: I072a84fd02738dd2f51b3f42836ed80067dba4a8","created_at":"2021-07-20T01:11:40Z","closed_at":"2021-07-26T20:57:48Z","merged_at":"2021-07-26T20:57:48Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":693030774,"title":"[CherryPick2.6]Validate num_elements input in tf.raw_ops.TensorListReserve","body":"PiperOrigin-RevId: 383954564\nChange-Id: I454bd78eff85bc4f16ddb7e608596971cca47f8f","created_at":"2021-07-20T01:07:57Z","closed_at":"2021-07-26T20:51:32Z","merged_at":"2021-07-26T20:51:32Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":693027628,"title":"[CherryPick2.6]Fix null ptr deref in tf.raw_ops.RaggedTensorToTensor","body":"PiperOrigin-RevId: 384257511\nChange-Id: I0484ad285039d132d6c41b284a7fcdd2b774a38e","created_at":"2021-07-20T01:00:23Z","closed_at":"2021-07-26T20:49:41Z","merged_at":"2021-07-26T20:49:41Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":693026010,"title":"[CherryPick2.6]Disallow division by zero FPE in tf.raw_ops.SparseDenseCwiseDiv","body":"PiperOrigin-RevId: 383959809\nChange-Id: Ibe88458bdf66a686c93e354b8255dec94285c560","created_at":"2021-07-20T00:54:56Z","closed_at":"2021-07-26T20:45:06Z","merged_at":"2021-07-26T20:45:06Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":692829110,"title":"fix cropping layer return empty list if crop is higher than data shap…","body":"initialy the PR was in #50612 but the Tensorflow/Keras policy changed. Now is #14958\r\n\r\nI do a first try to solve this issue. I think we can do a prototype with `Cropping1D` and after when everything is perfect, copy the same pattern to `Cropping2D`, `Cropping3D`, etc.\r\n\r\nPls, give me your thoughts. @ymodak","created_at":"2021-07-19T18:26:57Z","closed_at":"2021-07-20T11:45:41Z","merged_at":null,"user_id":39212747,"sentiment":{"polarity":0.075,"subjectivity":0.5}}
{"_id":692606271,"title":"Add default value in `Attention` layer docs","body":"In https://www.tensorflow.org/api_docs/python/tf/keras/layers/Attention, default values of `causal` and `dropout` are not specified and a user have to look up in the source code.\r\n\r\nI added default values to this document in this pull request.","created_at":"2021-07-19T13:25:35Z","closed_at":"2021-07-19T14:02:37Z","merged_at":null,"user_id":38364983,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":692520959,"title":"Move code shared between lite and micro to elementwise_portable.h","body":"This PR refactors the elementwise kernel and moves code shared between Lite and Micro to elementwise_portable.h, as suggested by @advaitjain [here](https://github.com/tensorflow/tflite-micro/pull/204#pullrequestreview-692482804)","created_at":"2021-07-19T11:26:13Z","closed_at":"2022-02-04T00:57:26Z","merged_at":null,"user_id":1186713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":692392371,"title":"Implementation of a Buffer Packing Pass.","body":"The first iteration of a `Buffer Packing` pass that reduces the memory consumption for `Buffer Reuse` by packing small buffers into bigger buffers, considering a time component represented by the userange of the buffers.\r\nThe implemenation is a greedy bin packing approach based on the `Userange Analysis` to compute a new memory distribution over the userange of packed buffers. Note that all buffers are aligned to 64 bytes, for GPU kernels.\r\n\r\nAs a work in progress PR, we want get early feedback.\r\n\r\nNote: We try to replace the buffer allocations with an offset and the associated `memref` view operation. But there are some legalization issues we still need to solve.","created_at":"2021-07-19T08:30:28Z","closed_at":"2022-01-10T12:23:31Z","merged_at":null,"user_id":47845686,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":692316144,"title":"Updated docstring for mha layer call","body":"switched bool values for return_attention_scores","created_at":"2021-07-19T06:36:04Z","closed_at":"2021-07-19T07:37:24Z","merged_at":null,"user_id":55626797,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":692301497,"title":"Update stale.yml","body":"Simplified the Message to the User","created_at":"2021-07-19T06:08:30Z","closed_at":"2021-07-22T13:07:40Z","merged_at":"2021-07-22T13:07:40Z","user_id":48206667,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":692005050,"title":"C API methods to get attribute names","body":"Adds C API methods to get the attribute names of graph operations.","created_at":"2021-07-17T23:51:09Z","closed_at":"2021-09-03T15:39:19Z","merged_at":"2021-09-03T15:39:19Z","user_id":32281897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":691985975,"title":"Adds header for TFE_OpSetAttrValueProto","body":"`TFE_OpSetAttrValueProto` was added to the C api, but no header was added for it.  This fixes that.\r\n\r\nThis would be nice to have in 2.6 if possible (for SIG JVM), I'm not sure what the criteria are for that.  It is kind of a bug fix.","created_at":"2021-07-17T20:47:37Z","closed_at":"2021-07-19T17:21:12Z","merged_at":null,"user_id":32281897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":691956686,"title":"Update .bazelrc","body":"build:xla had a typo in --define=with_xla_supprt (sic), updated to --define=with_xla_support","created_at":"2021-07-17T16:34:18Z","closed_at":"2021-08-02T15:24:13Z","merged_at":"2021-08-02T15:24:13Z","user_id":61004755,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":691920028,"title":"FIx random gamma and space to depth tests.","body":"Fix random gamma tests to use deprecated v1 graph mode so\r\nthat test is executed in both CPU and accelerator because in eager\r\nmode, same device will be be only selected irrespective of use_gpu\r\nflag. Remove loop of use_gpu where not required.\r\nSpace to depth testBatchSize0 verification fixed with common\r\ncode.\r\n\r\nSigned-off-by: puneeshkhanna <puneesh.khanna83@gmail.com>","created_at":"2021-07-17T11:43:35Z","closed_at":"2021-09-14T13:35:13Z","merged_at":"2021-09-14T13:35:13Z","user_id":37102144,"sentiment":{"polarity":-0.5,"subjectivity":0.5}}
{"_id":691811963,"title":"Adding mhlo Einsum to LinalgGeneric Lowering","body":"","created_at":"2021-07-17T01:26:10Z","closed_at":"2021-07-19T19:40:24Z","merged_at":"2021-07-19T19:40:24Z","user_id":68087699,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":691780761,"title":"r2.6 cherry-pick request: Downgrade oneDNN version from v2.3 back to v2.3-rc2","body":"Intel found that oneDNN v2.3 has a performance degradation in int8 AVX-512 convolution kernels. \r\nWe recently cherry-picked PR [#50708](https://github.com/tensorflow/tensorflow/pull/50708) into r2.6 to upgrade oneDNN from v2.3-rc2 to v2.3. This PR reverts it back to using oneDNN v2.3-rc2.\r\n\r\n(The aarch64 backend is fine since the issue is specific to AVX-512).\r\n\r\nThe corresponding rollback commit for master went in this afternoon: https://github.com/tensorflow/tensorflow/commit/797721dc79d9972214821673c98e823bfce70f62\r\n\r\ncc: @nammbash @agramesh1 \r\n","created_at":"2021-07-16T22:55:24Z","closed_at":"2021-07-17T02:28:00Z","merged_at":"2021-07-17T02:28:00Z","user_id":38085909,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":691590390,"title":"Fix TF_DEVICE_MIN_SYS_MEMORY_IN_MB for big size","body":"This fix some casting issue that show up when using: `TF_DEVICE_MIN_SYS_MEMORY_IN_MB=2048`.","created_at":"2021-07-16T15:52:52Z","closed_at":"2021-07-24T04:25:11Z","merged_at":"2021-07-24T04:25:11Z","user_id":180987,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":691259659,"title":"add device_vendor to the GpuDevice in JAX runtime","body":"With this PR, device vendor will be exposed from JAX GpuDevice into Python\r\n\r\n@hawkinsp ","created_at":"2021-07-16T07:26:24Z","closed_at":"2021-07-26T15:16:13Z","merged_at":"2021-07-26T15:16:13Z","user_id":79117684,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":691072149,"title":"[tf.data] Fix a performance regression for input pipelines that creat…","body":"…e iterators for window datasets and add missing initialization of datasets that are not created through op kernel execution.\r\n\r\n**Reasons to cherry-pick this into branch 2.6**\r\n1) This commit fixes a performance regression\r\n2) Without this commit, all users of [group_by_window](https://www.tensorflow.org/api_docs/python/tf/data/experimental/group_by_window) will see error logs along the lines of `Failed precondition: Cannot compute input sources for dataset of type PaddedBatchDatasetV2, because sources could not be computed for input dataset of type Window`. This issue was reported by @guillaumekln  in https://github.com/tensorflow/tensorflow/issues/50693\r\n\r\n@jsimsa FYI\r\n\r\nPiperOrigin-RevId: 382427031\r\nChange-Id: I5ced4692659101ad09dc65a3fc71c036ad272f7a","created_at":"2021-07-15T22:25:21Z","closed_at":"2021-07-16T18:24:29Z","merged_at":"2021-07-16T18:24:29Z","user_id":3455177,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":690829110,"title":"Add missing dep on MLIRMhloUtils","body":"The LmhloPasses makes use of `mlir::codegen_utils` functions, part of\r\nthe MLIRMhloUtils target. This adds the missing dep on MLIRMhloUtils.","created_at":"2021-07-15T15:30:14Z","closed_at":"2021-07-16T02:59:34Z","merged_at":"2021-07-16T02:59:34Z","user_id":8095156,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":690384508,"title":"[TF-TRT] Removing TRT 5 & 6 from the code base - Large Cleanup","body":"This PR removes TRT 5 & 6 from the codebase and performs a large cleanup / refactoring","created_at":"2021-07-15T04:29:41Z","closed_at":"2021-07-22T20:37:36Z","merged_at":"2021-07-22T20:37:35Z","user_id":10923599,"sentiment":{"polarity":-0.29285714285714287,"subjectivity":0.7142857142857143}}
{"_id":690372880,"title":"[TF-TRT] ActivationLayer inaccuracy in TRT 8 - Unittest fix","body":"This PR fixes the unit test to workaround NVBug 3322482.\r\nAdds a small tolerance to the unit test to workaround a bug with TRT 8.","created_at":"2021-07-15T03:57:28Z","closed_at":"2021-07-20T23:01:49Z","merged_at":"2021-07-20T23:01:49Z","user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":690301435,"title":"Delete curl-to-sh","body":null,"created_at":"2021-07-15T00:14:46Z","closed_at":"2021-07-15T17:44:55Z","merged_at":"2021-07-15T17:44:55Z","user_id":32465472,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":690211869,"title":"Fix build after previous cherrypick (#50773).","body":"This is needed because of refactoring in 7c3f96bf324cebe443a7eb814ce771c66c073998 (on master). The cherrypick in #50773 includes code after this refactoring but for all releases before 2.6 we need this fix too.","created_at":"2021-07-14T20:42:49Z","closed_at":"2021-07-14T20:47:47Z","merged_at":"2021-07-14T20:47:47Z","user_id":323199,"sentiment":{"polarity":-0.16666666666666666,"subjectivity":0.16666666666666666}}
{"_id":690181976,"title":"Fix segmentation fault in shape inference logic.","body":"When running shape functions, some functions (such as `MutableHashTableShape`)\r\nproduce extra output information in the form of a `ShapeAndType` struct.  The\r\nshapes embedded in this struct are owned by an inference context that is\r\ncleaned up almost immediately; if the upstream code attempts to access this\r\nshape information, it can trigger a segfault.\r\n\r\n`ShapeRefiner` is mitigating this for normal output shapes by cloning them\r\n(and thus putting the newly created shape under ownership of an inference\r\ncontext that will not die), but we were not doing the same for shapes and\r\ntypes.  This commit fixes that by doing similar logic on output shapes and\r\ntypes.\r\n\r\nPiperOrigin-RevId: 384761124\r\nChange-Id: I07c0c42d29dfbb55bfa13ec1f09ef825fb0a1a1d","created_at":"2021-07-14T19:54:41Z","closed_at":"2021-07-14T19:58:20Z","merged_at":"2021-07-14T19:58:20Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":690098891,"title":"r2.6 cherry-pick request: Update ACL and oneDNN versions in mkl_aarch64 build","body":"This cherry-pick:\r\n* Ensures the build flags are consistent on AArch64 between TF2.5 and 2.6\r\n* Provides a number of bug fixes via ACL which impact the functioning of the convolutions under certain conditions.\r\n* Fixes an issue with scaling ACL to high core counts (cost of spinning up many threads has been reduced).\r\n* Keeps the oneDNN version consistent with x86.\r\n\r\nOriginal PR [#50757](https://github.com/tensorflow/tensorflow/pull/50757) was merged yesterday (Tue 7/13) but not in time for the nightly branch cut. So we'll have to wait for Wed 7/14 nightly tests.","created_at":"2021-07-14T17:34:04Z","closed_at":"2021-07-15T16:09:25Z","merged_at":"2021-07-15T16:09:25Z","user_id":38085909,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":690091900,"title":"Bump the JPEG dependency to 2.1.0","body":"Handles [CVE-2020-17541](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-17541)\r\n\r\nPiperOrigin-RevId: 384722318\r\nChange-Id: I3f29c39acf3be527486f82d02c5b348f5ea4b153","created_at":"2021-07-14T17:22:23Z","closed_at":"2021-07-14T20:53:38Z","merged_at":null,"user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":690074510,"title":"Bump curl dependency to 7.77.0","body":"Handles the following CVEs:\r\n\r\n* [CVE-2021-22901](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-22901)\r\n* [CVE-2021-22898](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-22898)\r\n* [CVE-2021-22876](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-22876)\r\n* [CVE-2021-22897](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-22897)\r\n\r\nPiperOrigin-RevId: 384576784\r\nChange-Id: Iaf4f499736039ea957efb0af596d1a46f3062797","created_at":"2021-07-14T16:54:11Z","closed_at":"2021-07-15T16:09:15Z","merged_at":"2021-07-15T16:09:15Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":689999106,"title":"Revert \"GPU Symmetric Fake Quantization\"","body":"Reverts tensorflow/tensorflow#50519","created_at":"2021-07-14T15:10:49Z","closed_at":"2021-07-30T17:57:00Z","merged_at":null,"user_id":2863108,"sentiment":{"polarity":-0.5,"subjectivity":1.0}}
{"_id":689981157,"title":"profiling: memory_info: add support for new mallinfo API","body":"Starting with glibc 2.33 the mallinfo API is deprecated\r\nin favor of the newer mallinfo2 which returns the exact\r\nsame struct but with size_t elements instead of int.\r\n\r\nFor reference:\r\nhttps://man7.org/linux/man-pages/man3/mallinfo.3.html","created_at":"2021-07-14T14:48:56Z","closed_at":"2021-07-23T14:09:27Z","merged_at":"2021-07-23T14:09:26Z","user_id":12472556,"sentiment":{"polarity":0.13636363636363635,"subjectivity":0.45454545454545453}}
{"_id":689549858,"title":"[ROCm] Enable xlogy and xlog1py for HIP GPU.","body":"Relax tolerance for xlogy for complex64 in gpu_binary_ops_test to enable that test to pass on HIP.","created_at":"2021-07-14T03:33:43Z","closed_at":"2021-07-15T04:45:17Z","merged_at":"2021-07-15T04:45:16Z","user_id":70280935,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":689505249,"title":"[determinism] Fix line-wrap in r2.6 release notes","body":"This PR is a follow-up to PR [50640](https://github.com/tensorflow/tensorflow/pull/50640). It removes the erroneously included 80-character line-breaks in the content added to `RELEASE.md`. This was prompted by noticing that the formatting was wrong in the [v2.6.0-rc1](https://github.com/tensorflow/tensorflow/releases/tag/v2.6.0-rc1) release notes web page.","created_at":"2021-07-14T01:24:39Z","closed_at":"2021-07-14T15:49:30Z","merged_at":"2021-07-14T15:49:30Z","user_id":33532941,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":689424848,"title":"Update of Compute Library and oneDNN versions in mkl_aarch64 build config","body":"This PR brings the following changes:\r\n- the version of Compute Library for the Arm Architecture (ACL) is updated to v21.05. This release contains several bug fixes compared to the currently used v21.02 (Conv2D works correctly in the case of dilations and at high numbers of threads);\r\n- oneDNN version is updated to v2.3 to keep synchronisation with [PR#50708](https://github.com/tensorflow/tensorflow/pull/50708);\r\n- the macro `DNNL_AARCH64_USE_ACL` is now set automatically for `--config=mkl_aarch64`.","created_at":"2021-07-13T21:50:55Z","closed_at":"2021-07-14T05:51:57Z","merged_at":"2021-07-14T05:51:57Z","user_id":67425323,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":689417738,"title":"[XLA] Enable pointwise row vectorization for small row.","body":"Follow up on : https://github.com/tensorflow/tensorflow/pull/48527\r\nThis speed up the same efficient net fusion but when the row size is small. That kernel happens for with many different size.\r\n\r\nThis enable row vectorization for small row. This lower the numbers of threads per block by 4x. This cause blocks that are too small and trigger speed regression in some cases due to the blocks being too small. To prevent those small blocks problems, this PR use blockIdx.y in addition to blockIdx.x. blockIdx.x continue to handle one row. But each elements in blockIdx.y handle a different consecutive row.\r\n\r\n@akuegel @cheshire \r\n\r\nI join 2 hlo that contain multiple kernels. \r\n[swish_fusion_5_160,190,190,48_simpler.txt](https://github.com/tensorflow/tensorflow/files/6858339/swish_fusion_5_160.190.190.48_simpler.txt)\r\n[swish_fusion_5_160,190,190,48.txt](https://github.com/tensorflow/tensorflow/files/6858340/swish_fusion_5_160.190.190.48.txt)\r\n\r\nThe kernels:\r\nfusion_5: The fusion I want to optimize. It come from EfficientNet.\r\nfusion_5_new: A new version of that if we mark kExp as cheap. This is what we want to enable. It does extra computation, but read less data. An exponential is duplicated to save bandwidth.\r\nfusion_5_simpler[_new]: Variation of above kernels that have less row inputs. They are synthetic HLO that doesn't exist in models.\r\n\r\nThe shape is a real shape from the EfficientNet model. Just one picked that have small row size that wasn't vectorized before.\r\n\r\nHere is the current sped result that I have.\r\n\r\nV100 | 72ac61dbed (upstream) | ...0_block | ...0_grid | fb71bc2388 (PR) | ...1_block | ...1_grid | af3beedbd24 PR+1commit | ...2_block | ...2_grid | 39f5185dc7 PR+2commit | ...3_block | ...3_grid\r\n-- | -- | -- | -- | -- | -- | -- | -- | -- | -- | -- | -- | --\r\nfusion_5 | 3059.776 | 256 | 270750 | 2730.784 | 132 | 525091 | 2928.48 | 132 | 32818 | 2868.544 | 264 | 16409\r\nfusion_5_new | 2623.712 | 256 | 270750 | 2539.392 | 132 | 32818 | 2546.208 | 132 | 32818 | 2337.664 | 264 | 16409\r\nfusion_5_simpler | 2676.832 | 256 | 270750 | **2711.008** | 132 | 525091 | **2867.552** | 132 | 32818 | **2880.832** | 264 | 16409\r\nfusion_5_simpler_new | 2450.368 | 256 | 270750 | **2533.536** | 132 | 32818 | **2541.536** | 132 | 32818 | 2350.048 | 264 | 16409\r\n  |   |   |   |   |   |   |   |   |   |   |   |  \r\nA100 | 72ac61dbed (upstream) | ...0_block | ...0_grid | fb71bc2388 (PR) | ...1_block | ...1_grid | af3beedbd24 PR+1commit | ...2_block | ...2_grid | 39f5185dc7 PR+2commit | ...3_block | ...3_grid\r\nfusion_5 | 2538.24 | 256 | 270750 | 2399.776 | 132 | 525091 | 2150.24 | 132 | 32818 | 1953.568 | 264 | 16409\r\nfusion_5_new | 3079.04 | 256 | 270750 | 2760.064 | 132 | 32818 | 2760.288 | 132 | 32818 | 2494.528 | 264 | 16409\r\nfusion_5_simpler | 2357.44 | 256 | 270750 | 2208.576 | 132 | 525091 | 2149.088 | 132 | 32818 | 2106.848 | 264 | 16409\r\nfusion_5_simpler_new | 2819.904 | 256 | 270750 | 2736.48 | 132 | 32818 | 2736.288 | 132 | 32818 | 2502.432 | 264 | 16409\r\n\r\nThe columns is the matching commit. PR mean the first version of the PR. I added 2 commits to limit the slowdown on V100. That also give a speed up on A100 at the same time.","created_at":"2021-07-13T21:35:34Z","closed_at":"2021-09-01T07:45:23Z","merged_at":"2021-09-01T07:45:23Z","user_id":180987,"sentiment":{"polarity":-0.25,"subjectivity":0.4}}
{"_id":689383161,"title":"dockerfiles: pin jedi to allow ipython tab completion","body":"Tab completion doesn't work on Jupyter because of an incompatibility\r\nissue. Using the web notebook, only an obscure error is printed to console\r\nbut in the case of ipython console, the whole REPL crashes.\r\n\r\nThis works around the issue by pinning the jedi library to the last\r\ncompatible version.\r\n\r\nSee: https://github.com/ipython/ipython/issues/12740\r\n","created_at":"2021-07-13T20:34:28Z","closed_at":"2021-09-03T13:05:34Z","merged_at":"2021-09-03T13:05:34Z","user_id":1911407,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":688206003,"title":"Update URLs in Get started with microcontrollers","body":"","created_at":"2021-07-12T21:55:46Z","closed_at":"2021-07-14T18:28:22Z","merged_at":"2021-07-14T18:28:22Z","user_id":19637339,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":687909303,"title":"Update imagenet_utils.py","body":"when using keras builtin models InceptionV3, Xception, VGG etc with preprocess function from imagenet_utils the models shows weird behaviour and never predict correct results , the newly trained models from tensorflow hub are most probably compatible with only images in range [0,1] unlike the old ranges in tf [-1,1] this is a bug.","created_at":"2021-07-12T14:44:28Z","closed_at":"2021-07-13T03:07:08Z","merged_at":null,"user_id":69216601,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":687604712,"title":"Refactor SparseConcat CPU implem and add two tests","body":"- This is in preparation for adding a GPU implementation.\r\n- Adds early-exit when the output is empty (no non-zeros).\r\n- Adds tests for all/some inputs being empty (no non-zeros).\r\n- No functional change.\r\n\r\ncc @nluehr @sanjoy ","created_at":"2021-07-12T08:02:00Z","closed_at":"2021-08-06T00:11:06Z","merged_at":"2021-08-06T00:11:06Z","user_id":3979096,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":687377067,"title":"Documentation issue read me.","body":"## Related Issue \r\n\r\n- The download image under official Build in readme is not displayed\r\n\r\n- [x] Wanted  display correction\r\n\r\n\r\n### Describe the changes I've made\r\n\r\nThe issue was there should be a image displayed next to Android download in official builds  under Continuous build status, but so.\r\nThis may have been caused because the image or gif link may have expired or changed. \r\n\r\n## Type of change\r\nI went through the code and found the link was showing 403 error and it may be the cause of the image not being displayed.\r\n\r\nWhat sort of change have you made:\r\n\r\n- [x] Code style update (formatting, local variables)\r\n- [x] This change requires a documentation update\r\n\r\n## How Has This Been Tested?\r\nThe change I made is only related to the display change and none of the other lines were changed in any manner and hence the functionalities remain the same.\r\n\r\nDescribe how have you verified the changes made\r\n\r\n## Checklist:\r\n\r\n- [x] My code follows the guidelines of this project.\r\n- [x] I have performed a self-review of my own code.\r\n- [x] I have not made corresponding changes to the documentation.\r\n\r\n ## Detailed explanation of the code lines changed\r\n-The previous lines before change line no. 118\r\n``` **Android**                   | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/android.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/android.html)                                 | [![Download](https://api.bintray.com/packages/google/tensorflow/tensorflow/images/download.svg)](https://bintray.com/google/tensorflow/tensorflow/_latestVersion)```\r\n\r\n![previous](https://user-images.githubusercontent.com/55579860/125205732-5cd4e400-e2a1-11eb-8c4b-d283a5559706.png)\r\n\r\n-The change to the code lines \r\n``` **Android**                   | [![Status](https://storage.googleapis.com/tensorflow-kokoro-build-badges/android.svg)](https://storage.googleapis.com/tensorflow-kokoro-build-badges/android.html)                                 | [Download](https://bintray.com/google/tensorflow/tensorflow/_latestVersion) ```\r\n\r\n![after](https://user-images.githubusercontent.com/55579860/125206104-08caff00-e2a3-11eb-8573-71d870b16860.png)\r\n\r\n\r\n- The above is the relative change i would like to suggest to update the documentation.\r\n### Thanking You \r\n### Sanjay NT","created_at":"2021-07-11T18:25:13Z","closed_at":"2021-09-07T15:33:25Z","merged_at":null,"user_id":55579860,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":687343004,"title":"Fix RNN, StackedRNNCells with nested state_size, output_size TypeError issues","body":"This PR fixed the following problems:\r\n* `tf.keras.layers.RNN` generates an incorrect `state_spec` when using stacked LSTM cells.\r\n* `tf.keras.layers.RNN` failed to build up when stacking multiple RNN cells that consume nested inputs/states and produce nested outputs.\r\n* Add a unittest for stacked nested rnn cells\r\n\r\nA full bug description/reproduction, please refer to [this gist](https://colab.research.google.com/drive/1WkI64errr70gCUCHU7YAz83jgx8o7VgP?usp=sharing).\r\n\r\nAlready run the unittest (tensorflow/python/keras/layers/recurrent_test.py) on my local machine.\r\n","created_at":"2021-07-11T14:26:32Z","closed_at":"2021-07-12T05:31:26Z","merged_at":null,"user_id":18180004,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":687300891,"title":"Fix missing image on Android download in README.md","body":"## proposed changes\r\nupdated README file","created_at":"2021-07-11T09:05:59Z","closed_at":"2021-07-15T11:03:55Z","merged_at":"2021-07-15T11:03:55Z","user_id":66359174,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":687298609,"title":"updated README file","body":"## proposed changes\r\nupdated README file","created_at":"2021-07-11T08:47:11Z","closed_at":"2021-07-11T08:56:14Z","merged_at":null,"user_id":66359174,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":687217185,"title":"Update label_image.py","body":"yes","created_at":"2021-07-10T17:55:15Z","closed_at":"2021-09-28T16:04:38Z","merged_at":null,"user_id":86628910,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":687215877,"title":"Update label_image.py","body":"","created_at":"2021-07-10T17:44:11Z","closed_at":"2021-07-10T17:44:40Z","merged_at":null,"user_id":86628910,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":687076681,"title":"r2.6 cherry-pick request: Upgrade oneDNN version to v2.3","body":"TensorFlow currently uses oneDNN v2.3-rc2. v2.3 release has [dozens more fixes](https://github.com/oneapi-src/oneDNN/compare/v2.3-rc2...v2.3) since rc2.\r\n\r\nOriginal PR (https://github.com/tensorflow/tensorflow/pull/50657) was merged on Thursday 7/8 in the morning (got into Thursday's nightly).","created_at":"2021-07-09T22:58:40Z","closed_at":"2021-07-13T18:07:34Z","merged_at":"2021-07-13T18:07:34Z","user_id":38085909,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":687059936,"title":"Fix the shape inference function for FusedBatchNormGradEx","body":"Related to https://github.com/tensorflow/tensorflow/pull/49277\r\n\r\nThis PR changes FusedBatchNormGradEx to use a different shape inference function to set output 5.\r\n\r\n\r\ncc. @nluehr ","created_at":"2021-07-09T22:03:31Z","closed_at":"2021-08-18T23:42:27Z","merged_at":"2021-08-18T23:42:27Z","user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":686957643,"title":"Update version numbers for TensorFlow 2.6.0-rc1","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 6 -> 6\nPatch: 0 -> 0\n\nNo lingering old version strings \"2.6.0-rc0\" found in source directory \n\"tensorflow/\". Good.\nWARNING: Below are potentially instances of lingering old version string \n\"2.6.0rc0\" in source directory \"tensorflow/\" that are not updated by this \nscript. Please check them manually!\ntensorflow/tools/pip_package/setup.py:105:2.6.0rc0\n```","created_at":"2021-07-09T18:05:07Z","closed_at":"2021-07-09T21:30:00Z","merged_at":"2021-07-09T21:30:00Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":686929885,"title":"Check if layer has _metrics_lock attribute","body":"Solving error `AttributeError: 'InputLayer' object has no attribute '_metrics_lock'` when trying to export a keras model.\r\n\r\nThis occurred when exporting a model with weights loaded from `.index` and `.data-xxx` files (exported in tf=2.4), but not with a model loaded directly from `saved_model.pb` + `variables/` (exported in tf=2.3)\r\n\r\nFull stack trace:\r\n\r\n```\r\n  File \"/Scribosermo/extras/exporting/export.py\", line 90, in <module>\r\n    main()\r\n  File \"/Scribosermo/extras/exporting/export.py\", line 71, in main\r\n    tf.keras.models.save_model(\r\n  File \"/usr/local/lib/python3.8/dist-packages/tensorflow/python/keras/saving/save.py\", line 133, in save_model\r\n    saved_model_save.save(model, filepath, overwrite, include_optimizer,\r\n  File \"/usr/local/lib/python3.8/dist-packages/tensorflow/python/keras/saving/saved_model/save.py\", line 80, in save\r\n    save_lib.save(model, filepath, signatures, options)\r\n  File \"/usr/local/lib/python3.8/dist-packages/tensorflow/python/saved_model/save.py\", line 975, in save\r\n    _, exported_graph, object_saver, asset_info = _build_meta_graph(\r\n  File \"/usr/local/lib/python3.8/dist-packages/tensorflow/python/saved_model/save.py\", line 1046, in _build_meta_graph\r\n    signatures = signature_serialization.find_function_to_export(\r\n  File \"/usr/local/lib/python3.8/dist-packages/tensorflow/python/saved_model/signature_serialization.py\", line 75, in find_function_to_export\r\n    functions = saveable_view.list_functions(saveable_view.root)\r\n  File \"/usr/local/lib/python3.8/dist-packages/tensorflow/python/saved_model/save.py\", line 144, in list_functions\r\n    obj_functions = obj._list_functions_for_serialization(  # pylint: disable=protected-access\r\n  File \"/usr/local/lib/python3.8/dist-packages/tensorflow/python/keras/engine/training.py\", line 2589, in _list_functions_for_serialization\r\n    functions = super(\r\n  File \"/usr/local/lib/python3.8/dist-packages/tensorflow/python/keras/engine/base_layer_v1.py\", line 2380, in _list_functions_for_serialization\r\n    return (self._trackable_saved_model_saver\r\n  File \"/usr/local/lib/python3.8/dist-packages/tensorflow/python/keras/saving/saved_model/base_serialization.py\", line 87, in list_functions_for_serialization\r\n    fns = self.functions_to_serialize(serialization_cache)\r\n  File \"/usr/local/lib/python3.8/dist-packages/tensorflow/python/keras/saving/saved_model/layer_serialization.py\", line 78, in functions_to_serialize\r\n    return (self._get_serialized_attributes(\r\n  File \"/usr/local/lib/python3.8/dist-packages/tensorflow/python/keras/saving/saved_model/layer_serialization.py\", line 94, in _get_serialized_attributes\r\n    object_dict, function_dict = self._get_serialized_attributes_internal(\r\n  File \"/usr/local/lib/python3.8/dist-packages/tensorflow/python/keras/saving/saved_model/model_serialization.py\", line 56, in _get_serialized_attributes_internal\r\n    super(ModelSavedModelSaver, self)._get_serialized_attributes_internal(\r\n  File \"/usr/local/lib/python3.8/dist-packages/tensorflow/python/keras/saving/saved_model/layer_serialization.py\", line 103, in _get_serialized_attributes_internal\r\n    objects = save_impl.wrap_layer_objects(self.obj, serialization_cache)\r\n  File \"/usr/local/lib/python3.8/dist-packages/tensorflow/python/keras/saving/saved_model/save_impl.py\", line 125, in wrap_layer_objects\r\n    metrics=data_structures.ListWrapper(layer.metrics),\r\n  File \"/usr/local/lib/python3.8/dist-packages/tensorflow/python/keras/engine/training_v1.py\", line 502, in metrics\r\n    metrics.extend(_get_metrics_from_layers(self._layers))\r\n  File \"/usr/local/lib/python3.8/dist-packages/tensorflow/python/keras/engine/training_v1.py\", line 3198, in _get_metrics_from_layers\r\n    metrics.extend(_get_metrics_from_layers(layer.layers))\r\n  File \"/usr/local/lib/python3.8/dist-packages/tensorflow/python/keras/engine/training_v1.py\", line 3198, in _get_metrics_from_layers\r\n    metrics.extend(_get_metrics_from_layers(layer.layers))\r\n  File \"/usr/local/lib/python3.8/dist-packages/tensorflow/python/keras/engine/training_v1.py\", line 3200, in _get_metrics_from_layers\r\n    metrics.extend(layer.metrics)\r\n  File \"/usr/local/lib/python3.8/dist-packages/tensorflow/python/keras/engine/base_layer.py\", line 1588, in metrics\r\n    with layer._metrics_lock:\r\nAttributeError: 'InputLayer' object has no attribute '_metrics_lock'\r\n```\r\n\r\nModel code can be found at: https://gitlab.com/Jaco-Assistant/Scribosermo/-/tree/master/extras/exporting\r\n\r\nTested with tf=2.3.3 and tf=2.4.0","created_at":"2021-07-09T17:07:42Z","closed_at":"2021-07-12T05:28:14Z","merged_at":null,"user_id":18572490,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":686920234,"title":"[CherryPick 2.6]Disable GPU kernel for SparseSegmentMeanGrad","body":"It fails with \"Internal:  Failed to launch gpuprim::DeviceRadixSort::SortPairs, temp_storage_bytes: 3327status: invalid configuration argument\"\n\nDisable the kernel while we're triaging the issue.\n\nPiperOrigin-RevId: 383492772\nChange-Id: I6cf99f6d5cc8b39b081c48893a6db601ead6817c","created_at":"2021-07-09T16:49:33Z","closed_at":"2021-07-09T17:31:00Z","merged_at":"2021-07-09T17:31:00Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":686851393,"title":"cudaMallocAsync: If OOM, sync the stream and retry allocation.","body":"The sync allow the driver more option to find memory. So sometimes it can find memory available after a sync.\r\n\r\n@sanjoy ","created_at":"2021-07-09T14:56:25Z","closed_at":"2021-07-19T14:39:51Z","merged_at":null,"user_id":180987,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":686847126,"title":"cudaMallocAsync: Check return value","body":"Add verification of the return value.\r\n@sanjoy ","created_at":"2021-07-09T14:50:01Z","closed_at":"2021-07-15T11:19:14Z","merged_at":"2021-07-15T11:19:13Z","user_id":180987,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":686595847,"title":"Fix some 'Access Denied' errors for RenameFile on Windows","body":"Calling `MoveFileExW` with the `MOVEFILE_REPLACE_EXISTING` flag can fail if another process has a handle to the file that it didn't close yet, but `DeleteFileW` + `MoveFileW` has better chances to succeed. This is because `DeleteFileW` allows the process to keep using the old handle, and since the file is gone it forces `MoveFileW` to create a new handle. This should fix issues encountered by tensorflow users on Windows when they try to run certain models:\r\n\r\nhttps://stackoverflow.com/questions/62258549/failed-to-rename-access-denied-tensorflow\r\nhttps://github.com/tensorflow/tensorflow/issues/41380","created_at":"2021-07-09T08:24:43Z","closed_at":"2021-07-14T17:03:51Z","merged_at":"2021-07-14T17:03:51Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":686304755,"title":"Changes to add FusedMatMul + Sigmoid fusion","body":"These changes add a new fusion : FusedMatMul and Sigmoid,  for INTEL oneDNN enabled flow on CPU. ","created_at":"2021-07-08T20:28:05Z","closed_at":"2021-08-02T16:56:19Z","merged_at":"2021-08-02T16:56:19Z","user_id":14943401,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":686197855,"title":"[CherryPick2.6][TF XLA AOT] Assume aarch64 is always available.","body":"This is useful for e.g. saved_model_cli aot_compile_cpu with a target\narchitecture of aarch64.\n\nPreviously this failed to build but now it seems OK.\n\nWhile we're at it, remove the manual tag from saved_model_cli_test.\n\nPiperOrigin-RevId: 383569229\nChange-Id: I91dcfccfbd0c817e12dee7e45985437001f56b50","created_at":"2021-07-08T17:24:28Z","closed_at":"2021-07-09T17:30:43Z","merged_at":"2021-07-09T17:30:43Z","user_id":53313357,"sentiment":{"polarity":0.4,"subjectivity":0.4}}
{"_id":686195413,"title":"Disabling MKL on XLA Devices","body":"Mitigates compatibility issues of XLA and MKL by disabling the MKL graph rewriter for ops assigned to XLA devices.","created_at":"2021-07-08T17:20:24Z","closed_at":"2021-07-08T20:49:30Z","merged_at":null,"user_id":80296164,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":686140436,"title":"Disable ppc64le custom gemm_pack_rhs to use the convolution specialization","body":"Eigen ppc64le has a gemm_pack_rhs specialization for AltiVec architecture. TF Convolution also specializes this packing routine, improving the Tensor code and avoiding a lot of index computation. Based on eigen_benchmark_cpu_test, we found a good scenario for ppc64le, where gemm_pack_rhs from TF headers together with VSX/MMA from ppc64le speeds up the performance of convolution.\r\n\r\nThis patch fixes the column computation for convolution in case of ppc64le and disables the Eigen ppc64le gemm_pack_rhs using the define EIGEN_ALTIVEC_USE_CUSTOM_PACK=0.","created_at":"2021-07-08T15:57:21Z","closed_at":"2021-07-13T22:24:42Z","merged_at":"2021-07-13T22:24:42Z","user_id":2990132,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":686026768,"title":"Update errors_impl.py","body":"Added the Code example for `tf.errors.ResourceExhaustedError`.\r\n\r\nFixes #29847.","created_at":"2021-07-08T13:40:49Z","closed_at":"2022-01-22T01:15:59Z","merged_at":null,"user_id":48206667,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":686017505,"title":"[MLIR][DISC] consider result types of func when checking legality","body":"Result types of the function should also be taken into consideration\r\nwhen setting the legality.","created_at":"2021-07-08T13:29:34Z","closed_at":"2021-07-08T22:14:05Z","merged_at":"2021-07-08T22:14:05Z","user_id":15364516,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":685706996,"title":"r2.6 cherry-pick request: tflite: Update CMake 3rd party libraries hash","body":"PiperOrigin-RevId: 383560588\r\nChange-Id: I6bb5121d844a3e18b6f404947b4b77e02846bd1d","created_at":"2021-07-08T05:51:41Z","closed_at":"2021-07-08T15:10:42Z","merged_at":"2021-07-08T15:10:42Z","user_id":2908505,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":685610074,"title":"[oneDNN] Upgrade onednn to official version v2.3","body":"MR to change the OneDNN Version to the Official v2.3 version: https://github.com/oneapi-src/oneDNN/releases/tag/v2.3","created_at":"2021-07-08T01:12:23Z","closed_at":"2021-07-08T17:05:39Z","merged_at":"2021-07-08T17:05:38Z","user_id":38869685,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":685569130,"title":"[CHerryPick 2.6]Internal change","body":"PiperOrigin-RevId: 382139944\nChange-Id: I21d4aeda4f40d900083da37fe57831ff7e549bad","created_at":"2021-07-07T23:13:24Z","closed_at":"2021-07-08T15:09:54Z","merged_at":"2021-07-08T15:09:54Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":685214567,"title":"cudaMallocAsync: better VLOG and error message.","body":"This combine a few trivial changes related to memory allocator: \r\nWAR some OOM, and better VLOG and error message.\r\n\r\nIn detail:\r\n\r\n* cudaMallocAsync:\r\n    - When OOM happens, sync the stream and try to allocate again. This allow extra coalescing/remapping and WAR some OOM.\r\n    - VLOG the peak memory usage.\r\n    - Extra VLOG when OOM including histogram of allocation, the list of allocated ptr and size and cudaMallocAsync stats.\r\n    - Better Error message.\r\n    - Check some return status that wasn't checked.\r\n* cudaMalloc allocator: Add extra VLOG\r\n* BFC Allocator VLOG.\r\n    - Allow to print a trace of allocation/free and to print the peak memory usage.\r\n    - Use increasing VLOG number for basic log, the peak then the trace.\r\n\r\n@sanjoy ","created_at":"2021-07-07T13:48:23Z","closed_at":"2021-07-20T17:47:55Z","merged_at":"2021-07-20T17:47:55Z","user_id":180987,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":684814688,"title":"[determinism] Enhance r2.6 release notes","body":"This PR enhances `RELEASE.md` in the r2.6 branch by including info about new op-determinism features.\r\n\r\n@reedwm @sanjoy @nluehr ","created_at":"2021-07-07T02:49:00Z","closed_at":"2021-07-08T14:59:14Z","merged_at":"2021-07-08T14:59:14Z","user_id":33532941,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":684813039,"title":"[INTEL MKL] Fixed a unit test failure when both cuda and oneDNN are enabled.","body":"All the mkl tests (ex.  AutoMixedPrecisionTest.test_conv3d('mkl')) in //tensorflow/python/grappler:auto_mixed_precision_test_gpu fail in the gpu build when the env variable TF_ENABLE_ONEDNN_OPTS=1 is set.  The problem is caused by the tests trying to call the AutoMixedPrecisionMkl (bf16) grappler pass with gpu ops, which is not supported. The fix is to assign ops to CPU when testing AutoMixedPrecisionMkl.","created_at":"2021-07-07T02:43:41Z","closed_at":"2021-07-14T01:48:42Z","merged_at":"2021-07-14T01:48:42Z","user_id":25374808,"sentiment":{"polarity":-0.10833333333333335,"subjectivity":0.25}}
{"_id":684648134,"title":"Fixing a build failure in a CI test","body":"This PR fixes a CI build failure in the test \r\n//tensorflow/core/tpu/kernels:sharding_util_ops_test. This [log](https://tensorflow-ci.intel.com/job/tensorflow-mkl-linux-cpu/25746/artifact/dnnl_test.log/*view*/) shows the build failure details. ","created_at":"2021-07-06T20:11:20Z","closed_at":"2021-07-20T16:53:51Z","merged_at":null,"user_id":24963061,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":684000513,"title":"[PluggableDevice] add DEVICE_DEFAULT for session/transpose ops","body":"Add DEVICE_DEFAULT for session/transpose ops. This PR is for PluggableDevice.","created_at":"2021-07-06T01:34:10Z","closed_at":"2021-08-30T21:22:23Z","merged_at":"2021-08-30T21:22:23Z","user_id":68101902,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":683973599,"title":"Fix issue with collective_nccl_test.","body":"This issue was caught by our internal CI.\r\n\r\n/cc @cheshire @jpienaar ","created_at":"2021-07-05T23:31:50Z","closed_at":"2021-07-14T14:47:08Z","merged_at":null,"user_id":70280935,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":683726732,"title":"[TFLite] Avoid passing negative quantized multipliers to MultiplyByQuantizedMultiplier","body":"Hello,\r\n\r\nThis PR updates the SUB and DIV kernels to avoid passing negative quantized multipliers to the `MultiplyByQuantizedMultiplier` method.\r\n\r\nIt allows us to later on add a restriction on the quantized multiplier of the int32 `MultiplyByQuantizedMultiplier` similar to the one already present in the int64 version. \r\n\r\nThibaut","created_at":"2021-07-05T13:58:37Z","closed_at":"2021-07-14T05:57:33Z","merged_at":"2021-07-14T05:57:33Z","user_id":21028116,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":683474591,"title":"[PluggableDevice] add DEVICE_DEFAULT for debug/stage ops","body":"Add DEVICE_DEFAULT for debug/stage ops. This PR is for PluggableDevice.","created_at":"2021-07-05T08:19:00Z","closed_at":"2021-09-01T00:10:18Z","merged_at":"2021-09-01T00:10:18Z","user_id":68101902,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":683463378,"title":"[PluggableDevice] add DEVICE_DEFAULT for collective/bcast ops","body":"Add DEVICE_DEFAULT for collective/bcast ops. This PR is for PluggableDevice.","created_at":"2021-07-05T08:05:40Z","closed_at":"2021-09-01T19:03:50Z","merged_at":"2021-09-01T19:03:50Z","user_id":68101902,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":683459168,"title":"[PluggableDevice] add DEVICE_DEFAULT for ScopedAllocator/AddN ops","body":"Add DEVICE_DEFAULT for scopedallocator/shape ops. This PR is for PluggableDevice.","created_at":"2021-07-05T08:01:12Z","closed_at":"2021-12-14T20:15:08Z","merged_at":"2021-12-14T20:15:08Z","user_id":68101902,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":683405345,"title":"[PluggableDevice] add DEVICE_DEFAULT for iterator/optional ops","body":"Add DEVICE_DEFAULT for iterator/optional ops. This PR is for PluggableDevice.","created_at":"2021-07-05T06:33:35Z","closed_at":"2021-10-24T20:37:56Z","merged_at":null,"user_id":68101902,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":683402393,"title":"[PluggableDevice] add DEVICE_DEFAULT for map_stage ops","body":"Add DEVICE_DEFAULT for map_stage ops. This PR is for PluggableDevice.","created_at":"2021-07-05T06:28:44Z","closed_at":"2021-12-14T20:09:41Z","merged_at":"2021-12-14T20:09:41Z","user_id":68101902,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":683400196,"title":"[PluggableDevice] add DEVICE_DEFAULT for batch_kernel/concat/fact/partioned_function ops","body":"Add DEVICE_DEFAULT for batch_kernel/concat/fact/partioned_function ops. This PR is for PluggableDevice.","created_at":"2021-07-05T06:24:34Z","closed_at":"2021-12-15T02:04:21Z","merged_at":"2021-12-15T02:04:21Z","user_id":68101902,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":683396914,"title":"[PluggableDevice] add DEVICE_DEFAULT for python ops","body":"Add DEVICE_DEFAULT for python ops. This PR is for PluggableDevice.","created_at":"2021-07-05T06:18:34Z","closed_at":"2021-09-23T15:47:10Z","merged_at":"2021-09-23T15:47:10Z","user_id":68101902,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":683391858,"title":"[PluggableDevice] add DEVICE_DEFAULT for Mutex/DestroyResource/Sequence ops","body":"Add DEVICE_DEFAULT for Mutex/DestroyResource/Sequence ops. This PR is for PluggableDevice.","created_at":"2021-07-05T06:10:25Z","closed_at":"2021-09-23T18:51:08Z","merged_at":"2021-09-23T18:51:08Z","user_id":68101902,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":683295988,"title":"[PluggableDevice] add DEVICE_DEFAULT for datasets ops","body":"Add DEVICE_DEFAULT for datasets ops. This PR is for PluggableDevice.","created_at":"2021-07-05T02:04:50Z","closed_at":"2021-10-24T20:37:20Z","merged_at":null,"user_id":68101902,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":683229698,"title":"adjust abseil version to be compatible between cmake tensorflowlite and bazel","body":"At the moment version of libabseil library defined in bazel and cmake scripts are different:\r\n\r\nBazel will add those namespace prefix `lts_2020_09_23` and cmake this one `lts_2020_02_25`.\r\n\r\nIn case you compile tensorflowlite library via cmake and build remaining libraries for tensorflow lite using bazel (for example `libmetal-delegate`) you can't use link them later as you will get unresolved symbols:\r\n\r\nUnresolved symbol:\r\n```bash\r\nabsl::lts_2020_09_23::UnknownError(absl::lts_2020_09_23::string_view), \r\nreferenced from: tflite::gpu::metal::(anonymous namespace)::AllocateTensorMemory(\r\nid<MTLDevice>,tflite::gpu::StrongShape<(tflite::gpu::Layout)12> const&, tflite::gpu::TensorDescriptor const&, void const*, id<MTLBuffer> __autoreleasing*, id<MTLTexture> __autoreleasing*) \r\nin libmetal_spatial_tensor.a(metal_spatial_tensor.o)\r\n```\r\n\r\nBut, for libraries compiled by cmake (and used in tf lite):\r\n```bash\r\nnm ./tensorflow/lite/tf_build/_deps/abseil-cpp-build/absl/status/libabsl_status.a | grep UnknownError\r\n0000000000003110 T __ZN4absl14lts_2020_02_2512UnknownErrorENS0_11string_viewE\r\n```\r\n\r\n`absl::lts_2020_09_23::UnknownError(absl::lts_2020_09_23::string_view`\r\nvs\r\n`absl::lts_2020_02_25::UnknownError string_view`","created_at":"2021-07-04T20:07:39Z","closed_at":"2021-08-06T16:21:19Z","merged_at":"2021-08-06T16:21:19Z","user_id":3313166,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":682919619,"title":"Fix equations in Adam docs","body":"Equations for Adam and other optimizers do not look good. My PR tries to fix it. \r\n\r\nI didn't find any good way to produce exact htmls from api_docs with working jax. I tried those changes locally and looks better:\r\n![image](https://user-images.githubusercontent.com/37601244/124335906-41c8ec80-db9c-11eb-9557-4722954d2a41.png)\r\n- [https://www.tensorflow.org/api_docs/cc/class/tensorflow/ops/apply-adam](https://www.tensorflow.org/api_docs/cc/class/tensorflow/ops/apply-adam)\r\n- [https://www.tensorflow.org/api_docs/python/tf/raw_ops/ApplyAdam](https://www.tensorflow.org/api_docs/python/tf/raw_ops/ApplyAdam)\r\n- [https://www.tensorflow.org/api_docs/python/tf/raw_ops/ResourceApplyAdam](https://www.tensorflow.org/api_docs/python/tf/raw_ops/ResourceApplyAdam)\r\n","created_at":"2021-07-02T23:13:35Z","closed_at":"2021-07-07T14:38:05Z","merged_at":"2021-07-07T14:38:05Z","user_id":37601244,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":682826627,"title":"Throw ValueError if shapes don't match in keras.layers.Softmax #50467","body":"I think that we should raise ValueError in case Add is not successful. The reason is that after using tf.keras.layers.Masking, the timestep will be masked (skipped) in all downstream layers (as long as they support masking). The user may be not aware of that.","created_at":"2021-07-02T18:52:38Z","closed_at":"2021-07-05T07:16:42Z","merged_at":null,"user_id":37601244,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":682464705,"title":"[PluggableDevice] register default devices for functional ops","body":"Register default devices for functional ops. This is for PluggableDevice.","created_at":"2021-07-02T09:08:38Z","closed_at":"2021-11-30T14:37:55Z","merged_at":"2021-11-30T14:37:55Z","user_id":68101902,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":682449538,"title":"[PluggableDevice] register default device for wrapdataset ops","body":"Add default device registers for wrapdataset ops. This is for PluggableDevice.","created_at":"2021-07-02T08:45:30Z","closed_at":"2021-10-24T20:38:11Z","merged_at":null,"user_id":68101902,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":682432529,"title":"[PluggableDevice]add default device for function ops","body":"Add default device registers for function ops. This is for PluggableDevice.","created_at":"2021-07-02T08:18:27Z","closed_at":"2021-10-30T18:46:31Z","merged_at":"2021-10-30T18:46:31Z","user_id":68101902,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":682209260,"title":"[CherryPick:r2.6]Fix deprecation notice.","body":"`None` is the acceptable value here.\n\n`deprecation.py` fix description of `deprecated_args`'s `*deprecated_arg_names_or_tuples` argument. The Okay value should be a single value, not a list.\n\nPiperOrigin-RevId: 382287123\nChange-Id: Ief25b4a9db03bc0ff3bc7847692f2f130635fb61","created_at":"2021-07-01T22:33:29Z","closed_at":"2021-07-01T22:40:07Z","merged_at":null,"user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":682196351,"title":"Update tf.keras engine sequential.py: add predict_classes, predict_proba deprecation warnings","body":"`Model.predict_classes` and `Model.predict_proba` are deprecated and the warnings won't be seen by the users until they attempt to call the methods.\r\n\r\nThe messages should be in line with https://developers.google.com/devsite/reference/styles/notices#warning as discussed @lamberta @MarkDaoust","created_at":"2021-07-01T22:04:20Z","closed_at":"2021-07-02T07:21:52Z","merged_at":null,"user_id":19637339,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":682163751,"title":"Cudnn frontend v0.4: Support of int8x4, API updates","body":"Cudnn frontend v0.4 released: https://github.com/NVIDIA/cudnn-frontend/releases/tag/v0.4\r\n\r\nAccordingly, this PR does the following things:\r\n- Support vector data type (Currently only int8x4);\r\n- Change setDataType() in OperationBuilder to setComputePrecision()\r\n- Update setAlpha/Beta which can deduce the datatype from the compute precision instead of given alpha/beta.\r\n\r\ncc. @nluehr ","created_at":"2021-07-01T21:00:41Z","closed_at":"2021-07-12T20:57:53Z","merged_at":"2021-07-12T20:57:53Z","user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":682160601,"title":"Support Cudnn Frontend Errata Filter","body":"Cudnn frontend v0.4 introduces a new API to allow users to filtering out undesired engines: https://github.com/NVIDIA/cudnn-frontend/releases/tag/v0.4. Users can either hard-code a list of those engines or provide a JSON file via `CUDNN_ERRATA_JSON_FILE` during runtime. This feature could greatly improve the debugging process.\r\n\r\nThis PR integrate this feature by allowing both hard-coded errata list (intentionally blank for now) and runtime list. An example of using runtime list:\r\n```bash\r\n# cat /home/tmp/sample_errata.json\r\n{ \"version\" : 1,\r\n  \"rules\"   : [\r\n    { \"rule_id\"             : \"ConvFwd_eng1\",\r\n      \"operation\"           : \"ConvFwd\",\r\n      \"engine\"              : 1,\r\n      \"knob\"                : [],\r\n      \"cudnn_version_start\" : 8000,\r\n      \"cudnn_version_end\"   : -1\r\n    }\r\n  ]\r\n}\r\n\r\n# CUDNN_ERRATA_JSON_FILE=/home/tmp/sample_errata.json TF_CPP_VMODULE=cuda_dnn=4 python -u conv2d_tf2_func.py\r\n...\r\n2021-07-01 20:50:21.828423: I tensorflow/stream_executor/cuda/cuda_dnn.cc:4489] Exclude engine (runtime): ConvFwd_eng1_k2=3_k3=0\r\n2021-07-01 20:50:21.828626: I tensorflow/stream_executor/cuda/cuda_dnn.cc:4489] Exclude engine (runtime): ConvFwd_eng1_k2=0_k3=0\r\n...\r\n```\r\n\r\ncc. @nluehr ","created_at":"2021-07-01T20:54:09Z","closed_at":"2021-07-19T20:04:04Z","merged_at":"2021-07-19T20:04:04Z","user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":682135363,"title":"Update tf.keras engine training.py: deprecation doc strings","body":"In line with https://developers.google.com/devsite/reference/styles/notices#warning as discussed @lamberta @MarkDaoust ","created_at":"2021-07-01T20:08:41Z","closed_at":"2021-07-02T07:11:05Z","merged_at":null,"user_id":19637339,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":682054319,"title":"Update release notes with a more explicit \"Breaking changes\" section …","body":"…for keras code.\r\n\r\nPiperOrigin-RevId: 382409626\r\nChange-Id: Iafa1921691aafc62ea5ec2b3b199df06e8495398","created_at":"2021-07-01T17:48:38Z","closed_at":"2021-07-02T15:08:19Z","merged_at":"2021-07-02T15:08:19Z","user_id":5118881,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":682008442,"title":"Be explicit about the type signature of map_func","body":"Highlight tf.data.Dataset such that the reader doesn't miss it. The typing was mentioned at the top of the doc but not immediately visible at the params table.\r\n\r\nMotivation for this change is that after studying this doc, a user still came up with code calling `interleave` with a function that takes element and returns element.","created_at":"2021-07-01T16:33:24Z","closed_at":"2021-07-07T17:37:52Z","merged_at":"2021-07-07T17:37:51Z","user_id":138060,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":682001672,"title":"Cherry-pick: Fix deprecation notice.","body":"`None` is the acceptable value here.\r\n\r\n`deprecation.py` fix description of `deprecated_args`'s `*deprecated_arg_names_or_tuples` argument. The Okay value should be a single value, not a list.\r\n\r\nb/192248069\r\nPiperOrigin-RevId: 382287123\r\nChange-Id: Ief25b4a9db03bc0ff3bc7847692f2f130635fb61","created_at":"2021-07-01T16:22:19Z","closed_at":"2021-07-02T15:08:09Z","merged_at":"2021-07-02T15:08:09Z","user_id":1414837,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":681999980,"title":"Cherry-pick: Disable the cudnn frontend for cudnn 8.1.0","body":"git cherry-pick 75ee2f3c02559d4a3cc0ffdaf863666fca174627\r\n\r\nDisable the cudnn frontend for cudnn 8.1.0. It causes some failures in conv + relu cases:\r\n\r\n```\r\nerrors_impl.UnknownError:  CUDNN_STATUS_INTERNAL_ERROR\r\nin tensorflow/stream_executor/cuda/cuda_dnn.cc(4358): 'status'\r\n   [[node sequential/conv2d/Relu (...) ]] [Op:__inference_train_function_962]\r\n```\r\n\r\nb/191767626\r\nPiperOrigin-RevId: 382139944\r\nChange-Id: I21d4aeda4f40d900083da37fe57831ff7e549bad","created_at":"2021-07-01T16:19:41Z","closed_at":"2021-07-02T15:07:57Z","merged_at":"2021-07-02T15:07:57Z","user_id":1414837,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":681919718,"title":"BFloat16 ROCM implementation for GEMM.","body":"","created_at":"2021-07-01T14:37:27Z","closed_at":"2021-07-02T16:54:52Z","merged_at":"2021-07-02T16:54:52Z","user_id":70280935,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":681886417,"title":"Update resource_handle.h","body":"Changed access modifier to \"private\"\r\n\r\nFix for #50481","created_at":"2021-07-01T13:59:52Z","closed_at":"2021-07-15T15:57:53Z","merged_at":"2021-07-15T15:57:53Z","user_id":59822926,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":681357731,"title":"Fix configure.py when using bazelisk on Windows","body":"Bazelisk on Windows has `bazel.cmd` on the path instead of `bazel.exe`, which cannot be called simply with `bazel` when using `subprocess.run` with `shell=False`. Instead, we can simply use the full path obtained by the `which` command.","created_at":"2021-07-01T01:29:21Z","closed_at":"2021-07-14T15:58:08Z","merged_at":"2021-07-14T15:58:08Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":681324199,"title":"[TF-TRT] testTrtGraphConverter_AllowEngineNativeSegmentExecution skipped with TRT8","body":"@bixia1 for review\r\n\r\nThis PR does 2 things:\r\n\r\n1. Deactivate `testTrtGraphConverter_AllowEngineNativeSegmentExecution` as it does not function anymore with TRT >= 8.\r\nPermanent fix will come in a following PR\r\n\r\n2. Fix a failure mode issue where the environment variable `TF_TRT_ALLOW_ENGINE_NATIVE_SEGMENT_EXECUTION` may not be reset if an AbortedError is not raised in the `converter.build()` action. Fixed using a try/finally block","created_at":"2021-07-01T00:23:57Z","closed_at":"2021-07-15T17:50:37Z","merged_at":"2021-07-15T17:50:37Z","user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":681205875,"title":"add 11 missing out-of-class definitions","body":"This fixes a broken debug build.","created_at":"2021-06-30T20:17:02Z","closed_at":"2021-07-12T15:31:23Z","merged_at":"2021-07-12T15:31:23Z","user_id":10091048,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":681123451,"title":"Describe the behavior on the false branch.","body":"Per discussion with @wangpengmit.","created_at":"2021-06-30T18:42:20Z","closed_at":"2021-07-02T19:19:04Z","merged_at":"2021-07-02T19:19:03Z","user_id":138060,"sentiment":{"polarity":-0.4000000000000001,"subjectivity":0.6}}
{"_id":681118083,"title":"Improve BiasAdd GPU performance with more threads","body":"Originally, the launch config is too conservative and it only uses the number of SMs as the block number when the workload is large enough. This can barely saturate the GPU resources especially for the memory bound kernels, like the BiasAdd. Our tests show `tf.nn.bias_add` might be significantly slower than the `tf.math.add`.\r\n\r\nThis PR changes the launch config by using the `cudaOccupancyMaxPotentialBlockSize` based method to get a more reasonable block/thread config. The new results show `tf.nn.bias_add` can get comparable performance with `tf.math.add` after this change.\r\n\r\n\r\ncc. @nluehr ","created_at":"2021-06-30T18:36:55Z","closed_at":"2021-07-12T22:56:14Z","merged_at":"2021-07-12T22:56:14Z","user_id":4001424,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":681082055,"title":"Update setup.py","body":"Update Keras package version to 2.6.0rc1, which pins the protobuf version back to 3.9.2. It is aligned with the protobuf version used by TF in the workspace.","created_at":"2021-06-30T17:53:20Z","closed_at":"2021-06-30T17:57:08Z","merged_at":null,"user_id":5118881,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":681027460,"title":"Update setup.py after estimator release","body":"","created_at":"2021-06-30T16:27:11Z","closed_at":"2021-06-30T18:31:16Z","merged_at":"2021-06-30T18:31:16Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":680864956,"title":"[MLIR][DISC] convert memref::alloc and memref::dealloc to ral.dispatch according to address space","body":"We are porting our MLIR-based dynamic shape compiler to tf community (From OP def, Patttern, to Optimization pass, etc).\r\n\r\nThere will be 3 PRs to process memory allocation for dynamic shape. 1) Mark shape calculation Ops by Op attribute and insert D2H and H2D Op in mhlo dialect; 2) Add device type info to memref's address space in lmhlo dialect; 3) Convert for device alloc/dealloc with memref's address space.\r\n\r\nThis PR mainly is to convert memref::alloc and memref::dealloc to ral.dispatch. \r\nThis PR depends on [PR1](https://github.com/tensorflow/tensorflow/pull/50245/files), [PR2](https://github.com/tensorflow/tensorflow/pull/50365), [PR3](https://github.com/tensorflow/tensorflow/pull/50434/files)(legalize disc to llvm)\r\n\r\nRelated discussion is [here](https://llvm.discourse.group/t/placement-representation-in-tensor-world-buffer-world/3502/6).","created_at":"2021-06-30T13:13:53Z","closed_at":"2021-10-20T00:59:14Z","merged_at":null,"user_id":16014148,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":680528551,"title":"Fix -Wunreachable-code-aggressive.","body":"Bug: chromium:1066980","created_at":"2021-06-30T04:46:45Z","closed_at":"2021-07-02T02:58:27Z","merged_at":"2021-07-02T02:58:27Z","user_id":13443095,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":680519807,"title":"Fix numpy 1.20 deprecation warnings","body":"Replaced\r\n* np.bool with np.bool_,\r\n* np.int with np.int64,\r\n* np.float with np.float64,\r\n* np.complex with np.complex128\r\n* np.object with np.object_,\r\n* np.str with np.str_, and\r\n* np.unicode with np.str_.\r\n\r\nRepaired 4 uses of np.complex that should have been np.complexfloating.\r\n\r\nAccording to https://numpy.org/doc/stable/release/1.20.0-notes.html,\r\nthis will have no effect except to suppress deprecation warnings.","created_at":"2021-06-30T04:21:24Z","closed_at":"2021-07-23T17:22:41Z","merged_at":"2021-07-23T17:22:41Z","user_id":730137,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":680408155,"title":"remove unnecessary cudaFree(nullptr) call","body":"Corresponding issue: https://github.com/tensorflow/tensorflow/issues/50232\r\nAs commented here: https://github.com/tensorflow/tensorflow/issues/50232#issuecomment-862034257, this cudaFree call could be unnecessary. \r\n\r\nThe behavior of `cudaSetDevice` remains for CUDA version 9+.\r\n\r\n[gpu_device_test.cc](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/common_runtime/gpu/gpu_device_test.cc) contains comprehensive test cases to prevent regression, so not writing unit tests here.","created_at":"2021-06-29T22:40:23Z","closed_at":"2021-06-30T16:30:07Z","merged_at":"2021-06-30T16:30:07Z","user_id":1428327,"sentiment":{"polarity":-0.4,"subjectivity":0.9}}
{"_id":680230218,"title":"[CherryPick:r2.6][lite] Update release notes to mention - New builtin ops for variables. - Converter:   * To enable resource through conversion, set experimental_enable_resource_variables = True.   * TOCO / Old converter has been deprecated for few releases. It will go away in the coming release.","body":"PiperOrigin-RevId: 381523046\nChange-Id: Ie155ad723d9f5d41152e881f4e897d2deb8e4503","created_at":"2021-06-29T17:27:44Z","closed_at":"2021-06-29T18:06:23Z","merged_at":null,"user_id":53313357,"sentiment":{"polarity":0.09659090909090909,"subjectivity":0.3511363636363637}}
{"_id":680227720,"title":"GPU Symmetric Fake Quantization","body":"Extension of PR #48580 which adds GPU unit tests for symmetric fake quantization.\r\n\r\nAttn: @Xhark.","created_at":"2021-06-29T17:26:02Z","closed_at":"2021-07-02T02:37:04Z","merged_at":"2021-07-02T02:37:04Z","user_id":80296164,"sentiment":{"polarity":-0.5,"subjectivity":1.0}}
{"_id":679816007,"title":"Split segment_reduction_ops_gpu.cu.cc compilation","body":"- Refactors the file into a header and several separate source files to reduce critical path compile time. (This is done pre-emptively\r\n  because future changes are expected to increase the compile time of this code).\r\n- No functional change.\r\n\r\ncc @nluehr @sanjoy ","created_at":"2021-06-29T10:39:27Z","closed_at":"2021-06-30T04:23:27Z","merged_at":"2021-06-30T04:23:27Z","user_id":3979096,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":679608722,"title":"[Go] Fix segfault on string tensors with mismatched dimensions","body":"This PR fixes a segmentation violation that may occur during GC on string tensors. The segfault results in a flaky test for `TestNewTensor` at the error test for mismatched dimensions for strings\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/c837cf8963d4ef9cb3b3b9e8787cb35f21b68f9d/tensorflow/go/tensor_test.go#L86-L87\r\n\r\nFor string tensors, `C.TF_TString_Dealloc` is called during garbage collection within a finalizer function.  However, tensor structure isn't checked until encoding to avoid a performance penalty.  The current method for dealloc assumes that encoding succeeded, but segfaults when a string tensor is garbage collected whose encoding failed (e.g., due to mismatched dimensions).\r\n\r\nTo fix this, the call to set the finalizer function is deferred until `NewTensor` returns and, if encoding failed for a string tensor, deallocs are determined based on bytes written.\r\n\r\n","created_at":"2021-06-29T05:42:15Z","closed_at":"2021-07-13T22:14:55Z","merged_at":"2021-07-13T22:14:55Z","user_id":17497234,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":679565400,"title":"support integer types for FloorMod on GPU","body":"Some types of FloorMod operators cannot be placed on the gpu, from the timeline.\r\nSupport integer types for FloorMod on GPU: int8, int16, int32, int64, uint8, uint16, uint32, uint64","created_at":"2021-06-29T03:54:14Z","closed_at":"2021-06-29T05:53:52Z","merged_at":null,"user_id":9637738,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":679546030,"title":"[determinism] Add d9m-unimplemented exception-throwing to fused batch-norm","body":"This PR adds determinism-unimplemented exception-throwing to `tf.compat.v1.nn.fused_batch_norm`. If an attempt is made to run the GPU kernel that implements backprop to `x`, `scale`, or `offset` when `is_training=False` (when fine-tuning) and when determinism is expected (i.e. when `TF_DETERMINISTIC_OPS` is set to `\"true\"` or `\"1\"`), then a `tf.errors.UnimplementedError` will be thrown.\r\n\r\nThis PR tests that the exception is thrown as appropriate and also tests that the other paths through the op (on both CPU and GPU) operate deterministically.\r\n\r\nThis PR is related to [RFC: Enabling Determinism in TensorFlow](https://github.com/tensorflow/community/blob/master/rfcs/20210119-determinism.md). For status and history of GPU-determinism for this op, see [here](https://github.com/NVIDIA/framework-determinism/blob/master/tensorflow_status.md#fused-batch-norm).\r\n\r\nCC @reedwm, @sanjoy, @nluehr","created_at":"2021-06-29T03:03:06Z","closed_at":"2021-07-08T21:40:13Z","merged_at":"2021-07-08T21:40:13Z","user_id":33532941,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":679451971,"title":"[CherryPick:r2.6]Rollback breaking change","body":"PiperOrigin-RevId: 381578821\nChange-Id: I08d1c7896d76a19c6e693d8e178b89f5fb49af15","created_at":"2021-06-28T22:38:33Z","closed_at":"2021-06-28T23:08:27Z","merged_at":"2021-06-28T23:08:27Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":679450749,"title":"[CherryPick:r2.6]Disable test on macos and debug.","body":"PiperOrigin-RevId: 381563828\nChange-Id: I8199401a23494d9c0f08e4818198ef07c51cf969","created_at":"2021-06-28T22:35:06Z","closed_at":"2021-06-28T23:07:54Z","merged_at":"2021-06-28T23:07:54Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":679437080,"title":"r2.6 cherry-pick request: Add the missing kernels_experimental header file to pip package","body":"PR #49717 adds [Resource Variable ops support to kernel C API](https://github.com/tensorflow/community/pull/387) in a new `kernel_experimental` file. However, it failed to add the new header file to the pip package, so PluggableDevices aren't able to use it yet. This PR fixed that. With this fix, TensorFlow can train models on PluggableDevices.\r\n\r\nOriginal PR (merged into master on 6/26): #50462 \r\ncc: @kulinseth @saxenasaurabh ","created_at":"2021-06-28T22:07:21Z","closed_at":"2021-06-29T00:23:37Z","merged_at":"2021-06-29T00:23:37Z","user_id":38085909,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":679340625,"title":"Update setup.py","body":"","created_at":"2021-06-28T19:48:04Z","closed_at":"2021-06-29T00:23:24Z","merged_at":"2021-06-29T00:23:24Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":679325817,"title":"Update version numbers for TensorFlow 2.6.0-rc0","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 6 -> 6\nPatch: 0 -> 0\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.6.0\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/python/keras/__init__.py:33:2.6.0\ntensorflow/java/maven/tensorflow-hadoop/pom.xml:17:2.6.0\ntensorflow/workspace2.bzl:1051:2.6.0\ntensorflow/workspace2.bzl:1052:2.6.0\ntensorflow/workspace2.bzl:1055:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:80:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:149:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:155:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:161:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:227:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:334:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:355:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:356:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:357:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:358:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:359:2.6.0\ntensorflow/tools/pip_package/setup.py:53:2.6.0\ntensorflow/tools/pip_package/setup.py:108:2.6.0\ntensorflow/tools/pip_package/setup.py:120:2.6.0\ntensorflow/tools/pip_package/setup.py:122:2.6.0\ntensorflow/tools/pip_package/setup.py:124:2.6.0\ntensorflow/tools/ci_build/release/requirements_common.txt:27:2.6.0\ntensorflow/tools/ci_build/release/requirements_common.txt:28:2.6.0\ntensorflow/tools/ci_build/release/requirements_common.txt:29:2.6.0\ntensorflow/tensorflow.bzl:55:2.6.0\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.6.0\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/python/keras/__init__.py:33:2.6.0\ntensorflow/java/maven/tensorflow-hadoop/pom.xml:17:2.6.0\ntensorflow/workspace2.bzl:1051:2.6.0\ntensorflow/workspace2.bzl:1052:2.6.0\ntensorflow/workspace2.bzl:1055:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:80:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:149:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:155:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:161:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:227:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:334:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:355:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:356:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:357:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:358:2.6.0\ntensorflow/lite/tools/versioning/runtime_version.cc:359:2.6.0\ntensorflow/tools/pip_package/setup.py:53:2.6.0\ntensorflow/tools/pip_package/setup.py:108:2.6.0\ntensorflow/tools/pip_package/setup.py:120:2.6.0\ntensorflow/tools/pip_package/setup.py:122:2.6.0\ntensorflow/tools/pip_package/setup.py:124:2.6.0\ntensorflow/tools/ci_build/release/requirements_common.txt:27:2.6.0\ntensorflow/tools/ci_build/release/requirements_common.txt:28:2.6.0\ntensorflow/tools/ci_build/release/requirements_common.txt:29:2.6.0\ntensorflow/tensorflow.bzl:55:2.6.0\n```","created_at":"2021-06-28T19:30:33Z","closed_at":"2021-06-28T21:56:36Z","merged_at":"2021-06-28T21:56:36Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":679317090,"title":"[ROCm] Adding complex type support for SparseTensorDenseMatMul op (on the ROCm platform)","body":"/cc @cheshire @chsigg ","created_at":"2021-06-28T19:20:49Z","closed_at":"2021-06-29T02:09:16Z","merged_at":"2021-06-29T02:09:16Z","user_id":36858332,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":679217023,"title":"WAR a bazel cache corruption issue.","body":"Bazel is taking much time to enable the WAR.\r\n@sanjoy suggested to enable it now for us.\r\n\r\nHaving a potential cache corruption is something very bad to have.","created_at":"2021-06-28T17:01:35Z","closed_at":"2021-07-14T15:54:20Z","merged_at":"2021-07-14T15:54:19Z","user_id":180987,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":679215967,"title":"Adding mhlo Einsum to LinalgGeneric Lowering","body":"","created_at":"2021-06-28T17:00:00Z","closed_at":"2021-07-16T22:47:11Z","merged_at":"2021-07-16T22:47:11Z","user_id":68087699,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":678969739,"title":"Fix TransferLiteralFromDevice bug which appears in Tensorflow Master","body":"The GenericTransferManager::GetByteSizeRequirement() used in GenericTransferManager::TransferLiteralFromDevice() calculate the Memcpy size as ShapeUtil::ByteSizeOf(shape, pointer_size_) + metadata_size for dynamic shape; However, the data and meta memory are allocated separately in Literal. This PR fix this by malloc only one memory to store both the data and meta.","created_at":"2021-06-28T11:41:36Z","closed_at":"2021-10-29T00:51:59Z","merged_at":null,"user_id":34341633,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":678243702,"title":"Update release notes for TensorFlow 2.6.0","body":"This PR is intentionally incomplete. One of the Release Owners for 2.6.0\nneeds to fill in the internal release notes for this version before the PR gets\nsubmitted. Click on the :pencil2: icon in the header for `RELEASE.md` under\n\"Files Changed\" above.","created_at":"2021-06-26T00:33:50Z","closed_at":"2021-06-29T19:39:14Z","merged_at":"2021-06-29T19:39:14Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":678210582,"title":"Update release notes for TensorFlow 2.7.0","body":null,"created_at":"2021-06-25T22:24:33Z","closed_at":"2021-07-01T05:31:44Z","merged_at":"2021-07-01T05:31:44Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":678188542,"title":"Fix indices rank in decompose ResourceScatterOp ","body":"Since indices.shape[:-1] + tensor.shape[indices.shape[-1]:], we need\r\nindices.shape[-1] to be 1. This fix ensures that indices has the right\r\nrank, S.T above condition is met.\r\n","created_at":"2021-06-25T21:22:37Z","closed_at":"2021-07-13T15:11:24Z","merged_at":"2021-07-13T15:11:24Z","user_id":68087699,"sentiment":{"polarity":-0.8,"subjectivity":0.9}}
{"_id":678181781,"title":"Update 90-keras-issue.md","body":"Keras-issue template had some formatting errors which are corrected in this PR","created_at":"2021-06-25T21:09:54Z","closed_at":"2021-06-28T15:05:37Z","merged_at":null,"user_id":46058173,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":678117802,"title":"Add the newly added kernels_experimental header file to pip package.","body":"The change adds the kernels_experimental.h header file to `kernels_hdrs` target so that it can appear to pip package.\r\n\r\n@penpornk can you please take a look.","created_at":"2021-06-25T18:56:37Z","closed_at":"2021-06-26T14:07:36Z","merged_at":"2021-06-26T14:07:36Z","user_id":453004,"sentiment":{"polarity":0.13636363636363635,"subjectivity":0.45454545454545453}}
{"_id":677786969,"title":"Update DepthwiseConv2D documentation","body":"resolves #49933\r\n\r\nI fixed the documentation of `DepthwiseConv2D` and additionally clarified the documentation regarding the `depth_multiplyer` argument.","created_at":"2021-06-25T09:56:13Z","closed_at":"2021-06-25T13:31:38Z","merged_at":null,"user_id":36379249,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":677580215,"title":"support fixed64 in features parser .","body":"### Current:\r\n1. Our model have 900+ features(will be expanded to 2000 features within one year).\r\n2. We run tensorflow on A100 machine, and our model currently consumes TFRecord very fast, now 1700,000 TFRecords/s. PS:We replace TFRecord reader from disk to high-performance network and memory cache.\r\nAfter the above change, we find deserialize varint64 is very hot, so we check how to decode varint64 in pb.\r\n\r\n### Varint64 and Fixed64\r\n\r\n**Varint64:** A variable-length storage format, the details:https://developers.google.com/protocol-buffers/docs/encoding\r\n**Fixed64**: A fixed-length storage format, fixed use 64bit to save uint64_t\r\nDecoding varint64 needs two loop.\r\n1. Check whether the highest bit of each byte is 1\r\n2. Iterate and decode each byte, and then compose each byte into uint64_t\r\nVarint64 decodes very fast when the number is small, such as using 2-3 bytes numbers(1bytes special deal).\r\n\r\n### Why we replace Varint64 to fixed64:\r\n\r\nBut unfortunately, because our confidential data, we have to save big hash values.The storage of the hash value usually uses 7-8 bytes, and varint64 is very unfriendly to decode the hash value.\r\nso I want to replace from varint64 to fixed64, we have **a small test in _protobuf_**, through varint64 and fixed64 decoding the same hash data, we get fixed64 10 times faster than varint64.(The example is a bit complicated, but I can provide it if necessary)\r\n\r\n**Do you think it is necessary for TF to add the fixed64 type? If necessary, I can contribute this part of the code.**\r\n\r\n ### Remarks some profiling result:\r\n![image](https://user-images.githubusercontent.com/33950866/123361876-5f95c080-d5a2-11eb-8184-e9cb79b5875c.png)\r\n![image](https://user-images.githubusercontent.com/33950866/123410135-8aebd000-d5e1-11eb-9770-197fdfb8473b.png)\r\n![image](https://user-images.githubusercontent.com/33950866/123410172-963efb80-d5e1-11eb-9f0c-b015cba5c07b.png)","created_at":"2021-06-25T02:49:32Z","closed_at":"2021-11-15T02:58:01Z","merged_at":null,"user_id":33950866,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":677569942,"title":"CombinedNMS plugin deactivated with TRT < 8. Only FP32 allowed with TRT >= 8","body":"This PR closes and replaces https://github.com/tensorflow/tensorflow/pull/48950.\r\n\r\n- Disallow CombinedNMS Converter for TensorRT < 8.\r\n- Only allow FP32 CombinedNMS with TensorRT >= 8.\r\n\r\nThis PR addresses issues with the CombinedNMS TensorRT plugin.\r\n\r\n@bixia1 for review\r\nCC: @jhalakpatel @tfeher ","created_at":"2021-06-25T02:18:59Z","closed_at":"2021-10-28T01:08:08Z","merged_at":null,"user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":1.0}}
{"_id":677432217,"title":"[TFTRT] Correct SimpleITensor Assertion","body":"This fixes an incorrect assertion where the tensor type should be checked as kSIMPLE instead of kTRT.\r\n\r\nCC @bixia1 @DEKHTIARJonathan @tfeher ","created_at":"2021-06-24T20:58:07Z","closed_at":"2021-06-24T22:33:15Z","merged_at":"2021-06-24T22:33:15Z","user_id":10891704,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":677412096,"title":"Create 90-keras-issue.md","body":"Added a tf.keras template to notify the users about `tf.keras` code moved from [tensorflow/tensorflow](https://github.com/tensorflow/tensorflow) repository to [keras-team/keras](https://github.com/keras-team/keras) repository. \r\n\r\nAlso, asking users to create new issues in [keras-team/keras](https://github.com/keras-team/keras/issues) repository.","created_at":"2021-06-24T20:22:04Z","closed_at":"2021-06-25T01:09:29Z","merged_at":"2021-06-25T01:09:29Z","user_id":46058173,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":677393846,"title":"Add tf.keras template","body":"Added a tf.keras template to notify the users about `tf.keras` code moved from [tensorflow/tensorflow](https://github.com/tensorflow/tensorflow) repository to [keras-team/keras](https://github.com/keras-team/keras) repository. \r\n\r\nAlso, asking users to create new issues in [keras-team/keras](https://github.com/keras-team/keras/issues) repository.","created_at":"2021-06-24T19:49:06Z","closed_at":"2021-06-24T20:19:42Z","merged_at":null,"user_id":46058173,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":676762637,"title":"Fix -Wloop-analysis warnings.","body":"Bug: chromium:1223264","created_at":"2021-06-24T03:36:42Z","closed_at":"2021-06-26T00:42:10Z","merged_at":"2021-06-26T00:42:09Z","user_id":13443095,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":676752743,"title":"[MLIR][DISC] legalize disc to llvm","body":"This PR provides conversion patterns to convert `disc_ral.dispatch_op`\r\nand `gpu.launch_op` to its disc-compatible llvm format.","created_at":"2021-06-24T03:08:27Z","closed_at":"2021-07-06T16:47:09Z","merged_at":"2021-07-06T16:47:09Z","user_id":15364516,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":676698052,"title":"Update prefetching_ops.py","body":"Added an example of using `prefetch_to_device`\r\n\r\nFixes https://github.com/tensorflow/tensorflow/issues/29848","created_at":"2021-06-24T00:12:25Z","closed_at":"2021-06-25T23:46:48Z","merged_at":"2021-06-25T23:46:48Z","user_id":46058173,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":676676042,"title":"[ROCm] Updating Dockerfile.rocm to drop support for gfx803","body":"/cc @cheshire @chsigg ","created_at":"2021-06-23T23:06:51Z","closed_at":"2021-06-24T18:14:17Z","merged_at":"2021-06-24T18:14:17Z","user_id":36858332,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":676666033,"title":"[ROCm] Fix for a bug in GpuLaunchConfig calculation for kernels with explicitly specified non-std launch bounds","body":"Fix for SWDEV 277899 - hipLaunchKernel called with threads per block  value greater than launch bounds attribute.\r\n\r\nPrior to the fix for SWDEV 252801, if the application code launches a GPU kernel with a threads per block value which is greater than the `__launch_bounds__` attribute value for that kernel, HIP runtime only issues a warning for this scenario.\r\n\r\nAfter the fix for SWDEV 252801, HIP runtime issues an error message instead (for this scenario), and reports an error status back to the application code.\r\n\r\nThis change results in the following four TF unit test failures\r\n\r\n```\r\n//tensorflow/compiler/tests:depthwise_conv_op_test_gpu\r\n//tensorflow/compiler/tests:depthwise_conv_op_test_gpu_mlir_bridge_test\r\n//tensorflow/python:nn_grad_test_gpu\r\n//tensorflow/python/keras/distribute:saved_model_mixed_api_test_gpu\r\n//tensorflow/python/kernel_tests/signal:fft_ops_test\r\n```\r\n\r\nThis commit fixes the failure in the first three of the above tests. It was caused by an incorrect calculation of the \"threads per block\" value. The upper bound for that value (i.e. the `__launch_bounds__` attribute value) was not getting passed to the `GetGpuLaunchConfig`. Passing that value, results in `GetGpuLaunchConfig` returning the correct \"threads per block\" value and the unit tests start passing\r\n\r\n---------------------------------\r\n\r\n/cc @cheshire @chsigg ","created_at":"2021-06-23T22:38:21Z","closed_at":"2021-06-28T09:11:53Z","merged_at":"2021-06-28T09:11:52Z","user_id":36858332,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":676644549,"title":"Add instructions for Spresense  on each examples","body":"Add Spresense instruction in README.mds of hello_world, micro_speach and person_detection in lite/micro/examples.\r\nPlease review it. ","created_at":"2021-06-23T21:48:29Z","closed_at":"2021-06-29T17:21:50Z","merged_at":"2021-06-29T17:21:50Z","user_id":35755670,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":676541967,"title":"Assign unique path to go package","body":"PR assigns a unique go_package path for full_types.proto; paths for those in core/framework are unique since 4221d1a ","created_at":"2021-06-23T19:01:40Z","closed_at":"2021-06-28T16:41:00Z","merged_at":"2021-06-28T16:41:00Z","user_id":17497234,"sentiment":{"polarity":0.375,"subjectivity":1.0}}
{"_id":676288726,"title":"[ROCm] creating a wrapper for the rocblas lib, and updating all calls to use the wrapper","body":"/cc @cheshire @chsigg ","created_at":"2021-06-23T13:26:47Z","closed_at":"2021-07-14T15:48:52Z","merged_at":"2021-07-14T15:48:52Z","user_id":36858332,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":676104659,"title":"[MLIR][DISC] canonicalize hlo reduce op for codegen","body":"This pass canonicalize `mhlo.ReduceOp` to the suitable forms, so that we can simplify the codegen process","created_at":"2021-06-23T09:18:09Z","closed_at":"2021-06-30T18:25:00Z","merged_at":null,"user_id":24392218,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":675903830,"title":"[ROCm] Updating ROCm implementation for the GpuVersion type in XLA","body":"porting the changes by @ekuznetsov139 in the ROCm TF fork.\r\n\r\n-----------------------------\r\n\r\n/cc @cheshire @chsigg","created_at":"2021-06-23T02:44:50Z","closed_at":"2021-06-28T14:44:48Z","merged_at":null,"user_id":36858332,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":675834560,"title":"[ROCm] Enable unique op on the ROCm platform.","body":"porting the implementation by @ekuznetsov139 in the ROCm TF fork.\r\n\r\n\r\n----------------------------------------\r\n\r\n\r\n/cc @cheshire @chsigg ","created_at":"2021-06-23T00:07:31Z","closed_at":"2021-06-30T21:39:51Z","merged_at":"2021-06-30T21:39:50Z","user_id":36858332,"sentiment":{"polarity":0.375,"subjectivity":1.0}}
{"_id":675811224,"title":"Extend the algorithm selector to consider a list of allowed and disallowed tactics","body":"This PR extends the StaticAlgorithmSelector to keep a list of allowed tactics and a list of disallowed tactics. The list of allowed tactics is used to implemented the existing mechanism of selecting one tactics through environment variable TF_TRT_FIXED_ALGORITHM_ID. The list of disallowed tactics is currently used to exclude the known bad tactics in TensorRT version 7.x.\r\n\r\nThis PR also excludes any tactics that implement SHUFFLE layer for CHW32 format in TensorRT 7.\r\n\r\nTagging Bixia @Bixia1, @DEKHTIARJonathan, and Tamas @tfeher for visibility.","created_at":"2021-06-22T22:59:17Z","closed_at":"2021-10-21T20:58:26Z","merged_at":"2021-10-21T20:58:26Z","user_id":72053804,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":675673575,"title":"Update Template","body":"Update template to include discourse link","created_at":"2021-06-22T18:39:46Z","closed_at":"2021-06-24T04:20:27Z","merged_at":"2021-06-24T04:20:27Z","user_id":43972606,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":675545937,"title":"[TFLite] Add quantization support for SQUARED_DIFFERENCE using the MLIR-based quantizer","body":"Hello,\r\n\r\nThe int8 quantization for the SQUARED_DIFFERENCE operator was added a couple of months ago in commit c7b8cbaf60871882b4310c42ef2656d17c5dd2cc and it's working fine with the old quantizer by setting `converter.experimental_new_quantizer = False`  but it isn't working with the new default MLIR-based quantizer as the operator has the `NoQuantizableResult` trait.\r\n\r\nThe PR just removes the `NoQuantizableResult` trait which is sufficient to make it works but I can eventually add some extra tests.\r\n\r\nThibaut","created_at":"2021-06-22T15:41:03Z","closed_at":"2021-06-24T15:11:26Z","merged_at":"2021-06-24T15:11:26Z","user_id":21028116,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":675101799,"title":"Compitable with CUDA, Can not find GPU resource","body":"When I upgrade tensorflow from 2.1.0 to 2.3.0, the GPU can not be found.\r\nMy old environment: python3.6+CUDA10.2+Tensorflow-gpu2.1.0, I can successfully run my code using this environemnt, both in graph mode and non-Graph mode.\r\n\r\nThen, I created a new environment: python3.7+Tensorflow-gpu2.3.0, and run my code using this environment. I found, the GPU resource could not be found (the output of the commound \"tf.config.experimental.list_physical_devices('GPU'\") is [ ]).\r\nI think it's caused by the version of CUDA at the first glance. Then I upgrade CUDA from 10.2 to 11.0, but the issue remains unsolved.\r\n\r\nCan anyone help solving this issue?","created_at":"2021-06-22T06:00:15Z","closed_at":"2021-06-22T13:21:42Z","merged_at":null,"user_id":12910533,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":675024686,"title":"Rename template IN / OUT to INPUT / OUTPUT for Windows on ARM","body":"It build failed in Windows on ARM because the IN / OUT is defined in windows.h(minwindef.h)\r\n```\r\n#ifndef IN\r\n#define IN\r\n#endif\r\n\r\n#ifndef OUT\r\n#define OUT\r\n#endif\r\n```\r\nSo I replace it to INPUT / OUTPUT","created_at":"2021-06-22T02:40:14Z","closed_at":"2021-06-29T00:19:36Z","merged_at":"2021-06-29T00:19:35Z","user_id":52752725,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":674937194,"title":"[ROCm] Update profiler support for rocm","body":"These changes add the following capabilities to the TF profiler for ROCm\r\n\r\n* Makes all the profiler views in TensorBoard valid for AMD GPUs\r\n* Add host API tracing to the traceviewer\r\n* Add some new HIP APIs to track in the profiler\r\n* Solve some of the previously known issues:\r\n  * Assigning correct physical device ID\r\n  * Fix events being dropped","created_at":"2021-06-21T22:33:07Z","closed_at":"2021-09-02T04:31:54Z","merged_at":"2021-09-02T04:31:54Z","user_id":79117684,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":674820980,"title":"[INTEL_MKL] Windows OpenMP support","body":"Enable Windows OpenMP support for Intel-MKL to improve performance on CPUs","created_at":"2021-06-21T19:33:52Z","closed_at":"2021-06-24T21:13:01Z","merged_at":"2021-06-24T21:13:01Z","user_id":57962524,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":674734474,"title":"Fix race condition in TRTDeviceAllocator","body":"This PR adds a mutex to prevent race condition while accessing to the `mem_map_` member variable.\r\n\r\nTagging @bixia1 for review and @DEKHTIARJonathan for visibility.","created_at":"2021-06-21T17:12:46Z","closed_at":"2021-06-22T22:58:00Z","merged_at":"2021-06-22T22:58:00Z","user_id":3671106,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":674117828,"title":"Fix edge case names in to_snake_case internal util","body":"Fixes #50288.\r\n\r\n```python\r\n>>> for cls in sorted(Layer.__subclasses__(), key=lambda c: c.__name__):\r\n>>>   new = to_snake_case_proposed(cls.__name__)\r\n>>>   old = to_snake_case_orig(cls.__name__)\r\n>>>   if new != old:\r\n>>>       print(old, '-->', new) \r\nconv_lst_m2d_cell --> conv_lstm2d_cell\r\nleaky_re_lu --> leaky_relu\r\np_re_lu --> p_relu\r\nre_lu --> relu\r\nthresholded_re_lu --> thresholded_relu\r\n```","created_at":"2021-06-20T23:59:37Z","closed_at":"2021-07-21T21:38:14Z","merged_at":null,"user_id":20629897,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":674058641,"title":"Cus change","body":"","created_at":"2021-06-20T16:03:20Z","closed_at":"2021-06-20T16:04:15Z","merged_at":null,"user_id":32458106,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":673903144,"title":"Improved scikit-learn compatibility","body":"When using a KerasRegressor / KerasClassifier inside a scikit-learn ensemble model (Voting/Stacking/Bagging), an error is raised because such model requires its base estimators to have the attribute `_estimator_type`, which can be either `\"regressor\"` or `\"classifier\"`. The addition fixes this issue.","created_at":"2021-06-19T16:28:15Z","closed_at":"2021-07-08T17:24:21Z","merged_at":null,"user_id":64335373,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":673895102,"title":"Add 'supported formats' to ValueError","body":"While using ` tf.keras.preprocessing.image_dataset_from_directory ` I got a Value Error \"No images Found\". \r\nThat happened  because i had images in .ppm format, which is not supported (duh!..).  Wasted quite some time. So, to **clarify** I added a line about required image formats in `tensorflow/python/keras/preprocessing/image_dataset.py/image_dataset_from_directory`` raise ValueError`.\r\nSlicing is to get rid of brakets and make it look pretty.\r\n\r\np.s that's my first ever contribution.","created_at":"2021-06-19T15:21:25Z","closed_at":"2021-07-09T00:46:06Z","merged_at":null,"user_id":64369215,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":673894130,"title":"[WIP][MLIR][DISC] Add device type info to memref's address space in lmhlo dialect","body":"We are porting our MLIR-based dynamic shape compiler to tf community (From OP def, Patttern, to Optimization pass, etc).\r\n\r\nThere will be 3 PRs to process memory allocation for dynamic shape. 1) Mark shape calculation Ops by Op attribute and insert D2H and H2D Op in mhlo dialect; 2) Add device type info to memref's address space in lmhlo dialect; 3) Convert for device alloc/dealloc with memref's address space.\r\n\r\nThis PR mainly is to add device type info to memref's address space in lmhlo dialect.\r\n\r\nRelated discussion is [here](https://llvm.discourse.group/t/placement-representation-in-tensor-world-buffer-world/3502/6).","created_at":"2021-06-19T15:14:04Z","closed_at":"2021-10-23T00:56:47Z","merged_at":null,"user_id":16014148,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":673866036,"title":"[Go] use GOOS to distinguish between platforms","body":"Running `go generate` within `tensorflow/go/op` executes `tensorflow/go/genop/generate.sh` superfluously (twice). This is because `tensorflow/go/genop/generate.win.go` does not follow golang [build contraints](https://golang.org/pkg/go/build/#hdr-Build_Constraints) which, for file suffixes, require an underscore and the full OS name of `windows` (e.g., `generate_windows.go`).  Thus, `go generate` runs `tensorflow/go/genop/generate.go` and `tensorflow/go/genop/generate.win.go` on any platform.\r\n\r\nIt is more direct to remove the build constraint and instead distinguish between platforms within the shell script as `go env GOOS` provides the platform name.  This also allows the script to be called directly with GOOS set as an environment variable.","created_at":"2021-06-19T11:28:04Z","closed_at":"2021-07-13T14:40:33Z","merged_at":"2021-07-13T14:40:33Z","user_id":17497234,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":673843999,"title":"[MLIR][DISC] Add LhloFusionInliner Pass","body":"This pass inlines the body contents of lmhlo.fusion_op. \r\nTypically it should work after the body has been lowered into loops. For disc, it works after LhloLegalizeRootsToParallelLoops &  InputInlineFusion in #50102 .","created_at":"2021-06-19T08:21:32Z","closed_at":"2021-06-25T13:57:53Z","merged_at":"2021-06-25T13:57:53Z","user_id":8992445,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":673787702,"title":"[determinism] Add d9m-unimplemented exceptions to sparse/sparse matmul","body":"This current PR is a follow-on to closed PR [47749](https://github.com/tensorflow/tensorflow/pull/47749) (Add GPU determinism for fp types in GPU SparseTensorDenseMatMul). This current PR adds and tests determinism-unimplemented exception-throwing for `tf.sparse.sparse_dense_matmul` when is running on a GPU. This current PR also adds tests for the bit-exact reproducibility (determinism) of `tf.sparse.sparse_dense_matmul` (forward direction only, not gradients) when running a CPU.\r\n\r\nThis PR is related to [RFC: Enabling Determinism in TensorFlow](https://github.com/tensorflow/community/blob/master/rfcs/20210119-determinism.md). For status and history of GPU-determinism for this op, see [here](https://github.com/NVIDIA/framework-determinism/blob/master/tensorflow_status.md#sparse-dense-matmul).\r\n\r\nCC @reedwm, @sanjoy, @nluehr","created_at":"2021-06-19T00:09:40Z","closed_at":"2021-06-23T18:15:02Z","merged_at":"2021-06-23T18:15:02Z","user_id":33532941,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":673696644,"title":"Applying MKL Eager Rewriter to CPU Ops","body":"Registers the MKL eager rewriter for the POST_PLACEMENT phase, allowing its selective application to ops assigned to a CPU.","created_at":"2021-06-18T20:00:32Z","closed_at":"2021-06-24T16:04:00Z","merged_at":"2021-06-24T16:03:59Z","user_id":80296164,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":673607273,"title":"'tf distributed'","body":"- Deprecated decorator to all methods","created_at":"2021-06-18T16:43:48Z","closed_at":"2021-06-18T16:44:19Z","merged_at":null,"user_id":30946547,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":673383744,"title":"[MLIR] Add conversion of unary operation from lmhlo to affine","body":"Unary op converter has been added from lmhlo to affine dialect.\r\nThe changes have been made as a part of `lhlo-legalize-to-affine` pass.","created_at":"2021-06-18T11:09:22Z","closed_at":"2021-06-24T23:53:53Z","merged_at":"2021-06-24T23:53:53Z","user_id":16246821,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":673304041,"title":"[MLIR][DISC] add a pass to lower some ops to library calls","body":"This PR implements the logic to lower some specific ops to external library calls.\r\n\r\nHere the external function is model by a `disc_ral.dispatch` op. We use\r\n`disc_ral.dispatch` to serve as a unified entrance of disc external\r\ncalls due to following reasons.\r\n\r\n- `disc_ral.dispatch` ensures that the first argument is always the\r\n  `disc_ral.context`\r\n- `disc_ral.dispatch` simplifies the logic to handle different instantiations of\r\n  one op for different devices and different element types. For example, we may\r\n  have GEMM ops with different element types.","created_at":"2021-06-18T09:10:37Z","closed_at":"2021-06-23T16:53:52Z","merged_at":"2021-06-23T16:53:52Z","user_id":15364516,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":673215686,"title":"[PluggableDevice] Enable TF_TensorFromProto","body":"Add a new C API `TF_TensorFromProto`, which is designed for converting TensorProto(TF_Buffer) to Tensor(TF_Tensor). Typical use case is to get tensor value from TensorProto in graph pass.","created_at":"2021-06-18T06:53:19Z","closed_at":"2021-06-30T14:40:10Z","merged_at":"2021-06-30T14:40:10Z","user_id":52769182,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":673117646,"title":"[INTEL MKL] Enable mkl group conv","body":"Group conv is already enabled in CPU. This PR enables mkl group conv.","created_at":"2021-06-18T02:29:35Z","closed_at":"2021-08-09T15:31:13Z","merged_at":"2021-08-09T15:31:13Z","user_id":52769182,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":673048434,"title":"Adding no_rocm tags to current tests that are broken on ROCm.","body":"Tests to be re-enabled after diagnosing, using no_rocm tags so CSB tests pass. ","created_at":"2021-06-17T22:58:48Z","closed_at":"2021-07-16T09:52:45Z","merged_at":"2021-07-16T09:52:45Z","user_id":25489675,"sentiment":{"polarity":-0.2,"subjectivity":0.4}}
{"_id":673025886,"title":"[INTEL MKL] Update onednn to v2.3_rc2","body":"Update onednn to v2.3_rc2.\r\nFixes few critical bugs and provides additional architecture support.","created_at":"2021-06-17T22:09:48Z","closed_at":"2021-06-18T13:47:34Z","merged_at":"2021-06-18T13:47:34Z","user_id":38869685,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":672868799,"title":"Restore original framebuffer in ForceSyncTurning","body":"It broken OpenGL framebuffer in some render engine that using OpenGL state cache.\r\nSo we need to backup and restore current framebuffer.","created_at":"2021-06-17T18:00:04Z","closed_at":"2021-12-29T00:59:24Z","merged_at":null,"user_id":52752725,"sentiment":{"polarity":0.375,"subjectivity":0.75}}
{"_id":672859172,"title":"Prevent glGetError infinity","body":"if EGL context is not available, the glGetError always return GL_INVALID_OPERATION.\r\n\r\nI use my simple EGL to WGL wrapper, and found an infinite loop when destroying interpreter.\r\nhttps://github.com/metarutaiga/TensorFlowLiteReduce/blob/master/third_party/EGL/egl_windows.c","created_at":"2021-06-17T17:44:31Z","closed_at":"2021-07-16T13:38:36Z","merged_at":"2021-07-16T13:38:35Z","user_id":52752725,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":672440299,"title":"Prevent glGetError infinity","body":"if EGL context is not available, the glGetError always return GL_INVALID_OPERATION.\r\n\r\nI use my simple EGL to WGL wrapper, and found an infinite loop when destroying interpreter.\r\nhttps://github.com/metarutaiga/TensorFlowLiteReduce/blob/master/third_party/EGL/egl_windows.cc\r\n","created_at":"2021-06-17T09:33:11Z","closed_at":"2021-06-17T17:40:58Z","merged_at":null,"user_id":52752725,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":672208935,"title":"set --distinct_host_configuration=false by default for linux builds","body":"default linux build of TF compiles both host and target.\r\nHost is not needed for most scenarios, and skipping is speeds up the build by 40% on a DGX","created_at":"2021-06-17T05:03:14Z","closed_at":"2021-06-21T14:18:24Z","merged_at":"2021-06-21T14:18:24Z","user_id":10091048,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":672127858,"title":"Fixed tfl to tosa lowering for convolutions with mixed quantization","body":"Mixed quantization operation should dequantize all inputs, perform the operation in floating point, then Quantize back to the output type. This change adds this behavior to the convolution operation lowerings (2D, transpose, and depthwise).\r\n\r\nIt includes some refactoring including removing no longer needed utilities and lowering tflite constants to tosa consts as a separate pattern rewrite. This is performed to guarantee quantization information remains for all other tflite to tosa lowerings without depending on op lowerings stripping quantization information off of i32 tensors (not supported by tosa).","created_at":"2021-06-17T02:54:04Z","closed_at":"2021-07-07T18:04:00Z","merged_at":null,"user_id":5508949,"sentiment":{"polarity":0.05,"subjectivity":0.225}}
{"_id":672067456,"title":"[INTEL MKL] Fix failing auto_mixed_precision test","body":"The test, TEST_F(AutoMixedPrecisionTest, FusedBatchNorm), compares FP16 (emulated in Eigen when run on CPU) with float32 results. It is well known that float32 addition is not associative, so difference in results between different implementations is possible. Even using different number of threads leads to different values of variance computation (a part of FusedBatchNorm computation) as the reduction happens in different sequence. \r\nMoreover, if we change the input shape to {1, 28, 28, 4} or {8, 28, 28, 16} and many others, even the Stock TF fails (i.e. with TF_ENABLE_ONEDNN_OPTS=0). Given these, we think it is appropriate to increase the rtol","created_at":"2021-06-17T01:13:23Z","closed_at":"2021-06-22T22:36:36Z","merged_at":"2021-06-22T22:36:36Z","user_id":42224728,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":672032026,"title":"Add Decomposition of Resource Scatter Add in TF Compiler","body":"","created_at":"2021-06-17T00:22:52Z","closed_at":"2021-06-18T03:25:00Z","merged_at":"2021-06-18T03:25:00Z","user_id":68087699,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":672024445,"title":"[TF-TRT] Python TRT version utils function refactoring","body":"@bixia1\r\nAdd IsLinkedTensorRTVersionGreaterEqual to refactor the TRT version utils.\r\nPR aims to clean up some functionalities in the python codebase of TF-TRT.\r\n","created_at":"2021-06-17T00:05:39Z","closed_at":"2021-07-19T23:24:54Z","merged_at":null,"user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":672020414,"title":"[Go] replace deprecated protocol buffers module","body":"This PR replaces deprecated Go module [github.com/golang/protobuf](https://pkg.go.dev/github.com/golang/protobuf) with its successor: [google.golang.org/protobuf](https://pkg.go.dev/google.golang.org/protobuf).","created_at":"2021-06-17T00:00:40Z","closed_at":"2021-07-28T00:43:33Z","merged_at":"2021-07-28T00:43:33Z","user_id":17497234,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":672020278,"title":"[MLIR][TOSA] Adding tf.BatchMatMulV2 legalization.","body":"Legaize tf.BatchMatMulV2 with tosa.MatMul.\r\nIf input rank == 3, trivially lower to tosa.MatMul.\r\nIf input rank > 3, reshape input tensors to rank 3 tensor, feed to tosa.MatMul, and then reshape from rank 3 to output tensor shape.","created_at":"2021-06-17T00:00:26Z","closed_at":"2021-06-25T01:23:57Z","merged_at":"2021-06-25T01:23:57Z","user_id":67395479,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":671965431,"title":"Remove `noincompatible_prohibit_aapt1` from bazelrc","body":"`--noincompatible_prohibit_aapt1` is a noop and is being removed from bazel in a future version.\r\n\r\nSee\r\n\r\nhttps://buildkite.com/bazel/bazel-at-head-plus-downstream/builds/2070#20d4703d-abdf-44cc-a6b6-2f2c9a38bc48\r\n\r\nhttps://github.com/bazelbuild/bazel/commit/aefd107e163087d7dbc822b3342455d91669a58e","created_at":"2021-06-16T22:30:28Z","closed_at":"2021-06-18T04:13:47Z","merged_at":"2021-06-18T04:13:47Z","user_id":8110723,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":671938947,"title":"Cudnn Frontend API respects the TF32 switch","body":"For the TF using legacy Cudnn APIs, we use a global switch `tensor_float_32_execution_enabled` to determine whether the TF32 math should be used or not. However, it has no control of the new Cudnn frontend APIs (`TF_CUDNN_USE_FRONTEND=1`).\r\n\r\nThis PR fixes this issue by allowing the frontend API to respect the TF32 switch. Besides, we replaced the existing and cumbersome execution plan filters with a generic filter that can filter out (1) winograd engines, (2) non-deterministic engines, (3) tensor core engines when specified.\r\n\r\nThis PR currently relies on the pending PR: https://github.com/tensorflow/tensorflow/pull/50181. \r\n\r\ncc. @nluehr ","created_at":"2021-06-16T21:53:00Z","closed_at":"2021-06-24T20:51:55Z","merged_at":"2021-06-24T20:51:55Z","user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":670961861,"title":"[ROCm] Adding rosolver integration in XLA cusolver_context + cusolver_rewriter for ROCm platform","body":"see individual commit message for details\r\n\r\n/cc @chsigg @cheshire @hawkinsp ","created_at":"2021-06-16T02:56:27Z","closed_at":"2021-06-18T19:05:39Z","merged_at":"2021-06-18T19:05:38Z","user_id":36858332,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":670903435,"title":"[INTEL MKL] Fix to Fused Batch Normalization Primitive Caching","body":"This PR is a bug fix to oneDNN enabled fused_batch_normalization primitive caching. Earlier code did not use data_format as a part of hash-key for primitive retrieval from cache. As a result when a graph has both NHWC and NCHW format earlier code was using same primitive which is not correct.","created_at":"2021-06-16T01:17:14Z","closed_at":"2021-06-22T22:31:24Z","merged_at":"2021-06-22T22:31:24Z","user_id":27521767,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":670862749,"title":"[Intel MKL] Fix for eager_c_api_test with oneDNN Enabled","body":"This fix resolves the failure with //tensorflow/c/eager:c_api_test running with oneDNN enabled with stock TF under a config=CUDA build executed on a GPU by preventing mkl_eager_op_rewrite for non cpu devices.\r\n","created_at":"2021-06-16T00:18:09Z","closed_at":"2021-06-17T14:49:44Z","merged_at":"2021-06-17T14:49:44Z","user_id":38869685,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":670775656,"title":"Update release notes for 2.1-2.4 patch releases","body":"","created_at":"2021-06-15T21:49:48Z","closed_at":"2021-06-15T23:29:53Z","merged_at":"2021-06-15T23:29:53Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":670769691,"title":"When CUDA libs cannot be loaded, TF should exit","body":"When a job cannot acquire GPU due to some CUDA libs missing, TF should fail early instead of falling back to CPU.  \r\nIf TF ignores the error and continue, it could potentially cause unexpected behavior in MWMS - E.g one worker has GPU while one doesn't. Currently when MWMS is running with mixed setup like this, it just hung.\r\n\r\nBased on the discussion where the original change of falling back to CPU when CUDA lib cannot be loaded(https://github.com/tensorflow/tensorflow/commit/fcfb99bc3aa3110feae5233dbe4634bffa70dc59) was originated from: https://groups.google.com/a/tensorflow.org/g/developers/c/MUq0ee3g-xk/m/4H84DeiAAQAJ , it mentioned two options facing CUDA lib not being installed properly\r\n 1. fallback to CPU\r\n 2. exit with error message.\r\n\r\noption 2 makes more sense to me as I stated above.","created_at":"2021-06-15T21:40:15Z","closed_at":"2021-06-28T16:41:01Z","merged_at":"2021-06-28T16:41:01Z","user_id":1428327,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":670767511,"title":"[tf.data] add AutotuneOptions for performance tuning of dataset operations","body":"This PR adds the `tf.data.AutotuneOptions` class, which is a split of options from `tf.data.experimental.OptimizationOptions`.\r\n\r\n- [x] add new proto message for `AutotuneOptions` and extend the `Options` message.\r\n- [x] add `tf.data.AutotuneOptions` class.\r\n- [x] add `autotune` attribute to `Options`.\r\n- [x] regenerate golden APIs.\r\n- [x] handle backward-comaptibility with `options.experimental_optimization` attributes.\r\n- [x] add/modify `options_test` w.r.t the new `autotune` attribute.\r\n- [x] switch to `autotune_options` in:\r\n    - [x] `tensorflow/core/kernels/data/finalize_dataset_op.cc`\r\n    - [x] `tensorflow/core/data/dataset_utils.cc`\r\n    - [x] `tensorflow/core/data/root_dataset.cc `\r\n- [x] update RELEASE.md.\r\n\r\nTEST LOG\r\n```\r\nIINFO: Elapsed time: 42.805s, Critical Path: 41.39s\r\nINFO: 354 processes: 130 internal, 224 local.\r\nINFO: Build completed successfully, 354 total actions\r\n//tensorflow/python/data/kernel_tests:options_test                       PASSED in 3.6s\r\n\r\nINFO: Build completed successfully, 354 total actions\r\n\r\n---------------\r\n\r\nINFO: Found 13 test targets...\r\nINFO: Elapsed time: 23.775s, Critical Path: 22.98s\r\nINFO: 44 processes: 31 internal, 13 local.\r\nINFO: Build completed successfully, 44 total actions\r\n//tensorflow/python/data/experimental/kernel_tests/optimization:map_parallelization_test (cached) PASSED in 3.8s\r\n//tensorflow/python/data/experimental/kernel_tests/optimization:autotune_buffer_sizes_test PASSED in 5.0s\r\n//tensorflow/python/data/experimental/kernel_tests/optimization:filter_fusion_test PASSED in 13.6s\r\n//tensorflow/python/data/experimental/kernel_tests/optimization:grappler_test PASSED in 5.6s\r\n//tensorflow/python/data/experimental/kernel_tests/optimization:grappler_test_gpu PASSED in 5.7s\r\n//tensorflow/python/data/experimental/kernel_tests/optimization:hoist_random_uniform_test PASSED in 6.1s\r\n//tensorflow/python/data/experimental/kernel_tests/optimization:map_and_batch_fusion_test PASSED in 5.6s\r\n//tensorflow/python/data/experimental/kernel_tests/optimization:map_and_filter_fusion_test PASSED in 9.0s\r\n//tensorflow/python/data/experimental/kernel_tests/optimization:map_fusion_test PASSED in 9.8s\r\n//tensorflow/python/data/experimental/kernel_tests/optimization:noop_elimination_test PASSED in 6.6s\r\n//tensorflow/python/data/experimental/kernel_tests/optimization:reorder_data_discarding_ops_test PASSED in 5.5s\r\n//tensorflow/python/data/experimental/kernel_tests/optimization:shuffle_and_repeat_fusion_test PASSED in 5.5s\r\n//tensorflow/python/data/experimental/kernel_tests/optimization:optimization_test PASSED in 23.0s\r\n  Stats over 2 runs: max = 23.0s, min = 7.0s, avg = 15.0s, dev = 8.0s\r\n\r\n```\r\n\r\ncc: @jsimsa Let me know if I have missed something. Thanks!","created_at":"2021-06-15T21:36:07Z","closed_at":"2021-07-29T16:28:23Z","merged_at":null,"user_id":25393945,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":670710919,"title":"[TFLite] Update MultiplyByQuantizedMultiplier to use single-rounding instead of double-rounding","body":"Hello,\r\n\r\nThis PR changes the rounding of the int32 `MultiplyByQuantizedMultiplier` methods to a single-rounding instead of a double-rounding in a way similar to what was done in https://github.com/google/ruy/pull/227 and adapts the tests to the change.\r\n\r\nThe new int32 `MultiplyByQuantizedMultiplier` adds a restriction on the quantized multiplier, it must now be a positive integer in the same way as in the int64 version of `MultiplyByQuantizedMultiplier`. This restriction also matches the one in the quantization scaling defined in the TOSA specification. To achieve that the SUB and DIV operators were slightly adapted to avoid any negative quantized multiplier.\r\n\r\n\r\nThibaut\r\n","created_at":"2021-06-15T20:07:29Z","closed_at":"2021-12-09T04:29:36Z","merged_at":"2021-12-09T04:29:35Z","user_id":21028116,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":670709059,"title":"[ROCm] Making C++14 as the default when building TF with --config=rocm","body":"Currently when building TF with `--config=rocm`, we default to using C++11 (`-std=c++11` is explicitly added as a `cxx_flag` inthe crosstool wrapper).\r\n\r\nLinux CPU builds (i.e. non-ROCm builds) already use C++14 as the default, and hipcc/hipclang will soon update the default to be C++14 as well.\r\n\r\nThis PR/commit updates the crosstool wrapper to add `-std=c++14` as the `cxx_flag` (instead of the current `-std=c++11`)\r\n\r\n------------------------\r\n\r\n/cc @cheshire @chsigg ","created_at":"2021-06-15T20:04:34Z","closed_at":"2021-06-23T15:37:49Z","merged_at":"2021-06-23T15:37:49Z","user_id":36858332,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":670669702,"title":"Update learning_rate_schedule.py","body":"Make sure math.pi has the same dtype as completed_fraction\r\n\r\nThe dtype of initial_learning_rate could be different from math.pi and this can lead to problems like:\r\n```python\r\nimport tensorflow as tf\r\nimport numpy as np\r\nschedule = tf.keras.optimizers.schedules.CosineDecay(\r\n  initial_learning_rate=np.float64(0.001),\r\n  decay_steps=100\r\n)\r\nschedule(1)\r\n```\r\n```\r\n/usr/local/lib/python3.7/dist-packages/tensorflow/python/keras/optimizer_v2/learning_rate_schedule.py in __call__(self, step)\r\n    630       completed_fraction = global_step_recomp / decay_steps\r\n    631       cosine_decayed = 0.5 * (1.0 + math_ops.cos(\r\n--> 632           constant_op.constant(math.pi) * completed_fraction))\r\n    633 \r\n    634       decayed = (1 - self.alpha) * cosine_decayed + self.alpha\r\n\r\n/usr/local/lib/python3.7/dist-packages/tensorflow/python/ops/math_ops.py in binary_op_wrapper(x, y)\r\n   1232         #   r_binary_op_wrapper use different force_same_dtype values.\r\n   1233         x, y = maybe_promote_tensors(x, y, force_same_dtype=False)\r\n-> 1234         return func(x, y, name=name)\r\n   1235       except (TypeError, ValueError) as e:\r\n   1236         # Even if dispatching the op failed, the RHS may be a tensor aware\r\n\r\n/usr/local/lib/python3.7/dist-packages/tensorflow/python/ops/math_ops.py in _mul_dispatch(x, y, name)\r\n   1573     return sparse_tensor.SparseTensor(y.indices, new_vals, y.dense_shape)\r\n   1574   else:\r\n-> 1575     return multiply(x, y, name=name)\r\n   1576 \r\n   1577 \r\n\r\n/usr/local/lib/python3.7/dist-packages/tensorflow/python/util/dispatch.py in wrapper(*args, **kwargs)\r\n    204     \"\"\"Call target, and fall back on dispatchers if there is a TypeError.\"\"\"\r\n    205     try:\r\n--> 206       return target(*args, **kwargs)\r\n    207     except (TypeError, ValueError):\r\n    208       # Note: convert_to_eager_tensor currently raises a ValueError, not a\r\n\r\n/usr/local/lib/python3.7/dist-packages/tensorflow/python/ops/math_ops.py in multiply(x, y, name)\r\n    528   \"\"\"\r\n    529 \r\n--> 530   return gen_math_ops.mul(x, y, name)\r\n    531 \r\n    532 \r\n\r\n/usr/local/lib/python3.7/dist-packages/tensorflow/python/ops/gen_math_ops.py in mul(x, y, name)\r\n   6238       return _result\r\n   6239     except _core._NotOkStatusException as e:\r\n-> 6240       _ops.raise_from_not_ok_status(e, name)\r\n   6241     except _core._FallbackException:\r\n   6242       pass\r\n\r\n/usr/local/lib/python3.7/dist-packages/tensorflow/python/framework/ops.py in raise_from_not_ok_status(e, name)\r\n   6895   message = e.message + (\" name: \" + name if name is not None else \"\")\r\n   6896   # pylint: disable=protected-access\r\n-> 6897   six.raise_from(core._status_to_exception(e.code, message), None)\r\n   6898   # pylint: enable=protected-access\r\n   6899 \r\n\r\n/usr/local/lib/python3.7/dist-packages/six.py in raise_from(value, from_value)\r\n\r\nInvalidArgumentError: cannot compute Mul as input #1(zero-based) was expected to be a float tensor but is a double tensor [Op:Mul]\r\n```","created_at":"2021-06-15T19:01:57Z","closed_at":"2021-07-08T21:14:45Z","merged_at":null,"user_id":5738695,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":670529460,"title":"[ROCm] Fix for a bug in the ROCMFftPlan::UpdateScratchAllocator routine.","body":"This was the cause of some unit-test failures in JAX...see the following github issue for more details\r\n\r\nhttps://github.com/ROCmSoftwarePlatform/frameworks-internal/issues/240\r\n\r\nmany thanks to @ekuznetsov139 for coming up with this fix.\r\n\r\n--------------------------------\r\n\r\n/cc @cheshire @chsigg @hawkinsp ","created_at":"2021-06-15T15:47:28Z","closed_at":"2021-06-16T19:20:30Z","merged_at":"2021-06-16T19:20:30Z","user_id":36858332,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":670522350,"title":"Fix incorrect values in recorded_allocation on BE machines","body":"This PR addresses incorrect `count` and `requested_bytes` values in `recorded_allocation` when testing model allocations.\r\n\r\nTest case `//tensorflow/lite/micro:recording_micro_allocator_test` fails on Big-Endian systems because `RecordingSimpleMemoryAllocator::AllocateFromTail()` would be called one more time and the `alloc_count_` and `requested_tail_bytes_` fields would be added repeatedly.\r\n\r\n`FlatBufferVectorToTfLiteTypeArray()` function in `micro_allocated.cc` has been modified to fix this by invoking the base class version of `AllocateFromTail()` function (`allocator->SimpleMemoryAllocator::AllocateFromTail()`) on BE machines, rather than the derived class version (`allocator->AllocateFromTail()`) which might update the value of `alloc_count_` and `requested_tail_bytes_ fields` besides allocating the space. \r\n\r\nThis PR will solve the issue #45455.\t","created_at":"2021-06-15T15:38:46Z","closed_at":"2021-07-19T17:43:13Z","merged_at":null,"user_id":78156688,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":670408589,"title":"Remove a deadlock in cudaMallocAsync","body":"The call GetStats() a few lines bellow also ask for the lock. But we already own it. So it deadlock.\r\n@akuegel\r\nThis was mentioned here: https://github.com/tensorflow/tensorflow/pull/49173/#issuecomment-861011964","created_at":"2021-06-15T13:29:34Z","closed_at":"2021-06-17T14:12:12Z","merged_at":"2021-06-17T14:12:12Z","user_id":180987,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":670308823,"title":"[tf.data] graduate OptimizationOptions from experimental to tf.data","body":"This PR graduates `tf.data.experimental.OptimizationOptions` to `tf.data.OptimizationOptions`.\r\n\r\n- [x] deprecate the old endpoint\r\n- [x] update docstring of the class\r\n- [x] Modify the `__getattr__` and `__setattr__` implementation of `dataset_ops.Options` for backward-compatibility\r\n- [x] regenerate golden APIs.\r\n- [x] add/modify relevant test cases for the new endpoint.\r\n- [x] update RELEASE.md\r\n\r\nTEST LOG\r\n```\r\nINFO: Elapsed time: 32.496s, Critical Path: 28.35s\r\nINFO: 354 processes: 133 internal, 221 local.\r\nINFO: Build completed successfully, 354 total actions\r\n//tensorflow/python/data/kernel_tests:options_test                       PASSED in 4.3s\r\n\r\nINFO: Build completed successfully, 354 total actions\r\n```\r\n\r\ncc: @jsimsa ","created_at":"2021-06-15T11:13:13Z","closed_at":"2021-08-10T10:30:13Z","merged_at":null,"user_id":25393945,"sentiment":{"polarity":0.1,"subjectivity":0.4}}
{"_id":670023375,"title":"Improved lookup function","body":"In python 3.x checking f_name in self._op_defs is faster than performing on a view object (i.e. self._op_defs.keys()), while in 2.x it's faster than creating a list which avoids linear time lookups.","created_at":"2021-06-15T03:30:47Z","closed_at":"2021-06-16T17:11:57Z","merged_at":"2021-06-16T17:11:57Z","user_id":36708431,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":670018783,"title":"[MLIR][DISC] Bufferize GatherOp and DynamicGatherOp","body":"support hlo-to-lhlo conversion for GatherOp and DynamicGatherOp","created_at":"2021-06-15T03:16:09Z","closed_at":"2021-06-16T20:50:39Z","merged_at":"2021-06-16T20:50:39Z","user_id":15364516,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":669990863,"title":"[Intel MKL] Fixing a failure in run_eager_op_as_function_test","body":"This PR fixes a failure in run_eager_op_as_function_test when MKL eager code is enabled. Failure started to happen after this [commit](https://github.com/tensorflow/tensorflow/commit/72e63b74a241c855c540997fd8f7cd2408c37016)","created_at":"2021-06-15T01:52:51Z","closed_at":"2021-06-23T17:37:52Z","merged_at":null,"user_id":24963061,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":669980933,"title":"Caching of Pointers to Redzone Checker Kernel","body":"Introduces a cache for pointers to the Redzone Checker kernel which prevents the repeated loading and unloading of the kernel.","created_at":"2021-06-15T01:22:37Z","closed_at":"2021-07-13T14:33:59Z","merged_at":"2021-07-13T14:33:59Z","user_id":80296164,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":669948708,"title":"[INTEL MKL] Fix Pooling3D test case for --config=cuda build setting","body":"This PR is for the Google requirement that all tests should pass with --config=cuda and when MKL is enabled.\r\nMKL pooling ops do not support NCDHW data format. The change disables the test execution when\r\n\r\n\r\n1. gpu is available, and\r\n\r\n\r\n2. MKL (oneDNN) is enabled.\r\n\r\n\r\nThe updated test has no impact on actual gpu execution (cuda_only=True) and MKL is disabled.","created_at":"2021-06-14T23:55:02Z","closed_at":"2021-06-15T17:39:50Z","merged_at":null,"user_id":29215195,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":669945895,"title":"Fix UT failure config_test and context_test","body":"Disable two unit tests in config_test.py and context_test.py\r\nbecause  get_memory_usage() and get_memory_usage() do not throw exception for CPU device in case of MKL is enabled. \r\n\r\nMore details: \r\n\r\n1. For default cpu allocator (framework/cpu_allocator_impl.cc), the global Boolean variable  cpu_allocator_collect_stats is set to true by direct_session by invoking EnableCPUAllocatorStats(). \r\n\r\n2. However, for MKL cpu allocator (common_runtime/mkl_cpu_allocator.h/.cc), its static Boolean variable mkl_small_allocator_collect_stats cannot be set to true, as the MKL cpu allocator cannot re-define the method EnableCPUAllocatorStats(). \r\n\r\nTODO: work with Google team to address the limitation in framework/allocator.h, or find a workaround. \r\n\r\n","created_at":"2021-06-14T23:45:03Z","closed_at":"2021-06-23T16:27:47Z","merged_at":"2021-06-23T16:27:47Z","user_id":29215195,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":669899050,"title":"[INTEL MKL] Fix a unit test failure with mkl_fused_batch_norm_test","body":"Fix a unit test failure with mkl_fused_batch_norm_test.cc, as one of the tests can only be executed with MKL blocked format.","created_at":"2021-06-14T21:50:42Z","closed_at":"2021-06-22T21:39:11Z","merged_at":"2021-06-22T21:39:11Z","user_id":29215195,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":669859952,"title":"add out-of-class definition for FinalizeDatasetOp::kHasCapturedRef","body":"","created_at":"2021-06-14T20:43:29Z","closed_at":"2021-06-21T16:06:38Z","merged_at":"2021-06-21T16:06:38Z","user_id":10091048,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":669825724,"title":"Make DataFormatVecPermute's validation and implementation consistent with each other","body":"There's currently a mismatch between what the validation of DataFormatVecPermute and its implementation is doing. While the validation allows src_format and dst_format to be of length 4 or 5, it only allows the input to be of shape [4] or [2, 4]. This leads to a gap in the validation where the following is allowed, but results in undefined behavior or uninitialized garbage data:\r\n\r\n`tf.raw_ops.DataFormatVecPermute(x=[1,2,3,4], src_format=\"NCDHW\", dst_format=\"NDHWC\")`","created_at":"2021-06-14T19:41:22Z","closed_at":"2021-08-24T14:53:16Z","merged_at":"2021-08-24T14:53:15Z","user_id":5880386,"sentiment":{"polarity":0.0625,"subjectivity":0.3125}}
{"_id":669818247,"title":"[TFLite]: Add CXXSTANDARD to Makefile","body":"This PR adds a new variable in the Tensorflow Lite Makefile: `CXXSTANDARD`.\nThis variable defaults to the current `c++11` standard used by Tensorflow\nLite, but also allows users to use a different standard if they desire.\n","created_at":"2021-06-14T19:27:38Z","closed_at":"2021-06-16T23:03:58Z","merged_at":"2021-06-16T23:03:58Z","user_id":417981,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":669551371,"title":"Add GPU kernel for SparseSegment[Sum,Mean,SqrtN]Grad","body":"Adds a GPU kernel and an additional test for these grad ops.\r\nIt uses the existing `SegmentReduceVectorKernel` CUDA kernel with a slight modification.\r\n\r\ncc @nluehr ","created_at":"2021-06-14T13:07:38Z","closed_at":"2021-06-21T17:17:12Z","merged_at":"2021-06-21T17:17:12Z","user_id":3979096,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":669051837,"title":"[MLIR][DISC] place shape calculation on host","body":"We are porting our MLIR-based dynamic shape compiler to tf community (From OP def, Patttern, to Optimization pass, etc).\r\nThis PR is about placing shape calculating op on CPU. We use \"mhlo_device_type\" attr to tell if Op is placed on CPU. To achieve this, we add two OP h2d and d2h in mhlo dialect temporarily(These two Ops should be put into a separate dedicated dialect like mhlo-disc dialect).\r\nThere will be 3 PRs to process memory allocation for dynamic shape. 1) Mark shape calculation Ops by Op attribute and insert D2H and H2D Op in mhlo dialect; 2) Add device type info to memref by address space in lmhlo dialect; 3) Convert for device alloc/dealloc with memref's address space.\r\n       \r\nThis PR mainly place shape calculation Ops to Host(cpu), place rest Ops to Device(gpu or cpu) and insert H2D and D2H Op(Host and Device could be cpu).\r\n\r\nRelated discussion is [here](https://llvm.discourse.group/t/placement-representation-in-tensor-world-buffer-world/3502/6).","created_at":"2021-06-13T13:16:03Z","closed_at":"2021-07-13T18:00:42Z","merged_at":"2021-07-13T18:00:42Z","user_id":16014148,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":668952742,"title":"to_categorical() doc fixes.","body":"1. For consistency with the definition of `num_classes`, the input `y` contains values up to `num_classes`-1 (included) only.\r\n2. `y` is more general than a vector: it can by any array-like (`y = numpy.arange(12).reshape((3, 4))` works as expected).\r\n3. Clearer definition of `dtype` (it's the type of the output of this function, not necessarily of some \"input\").","created_at":"2021-06-12T21:20:17Z","closed_at":"2021-07-09T00:46:47Z","merged_at":null,"user_id":5793,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":668893658,"title":"[TFLite]: Add missing cc file to Makefile","body":"This PR adds a missing file whose code is used in libedgetpu/libcoral\nto the Tensorflow Lite `Makefile`.\n","created_at":"2021-06-12T15:28:33Z","closed_at":"2021-06-15T23:54:02Z","merged_at":"2021-06-15T23:54:02Z","user_id":417981,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":668702250,"title":"[MLIR][DISC] Bufferize TransposeOp and ConcatenateOp","body":"support hlo-to-lhlo conversion for TransposeOp and ConcatenateOp","created_at":"2021-06-12T02:04:14Z","closed_at":"2021-06-14T19:47:09Z","merged_at":"2021-06-14T19:47:09Z","user_id":15364516,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":668685166,"title":"Updated call method in base layer","body":"Added a description about enabling eager mode for debugging purpose.\r\n\r\nFixes https://github.com/tensorflow/tensorflow/issues/36757","created_at":"2021-06-12T01:14:50Z","closed_at":"2021-06-28T18:05:30Z","merged_at":null,"user_id":46058173,"sentiment":{"polarity":-0.8,"subjectivity":1.0}}
{"_id":668636298,"title":"[TF-TRT] Throwing error if compiling with NVIDIA TensorRT < 7","body":"This PR blocks TF compilation with TRT_VERSION < 7, effectively removing support for TRT 5 and 6.","created_at":"2021-06-11T23:17:33Z","closed_at":"2021-06-23T22:50:38Z","merged_at":"2021-06-23T22:50:38Z","user_id":10923599,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":667809310,"title":"Fix the alpha/beta datatype when using Cudnn Frontend","body":"This fix an issue of setting alpha/beta when using the Cudnn Frontend.\r\n\r\n\r\n@nluehr @timshen91 ","created_at":"2021-06-11T07:56:19Z","closed_at":"2021-06-15T20:31:33Z","merged_at":null,"user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":667709496,"title":"Added reduce_variance and reduce_std_example docstring for axis=0","body":"Adding example for `axis=0` after merge of #49609 .\r\n\r\ncc @mihaimaruseac , @edloper ","created_at":"2021-06-11T05:55:27Z","closed_at":"2021-06-16T22:37:49Z","merged_at":"2021-06-16T22:37:49Z","user_id":20843596,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":667592476,"title":"[MLIR][DISC] Bufferize RealDynamicSliceOp and ReduceOp","body":"support hlo-to-lhlo conversion for RealDynamicSliceOp and ReduceOp","created_at":"2021-06-11T02:06:19Z","closed_at":"2021-06-11T23:38:15Z","merged_at":"2021-06-11T23:38:15Z","user_id":15364516,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":667524109,"title":"Disable io_test  ","body":"","created_at":"2021-06-10T23:35:42Z","closed_at":"2021-06-11T16:09:43Z","merged_at":"2021-06-11T16:09:43Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":667519864,"title":"[INTEL MKL] Fix compiler test failures when oneDNN is enabled.","body":"Fix for a number of compiler xla related failures, where the runtime doesn't find registered kernels for _Mkl* OpKernels for 'XLA_CPU'. The bug is caused by mkl layout pass rewriting an operator which was assigned to XLA_CPU.  The fix is to block the rewrite if device is an XLA_CPU.","created_at":"2021-06-10T23:27:04Z","closed_at":"2021-06-14T14:27:44Z","merged_at":"2021-06-14T14:27:43Z","user_id":25374808,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":667440183,"title":"Added missing description","body":"Added missing description for get, deserialize, serialize \r\nThis is my first contribution to open-source so pls review","created_at":"2021-06-10T21:35:50Z","closed_at":"2021-06-11T00:40:53Z","merged_at":null,"user_id":40496687,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":667275918,"title":"[MLIR][TOSA] Rewrite tf.MatMul to TOSA legalization with 3D tosa.matmul.","body":"Replace soon-to-be-removed 2D TOSA.MatMul target with 3D one.","created_at":"2021-06-10T19:28:43Z","closed_at":"2021-06-16T19:29:36Z","merged_at":"2021-06-16T19:29:35Z","user_id":67395479,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":667174947,"title":"Don't force reinstall TB","body":"Force reinstalling causes all TB's dependencies to also be reinstalled and that results in numpy 1.20 being used. TF is currently incompatible with numpy 1.20","created_at":"2021-06-10T18:23:15Z","closed_at":"2021-06-10T18:23:25Z","merged_at":"2021-06-10T18:23:25Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":667058840,"title":"Update raw_ops_test.py","body":"","created_at":"2021-06-10T16:17:26Z","closed_at":"2021-06-10T18:18:38Z","merged_at":"2021-06-10T18:18:38Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":666857355,"title":"Refactor SparseSegmentGrad kernel into a functor (NFC)","body":"This is in preparation for adding a GPU implementation. No functional change.\r\n\r\ncc @nluehr ","created_at":"2021-06-10T12:47:42Z","closed_at":"2021-06-11T16:38:21Z","merged_at":"2021-06-11T16:38:21Z","user_id":3979096,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":666818928,"title":"Update activations.py","body":"Add Activation named `Softclip`","created_at":"2021-06-10T11:58:28Z","closed_at":"2021-07-08T17:28:03Z","merged_at":null,"user_id":56601466,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":666682109,"title":"[MLIR][DISC] Add RAL (Runtime abstraction layer) Dialect","body":"DISC is a e2e flow, including both compiler side and runtime side. For\r\nruntime side, we have different targeting environments (e.g. tensorflow,\r\npytorch, or sometimes even a standalone binary). In order to simplify\r\nthe design of the compiler side, we design a Runtime Abstraction Layer\r\n(RAL) to sperate the compiler side and runtime side. Thus the compiler\r\nside only need to target RAL itself and it is the responsibility of RAL\r\nto handle the differences between different targeting environments.\r\n\r\nOne of the most important functions of RAL is to manage stateful\r\nresources. To this end, it provides a context object, and hides all\r\nstateful operations behind this context, thus the compiler side itself\r\ndoesn't need to care about the resource initialization. For example, a\r\nkernel must be loaded before it can be launched on GPU. However, the\r\nloading operation should only be taken once during the whole lifetime of\r\nthe context in order to achieve the best performance. Based on the\r\ninitialization-free interfaces provided by RAL, compiler side can focus\r\non its core optimization logic and lets the RAL to manage the resource\r\nstatus.\r\n\r\nThe context mentioned above is passed as a parameter to the entry\r\nfunction and all RAL APIs should always use the context as their first\r\nargument. This CR also provides a pass to help to ensure this property.\r\nThe pass rewrites the entry function to make sure their first argument\r\nis the context. For entry function, the pass also rewrites its inputs\r\nand outputs. To be concrete, all the original inputs and outputs of the\r\nentry function are received from and sent to RAL through a sequence of\r\nRAL API calls correspondingly. The motivation behind this is to hide the\r\nimplementation details of I/Os. This design may also potentially enable\r\npartial execution of the compiled module when some of the inputs are\r\nready.","created_at":"2021-06-10T09:06:23Z","closed_at":"2021-06-14T22:02:05Z","merged_at":null,"user_id":15364516,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":666374688,"title":"Fix the nonpip builds for MacOS.","body":"PiperOrigin-RevId: 346205138\nChange-Id: I146b5486171e1d91dc3c239bd10fb904972375bb","created_at":"2021-06-09T23:24:51Z","closed_at":"2021-06-10T18:18:18Z","merged_at":"2021-06-10T18:18:18Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":666333214,"title":"Update common_win.bat","body":"Force reinstalling causes numpy 1.20 to be installed on the host which then breaks a ton of tests that were compiled with numpy 1.19.","created_at":"2021-06-09T21:41:29Z","closed_at":"2021-06-09T21:41:52Z","merged_at":"2021-06-09T21:41:52Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":666232694,"title":"Fix cherrypick issue","body":"","created_at":"2021-06-09T19:09:08Z","closed_at":"2021-06-09T21:20:36Z","merged_at":"2021-06-09T21:20:36Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":666157597,"title":"Fix backend of XLA for Fused ConvBiasRelu","body":"This PR is mainly to fix the issue of XLA sharing the same backend with native TF when calling fused ConvBiasRelu (both will call into `stream->FusedConvolveWithAlgorithm()`), which will cause segmentation fault problem when cudnn frontend APIs are used.\r\n\r\nTherefore, this PR separate the `FusedConvolveWithAlgorithm` to (1) `FusedConvolveWithAlgorithm()` for legacy cudnn APIs and (2) `FusedConvolveWithExecutionPlan()` for cudnn frontend APIs. This behavior follows the `ConvolveWithAlgorithm()` and `ConvolveWithExecutionPlan()`.\r\n\r\nBesides, the code has been greatly simplified by following the design of `ConvolveWithAlgorithm()` and removing many overloaded functions.\r\n\r\ncc. @nluehr ","created_at":"2021-06-09T18:10:57Z","closed_at":"2021-06-17T02:33:59Z","merged_at":"2021-06-17T02:33:59Z","user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":666114884,"title":"Added missing files to BUILD.","body":"Fixes #50145","created_at":"2021-06-09T17:35:47Z","closed_at":"2021-06-17T15:55:05Z","merged_at":"2021-06-17T15:55:05Z","user_id":2437102,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":665998611,"title":"Mathjax small correction in `tf.math.igammac`","body":"","created_at":"2021-06-09T15:01:17Z","closed_at":"2021-06-16T16:36:47Z","merged_at":"2021-06-16T16:36:47Z","user_id":38364983,"sentiment":{"polarity":-0.25,"subjectivity":0.4}}
{"_id":665869077,"title":"Skip unnecessary ops in embedding_lookup_sparse","body":"- Skips the `unique` + `embedding_lookup` calls when possible and instead passes the embedding parameters directly to the sparse segment reduction op (or the corresponding ops for the weighted case), which is significantly more efficient.\r\n- This same optimization is already done in the Grappler [SimplifyEmbeddingLookupStage](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/grappler/optimizers/arithmetic_optimizer.cc#L4085-L4107) pass, but that does not apply in Eager mode or when weights are used.\r\n\r\ncc @nluehr ","created_at":"2021-06-09T12:40:33Z","closed_at":"2021-06-12T02:37:00Z","merged_at":null,"user_id":3979096,"sentiment":{"polarity":-0.4,"subjectivity":0.9}}
{"_id":665845785,"title":"Add float16 support for SparseSegmentSumGrad","body":"This is a follow-up to https://github.com/tensorflow/tensorflow/pull/49604 that adds fp16 support to the recently-added `SparseSegmentSumGrad` op.\r\n\r\ncc @nluehr ","created_at":"2021-06-09T12:09:16Z","closed_at":"2021-06-12T00:39:29Z","merged_at":"2021-06-12T00:39:29Z","user_id":3979096,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":665489584,"title":"[ROCm] Adding rocm_py3x_pip.sh scripts for building TF+ROCm whls","body":"/cc @angerson @perfinion ","created_at":"2021-06-09T02:17:58Z","closed_at":"2021-06-18T13:39:58Z","merged_at":"2021-06-18T13:39:58Z","user_id":36858332,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":665452373,"title":"Run pytest targets without compiling","body":"This will add a specific `--targets` flag to specific user test targets.\r\n\r\nE.g. \r\n`./tensorflow/tools/ci_build/builds/run_pip_tests.sh --targets /tensorflow/python/eager:def_function_test`\r\n\r\n`./tensorflow/tools/ci_build/builds/run_pip_tests.sh --targets /tensorflow/python/eager:all`\r\n\r\nSee https://discuss.tensorflow.org/t/run-python-tests-without-compiling-tf\r\n\r\n/cc @angerson @perfinion @mihaimaruseac What kind of extra checks we need to add to promote this in Doc as a temp workaround for python PRs? \r\n","created_at":"2021-06-09T00:21:46Z","closed_at":"2021-06-09T20:53:39Z","merged_at":null,"user_id":1710528,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":665415125,"title":"Update raw_ops_test.py","body":"","created_at":"2021-06-08T22:58:53Z","closed_at":"2021-06-08T23:03:14Z","merged_at":"2021-06-08T23:03:14Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":665410506,"title":"Revert \"Update sparse_cross_op.cc\"","body":"","created_at":"2021-06-08T22:50:37Z","closed_at":"2021-06-08T23:04:01Z","merged_at":"2021-06-08T23:04:01Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":665335774,"title":"Disabling failing raw_ops_test","body":"","created_at":"2021-06-08T21:25:10Z","closed_at":"2021-06-08T21:45:08Z","merged_at":"2021-06-08T21:45:08Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":665198403,"title":"[tf.data] graduate ThreadingOptions from experimental to tf.data","body":"**[UPDATED]** This PR graduates `tf.data.experimental.ThreadingOptions` to `tf.data.ThreadingOptions`.\r\n\r\n- [x] deprecate the old endpoint\r\n- [x] update docstring of the class\r\n- [x] Modify the serialization-deserialization implementation of `options.threading` and `options.experimental_threading` for backward-compatibility\r\n- [x] regenerate golden APIs\r\n- [x] add relevant test cases for the new ser-des implementation.\r\n- [x] update RELEASE.md\r\n\r\nTEST LOG\r\n```\r\nINFO: Elapsed time: 43.917s, Critical Path: 34.51s\r\nINFO: 351 processes: 130 internal, 221 processwrapper-sandbox.\r\nINFO: Build completed successfully, 351 total actions\r\n//tensorflow/python/data/kernel_tests:options_test                       PASSED in 3.3s\r\n\r\nINFO: Build completed successfully, 351 total actions\r\n```\r\n\r\ncc: @jsimsa","created_at":"2021-06-08T19:16:02Z","closed_at":"2021-06-14T18:45:44Z","merged_at":"2021-06-14T18:45:43Z","user_id":25393945,"sentiment":{"polarity":0.1,"subjectivity":0.4}}
{"_id":665096962,"title":"Update bot_config.yml","body":"","created_at":"2021-06-08T17:05:48Z","closed_at":"2021-06-08T17:10:53Z","merged_at":null,"user_id":48206667,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":665085560,"title":"Update sparse_fill_empty_rows_op.cc","body":"","created_at":"2021-06-08T16:48:07Z","closed_at":"2021-06-08T16:59:50Z","merged_at":null,"user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":665032898,"title":"[XLA] Bitcast lift","body":"This PR includes 2 changes:\r\n1) when a rank-reducing bitcast is present inside a kInput fusion, we lift it to outside the fusion. This lower the indexing computation generated by XLA. LLVM isn't always able to optimize it.\r\n2) Mark kExp as not expensive. This cause its computation to be duplicated in the gradient of EfficientNet. This remove IO as the forward fusion now have one less output and the gradient have less inputs. This also allows a bigger mini-batch size. This is a one liner + test.\r\n\r\n\r\n\r\nNumber 1) speed up some kernels in EfficientNet. But number 2) on A100 cause one kernel to slow down as the simpler fusion is not as much optimized. Further optimization is possible. But to keep the changes changes, I combine them as the combination of both optimization doesn't cause any regression. Doing them in 2 separate PR cause one intermediate steps that will be faster for one kernel. **On V100, we do not have this problem.**\r\n\r\nHere is one not-optimized HLO dump of a simplified EfficientNet script that show the problem this optimize. Before this PR, it generates a fusion called: fusion.7. After this PR, that kernel is renamed fusion.6_bitcast.\r\n\r\n[module_0000.before_optimizations.txt](https://github.com/tensorflow/tensorflow/files/6617698/module_0000.before_optimizations.txt)\r\n\r\ntimed previous commit: 643e7db56ec5d9b0d7deecaf6a089374d140a286\r\ntimed current commit: dcc241f057047129e234a5cb3155b0d21e4aee59\r\n\r\nV100: old time: 660us, new time: 557us\r\nA100: old time: 622us, new tiem: 556us\r\n\r\n\r\n@cheshire","created_at":"2021-06-08T15:39:01Z","closed_at":"2021-07-08T10:51:09Z","merged_at":"2021-07-08T10:51:09Z","user_id":180987,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":665020010,"title":"Fix swapping of tensor_content when loading a SavedModel on s390x","body":"Based on PR https://github.com/tensorflow/tensorflow/pull/45339, this PR addresses swapping of `tensor_content` data when importing a TF 2.x `SavedModel` into a TF 1.x-style `graph` on Big-Endian systems.\r\n\r\nTest case `//tensorflow/python/keras/integration_test:saved_model_test` fails on Big-Endian systems because it tries to load a TF 2.x `SavedModel` whose `tensor_content` data had been transformed to and stored as Little-Endian format.\r\n\r\n`load_graph()` function in `loader_impl.py` has been modified to fix this issue by swapping of `tensor_content` data from LE to BE after `meta_graph_def` proto is loaded on BE systems.\r\n\r\nSigned-off-by: Kun-Lu <kun.lu@ibm.com>","created_at":"2021-06-08T15:24:17Z","closed_at":"2021-09-23T18:37:06Z","merged_at":"2021-09-23T18:37:06Z","user_id":78156688,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":665010779,"title":"Update sparse_fill_empty_rows_op.cc","body":"","created_at":"2021-06-08T15:14:08Z","closed_at":"2021-06-08T15:14:38Z","merged_at":"2021-06-08T15:14:38Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":664906210,"title":"Remove meaningless log in KernelDefBuilder","body":"I see a wall of meaningless logs from KernelDefBuilder:\r\n```\r\n2021-06-08 15:48:21.962466: I tensorflow/core/framework/kernel_def_builder.cc:43] 0\r\n2021-06-08 15:48:21.962475: I tensorflow/core/framework/kernel_def_builder.cc:43] 1\r\n2021-06-08 15:48:21.962492: I tensorflow/core/framework/kernel_def_builder.cc:43] 0\r\n2021-06-08 15:48:21.962501: I tensorflow/core/framework/kernel_def_builder.cc:43] 1\r\n2021-06-08 15:48:21.962522: I tensorflow/core/framework/kernel_def_builder.cc:43] 0\r\n2021-06-08 15:48:21.962530: I tensorflow/core/framework/kernel_def_builder.cc:43] 1\r\n2021-06-08 15:48:21.962543: I tensorflow/core/framework/kernel_def_builder.cc:43] 0\r\n2021-06-08 15:48:21.962552: I tensorflow/core/framework/kernel_def_builder.cc:43] 1\r\n```\r\nand so on...\r\n\r\nNo point to print such logs.","created_at":"2021-06-08T13:13:39Z","closed_at":"2021-06-10T14:52:15Z","merged_at":"2021-06-10T14:52:15Z","user_id":37601244,"sentiment":{"polarity":-0.5,"subjectivity":1.0}}
{"_id":664791632,"title":"Build from source fails due to missing files (llvm-openmp issues)","body":"Compiling TF git fails due to missing files. \r\nAdded these into relevant BUILD rules.\r\n\r\n\r\nFixes #50145 ","created_at":"2021-06-08T11:55:35Z","closed_at":"2021-06-09T07:21:45Z","merged_at":null,"user_id":2437102,"sentiment":{"polarity":-0.27499999999999997,"subjectivity":0.2416666666666667}}
{"_id":664429261,"title":"[PluggableDevice] Add DEVICE_DEFAULT registration for int32 Const","body":"Add DEVICE_DEFAULT registration for int32 Const so that pluggable devices don't have to register it themselves.","created_at":"2021-06-08T07:56:15Z","closed_at":"2021-06-21T06:46:44Z","merged_at":"2021-06-21T06:46:43Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":664418143,"title":"[PluggableDevice] Add TF_OpKernelConstruction_GetAttrTensor and TF_OpKernelConstruction_GetAttrTensorList","body":"Add TF_OpKernelConstruction_GetAttrTensor and TF_OpKernelConstruction_GetAttrTensorList to the Pluggable Device C API.","created_at":"2021-06-08T07:48:59Z","closed_at":"2021-09-28T15:39:49Z","merged_at":"2021-09-28T15:39:49Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":664120914,"title":"[determinism] Factor core/kernels RequireDeterminism() into library","body":"This PR performs a few housekeeping tasks related to GPU-determinism, the most significant of which is factoring various instances of the `RequireDeterminism` function in `core/kernels` into (the previously-implemented) `core/kernels/util/determinism.cc/.h` (as `OpDeterminismRequired`), a follow-up to [this conversation](https://github.com/tensorflow/tensorflow/pull/47772#discussion_r594847461) with @sanjoy on PR [47772](https://github.com/tensorflow/tensorflow/pull/47772).\r\n\r\ncc @reedwm @nluehr","created_at":"2021-06-08T02:30:49Z","closed_at":"2021-06-10T00:39:13Z","merged_at":"2021-06-10T00:39:13Z","user_id":33532941,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":663948617,"title":"Create pylint-presubmit.yml","body":"This is a non-blocking check that runs `pylint` if a PR changes Python files. It's based on the [TensorFlow code style guide](https://www.tensorflow.org/community/contribute/code_style) instructions for running Pylint.\r\n\r\nThis should be a more useful result than the `ci_sanity` Pylint job, since it's consistent. I don't think we can really know if it aligns exactly with the internal pylint, since the configuration is different: while we look into that, this should be a useful check for users.","created_at":"2021-06-07T22:15:30Z","closed_at":"2021-06-09T21:09:25Z","merged_at":"2021-06-09T21:09:25Z","user_id":32465472,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":663891862,"title":"Update bot_config.yml","body":"Removed whitepsace since the compatibility table was rendering as a plain text.","created_at":"2021-06-07T20:27:11Z","closed_at":"2021-06-09T21:03:39Z","merged_at":"2021-06-09T21:03:39Z","user_id":42785357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":663847328,"title":"Update sparse_cross_op.cc","body":" Fix Build issue error: extraneous ')' before ';'","created_at":"2021-06-07T19:11:04Z","closed_at":"2021-06-07T20:57:25Z","merged_at":"2021-06-07T20:57:25Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":663846392,"title":"Update sparse_cross_op.cc","body":" Fix Build issue error: extraneous ')' before ';'","created_at":"2021-06-07T19:09:21Z","closed_at":"2021-06-07T20:57:19Z","merged_at":"2021-06-07T20:57:19Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":663221486,"title":"Fix systemlib rule to support gRPC","body":"Systemlib rules currently can't handle the systemlib build file appearing in the system link dictionary.\r\n\r\nThis occurs in the gRPC target here:\r\nhttps://github.com/tensorflow/tensorflow/blob/a4dfb8d1a71385bd6d122e4f27f86dcebb96712d/tensorflow/workspace2.bzl#L639\r\n\r\nGentoo (the primary client of systemlib) only packages TF 2.4.0,\r\npotentially explaining why the new systemlib logic hasn't been exercised\r\nfor gRPC.\r\n\r\nThis change fixes the issue with the systemlib logic.","created_at":"2021-06-07T06:24:07Z","closed_at":"2021-06-21T15:40:29Z","merged_at":"2021-06-21T15:40:28Z","user_id":37162146,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":663109328,"title":"Added protobuf systemlib stub needed by gRPC.","body":"An unusual (but possible) systemlib configuration is to use system\r\nlibprotobuf but bundled gRPC. This doesn't currently work: gRPC requires\r\nthe protobuf_deps rule that isn't defined by systemlib libprotobuf.\r\n\r\nThis change adds the rule, fixing that particular systemlib\r\nconfiguration.","created_at":"2021-06-07T01:48:27Z","closed_at":"2021-06-09T17:29:14Z","merged_at":"2021-06-09T17:29:14Z","user_id":37162146,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":662932418,"title":"Improved the if-else statement","body":"Make the if-else statement a single-line assignment.","created_at":"2021-06-06T11:55:48Z","closed_at":"2021-07-08T15:30:55Z","merged_at":null,"user_id":10137,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":662840654,"title":"[INTEL MKL] Comparison and cast op fusion","body":"In this PR, comparison op(bf16/fp32->bool) and cast op(bool->bf16/fp32) is fused into one(bf16/fp32->bf16/fp32). The reason to do this fusion is that comparison functors do not support vectorization, but new added scalar_cmp_with_cast_op functor supports vectorization. This can help greatly improve the performance of comparison op, especially for bf16.\r\n\r\nThis pr was submitted in https://github.com/tensorflow/tensorflow/pull/41047 but got reverted in https://github.com/tensorflow/tensorflow/commit/3f49de584cb7a9de005457006132f5720cc14dd6.","created_at":"2021-06-06T07:58:00Z","closed_at":"2021-08-03T13:53:55Z","merged_at":"2021-08-03T13:53:55Z","user_id":52769182,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":662408538,"title":"Replace slow GPU API call in GetGpu3DLaunchConfig","body":"- `cudaGetDeviceProperties` is a heavy-weight call. This PR replaces it with individual calls to `cudaDeviceGetAttribute`, which are much faster.\r\n- This is important here because the enclosing function is called for each kernel launch (for those ops that use it).\r\n- See https://developer.nvidia.com/blog/cuda-pro-tip-the-fast-way-to-query-device-properties/ for reference.\r\n\r\ncc @nluehr ","created_at":"2021-06-05T11:54:38Z","closed_at":"2021-06-24T06:08:19Z","merged_at":"2021-06-24T06:08:19Z","user_id":3979096,"sentiment":{"polarity":-0.30000000000000004,"subjectivity":0.39999999999999997}}
{"_id":662318276,"title":"[MLIR][DISC] Add initial version of LhloLegalizeRootsToParallelLoops and InputInlineFusion","body":"This PR is currently WIP for a discussion in advance. More UTs will be added.\r\n\r\nThe basic codegen flow will be:\r\nstep 1, LhloLegalizeRootsToParallelLoops\r\nstep 2, InputInlineFusion\r\nstep 3, canonicalize & CSE to optimize the redundant index calculations, we will need a MemRefLoadCSE here since the general cse will not process memref.load (this is only an optimization and will sent PRs as second priority)\r\nstep 4, Inline the lmhlo.Fusion\r\nstep 5, ParallelToGPULaunch/ParallelToOpenMP\r\n\r\nCodegen schedules other than the basic loop schedule are seperated into incoming PRs. And lmhlo Ops support other than RealDynamicSlice, DynamicBroadcastInDim & BroadcastInDim in lhlo_elemental_util are also seperated into subsequent PRs.\r\nOther known TODOs includes:\r\n(1) There is potential redundant Linearize/Delinearize calculations in the initial version. memref.LinearizeIndex/Delinearize op will be brought in future PRs to optimize the index calculation. As discussed in https://llvm.discourse.group/t/add-an-expanded-load-store-op-in-memref-dialect/3503/17.\r\n\r\nfusion_utils depends on https://github.com/tensorflow/tensorflow/pull/50020 and will be removed after it's done.","created_at":"2021-06-05T06:55:39Z","closed_at":"2021-07-07T23:44:57Z","merged_at":null,"user_id":8992445,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":662305173,"title":"[MLIR][DISC] pattern conversion from tf2mhlo: add ConvertPrintOp","body":"We are porting our MLIR-based dynamic shape compiler to tf community (From OP def, Patttern, to Optimization pass, etc).\r\nThis is the 6th PR about tf2mhlo pattern conversion, which including ConvertPrintOp. We use printOp to debug func issue.\r\nThe rest pattern conversions we will add:\r\n\r\n- ConvertSqueezeOpxxx\r\n- ConvertStridedSliceOpxxx\r\n","created_at":"2021-06-05T05:35:22Z","closed_at":"2021-06-30T22:17:32Z","merged_at":"2021-06-30T22:17:32Z","user_id":16014148,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":662286604,"title":"[MLIR][DISC] Bufferize DynamicIotaOp and DynamicPadOp","body":"support hlo-to-lhlo conversion for DynamicIotaOp and DynamicPadOp","created_at":"2021-06-05T03:44:21Z","closed_at":"2021-06-10T21:43:11Z","merged_at":"2021-06-10T21:43:11Z","user_id":15364516,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":662250032,"title":"[tflite] make tflite related stuff build again on non-NNAPI platform","body":"The NNAPI SL patch 4b949de introduced using of `CreateNnApiFromSupportLibrary(NnApiSLDriverImplFL5 const*)` which caused a problem.\r\n\r\nWhen running `bazel build --config opt tensorflow/lite/tools/benchmark:benchmark_model` on macOS,  I got:\r\n```\r\nUndefined symbols for architecture x86_64:\r\n  \"CreateNnApiFromSupportLibrary(NnApiSLDriverImplFL5 const*)\", referenced from:\r\n      tflite::StatefulNnApiDelegate::StatefulNnApiDelegate(NnApiSLDriverImplFL5 const*, tflite::StatefulNnApiDelegate::Options) in libnnapi_delegate.a(nnapi_delegate.o)\r\n      tflite::StatefulNnApiDelegate::StatefulNnApiDelegate(NnApiSLDriverImplFL5 const*, tflite::StatefulNnApiDelegate::Options) in libnnapi_delegate.a(nnapi_delegate.o)\r\nld: symbol(s) not found for architecture x86_64\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\r\n```\r\n\r\nTo fix this, I created a simple dummy function\r\n\r\n","created_at":"2021-06-05T01:03:09Z","closed_at":"2021-06-10T22:04:13Z","merged_at":null,"user_id":3395998,"sentiment":{"polarity":0.0,"subjectivity":0.4}}
{"_id":662244087,"title":"Another attempt at fixing branch","body":"","created_at":"2021-06-05T00:37:39Z","closed_at":"2021-06-05T00:39:51Z","merged_at":"2021-06-05T00:39:51Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":662166852,"title":"Fix branch after cherrypick","body":"","created_at":"2021-06-04T23:07:36Z","closed_at":"2021-06-04T23:09:32Z","merged_at":"2021-06-04T23:09:32Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":662123060,"title":"Update ragged_tensor_to_variant_op.cc","body":"","created_at":"2021-06-04T22:30:14Z","closed_at":"2021-06-04T22:32:44Z","merged_at":"2021-06-04T22:32:44Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":662122145,"title":"Update ragged_tensor_to_variant_op.cc","body":"","created_at":"2021-06-04T22:29:26Z","closed_at":"2021-06-04T22:32:23Z","merged_at":"2021-06-04T22:32:23Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":662118359,"title":"Update ragged_tensor_to_variant_op.cc","body":"","created_at":"2021-06-04T22:26:09Z","closed_at":"2021-06-04T22:27:25Z","merged_at":"2021-06-04T22:27:25Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":662057396,"title":"Fix usage of TF_LITE_ENSURE_MSG in constructor","body":"","created_at":"2021-06-04T21:06:07Z","closed_at":"2021-06-04T21:06:47Z","merged_at":"2021-06-04T21:06:47Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":662056400,"title":"Fix usage of TF_LITE_ENSURE_MSG in constructor","body":"","created_at":"2021-06-04T21:04:06Z","closed_at":"2021-06-04T21:06:40Z","merged_at":"2021-06-04T21:06:40Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":662030890,"title":"Update conv.cc","body":"","created_at":"2021-06-04T20:22:44Z","closed_at":"2021-06-04T20:32:30Z","merged_at":"2021-06-04T20:32:30Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":662029018,"title":"Update conv.cc","body":"","created_at":"2021-06-04T20:19:06Z","closed_at":"2021-06-04T22:24:31Z","merged_at":null,"user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":662027189,"title":"Update conv.cc","body":"","created_at":"2021-06-04T20:15:43Z","closed_at":"2021-06-04T20:32:24Z","merged_at":"2021-06-04T20:32:24Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":662008301,"title":"Update conv.cc","body":"","created_at":"2021-06-04T19:37:02Z","closed_at":"2021-06-04T20:32:18Z","merged_at":"2021-06-04T20:32:18Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":661979616,"title":"[tf.data] graduate snapshot API from experimental to tf.data.Dataset","body":"This PR graduates the `tf.data.experimental.snapshot` API into `tf.data.Dataset.snapshot` by making the following changes:\r\n\r\n- [x] Adds the deprecation decorator for the experimental API.\r\n- [x] Add the `snapshot()` method to `DatasetV2` class.\r\n- [x] Update example in docstring with new API.\r\n- [x] Regenerate golden API's.\r\n- [x] Moved and updated the `snapshot_test` target from `experimental/kernel_tests` to `kernel_tests`\r\n- [x] Updated the RELEASE.md file\r\n\r\nTEST LOG\r\n```\r\nINFO: Elapsed time: 37.966s, Critical Path: 31.78s\r\nINFO: 369 processes: 133 internal, 236 local.\r\nINFO: Build completed successfully, 369 total actions\r\n//tensorflow/python/data/kernel_tests:snapshot_test                      PASSED in 10.4s\r\n  Stats over 16 runs: max = 10.4s, min = 3.6s, avg = 6.2s, dev = 1.8s\r\n\r\nExecuted 1 out of 1 test: 1 test passes.\r\n```\r\n\r\ncc: @jsimsa  The `legacy_snapshot` API is still experimental and has not been graduated.","created_at":"2021-06-04T18:39:24Z","closed_at":"2021-06-10T23:22:24Z","merged_at":"2021-06-10T23:22:24Z","user_id":25393945,"sentiment":{"polarity":0.1,"subjectivity":0.4}}
{"_id":661735285,"title":"Updated LSTM Cell inputs description to 3D tensor","body":"Actually the LSTM Cell takes a 3D tensor as input as we can see on line number 801 but the description at line number 860 mentions that the input should be a 2D tensor which is incorrect. The LSTM cell gives error with 2D tensor input. Hence modified the description as 3D tensor.  ","created_at":"2021-06-04T12:37:13Z","closed_at":"2021-06-07T18:28:59Z","merged_at":null,"user_id":48115585,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":661583318,"title":"[MLIR] Handle tf.variant in tf-tensor-list-ops-decomposition pass","body":"-- Motivation : Currently `tf-tensor-list-ops-decomposition` pass requires full\r\n                shape of the tensor list to be inferred.\r\n                It bails out on tf.variant and tf.variant<tf.variant> where the\r\n                max size and shape of the element is unknown and not immediately\r\n                apparent.\r\n\r\n-- This commit aims to handle tf.variant and tf.variant<tf.variant>.\r\n   It does so by finding out the maximum number of elements being pushed in the\r\n   empty tensor list and the size of each element.\r\n\r\n-- It currently handles two cases:\r\n   1. Variant declared by an empty tensor list op to which tensors are pushed.\r\n   2. Variant declared by an empty tensor list op to which other variant declared\r\n      by a reserve op is pushed.\r\n\r\nSigned-off-by: Abhishek Varma <abhishek.varma@polymagelabs.com>","created_at":"2021-06-04T08:57:11Z","closed_at":"2021-12-29T00:59:23Z","merged_at":null,"user_id":67887857,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":661517317,"title":"[MLIR] Add GatherOp lowering from lmhlo to Affine.","body":"-- Lowering of `GatherOp` is added from lmhlo to Affine. The lowering\r\n   has been added as a part of `lhlo-legalize-to-affine` pass.\r\n\r\nSigned-off-by: Abhishek Varma <abhishek.varma@polymagelabs.com>","created_at":"2021-06-04T07:23:00Z","closed_at":"2021-06-17T22:00:52Z","merged_at":"2021-06-17T22:00:52Z","user_id":67887857,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":661510565,"title":"Revert \"Stubbed out memory allocation calls in audio library\"","body":"Reverts tensorflow/tensorflow#47935 which broke the Xtensa build (https://github.com/tensorflow/tflite-micro/issues/123) and possibly made the x86 tests flaky (https://github.com/tensorflow/tflite-micro/issues/120)\r\n","created_at":"2021-06-04T07:15:24Z","closed_at":"2021-06-04T19:11:20Z","merged_at":"2021-06-04T19:11:20Z","user_id":2789958,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":661472166,"title":"XLA persistent compilation cache","body":"Store results of llvm->ptx and ptx->cubin compilations for\r\nsubsquent executions.","created_at":"2021-06-04T06:08:59Z","closed_at":"2021-12-29T00:59:21Z","merged_at":null,"user_id":10091048,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":661452968,"title":"[determinism] Add sparse softmax/xent GPU-determinism","body":"This PR adds and tests deterministic forward and backward operation of `tf.nn.sparse_softmax_cross_entropy_with_logits` when running on a GPU. This PR is a follow-on from PR [49178](https://github.com/tensorflow/tensorflow/pull/49178) (Add non-sparse softmax/xent GPU-determinism).\r\n\r\nNote that there are significant changes and enhancements to the existing tests that may be obscured by the restructuring of the test files.\r\n\r\nThis implementation uses `tf.gather` in a way that does not exercise the nondeterminism that is currently possible through its backprop path on GPU: in each batch slot, it gathers only once from the correct logit, so it backprops (using `tf.math.unsorted_segment_sum`) from only one gradient value (associated with the loss) per batch slot. Therefore, this solution is deterministic. However, due to the d9m-unimplemented exception-throwing that was added to `tf.math.unsorted_segment_sum` via PR [47925](https://github.com/tensorflow/tensorflow/pull/47925) (Add softmax/cross-entropy op exceptions for GPU determinism) use of `tf.gather`'s backprop on a GPU while op-determinism is enabled will cause a `tf.errors.UnimplementedError` to be thrown. For this reason, the test currently disables the exception by setting `TF_DISABLE_SPARSE_SOFTMAX_XENT_WITH_LOGITS_OP_DETERMINISM_EXCEPTIONS` to `'1'` and this current PR should not be merged until a deterministic GPU implementation for `tf.math.unsorted_segment_sum` has been merged into the top-of-tree.\r\n\r\nThe pre-existing, nondeterministic op enforces validity of the `labels` input by raising an exception when running on CPU, or injecting NaNs into the forward and backwards paths associated with the illegal entries in `labels` when running on a GPU. This functionality is [documented](https://www.tensorflow.org/api_docs/python/tf/nn/sparse_softmax_cross_entropy_with_logits). The initial state of this PR emulates the original on-GPU functionality (injecting NaNs) when the new deterministic functionality is running on either a CPU or a GPU. There is also the beginnings of a python-level emulation of the on-CPU functionality (throwing an exception) in case we decide to complete that implementation. Emulating the on-CPU functionality at the python-level seems very hacky (the way I started doing it) and I'm not sure that's it's possible. The emulation of the on-GPU functionality at the python-level is solid but adds a reasonable amount of compute. Let's discuss.\r\n\r\nNote that there is currently no `tf.float64` GPU implementation of this op.\r\n\r\nI was not able to make the determinism test exercise the pre-existing nondeterminism in the forward direction for this op when `logits` is of type `tf.float16` because of the way `logits` is up-sampled to 32-bits in `nn_ops.py`. I'm not sure if it's ever possible to exercise that potential nondeterminism. In other words, the pre-existing GPU implementation may always operate deterministically in the forward direction when `logits` is of type `tf.float16`. This is mostly moot, of course (at least for training), since the op is a loss function and the gradients back to `logits` are still nondeterministic (for the original GPU implementation) when `logits` is of type `tf.float16`.\r\n\r\nThis PR is related to [RFC: Enabling Determinism in TensorFlow](https://github.com/tensorflow/community/blob/master/rfcs/20210119-determinism.md). For status and history of GPU-determinism for this op, see [here](https://github.com/NVIDIA/framework-determinism/blob/master/tensorflow_status.md#softmax-xent).\r\n\r\ncc @reedwm @sanjoy @nluehr ","created_at":"2021-06-04T05:27:18Z","closed_at":"2021-09-10T10:53:54Z","merged_at":null,"user_id":33532941,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":661412289,"title":"Change profiler dir to non-temporary in Keras TensorBoard callback","body":"This is to fix the issue https://github.com/tensorflow/tensorflow/issues/49852.\r\nWithout the fix, the profiler dir will always be deleted for non-chief node under MWMS mode when Keras TensorBoard callback(https://www.tensorflow.org/api_docs/python/tf/keras/callbacks/TensorBoard) is used.\r\n","created_at":"2021-06-04T03:26:19Z","closed_at":"2021-07-21T01:09:48Z","merged_at":null,"user_id":1428327,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":661308146,"title":"Fix Cherrypick breakage","body":"","created_at":"2021-06-04T00:43:58Z","closed_at":"2021-06-04T00:55:44Z","merged_at":"2021-06-04T00:55:44Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":661304017,"title":"Fix json after cherrypicks","body":"","created_at":"2021-06-04T00:30:27Z","closed_at":"2021-06-04T00:30:42Z","merged_at":"2021-06-04T00:30:42Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":661283392,"title":"Fix Cherrypick issue","body":"","created_at":"2021-06-03T23:34:48Z","closed_at":"2021-06-04T00:10:46Z","merged_at":"2021-06-04T00:10:46Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":661283011,"title":"FIx Cherrypick issue","body":"","created_at":"2021-06-03T23:33:36Z","closed_at":"2021-06-04T00:10:24Z","merged_at":"2021-06-04T00:10:24Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":661282420,"title":"Fix Cherrypick issue","body":"","created_at":"2021-06-03T23:32:00Z","closed_at":"2021-06-04T00:10:01Z","merged_at":"2021-06-04T00:10:01Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":661281715,"title":"Fix CherryPick issue","body":"","created_at":"2021-06-03T23:29:53Z","closed_at":"2021-06-04T00:09:43Z","merged_at":"2021-06-04T00:09:43Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":661255636,"title":"Fix cherrypick breakage","body":"","created_at":"2021-06-03T22:18:29Z","closed_at":"2021-06-03T22:21:53Z","merged_at":"2021-06-03T22:21:53Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":661252074,"title":"Revert \"Use cudnn for grouped backward input convolution.\"","body":"This reverts commit f76e9c291518babf9b69b75b969dfb296a3a9988.\r\n\r\nWith the current cudnn, using native backward grouped convolution\r\nis better for performance","created_at":"2021-06-03T22:09:28Z","closed_at":"2021-06-09T00:47:34Z","merged_at":"2021-06-09T00:47:34Z","user_id":10091048,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":661240805,"title":"Fix cherrypick breakage","body":"","created_at":"2021-06-03T21:49:29Z","closed_at":"2021-06-03T21:50:35Z","merged_at":"2021-06-03T21:50:35Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":661209782,"title":"Fix broken code after cherrypick","body":"","created_at":"2021-06-03T21:00:00Z","closed_at":"2021-06-03T21:00:14Z","merged_at":"2021-06-03T21:00:14Z","user_id":323199,"sentiment":{"polarity":-0.4,"subjectivity":0.4}}
{"_id":661207682,"title":"[tf.data] graduate unique API from experimental to tf.data.Dataset","body":"This PR graduates the `tf.data.experimental.unique` API into `tf.data.Dataset.unique` by making the following changes:\r\n\r\n- [x] Adds the deprecation decorator for the experimental API.\r\n- [x] Add the `unique()` method to `DatasetV2` class.\r\n- [x] Update example in docstring with new API.\r\n- [x] Regenerate golden API's.\r\n- [x] Moved and updated the `unique_test` target from `experimental/kernel_tests` to `kernel_tests`\r\n- [x] Updated the RELEASE.md file\r\n\r\nTEST LOG\r\n```\r\nINFO: Elapsed time: 28.062s, Critical Path: 23.53s\r\nINFO: 354 processes: 133 internal, 221 local.\r\nINFO: Build completed successfully, 354 total actions\r\n//tensorflow/python/data/kernel_tests:unique_test                        PASSED in 3.9s\r\n\r\nINFO: Build completed successfully, 354 total actions\r\n```\r\n\r\ncc: @jsimsa @aaudiber ","created_at":"2021-06-03T20:55:41Z","closed_at":"2021-06-10T21:15:01Z","merged_at":"2021-06-10T21:15:01Z","user_id":25393945,"sentiment":{"polarity":0.2375,"subjectivity":0.7}}
{"_id":661178441,"title":"Fix broekn branch after cherrypick","body":"","created_at":"2021-06-03T20:00:16Z","closed_at":"2021-06-03T20:01:48Z","merged_at":"2021-06-03T20:01:48Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":661156319,"title":"Fix broken cherrypick","body":"","created_at":"2021-06-03T19:20:41Z","closed_at":"2021-06-03T19:22:00Z","merged_at":"2021-06-03T19:21:59Z","user_id":323199,"sentiment":{"polarity":-0.4,"subjectivity":0.4}}
{"_id":661141816,"title":"Update version numbers for TensorFlow 2.3.3","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 3 -> 3\nPatch: 2 -> 3\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.3.2\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/workspace.bzl:521:2.3.2\ntensorflow/workspace.bzl:524:2.3.2\ntensorflow/workspace.bzl:525:2.3.2\ntensorflow/tools/pip_package/setup.py.orig:62:2.3.2\ntensorflow/tools/pip_package/setup.py:64:2.3.2\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.3.2\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/workspace.bzl:521:2.3.2\ntensorflow/workspace.bzl:524:2.3.2\ntensorflow/workspace.bzl:525:2.3.2\ntensorflow/tools/pip_package/setup.py.orig:62:2.3.2\ntensorflow/tools/pip_package/setup.py:64:2.3.2\n```","created_at":"2021-06-03T18:53:44Z","closed_at":"2021-06-03T19:04:17Z","merged_at":"2021-06-03T19:04:17Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":661141472,"title":"Update version numbers for TensorFlow 2.2.3","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 2 -> 2\nPatch: 2 -> 3\n\nNo lingering old version strings \"2.2.2\" found in source directory \n\"tensorflow/\". Good.\nNo lingering old version strings \"2.2.2\" found in source directory \n\"tensorflow/\". Good.\n```","created_at":"2021-06-03T18:53:06Z","closed_at":"2021-06-03T19:03:48Z","merged_at":"2021-06-03T19:03:48Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":661141123,"title":"Update version numbers for TensorFlow 2.1.4","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 1 -> 1\nPatch: 3 -> 4\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.1.3\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/lite/toco/logging/testdata/generated.html:178:2.1.3\ntensorflow/lite/toco/logging/template.html:178:2.1.3\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.1.3\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/lite/toco/logging/testdata/generated.html:178:2.1.3\ntensorflow/lite/toco/logging/template.html:178:2.1.3\n```","created_at":"2021-06-03T18:52:27Z","closed_at":"2021-06-03T19:03:30Z","merged_at":"2021-06-03T19:03:30Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":661140681,"title":"Update version numbers for TensorFlow 2.4.2","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 4 -> 4\nPatch: 1 -> 2\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.4.1\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/lite/g3doc/models/pose_estimation/overview.md:150:2.4.1\ntensorflow/lite/g3doc/models/segmentation/overview.md:78:2.4.1\ntensorflow/lite/g3doc/models/image_classification/overview.md:244:2.4.1\ntensorflow/lite/g3doc/models/style_transfer/overview.ipynb:439:2.4.1\ntensorflow/lite/g3doc/models/style_transfer/overview.ipynb:444:2.4.1\ntensorflow/lite/g3doc/models/object_detection/overview.md:312:2.4.1\ntensorflow/lite/g3doc/models/bert_qa/overview.md:84:2.4.1\ntensorflow/lite/g3doc/models/text_classification/overview.md:85:2.4.1\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.4.1\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/lite/g3doc/models/pose_estimation/overview.md:150:2.4.1\ntensorflow/lite/g3doc/models/segmentation/overview.md:78:2.4.1\ntensorflow/lite/g3doc/models/image_classification/overview.md:244:2.4.1\ntensorflow/lite/g3doc/models/style_transfer/overview.ipynb:439:2.4.1\ntensorflow/lite/g3doc/models/style_transfer/overview.ipynb:444:2.4.1\ntensorflow/lite/g3doc/models/object_detection/overview.md:312:2.4.1\ntensorflow/lite/g3doc/models/bert_qa/overview.md:84:2.4.1\ntensorflow/lite/g3doc/models/text_classification/overview.md:85:2.4.1\n```","created_at":"2021-06-03T18:51:34Z","closed_at":"2021-06-03T19:03:09Z","merged_at":"2021-06-03T19:03:09Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":661129814,"title":"Update release notes for TensorFlow 2.3.3","body":"This PR is intentionally incomplete. One of the Release Owners for 2.3.3\nneeds to fill in the internal release notes for this version before the PR gets\nsubmitted. Click on the :pencil2: icon in the header for `RELEASE.md` under\n\"Files Changed\" above.","created_at":"2021-06-03T18:31:20Z","closed_at":"2021-06-03T19:11:28Z","merged_at":"2021-06-03T19:11:28Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":661128314,"title":"Update release notes for TensorFlow 2.4.2","body":"This PR is intentionally incomplete. One of the Release Owners for 2.4.2\nneeds to fill in the internal release notes for this version before the PR gets\nsubmitted. Click on the :pencil2: icon in the header for `RELEASE.md` under\n\"Files Changed\" above.","created_at":"2021-06-03T18:28:35Z","closed_at":"2021-06-03T19:11:36Z","merged_at":"2021-06-03T19:11:36Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":661105455,"title":"Update release notes for TensorFlow 2.2.3","body":"This PR is intentionally incomplete. One of the Release Owners for 2.2.3\nneeds to fill in the internal release notes for this version before the PR gets\nsubmitted. Click on the :pencil2: icon in the header for `RELEASE.md` under\n\"Files Changed\" above.","created_at":"2021-06-03T17:47:08Z","closed_at":"2021-06-03T19:11:21Z","merged_at":"2021-06-03T19:11:21Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":661102948,"title":"Update release notes for TensorFlow 2.1.4","body":"This PR is intentionally incomplete. One of the Release Owners for 2.1.4\nneeds to fill in the internal release notes for this version before the PR gets\nsubmitted. Click on the :pencil2: icon in the header for `RELEASE.md` under\n\"Files Changed\" above.","created_at":"2021-06-03T17:42:58Z","closed_at":"2021-06-03T19:11:13Z","merged_at":"2021-06-03T19:11:13Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":661082765,"title":"[INTEL MKL] Allow input permutations for binary commutative ops in pattern matcher.","body":"This PR is a small enhancement of pattern matcher for grappler remapper graph optimization.\r\n\r\nInputs to commutative binary ops can be in different order than the pattern specified for binary commutative ops (e.g., Add, Mul etc.). While checking all possible permutations has exponential time complexity, we keep it linear by allowing permutation only in a limited manner by looking ahead one level in the graph to decide whether visiting right child before left is likely to match the given pattern.\r\n ","created_at":"2021-06-03T17:15:19Z","closed_at":"2021-07-22T17:19:47Z","merged_at":null,"user_id":27521767,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":660988019,"title":"Bump curl","body":"","created_at":"2021-06-03T15:11:12Z","closed_at":"2021-06-03T15:13:26Z","merged_at":"2021-06-03T15:13:26Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":660987666,"title":"Bump curl","body":"","created_at":"2021-06-03T15:10:48Z","closed_at":"2021-06-03T15:13:09Z","merged_at":"2021-06-03T15:13:09Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":660987573,"title":"Bump curl","body":"","created_at":"2021-06-03T15:10:41Z","closed_at":"2021-06-03T15:12:56Z","merged_at":"2021-06-03T15:12:56Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":660987528,"title":"Bump curl","body":"","created_at":"2021-06-03T15:10:38Z","closed_at":"2021-06-03T15:12:43Z","merged_at":"2021-06-03T15:12:43Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":660987280,"title":"Ensure validation sticks in banded_triangular_solve_op","body":"PiperOrigin-RevId: 373275480\r\nChange-Id: Id7717cf275b2d6fdb9441fbbe166d555182d2e79","created_at":"2021-06-03T15:10:21Z","closed_at":"2021-06-03T15:12:28Z","merged_at":"2021-06-03T15:12:28Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":660987220,"title":"Ensure validation sticks in banded_triangular_solve_op","body":"PiperOrigin-RevId: 373275480\r\nChange-Id: Id7717cf275b2d6fdb9441fbbe166d555182d2e79","created_at":"2021-06-03T15:10:16Z","closed_at":"2021-06-03T15:12:19Z","merged_at":"2021-06-03T15:12:19Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":660987172,"title":"Validate that a and b are proper sparse tensors","body":"PiperOrigin-RevId: 373274848\r\nChange-Id: I3a665ac3a29dee9fb69bdf408a939330cb93ea75","created_at":"2021-06-03T15:10:12Z","closed_at":"2021-06-03T15:12:04Z","merged_at":"2021-06-03T15:12:04Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":660987126,"title":"Validate that a and b are proper sparse tensors","body":"PiperOrigin-RevId: 373274848\r\nChange-Id: I3a665ac3a29dee9fb69bdf408a939330cb93ea75","created_at":"2021-06-03T15:10:08Z","closed_at":"2021-06-03T15:11:54Z","merged_at":"2021-06-03T15:11:54Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":660987081,"title":"Validate that a and b are proper sparse tensors","body":"PiperOrigin-RevId: 373274848\r\nChange-Id: I3a665ac3a29dee9fb69bdf408a939330cb93ea75","created_at":"2021-06-03T15:10:04Z","closed_at":"2021-06-03T15:11:39Z","merged_at":"2021-06-03T15:11:39Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":660987012,"title":"Validate that a and b are proper sparse tensors","body":"PiperOrigin-RevId: 373274848\r\nChange-Id: I3a665ac3a29dee9fb69bdf408a939330cb93ea75","created_at":"2021-06-03T15:09:58Z","closed_at":"2021-06-03T15:11:23Z","merged_at":"2021-06-03T15:11:22Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":660609233,"title":"[MLIR][DISC] support fusion on buffer","body":"This pass implements the logic to group kLoop/kInput fusion patterns on\r\nbuffer level. The reason for this is that we can avoid a lot of\r\nheadaches to handle `shape-only` consumers specially (e.g. memref.dim,\r\nshape.shapeOf) since shapes are already resolved in buffer world. It may\r\nbe better to move this pass to tensor level after more shape\r\ninference/constraint infras are ready on mhlo level.","created_at":"2021-06-03T06:22:24Z","closed_at":"2021-06-16T17:04:51Z","merged_at":"2021-06-16T17:04:51Z","user_id":15364516,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":660591010,"title":"[tensorflow/python/ops/init_ops.py] RandomUniform docstring says `maxval` should default to 1… now it does","body":"","created_at":"2021-06-03T05:49:05Z","closed_at":"2021-07-29T16:30:30Z","merged_at":null,"user_id":807580,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":660521806,"title":"[TF-TRT] Argument bugfix","body":"TF-TRT supports lowercase arguments.\r\nhttps://github.com/tensorflow/tensorflow/blob/9460c57fb5fb112e1e6d03a0221799d71b042926/tensorflow/python/compiler/tensorrt/trt_convert.py#L100-L110\r\n\r\nFrom official documentation API instruction,\r\nhttps://docs.nvidia.com/deeplearning/frameworks/tf-trt-user-guide/index.html#int8-quantization\r\n\r\n<br>\r\n\r\n```precision_mode```\r\nDefault value is TrtPrecisionMode.FP32. This is one of TrtPrecisionMode.supported_precision_modes(), in other words, FP32, FP16 or INT8 (lowercase is also supported).\r\n\r\nBut INT8 calibration with ```precision_mode='int8'``` didn't work before.","created_at":"2021-06-03T02:39:51Z","closed_at":"2021-06-09T15:49:14Z","merged_at":"2021-06-09T15:49:14Z","user_id":46595649,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":660496458,"title":"CherryPick:2.3 Fix tf.io.decode_raw bugs","body":null,"created_at":"2021-06-03T01:21:12Z","closed_at":"2021-06-03T02:08:13Z","merged_at":"2021-06-03T02:08:13Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":660495552,"title":"CherryPick:2.4 Fix tf.io.decode_raw bugs","body":null,"created_at":"2021-06-03T01:18:34Z","closed_at":"2021-06-03T02:08:48Z","merged_at":"2021-06-03T02:08:48Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":660494292,"title":"CherryPick:2.2 Fix tf.io.decode_raw bugs","body":null,"created_at":"2021-06-03T01:15:28Z","closed_at":"2021-06-03T02:07:27Z","merged_at":"2021-06-03T02:07:27Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":660493232,"title":"CherryPick:2.1 Fix  bugs","body":null,"created_at":"2021-06-03T01:12:27Z","closed_at":"2021-06-03T02:06:35Z","merged_at":"2021-06-03T02:06:35Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":660479706,"title":"CherryPick2.4:Fix heap-buffer-overflow issue with tf.raw_ops.SparseFillEmptyRows.","body":null,"created_at":"2021-06-03T00:36:41Z","closed_at":"2021-06-03T01:10:18Z","merged_at":"2021-06-03T01:10:18Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":660479681,"title":"CherryPick2.3:Fix heap-buffer-overflow issue with tf.raw_ops.SparseFillEmptyRows.","body":null,"created_at":"2021-06-03T00:36:36Z","closed_at":"2021-06-03T01:10:01Z","merged_at":"2021-06-03T01:10:01Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":660477205,"title":"CherryPick2.2:Fix heap-buffer-overflow issue with tf.raw_ops.SparseFillEmptyRows.","body":null,"created_at":"2021-06-03T00:29:05Z","closed_at":"2021-06-03T01:09:47Z","merged_at":"2021-06-03T01:09:47Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":660474550,"title":"CherryPick2.1: Fix heap-buffer-overflow issue with tf.raw_ops.SparseFillEmptyRows","body":null,"created_at":"2021-06-03T00:22:17Z","closed_at":"2021-06-03T01:09:32Z","merged_at":"2021-06-03T01:09:32Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":660467195,"title":"CherryPick2.1:Define TfLiteFloatArrayGetSizeInBytes even when TF_LITE_STATIC_MEMORY…","body":null,"created_at":"2021-06-03T00:02:23Z","closed_at":"2021-06-03T00:03:56Z","merged_at":"2021-06-03T00:03:56Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":660463293,"title":"CherryPick2.4:Add depth_to_space TFLite op","body":null,"created_at":"2021-06-02T23:49:24Z","closed_at":"2021-06-02T23:57:51Z","merged_at":"2021-06-02T23:57:51Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":660462840,"title":"CherryPick2.3:Add depth_to_space TFLite op","body":null,"created_at":"2021-06-02T23:47:54Z","closed_at":"2021-06-02T23:57:45Z","merged_at":"2021-06-02T23:57:45Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":660462241,"title":"CherryPick2.1:Add depth_to_space TFLite op","body":null,"created_at":"2021-06-02T23:45:57Z","closed_at":"2021-06-02T23:57:31Z","merged_at":"2021-06-02T23:57:31Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":660461583,"title":"CherryPick2.2:Add depth_to_space TFLite op","body":null,"created_at":"2021-06-02T23:43:43Z","closed_at":"2021-06-02T23:57:39Z","merged_at":"2021-06-02T23:57:39Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":660443401,"title":"Cherry pick 2.4 TFLite: Error out when the graph has a recurion.","body":null,"created_at":"2021-06-02T22:51:28Z","closed_at":"2021-06-02T23:44:06Z","merged_at":"2021-06-02T23:44:06Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":660441700,"title":"Cherrypick2.3 TFLite: Error out when the graph has a recurion.","body":null,"created_at":"2021-06-02T22:46:56Z","closed_at":"2021-06-02T23:43:40Z","merged_at":"2021-06-02T23:43:40Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":660438103,"title":"Cherry pick 2.2 TFLite: Error out when the graph has a recurion.","body":null,"created_at":"2021-06-02T22:37:28Z","closed_at":"2021-06-02T23:43:21Z","merged_at":"2021-06-02T23:43:21Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":660434621,"title":"Cherry pick 2.1 TFLite: Error out when the graph has a recurion.","body":null,"created_at":"2021-06-02T22:28:38Z","closed_at":"2021-06-02T23:42:52Z","merged_at":"2021-06-02T23:42:52Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":660408171,"title":"Cherry pick 2.3 Add missing valuidation to FusedBatchNorm","body":null,"created_at":"2021-06-02T21:34:46Z","closed_at":"2021-06-02T21:50:08Z","merged_at":"2021-06-02T21:50:08Z","user_id":53313357,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":660406244,"title":"Cherry pick 2.2 Add missing valuidation to FusedBatchNorm","body":null,"created_at":"2021-06-02T21:30:50Z","closed_at":"2021-06-02T21:49:32Z","merged_at":"2021-06-02T21:49:32Z","user_id":53313357,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":660403987,"title":"Cherry pick 2.1 Add missing valuidation to FusedBatchNorm","body":null,"created_at":"2021-06-02T21:26:20Z","closed_at":"2021-06-02T21:49:16Z","merged_at":"2021-06-02T21:49:16Z","user_id":53313357,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":660380970,"title":"Fix r2.4 branch after cherrypicks","body":"","created_at":"2021-06-02T20:47:35Z","closed_at":"2021-06-02T21:51:53Z","merged_at":"2021-06-02T21:51:53Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":660380121,"title":"Fix r2.3 branch after cherrypicks","body":"","created_at":"2021-06-02T20:46:01Z","closed_at":"2021-06-02T21:51:36Z","merged_at":"2021-06-02T21:51:36Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":660379185,"title":"Fix r2.2 branch after cherrypicks","body":"","created_at":"2021-06-02T20:44:14Z","closed_at":"2021-06-02T21:51:06Z","merged_at":"2021-06-02T21:51:06Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":660376478,"title":"Fix the 2.1 branch after cherrypicks","body":"","created_at":"2021-06-02T20:39:12Z","closed_at":"2021-06-02T21:50:48Z","merged_at":"2021-06-02T21:50:48Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":660347389,"title":"[XLA] Change the optimized dump filename to specify the target","body":"Change the dump filename to know which backend generated it and which SM.\r\n\r\nXLA optimizations specialize the HLO to the target, so knowing what was the target is very useful.\r\n\r\nIdeally, we should also add the cublas/cudnn version used by the autotuner. But I do not need that now, so I let this for later.\r\n\r\n@sanjoy ","created_at":"2021-06-02T19:48:06Z","closed_at":"2021-06-09T10:10:57Z","merged_at":"2021-06-09T10:10:57Z","user_id":180987,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":660312484,"title":"Update Release.md with 2.5.0 notes.","body":"","created_at":"2021-06-02T18:46:36Z","closed_at":"2021-06-08T18:10:59Z","merged_at":"2021-06-08T18:10:59Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":660205099,"title":"Fix error message for using numpy-related methods","body":"When attempting to use numpy-related methods, you encounter the following error:\r\n\r\n```python\r\nx = tf.constant([[1, 2, 3], [4, 5, 6]])\r\nx.T\r\n```\r\n\r\n```\r\nAttributeError: \r\n        'EagerTensor' object has no attribute 'T'.\r\n        If you are looking for numpy-related methods, please run the following:\r\n        import tensorflow.python.ops.numpy_ops.np_config\r\n        np_config.enable_numpy_behavior()\r\n```\r\n\r\nAttempting the fix in that error message results in:\r\n\r\n```\r\nNameError: name 'np_config' is not defined\r\n```\r\n\r\nThis updates the error message to be consistent with usage here: https://github.com/tensorflow/tensorflow/blob/5dcfc51118817f27fad5246812d83e5dccdc5f72/tensorflow/python/ops/numpy_ops/integration_test/np_config_test.py#L22\r\n\r\nwhich works as expected","created_at":"2021-06-02T16:12:33Z","closed_at":"2021-06-10T19:02:10Z","merged_at":"2021-06-10T19:02:09Z","user_id":14100120,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":659886736,"title":"Ensure default types are accurate: fix `int` given for `float` args","body":"I'm writing a parser/emitter that goes from Python to Python (and also OpenAPI). I found some type inconsistencies, when I would run `type(func_argument)` it would not match the argument type referenced in the docstring. This PR solves one such problem.","created_at":"2021-06-02T09:24:34Z","closed_at":"2021-09-07T17:12:34Z","merged_at":"2021-09-07T17:12:34Z","user_id":807580,"sentiment":{"polarity":0.4000000000000001,"subjectivity":0.6333333333333334}}
{"_id":659710284,"title":"Fix _Arg op diagnostic for _handle_dtypes attribute","body":"Fix typo in _Arg op diagnostic for _handle_dtypes attribute.","created_at":"2021-06-02T04:27:35Z","closed_at":"2021-06-10T22:31:41Z","merged_at":"2021-06-10T22:31:41Z","user_id":7008401,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":659688283,"title":"[MLIR][DISC] bufferize DynamicReshape and DynamicBroadcastInDim","body":"1, add hlo-to-lhlo support for DynamicReshape and DynamicBroadcastInDim\r\n\r\n2, add a flag `convert-to-lmhlo-only` to seperate following two case:\r\n   - hlo-to-lhlo only. Simply lowers all mhlo ops to their lmhlo\r\n     counterparts, do not apply any optimization (e.g. elide any\r\n     buffer copy). Buffer optimization is not easy in dynamic\r\n     shape world especially when involving control flow, thus we\r\n     leave this to another dedicated pass.\r\n\r\n   - hlo-to-lhlo-or-memref-directly. Lowers some metadata-only mhlo\r\n     ops (e.g. reshape) to memref dialect directly and Lowers others\r\n     to their lmhlo counterparts.","created_at":"2021-06-02T03:51:12Z","closed_at":"2021-06-04T22:49:40Z","merged_at":"2021-06-04T22:49:40Z","user_id":15364516,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":659502800,"title":"Fix tf.raw_ops.SparseCross failing CHECK.","body":null,"created_at":"2021-06-02T00:04:53Z","closed_at":"2021-06-02T17:10:25Z","merged_at":"2021-06-02T17:10:25Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":659460841,"title":"Fix heap-buffer-overflow issue with .","body":null,"created_at":"2021-06-01T23:19:08Z","closed_at":"2021-06-02T17:10:00Z","merged_at":"2021-06-02T17:10:00Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":659460668,"title":"Fix heap-buffer-overflow issue with .","body":null,"created_at":"2021-06-01T23:18:56Z","closed_at":"2021-06-02T17:09:45Z","merged_at":"2021-06-02T17:09:45Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":659460524,"title":"Fix heap-buffer-overflow issue with .","body":null,"created_at":"2021-06-01T23:18:44Z","closed_at":"2021-06-02T17:09:25Z","merged_at":"2021-06-02T17:09:25Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":659460351,"title":"Fix heap-buffer-overflow issue with .","body":null,"created_at":"2021-06-01T23:18:31Z","closed_at":"2021-06-02T17:09:07Z","merged_at":"2021-06-02T17:09:07Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":659352135,"title":"Fix one more FPE.","body":null,"created_at":"2021-06-01T21:25:39Z","closed_at":"2021-06-02T17:08:42Z","merged_at":"2021-06-02T17:08:42Z","user_id":53313357,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":659352090,"title":"Fix one more FPE.","body":null,"created_at":"2021-06-01T21:25:35Z","closed_at":"2021-06-02T17:08:26Z","merged_at":"2021-06-02T17:08:26Z","user_id":53313357,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":659352055,"title":"Fix one more FPE.","body":null,"created_at":"2021-06-01T21:25:30Z","closed_at":"2021-06-02T17:08:10Z","merged_at":"2021-06-02T17:08:10Z","user_id":53313357,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":659352025,"title":"Fix one more FPE.","body":null,"created_at":"2021-06-01T21:25:26Z","closed_at":"2021-06-02T17:07:52Z","merged_at":"2021-06-02T17:07:52Z","user_id":53313357,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":659287153,"title":"Prevent yet another division by zero","body":"","created_at":"2021-06-01T19:30:33Z","closed_at":"2021-06-02T17:07:03Z","merged_at":"2021-06-02T17:07:03Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":659286723,"title":"Prevent yet another division by zero","body":"","created_at":"2021-06-01T19:29:54Z","closed_at":"2021-06-02T17:06:44Z","merged_at":"2021-06-02T17:06:43Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":659286323,"title":"Prevent yet another division by zero","body":"","created_at":"2021-06-01T19:29:18Z","closed_at":"2021-06-02T17:06:26Z","merged_at":"2021-06-02T17:06:26Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":659285959,"title":"Prevent yet another division by zero","body":"","created_at":"2021-06-01T19:28:45Z","closed_at":"2021-06-02T17:05:38Z","merged_at":"2021-06-02T17:05:38Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":659006064,"title":"Wire up set_filesystem_configuration with modular file system","body":"This PR tries to wire up set_filesystem_configuration with modular file system so that it is possible to set up the file\r\nsystem configuration through modular file system plugins.\r\n\r\nWhile set_filesystem_configuration API has been defined in the past, the API was not wired up with modular file system so it was not possible to use it from plugins.\r\n\r\nThis PR adds the missing implementation.\r\n\r\nThis PR also made several changes:\r\n- values associated with `type_tag` was not defined in the past. This PR adds the definition.\r\n- TF_Filesystem_Option_Value definition has been modified as previous unnamed union was difficult to assign value.\r\n- set_filesystem_configuration_option was removed as it is almost a duplicate of set_filesystem_configuration, and it does not match the description.\r\n\r\nWhile the API was modified, since set_filesystem_configuration was not wired with modular file system, it is not used anyway. So this will not break user or plugins.\r\n\r\nThis PR is needed in order to have gcs-config support in modular file system plugins.\r\n\r\ncc @mihaimaruseac, FYI @vnvo2409 @kvignesh1420 @terrytangyuan @burgerkingeater \r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2021-06-01T13:27:28Z","closed_at":"2021-06-17T16:28:53Z","merged_at":"2021-06-17T16:28:53Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":658755938,"title":"Added RaggedTensor support to reduce_std","body":"Fixes #49941 .\r\n\r\nTook help from my similar PRs for `reduce_variance` #37014 and #49609\r\n\r\ncc @mihaimaruseac , @edloper ","created_at":"2021-06-01T07:36:06Z","closed_at":"2021-06-09T18:41:31Z","merged_at":"2021-06-09T18:41:31Z","user_id":20843596,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":658371262,"title":"Remove IMAGE_RECOGNITION variables from third_party_downloads","body":"@advaitjain When the image_recognition_experimental example was removed I missed to delete these lines from the third_party_downloads.","created_at":"2021-05-31T14:52:14Z","closed_at":"2021-06-01T19:24:29Z","merged_at":"2021-06-01T19:24:29Z","user_id":1186713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":658207730,"title":"Fix tf_tensor C-API memleak by explicitly dealloc ctstring large.ptr","body":"When we use c api to release a tensor by dtype `string`, there occures heavy memory leak problem, expecially in batch mode. Therefore, we distinguished the problem, where the TensorInterface::Release() function should also deallocate the ctstring large.ptr.","created_at":"2021-05-31T10:36:55Z","closed_at":"2021-08-07T01:24:02Z","merged_at":"2021-08-07T01:24:02Z","user_id":876295,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":658197844,"title":"Hello","body":"I'm requesting for the PR to be merged!","created_at":"2021-05-31T10:20:53Z","closed_at":"2021-05-31T10:21:09Z","merged_at":null,"user_id":47414674,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":658163924,"title":"Update xtensa HiFi5 library calls for kernels: AvgPool, MaxPool, Add,…","body":"… Mul, Relu, Relu6.","created_at":"2021-05-31T09:31:23Z","closed_at":"2021-05-31T11:45:58Z","merged_at":null,"user_id":83808595,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":658162762,"title":"Bug fix for TfLiteTensor dims","body":"When using the MicroInterpreter, the TfLiteEvalTensor must be the source of truth for tensor dims.\r\nIt is possible during the Prepare phase for an operator to change the location of the tensor dims to somewhere other than the Flatbuffer.  When using the MicroInterpreter, the Flatbuffer is currently used as the source of truth for TfLiteTensor dims.  This fix makes the TfLiteEvalTensor dims the source of truth when initializing a TfLiteTensor.\r\n\r\nAdditional fix for issue micro: port op L2_POOL_2D from lite #47814","created_at":"2021-05-31T09:29:45Z","closed_at":"2021-06-01T17:11:34Z","merged_at":null,"user_id":13169112,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":658084847,"title":"[MLIR][DISC] pattern conversion from tf2mhlo: ConvertUnpackOpDynamic, ConvertSignOpDynamic, ConvertSigmoidGradOpDynamic","body":"We are porting our MLIR-based dynamic shape compiler to tf community (From OP def, Patttern, to Optimization pass, etc).\r\nThis is the 5th PR about tf2mhlo pattern conversion, which including ConvertUnpackOpDynamic, ConvertSignOpDynamic, ConvertSigmoidGradOpDynamic.\r\nThe rest pattern conversions we will add:\r\n- ConvertSqueezeOpxxx\r\n- ConvertStridedSliceOpxxx\r\n- ConvertPrintOp","created_at":"2021-05-31T07:55:58Z","closed_at":"2021-06-15T22:58:23Z","merged_at":null,"user_id":16014148,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":657963076,"title":"Additional bug fix for CreateWritableTensorDimsWithCopy","body":"Also check that the AllocatePersistentBuffer method is available.\r\n\r\nAdditional fix for issue micro: port op L2_POOL_2D from lite #47814","created_at":"2021-05-31T05:20:27Z","closed_at":"2021-06-01T17:07:29Z","merged_at":null,"user_id":13169112,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":657935003,"title":"Cumsum reference op test","body":"This adds the test  for the CUMSUM reference op code.\r\n\r\nThis PR is in reference to issue #49913 ","created_at":"2021-05-31T04:29:01Z","closed_at":"2022-10-24T13:56:54Z","merged_at":null,"user_id":13169112,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":657777210,"title":"converting alpha to float before use","body":"issue fixed if user enters aplha = 1 instead of alpha = 1.0, causing error during loading weights due to model_name getting wrong and downloading fails. Also typo at the line 152 to add consistency for the user.","created_at":"2021-05-30T18:53:11Z","closed_at":"2021-06-09T16:19:43Z","merged_at":null,"user_id":55626797,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":657685899,"title":"Added test case for Accuracy alias","body":"Added test case for fix done as part of PR #49218\r\n\r\ncc @mihaimaruseac ","created_at":"2021-05-30T12:22:55Z","closed_at":"2021-06-09T17:41:13Z","merged_at":"2021-06-09T17:41:13Z","user_id":20843596,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":657431339,"title":"[MLIR][DISC] pattern conversion from tf2mhlo: ConvertTileOpDynamic","body":"We are porting our MLIR-based dynamic shape compiler to tf community (From OP def, Patttern, to Optimization pass, etc).\r\nThis is the 4th PR about tf2mhlo pattern conversion, which including ConvertTileOpDynamic.\r\nThe rest pattern conversions we will add:\r\n- ConvertSqueezeOpxxx\r\n- ConvertStridedSliceOpxxx\r\n- ConvertUnpackOpxxx\r\n- ConvertPrintOp\r\n- ConvertSigmoidGradOpxxx\r\n- ConvertSignOpxxx\r\n","created_at":"2021-05-29T08:58:25Z","closed_at":"2021-06-17T14:23:32Z","merged_at":"2021-06-17T14:23:32Z","user_id":16014148,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":657267405,"title":"Validate that a and b are proper sparse tensors","body":"PiperOrigin-RevId: 373248068\nChange-Id: I0a2041a0747901b3f00387a6a3bce9bca6b0b3b1","created_at":"2021-05-28T23:58:06Z","closed_at":"2021-06-02T13:29:19Z","merged_at":"2021-06-02T13:29:19Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":657267296,"title":"Validate that a and b are proper sparse tensors","body":"PiperOrigin-RevId: 373248068\nChange-Id: I0a2041a0747901b3f00387a6a3bce9bca6b0b3b1","created_at":"2021-05-28T23:57:53Z","closed_at":"2021-06-02T13:29:02Z","merged_at":"2021-06-02T13:29:02Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":657267173,"title":"Validate that a and b are proper sparse tensors","body":"PiperOrigin-RevId: 373248068\nChange-Id: I0a2041a0747901b3f00387a6a3bce9bca6b0b3b1","created_at":"2021-05-28T23:57:44Z","closed_at":"2021-06-02T13:28:42Z","merged_at":"2021-06-02T13:28:42Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":657267071,"title":"Validate that a and b are proper sparse tensors","body":"PiperOrigin-RevId: 373248068\nChange-Id: I0a2041a0747901b3f00387a6a3bce9bca6b0b3b1","created_at":"2021-05-28T23:57:35Z","closed_at":"2021-06-02T13:28:22Z","merged_at":"2021-06-02T13:28:22Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":657264829,"title":"Fix heap OOB / undefined behavior in `RaggedTensorToTensor`","body":"PiperOrigin-RevId: 373244623\nChange-Id: I2d6cbbc8c67b238a8815bf58097f7586d87c54f2","created_at":"2021-05-28T23:53:39Z","closed_at":"2021-06-01T23:02:00Z","merged_at":"2021-06-01T23:02:00Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":657264707,"title":"Fix heap OOB / undefined behavior in `RaggedTensorToTensor`","body":"PiperOrigin-RevId: 373244623\nChange-Id: I2d6cbbc8c67b238a8815bf58097f7586d87c54f2","created_at":"2021-05-28T23:53:26Z","closed_at":"2021-06-01T23:01:42Z","merged_at":"2021-06-01T23:01:42Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":657264601,"title":"Fix heap OOB / undefined behavior in `RaggedTensorToTensor`","body":"PiperOrigin-RevId: 373244623\nChange-Id: I2d6cbbc8c67b238a8815bf58097f7586d87c54f2","created_at":"2021-05-28T23:53:14Z","closed_at":"2021-06-01T23:01:22Z","merged_at":"2021-06-01T23:01:21Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":657264486,"title":"Fix heap OOB / undefined behavior in `RaggedTensorToTensor`","body":"PiperOrigin-RevId: 373244623\nChange-Id: I2d6cbbc8c67b238a8815bf58097f7586d87c54f2","created_at":"2021-05-28T23:53:01Z","closed_at":"2021-06-01T23:01:00Z","merged_at":"2021-06-01T23:01:00Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":657248142,"title":"Prevent memory overflow in ParseAttrValue from nested tensors.","body":"PiperOrigin-RevId: 370108442\nChange-Id: I84d64a5e8895a6aeffbf4749841b4c54d51b5889","created_at":"2021-05-28T23:31:07Z","closed_at":"2021-05-31T14:05:49Z","merged_at":"2021-05-31T14:05:49Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":657247926,"title":"Prevent memory overflow in ParseAttrValue from nested tensors.","body":"PiperOrigin-RevId: 370108442\nChange-Id: I84d64a5e8895a6aeffbf4749841b4c54d51b5889","created_at":"2021-05-28T23:30:54Z","closed_at":"2021-05-31T14:05:33Z","merged_at":"2021-05-31T14:05:33Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":657247380,"title":"Prevent memory overflow in ParseAttrValue from nested tensors.","body":"PiperOrigin-RevId: 370108442\nChange-Id: I84d64a5e8895a6aeffbf4749841b4c54d51b5889","created_at":"2021-05-28T23:30:33Z","closed_at":"2021-05-31T14:05:17Z","merged_at":"2021-05-31T14:05:17Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":657246246,"title":"Prevent memory overflow in ParseAttrValue from nested tensors.","body":"PiperOrigin-RevId: 370108442\nChange-Id: I84d64a5e8895a6aeffbf4749841b4c54d51b5889","created_at":"2021-05-28T23:29:56Z","closed_at":"2021-05-31T14:05:00Z","merged_at":"2021-05-31T14:05:00Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":657127190,"title":"Fix crash with tf.transpose when a is complex and conjugate is True","body":"","created_at":"2021-05-28T21:32:45Z","closed_at":"2021-06-02T21:57:06Z","merged_at":"2021-06-02T21:57:06Z","user_id":53313357,"sentiment":{"polarity":0.024999999999999994,"subjectivity":0.525}}
{"_id":657126263,"title":"Fix crash with tf.transpose when a is complex and conjugate is True","body":"","created_at":"2021-05-28T21:31:57Z","closed_at":"2021-06-02T21:56:48Z","merged_at":"2021-06-02T21:56:48Z","user_id":53313357,"sentiment":{"polarity":0.024999999999999994,"subjectivity":0.525}}
{"_id":657124960,"title":"Fix crash with tf.transpose when a is complex and conjugate is True","body":"","created_at":"2021-05-28T21:30:50Z","closed_at":"2021-06-02T21:56:25Z","merged_at":"2021-06-02T21:56:25Z","user_id":53313357,"sentiment":{"polarity":0.024999999999999994,"subjectivity":0.525}}
{"_id":657124132,"title":"Fix crash with tf.transpose when a is complex and conjugate is True","body":"","created_at":"2021-05-28T21:30:09Z","closed_at":"2021-06-02T21:56:03Z","merged_at":"2021-06-02T21:56:03Z","user_id":53313357,"sentiment":{"polarity":0.024999999999999994,"subjectivity":0.525}}
{"_id":657004719,"title":"Allow `keras.utils.Sequence` sub-classes to use sparse/ragged tensors","body":"This adjusts the way `GeneratorDataAdapter` supplies the shapes and types of tensors from the first (peeked) batch when converting from a generator to a `Dataset`, in order to allow sub-classes of `keras.utils.Sequence` to return `SparseTensors` or `RaggedTensors` in batches.\r\n\r\nResolves #41419.\r\n","created_at":"2021-05-28T19:50:08Z","closed_at":"2021-09-23T12:59:58Z","merged_at":null,"user_id":885295,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":656968938,"title":"Added tensorflow medium","body":"","created_at":"2021-05-28T19:19:35Z","closed_at":"2021-06-03T21:26:21Z","merged_at":null,"user_id":61329442,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":656861306,"title":"Made rounding in convert_image_dtype for numbers close to zero","body":"Fixes #48701","created_at":"2021-05-28T17:47:03Z","closed_at":"2021-09-21T00:28:00Z","merged_at":"2021-09-21T00:28:00Z","user_id":14878973,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":656663781,"title":"Added description about Force Zero Output for Mask when return_sequences=True","body":"Fixes #49738","created_at":"2021-05-28T15:21:06Z","closed_at":"2021-06-03T21:25:02Z","merged_at":null,"user_id":48206667,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":656591900,"title":"Update image_dataset.py","body":"Updated return values for \"tf.keras.preprocessing.image_dataset_from_directory\"\r\n\r\nFixes #49829","created_at":"2021-05-28T14:33:37Z","closed_at":"2021-09-27T18:36:21Z","merged_at":null,"user_id":59822926,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":656372304,"title":"[Feature] Adding layer_range for plot_model and model_to_dot","body":"Fixes #48641 \r\n\r\nPlease take a look at [gist](https://colab.research.google.com/drive/1ynkoCxW9RPh8s0HgUAo_N0pNDrUXOqKk?usp=sharing) to see that the code changes in this PR actually works. (To see sub-graph plot on passing `layer_range`)\r\n\r\ncc @mihaimaruseac @bhack ","created_at":"2021-05-28T12:07:47Z","closed_at":"2021-06-16T20:44:49Z","merged_at":null,"user_id":20843596,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":656339629,"title":"Update doc example for tf.Variable.scatter_nd_update()","body":"","created_at":"2021-05-28T11:44:24Z","closed_at":"2021-06-11T15:44:37Z","merged_at":"2021-06-11T15:44:37Z","user_id":1778667,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":656282417,"title":"Fix error when compile asm files","body":"This PR fix a bug when compile assemble files using function `microlite_test`.\r\n\r\nThis function is called by https://github.com/tensorflow/tensorflow/blob/master/tensorflow/lite/micro/examples/hello_world/Makefile.inc and also other examples. So, if we add bsp files to `HELLO_WORLD_SRCS` and it contains assemble files, it will cause error here. The Error message is like below.\r\n```\r\nmake: *** No rule to make target 'tensorflow/lite/micro/tools/make/gen/riscv32_mcu_riscv32_mcu_micro/obj/tensorflow/lite/micro/tools/make/downloads/sifive_fe310_lib/bsp/env/start.S', needed by 'tensorflow/lite/micro/tools/make/gen/riscv32_mcu_riscv32_mcu_micro/bin/hello_world'.  Stop.\r\n```","created_at":"2021-05-28T11:04:11Z","closed_at":"2021-06-01T19:18:01Z","merged_at":"2021-06-01T19:18:01Z","user_id":60611489,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":656205718,"title":"Enable method delegation test in eager distributed `AutoCastVariable`","body":"This PR enables the method delegation tests of `AutoCastVariable` when run in eager mode within a distribution strategy as the issue appears to be fixed on master.\r\n\r\n/cc @reedwm ","created_at":"2021-05-28T10:10:08Z","closed_at":"2021-06-04T19:58:44Z","merged_at":"2021-06-04T19:58:44Z","user_id":13285808,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":655790643,"title":"[MLIR][DISC] pattern conversion from tf2mhlo: ConvertSplitOpDynamic, ConvertSliceOpDynamic","body":"We are porting our MLIR-based dynamic shape compiler to tf community (From OP def, Patttern, to Optimization pass, etc).\r\nThis is the third PR about tf2mhlo pattern conversion, which including ConvertSplitOpDynamic and ConvertSliceOpDynamic.\r\nThe rest pattern conversions we will add:\r\n- ConvertSqueezeOpxxx\r\n- ConvertStridedSliceOpxxx\r\n- ConvertTileOpxxx\r\n- ConvertTopKV2Opxxx\r\n- ConvertUnpackOpxxx\r\n- ConvertPrintOp\r\n- ConvertSigmoidGradOpxxx\r\n- ConvertSignOpxxx","created_at":"2021-05-28T03:49:17Z","closed_at":"2021-06-29T02:15:46Z","merged_at":"2021-06-29T02:15:46Z","user_id":16014148,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":655680787,"title":"Fix an incorrect axis in the Dense layer documentation","body":"The text should either read \"axis 0 of the kernel\" or \"the kernel operates along axis 3 of the input\" to be consistent.","created_at":"2021-05-28T02:00:11Z","closed_at":"2021-06-07T23:23:37Z","merged_at":"2021-06-07T23:23:37Z","user_id":12711237,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":655569461,"title":"Fix tf.raw_ops.SparseCross  failing CHECK.","body":null,"created_at":"2021-05-28T00:04:16Z","closed_at":"2021-05-31T00:23:11Z","merged_at":"2021-05-31T00:23:11Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":655537128,"title":"Fix duration computation in MicroProfiler.","body":"Prior to this change, if the BeginEvent occurred at a tick that was larger than EndEvent, we would incorrectly compute the duration for that event.\r\n\r\nThe only requirement that we have is that no more than 2^32-1 ticks should have passed between a call to BeginEvent and EndEvent\r\n\r\nThe discussion on https://github.com/tensorflow/tensorflow/pull/49144 alerted us to this bug.\r\n\r\nNote that we do not have any unit tests for MicroProfiler at this time.\r\n\r\nManually confirmed that the profiling info for this command:\r\n```\r\nmake -f tensorflow/lite/micro/tools/make/Makefile TARGET=xtensa TARGET_ARCH=fusion_f1 OPTIMIZED_KERNEL_DIR=xtensa XTENSA_CORE=F1_190305_swupgrade run_keyword_benchmark -j8\r\n```\r\n\r\nis identical with and without the current change.\r\n","created_at":"2021-05-27T23:32:59Z","closed_at":"2021-05-28T04:55:11Z","merged_at":null,"user_id":2789958,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":655440342,"title":"Fix `tf.raw_ops.RaggedTensorToVariant` invalid resize.","body":"PiperOrigin-RevId: 368299574\nChange-Id: I751c186325aa0bab397928845e790e60c2d90918","created_at":"2021-05-27T22:20:52Z","closed_at":"2021-05-31T00:22:51Z","merged_at":"2021-05-31T00:22:51Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":655435279,"title":"Fix `tf.raw_ops.RaggedTensorToVariant` invalid resize.","body":"PiperOrigin-RevId: 368299574\nChange-Id: I751c186325aa0bab397928845e790e60c2d90918","created_at":"2021-05-27T22:16:46Z","closed_at":"2021-05-31T00:22:34Z","merged_at":"2021-05-31T00:22:34Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":655427828,"title":"Fix `tf.raw_ops.RaggedTensorToVariant` invalid resize.","body":"PiperOrigin-RevId: 368299574\nChange-Id: I751c186325aa0bab397928845e790e60c2d90918","created_at":"2021-05-27T22:11:30Z","closed_at":"2021-05-31T00:22:15Z","merged_at":"2021-05-31T00:22:15Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":655345461,"title":"[MLIR][TOSA] Legalize TFLite tanh/sigmoid/hardswish with int8[256] TOSA table.","body":"- rewrite 8-bit TOSA const table generation utility function with int8[256]\r\n- remove int16 hardswish since TFLite doesn't support this.\r\n- rewrite int16 tanh/sigmoid. Generate int16[513] using the same gen_lut() as 16-bit tfl.softmax() use.\r\n\r\nSigned-off-by: Kevin Cheng <kevin.cheng@arm.com>\r\nChange-Id: I01380ec5b9f2bfc4678302c983a529eaef3d02a8","created_at":"2021-05-27T20:49:26Z","closed_at":"2021-06-02T23:27:40Z","merged_at":"2021-06-02T23:27:40Z","user_id":67395479,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":655315441,"title":"Update the TFLM readme to reflect the new repo location.","body":"Bug: http://b/182914089\r\n","created_at":"2021-05-27T20:05:51Z","closed_at":"2021-06-01T20:59:21Z","merged_at":"2021-06-01T20:59:21Z","user_id":2789958,"sentiment":{"polarity":0.13636363636363635,"subjectivity":0.45454545454545453}}
{"_id":655277709,"title":"[CherryPick]Fix 2 issues with .","body":"PiperOrigin-RevId: 369242785\r\nChange-Id: Ie94067b2d41f58699af99ebb5af335ad9defd931","created_at":"2021-05-27T19:12:51Z","closed_at":"2021-05-31T00:21:44Z","merged_at":"2021-05-31T00:21:44Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":655272730,"title":"[CherryPick]Fix 2 issues with .","body":"PiperOrigin-RevId: 369242785\r\nChange-Id: Ie94067b2d41f58699af99ebb5af335ad9defd931","created_at":"2021-05-27T19:05:29Z","closed_at":"2021-05-31T00:21:26Z","merged_at":"2021-05-31T00:21:26Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654741284,"title":"Patched C API implementation to correctly use interpreter num threads","body":"Patched C API implementation to correctly use interpreter number of threads setting while invoking `InterpreterBuilder` since it is not enough to only call `SetNumThreads` method for setting to be applied for delegates as well. See https://github.com/tensorflow/tensorflow/issues/42277 for detailed description.","created_at":"2021-05-27T09:55:50Z","closed_at":"2021-06-03T09:03:43Z","merged_at":null,"user_id":5624568,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654566772,"title":"Adding documentation for running doctests locally","body":"Adding doc for running doctest locally.\r\nAlthough the doc is there on [website's contribute page](https://www.tensorflow.org/community/contribute/docs_ref), but we should also keep it in `CONTRIBUTING.md` along with other test instructions.\r\n\r\nThe reason behind it IMO is that one may want to see the steps of running doctest as well along with sanity checks and unit tests.\r\n\r\ncc @mihaimaruseac ","created_at":"2021-05-27T06:52:58Z","closed_at":"2021-06-09T17:37:47Z","merged_at":"2021-06-09T17:37:47Z","user_id":20843596,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654563358,"title":"Fix typo on line 3918, \"tf.data.experimental.enable_debug_mode()\"","body":"My PR for issue https://github.com/tensorflow/tensorflow/issues/49724","created_at":"2021-05-27T06:48:20Z","closed_at":"2021-06-03T22:34:36Z","merged_at":"2021-06-03T22:34:35Z","user_id":20109683,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654429442,"title":"[Intel MKL] Remove check for native format for INT8","body":"Since all INT8 native-related PRs are merged now, we need to remove the check for native format.","created_at":"2021-05-27T02:35:50Z","closed_at":"2021-05-28T00:13:30Z","merged_at":"2021-05-28T00:13:30Z","user_id":24963061,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654334056,"title":"Prevent array OOB read/write","body":"PiperOrigin-RevId: 371026165\nChange-Id: I26ac6372c87246e03c7eb8c94e84c84d86054b36","created_at":"2021-05-26T23:43:27Z","closed_at":"2021-05-27T15:56:26Z","merged_at":"2021-05-27T15:56:26Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654333813,"title":"Prevent array OOB read/write","body":"PiperOrigin-RevId: 371026165\nChange-Id: I26ac6372c87246e03c7eb8c94e84c84d86054b36","created_at":"2021-05-26T23:43:01Z","closed_at":"2021-05-27T15:56:12Z","merged_at":"2021-05-27T15:56:12Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654333671,"title":"Prevent array OOB read/write","body":"PiperOrigin-RevId: 371026165\nChange-Id: I26ac6372c87246e03c7eb8c94e84c84d86054b36","created_at":"2021-05-26T23:42:46Z","closed_at":"2021-05-27T15:55:56Z","merged_at":"2021-05-27T15:55:55Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654332953,"title":"Prevent array OOB read/write","body":"PiperOrigin-RevId: 371026165\nChange-Id: I26ac6372c87246e03c7eb8c94e84c84d86054b36","created_at":"2021-05-26T23:41:24Z","closed_at":"2021-05-27T15:55:40Z","merged_at":"2021-05-27T15:55:40Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654332247,"title":"Prevent array write out-of-bounds.","body":"If user passes an invalid axis, then we copy one too many dimensions to the output in the loop below these checks. Even if we didn't do that, there will be further issues with an invalid axis, so we check for that right now.\n\nPiperOrigin-RevId: 371023299\nChange-Id: I9eca37ffc2b29e8e48710f500701270ef0790224","created_at":"2021-05-26T23:40:09Z","closed_at":"2021-05-27T15:55:25Z","merged_at":"2021-05-27T15:55:25Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654332127,"title":"Prevent array write out-of-bounds.","body":"If user passes an invalid axis, then we copy one too many dimensions to the output in the loop below these checks. Even if we didn't do that, there will be further issues with an invalid axis, so we check for that right now.\n\nPiperOrigin-RevId: 371023299\nChange-Id: I9eca37ffc2b29e8e48710f500701270ef0790224","created_at":"2021-05-26T23:39:56Z","closed_at":"2021-05-27T15:55:00Z","merged_at":"2021-05-27T15:55:00Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654332024,"title":"Prevent array write out-of-bounds.","body":"If user passes an invalid axis, then we copy one too many dimensions to the output in the loop below these checks. Even if we didn't do that, there will be further issues with an invalid axis, so we check for that right now.\n\nPiperOrigin-RevId: 371023299\nChange-Id: I9eca37ffc2b29e8e48710f500701270ef0790224","created_at":"2021-05-26T23:39:42Z","closed_at":"2021-05-27T15:54:45Z","merged_at":"2021-05-27T15:54:45Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654331132,"title":"Prevent array write out-of-bounds.","body":"If user passes an invalid axis, then we copy one too many dimensions to the output in the loop below these checks. Even if we didn't do that, there will be further issues with an invalid axis, so we check for that right now.\n\nPiperOrigin-RevId: 371023299\nChange-Id: I9eca37ffc2b29e8e48710f500701270ef0790224","created_at":"2021-05-26T23:38:02Z","closed_at":"2021-05-27T15:54:27Z","merged_at":"2021-05-27T15:54:27Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654328114,"title":"Fix a dangerous integer overflow and a malloc of negative size.","body":null,"created_at":"2021-05-26T23:32:50Z","closed_at":"2021-05-27T15:54:12Z","merged_at":"2021-05-27T15:54:12Z","user_id":53313357,"sentiment":{"polarity":-0.45,"subjectivity":0.65}}
{"_id":654310536,"title":"Fix a dangerous integer overflow and a malloc of negative size.","body":"PiperOrigin-RevId: 371254154\nChange-Id: I250a98a3df26328770167025670235a963a72da0","created_at":"2021-05-26T23:02:19Z","closed_at":"2021-05-27T15:53:55Z","merged_at":"2021-05-27T15:53:55Z","user_id":53313357,"sentiment":{"polarity":-0.45,"subjectivity":0.65}}
{"_id":654310455,"title":"Fix a dangerous integer overflow and a malloc of negative size.","body":"PiperOrigin-RevId: 371254154\nChange-Id: I250a98a3df26328770167025670235a963a72da0","created_at":"2021-05-26T23:02:11Z","closed_at":"2021-05-27T15:53:42Z","merged_at":"2021-05-27T15:53:41Z","user_id":53313357,"sentiment":{"polarity":-0.45,"subjectivity":0.65}}
{"_id":654310112,"title":"Fix a dangerous integer overflow and a malloc of negative size.","body":"PiperOrigin-RevId: 371254154\nChange-Id: I250a98a3df26328770167025670235a963a72da0","created_at":"2021-05-26T23:01:32Z","closed_at":"2021-05-27T15:53:25Z","merged_at":"2021-05-27T15:53:25Z","user_id":53313357,"sentiment":{"polarity":-0.45,"subjectivity":0.65}}
{"_id":654308256,"title":"Fix integer overflow in TFLite concat","body":"PiperOrigin-RevId: 371013841\nChange-Id: I6a4782ce7ca753e23ff31e7fb6aeb7f9d412cd29","created_at":"2021-05-26T22:58:05Z","closed_at":"2021-05-27T15:53:07Z","merged_at":"2021-05-27T15:53:07Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654307685,"title":"Fix integer overflow in TFLite concat","body":"PiperOrigin-RevId: 371013841\nChange-Id: I6a4782ce7ca753e23ff31e7fb6aeb7f9d412cd29","created_at":"2021-05-26T22:56:54Z","closed_at":"2021-05-27T15:52:51Z","merged_at":"2021-05-27T15:52:51Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654307658,"title":"Fix integer overflow in TFLite concat","body":"PiperOrigin-RevId: 371013841\nChange-Id: I6a4782ce7ca753e23ff31e7fb6aeb7f9d412cd29","created_at":"2021-05-26T22:56:50Z","closed_at":"2021-05-31T00:21:09Z","merged_at":"2021-05-31T00:21:09Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654307319,"title":"Fix integer overflow in TFLite concat","body":"PiperOrigin-RevId: 371013841\nChange-Id: I6a4782ce7ca753e23ff31e7fb6aeb7f9d412cd29","created_at":"2021-05-26T22:56:03Z","closed_at":"2021-05-27T15:52:25Z","merged_at":"2021-05-27T15:52:25Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654306770,"title":"Prevent a division by 0","body":"PiperOrigin-RevId: 371007407\nChange-Id: Iecf2718de48d6bf5a69b02a9df9deda8ec1b19d3","created_at":"2021-05-26T22:55:01Z","closed_at":"2021-05-27T15:52:08Z","merged_at":"2021-05-27T15:52:08Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654306329,"title":"Prevent a division by 0","body":"PiperOrigin-RevId: 371007407\nChange-Id: Iecf2718de48d6bf5a69b02a9df9deda8ec1b19d3","created_at":"2021-05-26T22:54:11Z","closed_at":"2021-05-27T15:51:53Z","merged_at":"2021-05-27T15:51:53Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654306139,"title":"Prevent a division by 0","body":"PiperOrigin-RevId: 371007407\nChange-Id: Iecf2718de48d6bf5a69b02a9df9deda8ec1b19d3","created_at":"2021-05-26T22:53:50Z","closed_at":"2021-05-27T15:51:29Z","merged_at":"2021-05-27T15:51:29Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654305667,"title":"Prevent a division by 0","body":"PiperOrigin-RevId: 371007407\nChange-Id: Iecf2718de48d6bf5a69b02a9df9deda8ec1b19d3","created_at":"2021-05-26T22:53:03Z","closed_at":"2021-05-27T15:51:14Z","merged_at":"2021-05-27T15:51:14Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654303683,"title":"Prevent divisions by 0","body":"PiperOrigin-RevId: 371003153\nChange-Id: Idef56c95b9fcaeb97f87e18c7a674dbeb5173204","created_at":"2021-05-26T22:49:26Z","closed_at":"2021-05-27T15:50:58Z","merged_at":"2021-05-27T15:50:58Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654303371,"title":"Prevent divisions by 0","body":"PiperOrigin-RevId: 371003153\nChange-Id: Idef56c95b9fcaeb97f87e18c7a674dbeb5173204","created_at":"2021-05-26T22:48:55Z","closed_at":"2021-05-27T15:50:41Z","merged_at":"2021-05-27T15:50:41Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654303133,"title":"Prevent divisions by 0","body":"PiperOrigin-RevId: 371003153\nChange-Id: Idef56c95b9fcaeb97f87e18c7a674dbeb5173204","created_at":"2021-05-26T22:48:31Z","closed_at":"2021-05-27T15:50:13Z","merged_at":"2021-05-27T15:50:13Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654248666,"title":"Prevent divisions by 0","body":"PiperOrigin-RevId: 371003153\nChange-Id: Idef56c95b9fcaeb97f87e18c7a674dbeb5173204","created_at":"2021-05-26T21:27:28Z","closed_at":"2021-05-27T15:49:46Z","merged_at":"2021-05-27T15:49:46Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654246442,"title":"Prevent division by 0 in OneHot implementation","body":"If input indices is degenerate, the implementation would do a divide by zero. See https://github.com/tensorflow/tensorflow/blob/745d57df6d5e9bc568666a2a48ed8dd629c27241/tensorflow/lite/kernels/one_hot.cc#L68-L72\n\nPiperOrigin-RevId: 370966870\nChange-Id: Ie018337811c8016b5a1d3a277d00d5f2e19a2058","created_at":"2021-05-26T21:24:17Z","closed_at":"2021-05-31T00:20:29Z","merged_at":"2021-05-31T00:20:29Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654246281,"title":"Prevent division by 0 in OneHot implementation","body":"If input indices is degenerate, the implementation would do a divide by zero. See https://github.com/tensorflow/tensorflow/blob/745d57df6d5e9bc568666a2a48ed8dd629c27241/tensorflow/lite/kernels/one_hot.cc#L68-L72\n\nPiperOrigin-RevId: 370966870\nChange-Id: Ie018337811c8016b5a1d3a277d00d5f2e19a2058","created_at":"2021-05-26T21:24:06Z","closed_at":"2021-05-31T00:20:05Z","merged_at":"2021-05-31T00:20:05Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654245932,"title":"Prevent division by 0 in OneHot implementation","body":"If input indices is degenerate, the implementation would do a divide by zero. See https://github.com/tensorflow/tensorflow/blob/745d57df6d5e9bc568666a2a48ed8dd629c27241/tensorflow/lite/kernels/one_hot.cc#L68-L72\n\nPiperOrigin-RevId: 370966870\nChange-Id: Ie018337811c8016b5a1d3a277d00d5f2e19a2058","created_at":"2021-05-26T21:23:41Z","closed_at":"2021-05-31T00:19:50Z","merged_at":"2021-05-31T00:19:50Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654245029,"title":"Prevent division by 0 in OneHot implementation","body":"If input indices is degenerate, the implementation would do a divide by zero. See https://github.com/tensorflow/tensorflow/blob/745d57df6d5e9bc568666a2a48ed8dd629c27241/tensorflow/lite/kernels/one_hot.cc#L68-L72\n\nPiperOrigin-RevId: 370966870\nChange-Id: Ie018337811c8016b5a1d3a277d00d5f2e19a2058","created_at":"2021-05-26T21:22:23Z","closed_at":"2021-05-31T00:19:32Z","merged_at":"2021-05-31T00:19:32Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654244705,"title":"Prevent division by 0","body":"PiperOrigin-RevId: 370998952\nChange-Id: I6b1d49079624ee1447d2d9b53a8976fb356cc8f5","created_at":"2021-05-26T21:21:54Z","closed_at":"2021-05-30T22:28:56Z","merged_at":"2021-05-30T22:28:56Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654244501,"title":"Prevent division by 0","body":"PiperOrigin-RevId: 370998952\nChange-Id: I6b1d49079624ee1447d2d9b53a8976fb356cc8f5","created_at":"2021-05-26T21:21:34Z","closed_at":"2021-05-30T22:28:39Z","merged_at":"2021-05-30T22:28:38Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654244340,"title":"Prevent division by 0","body":"PiperOrigin-RevId: 370998952\nChange-Id: I6b1d49079624ee1447d2d9b53a8976fb356cc8f5","created_at":"2021-05-26T21:21:18Z","closed_at":"2021-05-30T22:28:23Z","merged_at":"2021-05-30T22:28:23Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654243309,"title":"Prevent division by 0","body":"PiperOrigin-RevId: 370998952\nChange-Id: I6b1d49079624ee1447d2d9b53a8976fb356cc8f5","created_at":"2021-05-26T21:19:48Z","closed_at":"2021-05-30T22:27:59Z","merged_at":"2021-05-30T22:27:59Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654240364,"title":"Prevent division by 0","body":"PiperOrigin-RevId: 370995582\nChange-Id: I670ffaf52d1ff8823ec31ea5f438f9125b402223","created_at":"2021-05-26T21:16:43Z","closed_at":"2021-05-30T22:27:32Z","merged_at":"2021-05-30T22:27:32Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654240108,"title":"Prevent division by 0","body":"PiperOrigin-RevId: 370995582\nChange-Id: I670ffaf52d1ff8823ec31ea5f438f9125b402223","created_at":"2021-05-26T21:16:20Z","closed_at":"2021-05-30T22:27:16Z","merged_at":"2021-05-30T22:27:16Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654238042,"title":"Prevent division by 0","body":"PiperOrigin-RevId: 370995582\nChange-Id: I670ffaf52d1ff8823ec31ea5f438f9125b402223","created_at":"2021-05-26T21:13:35Z","closed_at":"2021-05-30T22:26:59Z","merged_at":"2021-05-30T22:26:59Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654237849,"title":"Prevent division by 0","body":"PiperOrigin-RevId: 370995582\nChange-Id: I670ffaf52d1ff8823ec31ea5f438f9125b402223","created_at":"2021-05-26T21:13:22Z","closed_at":"2021-05-30T22:26:39Z","merged_at":"2021-05-30T22:26:39Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654236830,"title":"Prevent division by 0","body":"PiperOrigin-RevId: 370984990\nChange-Id: Ib324955bbeb1cbd97c82fd5d61a00a2697c9a2de","created_at":"2021-05-26T21:12:06Z","closed_at":"2021-05-30T22:26:19Z","merged_at":"2021-05-30T22:26:19Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654234841,"title":"Prevent division by 0","body":"PiperOrigin-RevId: 370984990\nChange-Id: Ib324955bbeb1cbd97c82fd5d61a00a2697c9a2de","created_at":"2021-05-26T21:09:35Z","closed_at":"2021-05-30T22:26:04Z","merged_at":"2021-05-30T22:26:04Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654225816,"title":"Prevent division by 0","body":"PiperOrigin-RevId: 370984990\nChange-Id: Ib324955bbeb1cbd97c82fd5d61a00a2697c9a2de","created_at":"2021-05-26T20:56:48Z","closed_at":"2021-05-30T22:25:44Z","merged_at":"2021-05-30T22:25:44Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654225656,"title":"Prevent division by 0","body":"PiperOrigin-RevId: 370984990\nChange-Id: Ib324955bbeb1cbd97c82fd5d61a00a2697c9a2de","created_at":"2021-05-26T20:56:34Z","closed_at":"2021-05-30T22:25:26Z","merged_at":"2021-05-30T22:25:25Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654224955,"title":"Prevent division by 0","body":"PiperOrigin-RevId: 370979352\nChange-Id: Ic79191c316d986fc6072ecaebfec9d5f2b924d00","created_at":"2021-05-26T20:55:33Z","closed_at":"2021-05-30T22:25:05Z","merged_at":"2021-05-30T22:25:05Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654224226,"title":"Prevent division by 0","body":"PiperOrigin-RevId: 370979352\nChange-Id: Ic79191c316d986fc6072ecaebfec9d5f2b924d00","created_at":"2021-05-26T20:54:34Z","closed_at":"2021-05-30T22:23:57Z","merged_at":"2021-05-30T22:23:57Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654222513,"title":"Make OSS errors match the internal errors.","body":"With this change, the internal errors from https://github.com/tensorflow/tensorflow/pull/47935 are also reproducible from the open-source build.\r\n\r\nBug: http://b/161002902\r\n","created_at":"2021-05-26T20:52:24Z","closed_at":"2021-05-26T22:33:23Z","merged_at":"2021-05-26T22:33:23Z","user_id":2789958,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654206026,"title":"Prevent division by 0","body":"PiperOrigin-RevId: 370966645\nChange-Id: I831bfd96c7eb77b02d7ebb744335f59f6e5728cb","created_at":"2021-05-26T20:30:30Z","closed_at":"2021-05-30T22:23:26Z","merged_at":"2021-05-30T22:23:26Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654205880,"title":"Prevent division by 0","body":"PiperOrigin-RevId: 370966645\nChange-Id: I831bfd96c7eb77b02d7ebb744335f59f6e5728cb","created_at":"2021-05-26T20:30:16Z","closed_at":"2021-05-30T22:23:05Z","merged_at":"2021-05-30T22:23:05Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654205731,"title":"Prevent division by 0","body":"PiperOrigin-RevId: 370966645\nChange-Id: I831bfd96c7eb77b02d7ebb744335f59f6e5728cb","created_at":"2021-05-26T20:30:03Z","closed_at":"2021-05-30T22:22:43Z","merged_at":"2021-05-30T22:22:43Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654205148,"title":"Prevent division by 0","body":"PiperOrigin-RevId: 370966645\nChange-Id: I831bfd96c7eb77b02d7ebb744335f59f6e5728cb","created_at":"2021-05-26T20:29:16Z","closed_at":"2021-05-30T22:22:12Z","merged_at":"2021-05-30T22:22:12Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654200822,"title":"[CherryPick]:Prevent division by 0.","body":"PiperOrigin-RevId: 370962554\nChange-Id: I0b9b62f4d8e1046dd88f9433f8dfeaf61a901680","created_at":"2021-05-26T20:23:21Z","closed_at":"2021-05-30T22:21:50Z","merged_at":"2021-05-30T22:21:50Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654200242,"title":"[CherryPick]:Prevent division by 0.","body":"PiperOrigin-RevId: 370962554\nChange-Id: I0b9b62f4d8e1046dd88f9433f8dfeaf61a901680","created_at":"2021-05-26T20:22:37Z","closed_at":"2021-05-30T22:21:29Z","merged_at":"2021-05-30T22:21:29Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654199067,"title":"[CherryPick]:Prevent division by 0.","body":"PiperOrigin-RevId: 370962554\nChange-Id: I0b9b62f4d8e1046dd88f9433f8dfeaf61a901680","created_at":"2021-05-26T20:21:07Z","closed_at":"2021-05-30T22:21:00Z","merged_at":"2021-05-30T22:21:00Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654171921,"title":"Prevent division by 0.","body":"PiperOrigin-RevId: 370962554\nChange-Id: I0b9b62f4d8e1046dd88f9433f8dfeaf61a901680","created_at":"2021-05-26T19:45:28Z","closed_at":"2021-05-30T22:20:21Z","merged_at":"2021-05-30T22:20:21Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654136954,"title":"Prevent infinite loop/stack overflow in TFLite `while` op.","body":"PiperOrigin-RevId: 370800333\nChange-Id: I6a2e4ff849da339545c449db2af7e11ce6ff02c3","created_at":"2021-05-26T18:57:23Z","closed_at":"2021-05-30T13:15:23Z","merged_at":"2021-05-30T13:15:23Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654136762,"title":"Prevent infinite loop/stack overflow in TFLite `while` op.","body":"PiperOrigin-RevId: 370800333\nChange-Id: I6a2e4ff849da339545c449db2af7e11ce6ff02c3","created_at":"2021-05-26T18:57:04Z","closed_at":"2021-05-30T13:15:04Z","merged_at":"2021-05-30T13:15:04Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654136598,"title":"Prevent infinite loop/stack overflow in TFLite `while` op.","body":"PiperOrigin-RevId: 370800333\nChange-Id: I6a2e4ff849da339545c449db2af7e11ce6ff02c3","created_at":"2021-05-26T18:56:47Z","closed_at":"2021-05-30T13:14:32Z","merged_at":"2021-05-30T13:14:32Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654135716,"title":"Prevent infinite loop/stack overflow in TFLite `while` op.","body":"PiperOrigin-RevId: 370800333\nChange-Id: I6a2e4ff849da339545c449db2af7e11ce6ff02c3","created_at":"2021-05-26T18:55:32Z","closed_at":"2021-05-30T13:14:14Z","merged_at":"2021-05-30T13:14:14Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654083760,"title":"Revert \"Revert \"[CherryPick]: Prevent a null pointer exception in TFLite\"\"","body":"Reverts tensorflow/tensorflow#49759","created_at":"2021-05-26T17:52:37Z","closed_at":"2021-05-26T17:55:44Z","merged_at":"2021-05-26T17:55:44Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654083500,"title":"Revert \"[CherryPick]: Prevent a null pointer exception in TFLite\"","body":"Reverts tensorflow/tensorflow#49752","created_at":"2021-05-26T17:52:21Z","closed_at":"2021-05-26T17:52:28Z","merged_at":"2021-05-26T17:52:28Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654081737,"title":"Prevent a null pointer dereference in TFLite.","body":"PiperOrigin-RevId: 370800353\nChange-Id: Ic9c9712ce5c6e384c954dcd640a5bd9ff05c9a05","created_at":"2021-05-26T17:50:22Z","closed_at":"2021-05-26T18:05:43Z","merged_at":"2021-05-26T18:05:43Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654081542,"title":"Prevent a null pointer dereference in TFLite.","body":"PiperOrigin-RevId: 370800353\nChange-Id: Ic9c9712ce5c6e384c954dcd640a5bd9ff05c9a05","created_at":"2021-05-26T17:50:10Z","closed_at":"2021-05-26T18:05:26Z","merged_at":"2021-05-26T18:05:26Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654081319,"title":"Prevent a null pointer dereference in TFLite.","body":"PiperOrigin-RevId: 370800353\nChange-Id: Ic9c9712ce5c6e384c954dcd640a5bd9ff05c9a05","created_at":"2021-05-26T17:49:57Z","closed_at":"2021-05-26T18:05:09Z","merged_at":"2021-05-26T18:05:09Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654079375,"title":"Prevent a null pointer dereference in TFLite.","body":"PiperOrigin-RevId: 370800353\nChange-Id: Ic9c9712ce5c6e384c954dcd640a5bd9ff05c9a05","created_at":"2021-05-26T17:47:54Z","closed_at":"2021-05-26T18:04:53Z","merged_at":"2021-05-26T18:04:53Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654069155,"title":"[CherryPick]: Prevent a null pointer exception in TFLite","body":null,"created_at":"2021-05-26T17:37:27Z","closed_at":"2021-05-26T17:56:56Z","merged_at":"2021-05-26T17:56:56Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654068988,"title":"[CherryPick]: Prevent a null pointer exception in TFLite","body":null,"created_at":"2021-05-26T17:37:17Z","closed_at":"2021-05-26T17:50:29Z","merged_at":"2021-05-26T17:50:29Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654058188,"title":"micro:BATCH_MATMUL PR3-5","body":"micro: port operator BATCH_MATMUL kernel from lite with test\r\n\r\nComplete implementation of TFLM operator BATCH_MATMUL and associated TFLM test code.\r\n\r\nPR step 5 of the work to port operator BATCH_MATMUL as tracked in Issue #46504","created_at":"2021-05-26T17:26:14Z","closed_at":"2021-06-01T17:05:43Z","merged_at":null,"user_id":13169112,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654056073,"title":"Prevent a null pointer exception in TFLite","body":"PiperOrigin-RevId: 370800206\nChange-Id: Idd437ebce4ff224120d8eefc1c14c062173b71d6","created_at":"2021-05-26T17:24:17Z","closed_at":"2021-05-26T17:48:55Z","merged_at":"2021-05-26T17:48:55Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654055643,"title":"Prevent a null pointer exception in TFLite","body":"PiperOrigin-RevId: 370800206\nChange-Id: Idd437ebce4ff224120d8eefc1c14c062173b71d6","created_at":"2021-05-26T17:23:52Z","closed_at":"2021-05-26T17:48:39Z","merged_at":"2021-05-26T17:48:39Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654049764,"title":"Fix another division by 0 in TFLite","body":"PiperOrigin-RevId: 370800181\nChange-Id: I924809166a6131f5075e6d45c455106538d755f9","created_at":"2021-05-26T17:18:57Z","closed_at":"2021-05-26T17:41:33Z","merged_at":"2021-05-26T17:41:33Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654049583,"title":"Fix another division by 0 in TFLite","body":"PiperOrigin-RevId: 370800181\nChange-Id: I924809166a6131f5075e6d45c455106538d755f9","created_at":"2021-05-26T17:18:39Z","closed_at":"2021-05-26T17:41:19Z","merged_at":"2021-05-26T17:41:19Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654049538,"title":"Fix another division by 0 in TFLite","body":"PiperOrigin-RevId: 370800181\nChange-Id: I924809166a6131f5075e6d45c455106538d755f9","created_at":"2021-05-26T17:18:35Z","closed_at":"2021-05-26T17:41:03Z","merged_at":"2021-05-26T17:41:03Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654049509,"title":"Fix another division by 0 in TFLite","body":"PiperOrigin-RevId: 370800181\nChange-Id: I924809166a6131f5075e6d45c455106538d755f9","created_at":"2021-05-26T17:18:32Z","closed_at":"2021-05-26T17:40:23Z","merged_at":"2021-05-26T17:40:23Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":654047763,"title":"Handle one more division by 0 in TFLite.","body":"PiperOrigin-RevId: 370800140\nChange-Id: I9ab42e5aaccf02f226d1282611490a54cf7d273e","created_at":"2021-05-26T17:16:51Z","closed_at":"2021-05-26T17:39:46Z","merged_at":"2021-05-26T17:39:46Z","user_id":53313357,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":654045588,"title":"Handle one more division by 0 in TFLite.","body":"PiperOrigin-RevId: 370800140\nChange-Id: I9ab42e5aaccf02f226d1282611490a54cf7d273e","created_at":"2021-05-26T17:14:47Z","closed_at":"2021-05-26T17:39:32Z","merged_at":"2021-05-26T17:39:32Z","user_id":53313357,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":654045527,"title":"Handle one more division by 0 in TFLite.","body":"PiperOrigin-RevId: 370800140\nChange-Id: I9ab42e5aaccf02f226d1282611490a54cf7d273e","created_at":"2021-05-26T17:14:43Z","closed_at":"2021-05-26T17:39:13Z","merged_at":"2021-05-26T17:39:13Z","user_id":53313357,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":654045486,"title":"Handle one more division by 0 in TFLite.","body":"PiperOrigin-RevId: 370800140\nChange-Id: I9ab42e5aaccf02f226d1282611490a54cf7d273e","created_at":"2021-05-26T17:14:41Z","closed_at":"2021-05-26T17:38:55Z","merged_at":"2021-05-26T17:38:55Z","user_id":53313357,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":653976834,"title":"Add docs about forcing zero output for mask with Bidirectional","body":"#49738 \r\nAdd description that the output of mask timestep is zero when `returns_sequences` of layer is true with Bidirectional.","created_at":"2021-05-26T16:17:17Z","closed_at":"2021-06-10T17:58:07Z","merged_at":"2021-06-10T17:58:07Z","user_id":30718444,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":653933164,"title":"[MLIR][DISC] add ConvertConvDynamic and ConvertGatherV2OpDynamic","body":"We are porting our MLIR-based dynamic shape compiler to tf community (From OP def, Patttern, to Optimization pass, etc).\r\nThis is the second PR about tf2mhlo pattern conversion, which including ConvertConvDynamic and ConvertGatherV2OpDynamic.\r\nThe rest pattern conversions we will add:\r\n- ConvertRangeOpxxx\r\n- ConvertSigmoidOpxxx\r\n- ConvertSliceOpxxx\r\n- ConvertSplitOpxxx\r\n- ConvertSqueezeOpxxx\r\n- ConvertStridedSliceOpxxx\r\n- ConvertTileOpxxx\r\n- ConvertTopKV2Opxxx\r\n- ConvertUnpackOpxxx\r\n- ConvertPrintOp\r\n- ConvertSigmoidGradOpxxx\r\n- ConvertSignOpxxx\r\n","created_at":"2021-05-26T15:38:48Z","closed_at":"2021-06-11T23:26:00Z","merged_at":"2021-06-11T23:26:00Z","user_id":16014148,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":653922105,"title":"[TFLite] Add int8 and int16x8 support for the REDUCE_PROD operator","body":"Hello,\r\n\r\nThis PR adds int8 and int16x8 support for the REDUCE_PROD operator.\r\n\r\nIdeally the kernel should do the product of all the quantized elements in the reduced axes and then do a final rescale:\r\n![equation2](https://user-images.githubusercontent.com/21028116/119684315-51864000-be3c-11eb-9914-fcc27d410e6c.png)\r\n\r\nThis would give the best accuracy but unfortunately it would quickly overflow the accumulator. To overcome the issue the product is rescaled at each step in a way similar to\r\n![equation](https://user-images.githubusercontent.com/21028116/119684201-39aebc00-be3c-11eb-8f1c-e7c15fab3143.png)\r\nwith a slight modification that the rescaling is done after each `in_i*in_i+1` multiplication plus a final rescaling to avoid losing too much precision by rescaling each `in_i` individually.\r\n\r\nNote that it can degenerate to a precision of 0 if an intermediate results is too close to 0 and becomes a quantized 0. Example 1.5 * 0.5 * 0.1 * 0.01 * 5.3 * 8.3 * 2.3 * 9.6 * 10.2 = 7.43043888 but the intermediate 1.5 * 0.5 * 0.1 * 0.01 = 0.00075 could become a quantized 0 and the whole quantized result will be 0 instead of something close to 7.4. It's unfortunately difficult to avoid it without a dynamic rescaling (and thus dynamic rescaling factor) that would rescale the accumulator once it is too close to its minimum/maximum value. \r\n\r\nIt could also happen if the 0.01 input in the example end-up to be quantized as a 0 (which would happen with the [0;10.2] range of the example using 8-bit as the quantized step would be 10.2 / 255 = 0.04). \r\n\r\nThese cases should hopefully be infrequent.\r\n\r\n\r\nThibaut","created_at":"2021-05-26T15:30:04Z","closed_at":"2021-07-22T08:23:27Z","merged_at":null,"user_id":21028116,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":653620607,"title":"[MLIR][DISC] Add memref_disc dialect as a temporary solution to optim…","body":"MemRefDisc Dialect is an expansion for MemRefDialect for DISC. This is a temporary workaround for optimizing the index calculations during codegen. Refer to https://llvm.discourse.group/t/add-an-expanded-load-store-op-in-memref-dialect/3503/26 for background informations.","created_at":"2021-05-26T11:19:37Z","closed_at":"2021-05-29T08:33:15Z","merged_at":null,"user_id":8992445,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":653097031,"title":"[PluggableDevice] Make the dimensions constant in the C API's Allocate functions","body":"The allocate functions don't modify the dimensions, so there's no reason they can't be passed as constants. This makes it easier to call the API deep in a codebase when using arrays that are already constant and that we're not allowed to modify.","created_at":"2021-05-26T02:38:17Z","closed_at":"2021-08-16T15:53:35Z","merged_at":"2021-08-16T15:53:35Z","user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.3333333333333333}}
{"_id":653092159,"title":"Make the C API dims constant for the Allocate functions","body":"The Allocate functions don't modify the dimensions at all, so there's no reason they can't be constant. This makes it easier to call the API deep in a codebase when using arrays that we're not allowed to modify.","created_at":"2021-05-26T02:31:52Z","closed_at":"2021-05-26T02:34:33Z","merged_at":null,"user_id":5880386,"sentiment":{"polarity":0.0,"subjectivity":0.3333333333333333}}
{"_id":653050425,"title":"Multiple Eager Rewriters","body":"Enables the configuration of multiple rewriters for each of the rewriter phases in eager mode. The order of execution of the rewriters of each phase is determined by an integer ordinal number prescribed in the registration of the rewriters.","created_at":"2021-05-26T01:32:21Z","closed_at":"2021-06-11T19:22:49Z","merged_at":"2021-06-11T19:22:49Z","user_id":80296164,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652988582,"title":"Prevent one more div by 0 in TFLite","body":"PiperOrigin-RevId: 370800114\nChange-Id: I6b956aeb8c458cc6f514408d2e89ffacfe249e57","created_at":"2021-05-26T00:10:57Z","closed_at":"2021-05-26T17:38:37Z","merged_at":"2021-05-26T17:38:37Z","user_id":53313357,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":652988381,"title":"Prevent one more div by 0 in TFLite","body":"PiperOrigin-RevId: 370800114\nChange-Id: I6b956aeb8c458cc6f514408d2e89ffacfe249e57","created_at":"2021-05-26T00:10:37Z","closed_at":"2021-05-26T17:38:21Z","merged_at":"2021-05-26T17:38:21Z","user_id":53313357,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":652988261,"title":"[Kernel C API] Implementation of variable ops RFC.","body":"The implementation for the Variable Ops RFC.\r\nhttps://github.com/tensorflow/community/blob/master/rfcs/20210504-kernel-extension-variable-ops.md\r\n\r\n@penpornk , @reedwm , @saxenasaurabh , @jzhoulon ","created_at":"2021-05-26T00:10:24Z","closed_at":"2021-06-23T19:11:27Z","merged_at":"2021-06-23T19:11:26Z","user_id":453004,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652988186,"title":"Prevent one more div by 0 in TFLite","body":"PiperOrigin-RevId: 370800114\nChange-Id: I6b956aeb8c458cc6f514408d2e89ffacfe249e57","created_at":"2021-05-26T00:10:15Z","closed_at":"2021-05-26T17:38:04Z","merged_at":"2021-05-26T17:38:04Z","user_id":53313357,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":652988106,"title":"Prevent one more div by 0 in TFLite","body":"PiperOrigin-RevId: 370800114\nChange-Id: I6b956aeb8c458cc6f514408d2e89ffacfe249e57","created_at":"2021-05-26T00:10:06Z","closed_at":"2021-05-26T17:37:47Z","merged_at":"2021-05-26T17:37:47Z","user_id":53313357,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":652987191,"title":"Prevent another div by 0 in optimized pooling implementations TFLite","body":"PiperOrigin-RevId: 370800091\nChange-Id: I2119352f57fb5ca4f2051e0e2d749403304a979b","created_at":"2021-05-26T00:08:25Z","closed_at":"2021-05-26T17:37:24Z","merged_at":"2021-05-26T17:37:24Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652987113,"title":"Prevent another div by 0 in optimized pooling implementations TFLite","body":"PiperOrigin-RevId: 370800091\nChange-Id: I2119352f57fb5ca4f2051e0e2d749403304a979b","created_at":"2021-05-26T00:08:16Z","closed_at":"2021-05-26T17:36:19Z","merged_at":"2021-05-26T17:36:19Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652986944,"title":"Prevent another div by 0 in optimized pooling implementations TFLite","body":"PiperOrigin-RevId: 370800091\nChange-Id: I2119352f57fb5ca4f2051e0e2d749403304a979b","created_at":"2021-05-26T00:07:58Z","closed_at":"2021-05-26T17:36:05Z","merged_at":"2021-05-26T17:36:05Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652986129,"title":"Prevent another div by 0 in optimized pooling implementations TFLite","body":"PiperOrigin-RevId: 370800091\nChange-Id: I2119352f57fb5ca4f2051e0e2d749403304a979b","created_at":"2021-05-26T00:06:30Z","closed_at":"2021-05-26T17:35:47Z","merged_at":"2021-05-26T17:35:47Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652984435,"title":"Fix division by zero in TFLite padding.","body":"PiperOrigin-RevId: 370777494\nChange-Id: Ic1331e4a1603b9e4c8aa183012a6c8237410aa0f","created_at":"2021-05-26T00:03:21Z","closed_at":"2021-05-26T17:35:27Z","merged_at":"2021-05-26T17:35:27Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652984353,"title":"Fix division by zero in TFLite padding.","body":"PiperOrigin-RevId: 370777494\nChange-Id: Ic1331e4a1603b9e4c8aa183012a6c8237410aa0f","created_at":"2021-05-26T00:03:13Z","closed_at":"2021-05-26T17:35:12Z","merged_at":"2021-05-26T17:35:12Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652984216,"title":"Fix division by zero in TFLite padding.","body":"PiperOrigin-RevId: 370777494\nChange-Id: Ic1331e4a1603b9e4c8aa183012a6c8237410aa0f","created_at":"2021-05-26T00:03:00Z","closed_at":"2021-05-26T17:34:39Z","merged_at":"2021-05-26T17:34:39Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652984107,"title":"Fix division by zero in TFLite padding.","body":"PiperOrigin-RevId: 370777494\nChange-Id: Ic1331e4a1603b9e4c8aa183012a6c8237410aa0f","created_at":"2021-05-26T00:02:48Z","closed_at":"2021-05-26T17:34:22Z","merged_at":"2021-05-26T17:34:22Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652952307,"title":"Add missing valuidation to FusedBatchNorm.","body":"PiperOrigin-RevId: 372460336\nChange-Id: Ic8c4e4de67c58a741bd87f2e182bed07247d1126","created_at":"2021-05-25T23:20:22Z","closed_at":"2021-05-26T17:48:19Z","merged_at":"2021-05-26T17:48:19Z","user_id":53313357,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":652948902,"title":"Prevent overflow in sparse op","body":"PiperOrigin-RevId: 372442006\nChange-Id: I60fe31cd7e56fb3501e97c63500caf902ddeee96","created_at":"2021-05-25T23:16:03Z","closed_at":"2021-05-26T17:47:36Z","merged_at":"2021-05-26T17:47:36Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652948759,"title":"Prevent overflow in sparse op","body":"PiperOrigin-RevId: 372442006\nChange-Id: I60fe31cd7e56fb3501e97c63500caf902ddeee96","created_at":"2021-05-25T23:15:50Z","closed_at":"2021-05-26T17:47:18Z","merged_at":"2021-05-26T17:47:18Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652947755,"title":"Prevent overflow in sparse op","body":"PiperOrigin-RevId: 372442006\nChange-Id: I60fe31cd7e56fb3501e97c63500caf902ddeee96","created_at":"2021-05-25T23:14:31Z","closed_at":"2021-05-26T17:46:58Z","merged_at":"2021-05-26T17:46:58Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652946728,"title":"Prevent overflow in sparse op","body":"PiperOrigin-RevId: 372442006\nChange-Id: I60fe31cd7e56fb3501e97c63500caf902ddeee96","created_at":"2021-05-25T23:13:09Z","closed_at":"2021-05-26T18:04:36Z","merged_at":"2021-05-26T18:04:36Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652946284,"title":"Fix heap OOB read in dequantize op.","body":"Also fixes SEGV in same op\n\nPiperOrigin-RevId: 372437896\nChange-Id: I135e94d360c2a1ce374c10f7e0fed1af603dbc02","created_at":"2021-05-25T23:12:30Z","closed_at":"2021-05-26T17:46:42Z","merged_at":"2021-05-26T17:46:42Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652945834,"title":"Fix heap OOB read in dequantize op.","body":"Also fixes SEGV in same op\n\nPiperOrigin-RevId: 372437896\nChange-Id: I135e94d360c2a1ce374c10f7e0fed1af603dbc02","created_at":"2021-05-25T23:12:05Z","closed_at":"2021-05-26T17:46:28Z","merged_at":"2021-05-26T17:46:28Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652945128,"title":"Fix heap OOB read in dequantize op.","body":"Also fixes SEGV in same op\n\nPiperOrigin-RevId: 372437896\nChange-Id: I135e94d360c2a1ce374c10f7e0fed1af603dbc02","created_at":"2021-05-25T23:11:39Z","closed_at":"2021-05-26T17:46:12Z","merged_at":"2021-05-26T17:46:12Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652942768,"title":"Fix heap OOB read in dequantize op.","body":"Also fixes SEGV in same op\n\nPiperOrigin-RevId: 372437896\nChange-Id: I135e94d360c2a1ce374c10f7e0fed1af603dbc02","created_at":"2021-05-25T23:10:18Z","closed_at":"2021-05-26T17:45:56Z","merged_at":"2021-05-26T17:45:56Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652939969,"title":"Fix SEGV in CTC ops","body":"PiperOrigin-RevId: 372430279\nChange-Id: I7ec2ad9d6f4d0980c33de45d27c6b17df5c6e26f","created_at":"2021-05-25T23:08:36Z","closed_at":"2021-05-26T17:45:41Z","merged_at":"2021-05-26T17:45:40Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652939554,"title":"Fix SEGV in CTC ops","body":"PiperOrigin-RevId: 372430279\nChange-Id: I7ec2ad9d6f4d0980c33de45d27c6b17df5c6e26f","created_at":"2021-05-25T23:08:20Z","closed_at":"2021-05-26T17:45:26Z","merged_at":"2021-05-26T17:45:26Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652938702,"title":"Fix SEGV in CTC ops","body":"PiperOrigin-RevId: 372430279\nChange-Id: I7ec2ad9d6f4d0980c33de45d27c6b17df5c6e26f","created_at":"2021-05-25T23:07:49Z","closed_at":"2021-05-26T17:45:11Z","merged_at":"2021-05-26T17:45:11Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652936288,"title":"Fix SEGV in CTC ops","body":"PiperOrigin-RevId: 372430279\nChange-Id: I7ec2ad9d6f4d0980c33de45d27c6b17df5c6e26f","created_at":"2021-05-25T23:06:17Z","closed_at":"2021-05-26T17:44:51Z","merged_at":"2021-05-26T17:44:51Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652935677,"title":"Prevent heap OOB error in `MaxPoolGrad`","body":"PiperOrigin-RevId: 372424854\nChange-Id: Idac0f23867ad8b0601cafbaaa52d5e64269e63a7","created_at":"2021-05-25T23:05:29Z","closed_at":"2021-05-26T17:44:34Z","merged_at":"2021-05-26T17:44:34Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652935153,"title":"Prevent heap OOB error in `MaxPoolGrad`","body":"PiperOrigin-RevId: 372424854\nChange-Id: Idac0f23867ad8b0601cafbaaa52d5e64269e63a7","created_at":"2021-05-25T23:04:47Z","closed_at":"2021-05-26T17:44:21Z","merged_at":"2021-05-26T17:44:21Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652934807,"title":"Prevent heap OOB error in `MaxPoolGrad`","body":"PiperOrigin-RevId: 372424854\nChange-Id: Idac0f23867ad8b0601cafbaaa52d5e64269e63a7","created_at":"2021-05-25T23:04:18Z","closed_at":"2021-05-26T17:44:07Z","merged_at":"2021-05-26T17:44:07Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652933401,"title":"Prevent heap OOB error in `MaxPoolGrad`","body":"PiperOrigin-RevId: 372424854\nChange-Id: Idac0f23867ad8b0601cafbaaa52d5e64269e63a7","created_at":"2021-05-25T23:02:36Z","closed_at":"2021-05-26T17:43:51Z","merged_at":"2021-05-26T17:43:51Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652932848,"title":"Validate inputs of `FractionalAvgPoolGrad`.","body":"PiperOrigin-RevId: 372420640\nChange-Id: Icc583928e6cdc3062e12498e4d2337a8fe3da016","created_at":"2021-05-25T23:01:52Z","closed_at":"2021-05-26T17:43:35Z","merged_at":"2021-05-26T17:43:35Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652932545,"title":"Validate inputs of `FractionalAvgPoolGrad`.","body":"PiperOrigin-RevId: 372420640\nChange-Id: Icc583928e6cdc3062e12498e4d2337a8fe3da016","created_at":"2021-05-25T23:01:27Z","closed_at":"2021-05-26T17:43:06Z","merged_at":"2021-05-26T17:43:06Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652932023,"title":"Validate inputs of `FractionalAvgPoolGrad`.","body":"PiperOrigin-RevId: 372420640\nChange-Id: Icc583928e6cdc3062e12498e4d2337a8fe3da016","created_at":"2021-05-25T23:00:47Z","closed_at":"2021-05-26T17:42:49Z","merged_at":"2021-05-26T17:42:49Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652930690,"title":"Validate inputs of `FractionalAvgPoolGrad`.","body":"PiperOrigin-RevId: 372420640\nChange-Id: Icc583928e6cdc3062e12498e4d2337a8fe3da016","created_at":"2021-05-25T22:59:07Z","closed_at":"2021-05-26T17:42:34Z","merged_at":"2021-05-26T17:42:34Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652928806,"title":"Validate arguments of `FractionalMaxPoolGrad`","body":"PiperOrigin-RevId: 372274982\nChange-Id: If46b0c442efa4eaef635ce6a476717060420122c","created_at":"2021-05-25T22:56:29Z","closed_at":"2021-05-26T18:04:19Z","merged_at":"2021-05-26T18:04:19Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652928082,"title":"Validate arguments of `FractionalMaxPoolGrad`","body":"PiperOrigin-RevId: 372274982\nChange-Id: If46b0c442efa4eaef635ce6a476717060420122c","created_at":"2021-05-25T22:55:33Z","closed_at":"2021-05-26T18:03:55Z","merged_at":"2021-05-26T18:03:55Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652927333,"title":"Validate arguments of `FractionalMaxPoolGrad`","body":"PiperOrigin-RevId: 372274982\nChange-Id: If46b0c442efa4eaef635ce6a476717060420122c","created_at":"2021-05-25T22:54:48Z","closed_at":"2021-05-26T18:03:42Z","merged_at":"2021-05-26T18:03:42Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652925555,"title":"Validate arguments of `FractionalMaxPoolGrad`","body":"PiperOrigin-RevId: 372274982\nChange-Id: If46b0c442efa4eaef635ce6a476717060420122c","created_at":"2021-05-25T22:53:33Z","closed_at":"2021-05-26T18:03:27Z","merged_at":"2021-05-26T18:03:27Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652924418,"title":"Fix assertion failure in pooling_ops_3d","body":"PiperOrigin-RevId: 372364504\nChange-Id: Iecde4fe26b47a8fa935d6e2611b5585ed5777781","created_at":"2021-05-25T22:52:06Z","closed_at":"2021-05-26T18:03:13Z","merged_at":"2021-05-26T18:03:13Z","user_id":53313357,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":652923482,"title":"Fix assertion failure in pooling_ops_3d","body":"PiperOrigin-RevId: 372364504\nChange-Id: Iecde4fe26b47a8fa935d6e2611b5585ed5777781","created_at":"2021-05-25T22:50:57Z","closed_at":"2021-05-26T18:02:59Z","merged_at":"2021-05-26T18:02:59Z","user_id":53313357,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":652914027,"title":"Fix assertion failure in pooling_ops_3d","body":"PiperOrigin-RevId: 372364504\nChange-Id: Iecde4fe26b47a8fa935d6e2611b5585ed5777781","created_at":"2021-05-25T22:38:52Z","closed_at":"2021-05-26T18:02:45Z","merged_at":"2021-05-26T18:02:45Z","user_id":53313357,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":652898688,"title":"Fix assertion failure in pooling_ops_3d","body":"PiperOrigin-RevId: 372364504\nChange-Id: Iecde4fe26b47a8fa935d6e2611b5585ed5777781","created_at":"2021-05-25T22:19:40Z","closed_at":"2021-05-26T18:02:29Z","merged_at":"2021-05-26T18:02:29Z","user_id":53313357,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":652880729,"title":"Refactor Xtensa conv kernels.","body":"Moved Hifimini and Hifi specific code into their own cc files to make it easier to read and have the ability to add a basic framework to merge optimizations for the Vision P6 as well.\r\n\r\nManually tested the kernel_conv_test on hifimini, fusion_f1, hifi5 and vision_p6:\r\n\r\n```\r\nmake -f tensorflow/lite/micro/tools/make/Makefile TARGET=xtensa OPTIMIZED_KERNEL_DIR=xtensa TARGET_ARCH=hifimini XTENSA_CORE=mini1m1m_RG test_kernel_conv_test -j8\r\nmake -f tensorflow/lite/micro/tools/make/Makefile TARGET=xtensa TARGET_ARCH=fusion_f1 OPTIMIZED_KERNEL_DIR=xtensa XTENSA_CORE=F1_190305_swupgrade kernel_conv_test -j8\r\nmake -f tensorflow/lite/micro/tools/make/Makefile TARGET=xtensa OPTIMIZED_KERNEL_DIR=xtensa TARGET_ARCH=hifi5 XTENSA_CORE=AE_HiFi5_LE5_AO_FP_XC test_kernel_conv_test -j8\r\nmake -f tensorflow/lite/micro/tools/make/Makefile TARGET=xtensa OPTIMIZED_KERNEL_DIR=xtensa TARGET_ARCH=vision_p6 XTENSA_CORE=P6_200528 test_kernel_conv_test -j8\r\n```\r\n\r\nBug: http://b/189255344\r\n","created_at":"2021-05-25T21:58:18Z","closed_at":"2021-05-26T00:16:10Z","merged_at":"2021-05-26T00:16:09Z","user_id":2789958,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652866869,"title":"Fix OOB read issue with `tf.raw_ops.CTCLoss`.","body":"PiperOrigin-RevId: 372242187\nChange-Id: I347228ed8c04e1d2eb9d2479ae52f51d1b512c6e","created_at":"2021-05-25T21:43:08Z","closed_at":"2021-05-26T18:01:51Z","merged_at":"2021-05-26T18:01:51Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652866323,"title":"Fix OOB read issue with `tf.raw_ops.CTCLoss`.","body":"PiperOrigin-RevId: 372242187\nChange-Id: I347228ed8c04e1d2eb9d2479ae52f51d1b512c6e","created_at":"2021-05-25T21:42:32Z","closed_at":"2021-05-26T18:01:38Z","merged_at":"2021-05-26T18:01:38Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652865416,"title":"Fix OOB read issue with `tf.raw_ops.CTCLoss`.","body":"PiperOrigin-RevId: 372242187\nChange-Id: I347228ed8c04e1d2eb9d2479ae52f51d1b512c6e","created_at":"2021-05-25T21:41:22Z","closed_at":"2021-05-26T18:01:26Z","merged_at":"2021-05-26T18:01:26Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652863788,"title":"Fix OOB read issue with `tf.raw_ops.CTCLoss`.","body":"PiperOrigin-RevId: 372242187\nChange-Id: I347228ed8c04e1d2eb9d2479ae52f51d1b512c6e","created_at":"2021-05-25T21:39:26Z","closed_at":"2021-05-26T18:01:08Z","merged_at":"2021-05-26T18:01:08Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652862742,"title":"Fix nullptr deref in `tf.raw_ops.CTCLoss`.","body":"PiperOrigin-RevId: 372266334\nChange-Id: Ic52c3e9f13a38f54482d670907eda1688450862b","created_at":"2021-05-25T21:38:18Z","closed_at":"2021-05-26T18:00:52Z","merged_at":"2021-05-26T18:00:52Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652860880,"title":"Fix nullptr deref in `tf.raw_ops.CTCLoss`.","body":"PiperOrigin-RevId: 372266334\nChange-Id: Ic52c3e9f13a38f54482d670907eda1688450862b","created_at":"2021-05-25T21:36:21Z","closed_at":"2021-05-26T18:00:39Z","merged_at":"2021-05-26T18:00:39Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652859919,"title":"Fix nullptr deref in `tf.raw_ops.CTCLoss`.","body":"PiperOrigin-RevId: 372266334\nChange-Id: Ic52c3e9f13a38f54482d670907eda1688450862b","created_at":"2021-05-25T21:35:25Z","closed_at":"2021-05-26T18:00:26Z","merged_at":"2021-05-26T18:00:26Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652858124,"title":"Fix nullptr deref in `tf.raw_ops.CTCLoss`.","body":"PiperOrigin-RevId: 372266334\nChange-Id: Ic52c3e9f13a38f54482d670907eda1688450862b","created_at":"2021-05-25T21:33:28Z","closed_at":"2021-05-26T18:00:06Z","merged_at":"2021-05-26T18:00:06Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652856535,"title":"[CherryPick]Add missing validation, prevent heap OOB","body":null,"created_at":"2021-05-25T21:31:49Z","closed_at":"2021-05-26T17:58:49Z","merged_at":"2021-05-26T17:58:49Z","user_id":53313357,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":652855407,"title":"[CherryPick]Add missing validation, prevent heap OOB","body":null,"created_at":"2021-05-25T21:30:38Z","closed_at":"2021-05-26T17:58:34Z","merged_at":"2021-05-26T17:58:34Z","user_id":53313357,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":652854335,"title":"[CherryPick]Add missing validation, prevent heap OOB","body":null,"created_at":"2021-05-25T21:29:28Z","closed_at":"2021-05-26T17:58:17Z","merged_at":"2021-05-26T17:58:17Z","user_id":53313357,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":652851597,"title":"[CherryPick]Add missing validation, prevent heap OOB","body":null,"created_at":"2021-05-25T21:26:33Z","closed_at":"2021-05-26T17:57:55Z","merged_at":"2021-05-26T17:57:55Z","user_id":53313357,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":652844078,"title":"Add missing validation to pooling_ops_3d","body":"PiperOrigin-RevId: 372218727\nChange-Id: I6b9ed4266aa7286c02f1f230d7bea922c1be547e","created_at":"2021-05-25T21:19:17Z","closed_at":"2021-05-26T18:14:58Z","merged_at":"2021-05-26T18:14:58Z","user_id":53313357,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":652843371,"title":"Add missing validation to pooling_ops_3d","body":"PiperOrigin-RevId: 372218727\nChange-Id: I6b9ed4266aa7286c02f1f230d7bea922c1be547e","created_at":"2021-05-25T21:18:31Z","closed_at":"2021-05-26T18:13:49Z","merged_at":"2021-05-26T18:13:49Z","user_id":53313357,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":652842092,"title":"Add missing validation to pooling_ops_3d","body":"PiperOrigin-RevId: 372218727\nChange-Id: I6b9ed4266aa7286c02f1f230d7bea922c1be547e","created_at":"2021-05-25T21:17:04Z","closed_at":"2021-05-26T18:13:02Z","merged_at":"2021-05-26T18:13:02Z","user_id":53313357,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":652840956,"title":"Add missing validation to pooling_ops_3d","body":"PiperOrigin-RevId: 372218727\nChange-Id: I6b9ed4266aa7286c02f1f230d7bea922c1be547e","created_at":"2021-05-25T21:15:46Z","closed_at":"2021-05-30T13:13:13Z","merged_at":"2021-05-30T13:13:13Z","user_id":53313357,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":652767179,"title":"Don't do any work if output tensor is null (prevent div by 0)","body":"PiperOrigin-RevId: 372208700\nChange-Id: Iea6b6293e887ade8538facfdb50fb931e17f511e","created_at":"2021-05-25T19:57:09Z","closed_at":"2021-05-26T18:11:58Z","merged_at":"2021-05-26T18:11:58Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652765452,"title":"Don't do any work if output tensor is null (prevent div by 0)","body":"PiperOrigin-RevId: 372208700\nChange-Id: Iea6b6293e887ade8538facfdb50fb931e17f511e","created_at":"2021-05-25T19:56:13Z","closed_at":"2021-05-26T18:11:44Z","merged_at":"2021-05-26T18:11:44Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652763024,"title":"Don't do any work if output tensor is null (prevent div by 0)","body":"PiperOrigin-RevId: 372208700\nChange-Id: Iea6b6293e887ade8538facfdb50fb931e17f511e","created_at":"2021-05-25T19:54:56Z","closed_at":"2021-05-26T18:11:30Z","merged_at":"2021-05-26T18:11:30Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652760574,"title":"Don't do any work if output tensor is null (prevent div by 0)","body":"PiperOrigin-RevId: 372208700\nChange-Id: Iea6b6293e887ade8538facfdb50fb931e17f511e","created_at":"2021-05-25T19:53:34Z","closed_at":"2021-05-26T18:11:15Z","merged_at":"2021-05-26T18:11:15Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652758765,"title":"Add missing validations to reverse_sequence_op","body":"PiperOrigin-RevId: 372178683\nChange-Id: Iac97ebab5b342f1262c77a7d9bcb4267b305ce5b","created_at":"2021-05-25T19:52:34Z","closed_at":"2021-05-26T18:10:56Z","merged_at":"2021-05-26T18:10:56Z","user_id":53313357,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":652757553,"title":"Add missing validations to reverse_sequence_op","body":"PiperOrigin-RevId: 372178683\nChange-Id: Iac97ebab5b342f1262c77a7d9bcb4267b305ce5b","created_at":"2021-05-25T19:51:40Z","closed_at":"2021-05-26T18:10:42Z","merged_at":"2021-05-26T18:10:41Z","user_id":53313357,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":652756658,"title":"Add missing validations to reverse_sequence_op","body":"PiperOrigin-RevId: 372178683\nChange-Id: Iac97ebab5b342f1262c77a7d9bcb4267b305ce5b","created_at":"2021-05-25T19:50:41Z","closed_at":"2021-05-26T18:10:24Z","merged_at":"2021-05-26T18:10:24Z","user_id":53313357,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":652754987,"title":"Add missing validations to reverse_sequence_op","body":"PiperOrigin-RevId: 372178683\nChange-Id: Iac97ebab5b342f1262c77a7d9bcb4267b305ce5b","created_at":"2021-05-25T19:48:58Z","closed_at":"2021-05-26T18:10:08Z","merged_at":"2021-05-26T18:10:08Z","user_id":53313357,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":652754063,"title":"Add several missing validations in SDCA","body":"PiperOrigin-RevId: 372172877\nChange-Id: Id366da962432e18dcbfac847d11e98488bebb70a","created_at":"2021-05-25T19:47:59Z","closed_at":"2021-05-26T18:09:52Z","merged_at":"2021-05-26T18:09:52Z","user_id":53313357,"sentiment":{"polarity":-0.1,"subjectivity":0.025}}
{"_id":652753178,"title":"Add several missing validations in SDCA","body":"PiperOrigin-RevId: 372172877\nChange-Id: Id366da962432e18dcbfac847d11e98488bebb70a","created_at":"2021-05-25T19:47:07Z","closed_at":"2021-05-26T18:09:37Z","merged_at":"2021-05-26T18:09:37Z","user_id":53313357,"sentiment":{"polarity":-0.1,"subjectivity":0.025}}
{"_id":652751998,"title":"Add several missing validations in SDCA","body":"PiperOrigin-RevId: 372172877\nChange-Id: Id366da962432e18dcbfac847d11e98488bebb70a","created_at":"2021-05-25T19:45:47Z","closed_at":"2021-05-26T18:09:21Z","merged_at":"2021-05-26T18:09:21Z","user_id":53313357,"sentiment":{"polarity":-0.1,"subjectivity":0.025}}
{"_id":652749541,"title":"Add several missing validations in SDCA","body":"PiperOrigin-RevId: 372172877\nChange-Id: Id366da962432e18dcbfac847d11e98488bebb70a","created_at":"2021-05-25T19:43:09Z","closed_at":"2021-05-26T18:09:02Z","merged_at":"2021-05-26T18:09:02Z","user_id":53313357,"sentiment":{"polarity":-0.1,"subjectivity":0.025}}
{"_id":652748276,"title":"Fix memory corruption issue with `tf.raw_ops.DrawBoundingBoxesV2`.","body":"PiperOrigin-RevId: 372033910\nChange-Id: I8a9f4efc1c8ddaacbc26ec1fbe4bfdd6791c226d","created_at":"2021-05-25T19:41:47Z","closed_at":"2021-05-26T18:08:41Z","merged_at":"2021-05-26T18:08:41Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652747522,"title":"Fix memory corruption issue with `tf.raw_ops.DrawBoundingBoxesV2`.","body":"PiperOrigin-RevId: 372033910\nChange-Id: I8a9f4efc1c8ddaacbc26ec1fbe4bfdd6791c226d","created_at":"2021-05-25T19:40:57Z","closed_at":"2021-05-26T18:08:27Z","merged_at":"2021-05-26T18:08:27Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652746558,"title":"Fix memory corruption issue with `tf.raw_ops.DrawBoundingBoxesV2`.","body":"PiperOrigin-RevId: 372033910\nChange-Id: I8a9f4efc1c8ddaacbc26ec1fbe4bfdd6791c226d","created_at":"2021-05-25T19:39:53Z","closed_at":"2021-05-26T18:08:13Z","merged_at":"2021-05-26T18:08:13Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652703090,"title":"Fix memory corruption issue with `tf.raw_ops.DrawBoundingBoxesV2`.","body":"PiperOrigin-RevId: 372033910\nChange-Id: I8a9f4efc1c8ddaacbc26ec1fbe4bfdd6791c226d","created_at":"2021-05-25T18:53:08Z","closed_at":"2021-05-26T18:07:56Z","merged_at":"2021-05-26T18:07:56Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652702139,"title":"Fix out of bound read in requantization_range_op.cc","body":"PiperOrigin-RevId: 372129031\nChange-Id: Ie684ab98a3840c5186ead3eafffc0e0ed0e8030d","created_at":"2021-05-25T18:52:04Z","closed_at":"2021-05-26T18:07:41Z","merged_at":"2021-05-26T18:07:41Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652701321,"title":"Fix out of bound read in requantization_range_op.cc","body":"PiperOrigin-RevId: 372129031\nChange-Id: Ie684ab98a3840c5186ead3eafffc0e0ed0e8030d","created_at":"2021-05-25T18:51:08Z","closed_at":"2021-05-26T18:07:26Z","merged_at":"2021-05-26T18:07:26Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652693727,"title":"Fix out of bound read in requantization_range_op.cc","body":"PiperOrigin-RevId: 372129031\nChange-Id: Ie684ab98a3840c5186ead3eafffc0e0ed0e8030d","created_at":"2021-05-25T18:43:04Z","closed_at":"2021-05-26T18:07:11Z","merged_at":"2021-05-26T18:07:11Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652692217,"title":"Fix out of bound read in requantization_range_op.cc","body":"PiperOrigin-RevId: 372129031\nChange-Id: Ie684ab98a3840c5186ead3eafffc0e0ed0e8030d","created_at":"2021-05-25T18:41:30Z","closed_at":"2021-05-26T18:06:57Z","merged_at":"2021-05-26T18:06:57Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652690445,"title":"Fix heap buffer overflow","body":"PiperOrigin-RevId: 372132844\nChange-Id: Idef9895efaf145f2b1c23d31983601ec980cd5e4","created_at":"2021-05-25T18:39:40Z","closed_at":"2021-05-29T15:44:04Z","merged_at":"2021-05-29T15:44:04Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652690313,"title":"Add option to print the src and dest files from project generation script.","body":"This can be useful for external integrations that want to manage copies on their own.\n\nSee http://b/183229719#comment3 for more context.\n","created_at":"2021-05-25T18:39:30Z","closed_at":"2021-05-26T00:22:22Z","merged_at":"2021-05-26T00:22:22Z","user_id":2789958,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652689561,"title":"Fix heap buffer overflow","body":"PiperOrigin-RevId: 372132844\nChange-Id: Idef9895efaf145f2b1c23d31983601ec980cd5e4","created_at":"2021-05-25T18:38:42Z","closed_at":"2021-05-29T15:43:49Z","merged_at":"2021-05-29T15:43:49Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652687201,"title":"Fix heap buffer overflow","body":"PiperOrigin-RevId: 372132844\nChange-Id: Idef9895efaf145f2b1c23d31983601ec980cd5e4","created_at":"2021-05-25T18:36:07Z","closed_at":"2021-05-29T15:43:33Z","merged_at":"2021-05-29T15:43:33Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652684455,"title":"Fix heap buffer overflow","body":"PiperOrigin-RevId: 372132844\nChange-Id: Idef9895efaf145f2b1c23d31983601ec980cd5e4","created_at":"2021-05-25T18:33:10Z","closed_at":"2021-05-29T15:43:15Z","merged_at":"2021-05-29T15:43:15Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652672184,"title":"Fix heap-buffer-overflow issue with `tf.raw_ops.SparseDenseCwiseMul`.","body":"PiperOrigin-RevId: 372054410\nChange-Id: Ifcce0491e2e3816838c87e73be30a1e61b65174d","created_at":"2021-05-25T18:22:17Z","closed_at":"2021-05-29T15:42:48Z","merged_at":"2021-05-29T15:42:48Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652670771,"title":"Fix heap-buffer-overflow issue with `tf.raw_ops.SparseDenseCwiseMul`.","body":"PiperOrigin-RevId: 372054410\nChange-Id: Ifcce0491e2e3816838c87e73be30a1e61b65174d","created_at":"2021-05-25T18:21:14Z","closed_at":"2021-05-29T15:42:27Z","merged_at":"2021-05-29T15:42:27Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652669373,"title":"Fix heap-buffer-overflow issue with `tf.raw_ops.SparseDenseCwiseMul`.","body":"PiperOrigin-RevId: 372054410\nChange-Id: Ifcce0491e2e3816838c87e73be30a1e61b65174d","created_at":"2021-05-25T18:20:06Z","closed_at":"2021-05-30T13:11:37Z","merged_at":"2021-05-30T13:11:37Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652667909,"title":"Fix heap-buffer-overflow issue with `tf.raw_ops.SparseDenseCwiseMul`.","body":"PiperOrigin-RevId: 372054410\nChange-Id: Ifcce0491e2e3816838c87e73be30a1e61b65174d","created_at":"2021-05-25T18:18:38Z","closed_at":"2021-05-29T15:42:11Z","merged_at":"2021-05-29T15:42:10Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652648037,"title":"Fix breakage in parameterized_truncated_normal_op.cc","body":"PiperOrigin-RevId: 372041718\nChange-Id: Iff79e77a2bb27032423eefcb84211627b27dfe81","created_at":"2021-05-25T17:57:07Z","closed_at":"2021-05-29T15:41:40Z","merged_at":"2021-05-29T15:41:40Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652647347,"title":"Fix breakage in parameterized_truncated_normal_op.cc","body":"PiperOrigin-RevId: 372041718\nChange-Id: Iff79e77a2bb27032423eefcb84211627b27dfe81","created_at":"2021-05-25T17:56:20Z","closed_at":"2021-05-29T14:31:35Z","merged_at":"2021-05-29T14:31:35Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652645998,"title":"Fix breakage in parameterized_truncated_normal_op.cc","body":"PiperOrigin-RevId: 372041718\nChange-Id: Iff79e77a2bb27032423eefcb84211627b27dfe81","created_at":"2021-05-25T17:54:55Z","closed_at":"2021-05-29T14:31:10Z","merged_at":"2021-05-29T14:31:10Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652644992,"title":"Fix breakage in parameterized_truncated_normal_op.cc","body":"PiperOrigin-RevId: 372041718\nChange-Id: Iff79e77a2bb27032423eefcb84211627b27dfe81","created_at":"2021-05-25T17:53:51Z","closed_at":"2021-05-29T14:30:51Z","merged_at":"2021-05-29T14:30:51Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652630024,"title":"Update configure","body":" Instagram/node-gcm  Update  Instagram/node-tensorflow  Update Instagram/nodetensorflow","created_at":"2021-05-25T17:38:06Z","closed_at":"2021-07-03T02:12:35Z","merged_at":null,"user_id":83476335,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652594645,"title":"Add missing validations in dillation ops.","body":"PiperOrigin-RevId: 372037158\nChange-Id: I4ee304c84a02550c030288a6534000b934fc1599","created_at":"2021-05-25T17:07:30Z","closed_at":"2021-05-29T13:43:05Z","merged_at":"2021-05-29T13:43:05Z","user_id":53313357,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":652594007,"title":"Add missing validations in dillation ops.","body":"PiperOrigin-RevId: 372037158\nChange-Id: I4ee304c84a02550c030288a6534000b934fc1599","created_at":"2021-05-25T17:06:42Z","closed_at":"2021-05-29T13:42:57Z","merged_at":"2021-05-29T13:42:57Z","user_id":53313357,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":652593598,"title":"Add missing validations in dillation ops.","body":"PiperOrigin-RevId: 372037158\nChange-Id: I4ee304c84a02550c030288a6534000b934fc1599","created_at":"2021-05-25T17:06:14Z","closed_at":"2021-05-29T13:42:52Z","merged_at":"2021-05-29T13:42:52Z","user_id":53313357,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":652586369,"title":"Add missing validations in dillation ops.","body":"PiperOrigin-RevId: 372037158\nChange-Id: I4ee304c84a02550c030288a6534000b934fc1599","created_at":"2021-05-25T16:58:29Z","closed_at":"2021-05-29T13:42:44Z","merged_at":"2021-05-29T13:42:44Z","user_id":53313357,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":652580412,"title":"Replace TOSA ReluN with Clamp","body":"Remove ReluN to align with TOSA spec. Replaced by Clamp.\r\n\r\nSigned-off-by: Kevin Cheng <kevin.cheng@arm.com>","created_at":"2021-05-25T16:51:48Z","closed_at":"2021-05-27T00:27:12Z","merged_at":"2021-05-27T00:27:12Z","user_id":67395479,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652430211,"title":"Fixing math_ops.reduce_variance for dispatch failure to ragged","body":"Fixes #49606 \r\n\r\ncc @edloper , Thanks for help in providing solution.","created_at":"2021-05-25T14:49:12Z","closed_at":"2021-06-09T19:36:12Z","merged_at":"2021-06-09T19:36:12Z","user_id":20843596,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":652302454,"title":"[MLIR][DISC] pattern conversion from tf2mhlo: ConvertPadOpDynamic and ConvertGatherNdOpDynamic","body":"We are porting our MLIR-based dynamic shape compiler to tf community (From OP def, Patttern, to Optimization pass, etc).\r\nThis is the first PR about tf2mhlo pattern conversion, which including ConvertPadOpStaticDynamic and ConvertGatherNdOpStaticDynamic.\r\nThe rest pattern conversions we will add:\r\n- ConvertConvOpxxx\r\n- ConvertGatherV2Opxxx\r\n- ConvertRangeOpxxx\r\n- ConvertSigmoidOpxxx\r\n- ConvertSliceOpxxx\r\n- ConvertSplitOpxxx\r\n- ConvertSqueezeOpxxx\r\n- ConvertStridedSliceOpxxx\r\n- ConvertTileOpxxx\r\n- ConvertUnpackOpxxx\r\n- ConvertPrintOp\r\n- ConvertSigmoidGradOpxxx\r\n- ConvertSignOpxxx\r\n\r\nPrevious discussions：[RFC](https://groups.google.com/a/tensorflow.org/g/mlir/c/_X48poNcbDI/m/jCC8BWIICQAJ), [discussion_1](https://llvm.discourse.group/t/updates-on-mlir-based-dynamic-shape-compiler/2384), [Recording of meeting](https://drive.google.com/file/d/1_uEISlV5MUWdG9faKAdKlCWnPtGjRC-D/view).\r\n","created_at":"2021-05-25T12:56:47Z","closed_at":"2021-06-10T05:04:19Z","merged_at":null,"user_id":16014148,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":652118659,"title":"Support full [b]float16 in embedding_lookup_sparse","body":"- Adds float16 support for SparseSegment* ops.\r\n- Removes a forced cast to float32 in `embedding_lookup_sparse` and instead outputs the same type as the input. The inner computations are still done in float32 to avoid numerical issues.\r\n- This improves performance and makes the operation consistent with all other operations that output the same type as the input.\r\n\r\ncc @nluehr @reedwm ","created_at":"2021-05-25T09:49:57Z","closed_at":"2021-06-08T23:39:41Z","merged_at":"2021-06-08T23:39:41Z","user_id":3979096,"sentiment":{"polarity":0.35,"subjectivity":0.55}}
{"_id":651893798,"title":"Fix a BUILD file for fusion ops to use Cudnn Frontend ","body":"This fixes an issue when using the Cudnn Frontend for fusion ops. Specifically, the `StreamExecutor::GetFusedConvolveExecutionPlans` requires GOOGLE_CUDA to enable the Cudnn Frontend API for fusion ops. So, we need to set it when CUDA config is detected in the BUILD file.\r\n\r\ncc. @nluehr ","created_at":"2021-05-25T06:05:19Z","closed_at":"2021-06-08T02:34:22Z","merged_at":"2021-06-08T02:34:21Z","user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651793734,"title":"[MLIR][DISC] legalize tensor_load inserted during hlo-to-lhlo conversion","body":"This PR implements logic for lowering memref.tensor_load ops that are\r\ninserted during `mhlo-legalize-to-lmhlo`","created_at":"2021-05-25T02:40:38Z","closed_at":"2021-06-01T23:36:56Z","merged_at":"2021-06-01T23:36:56Z","user_id":15364516,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651700456,"title":"Fix multiple issues in EditDistance","body":"PiperOrigin-RevId: 372033948\nChange-Id: Ieb957c29894af05bdfeb1a0402fced808dfcfd7b","created_at":"2021-05-24T23:18:48Z","closed_at":"2021-05-24T23:46:14Z","merged_at":"2021-05-24T23:46:14Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651700186,"title":"Fix multiple issues in EditDistance","body":"PiperOrigin-RevId: 372033948\nChange-Id: Ieb957c29894af05bdfeb1a0402fced808dfcfd7b","created_at":"2021-05-24T23:18:17Z","closed_at":"2021-05-24T23:46:09Z","merged_at":"2021-05-24T23:46:09Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651699219,"title":"Fix multiple issues in EditDistance","body":"PiperOrigin-RevId: 372033948\nChange-Id: Ieb957c29894af05bdfeb1a0402fced808dfcfd7b","created_at":"2021-05-24T23:16:31Z","closed_at":"2021-05-24T23:46:05Z","merged_at":"2021-05-24T23:46:05Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651698781,"title":"Fix multiple issues in EditDistance","body":"PiperOrigin-RevId: 372033948\nChange-Id: Ieb957c29894af05bdfeb1a0402fced808dfcfd7b","created_at":"2021-05-24T23:15:43Z","closed_at":"2021-05-24T23:45:59Z","merged_at":"2021-05-24T23:45:59Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651698319,"title":"Prevent check fail in FFT","body":"PiperOrigin-RevId: 372031044\nChange-Id: I50994e3e8a5d1342d01bde80256f6bf2730ca299","created_at":"2021-05-24T23:14:49Z","closed_at":"2021-05-25T16:54:25Z","merged_at":"2021-05-25T16:54:25Z","user_id":53313357,"sentiment":{"polarity":-0.5,"subjectivity":0.29999999999999993}}
{"_id":651697861,"title":"Prevent check fail in FFT","body":"PiperOrigin-RevId: 372031044\nChange-Id: I50994e3e8a5d1342d01bde80256f6bf2730ca299","created_at":"2021-05-24T23:13:54Z","closed_at":"2021-05-25T16:54:19Z","merged_at":"2021-05-25T16:54:19Z","user_id":53313357,"sentiment":{"polarity":-0.5,"subjectivity":0.29999999999999993}}
{"_id":651697355,"title":"Prevent check fail in FFT","body":"PiperOrigin-RevId: 372031044\nChange-Id: I50994e3e8a5d1342d01bde80256f6bf2730ca299","created_at":"2021-05-24T23:12:58Z","closed_at":"2021-05-25T16:54:13Z","merged_at":"2021-05-25T16:54:12Z","user_id":53313357,"sentiment":{"polarity":-0.5,"subjectivity":0.29999999999999993}}
{"_id":651696607,"title":"Prevent check fail in FFT","body":"PiperOrigin-RevId: 372031044\nChange-Id: I50994e3e8a5d1342d01bde80256f6bf2730ca299","created_at":"2021-05-24T23:11:16Z","closed_at":"2021-05-25T16:54:04Z","merged_at":"2021-05-25T16:54:04Z","user_id":53313357,"sentiment":{"polarity":-0.5,"subjectivity":0.29999999999999993}}
{"_id":651696089,"title":"Fix a check fail in Fast Fourier implementation","body":"PiperOrigin-RevId: 372026629\nChange-Id: Id05c3362aa575271bc3e06b16316c9037085fc11","created_at":"2021-05-24T23:09:51Z","closed_at":"2021-05-28T20:47:59Z","merged_at":"2021-05-28T20:47:59Z","user_id":53313357,"sentiment":{"polarity":-0.15000000000000002,"subjectivity":0.44999999999999996}}
{"_id":651693611,"title":"Fix a check fail in Fast Fourier implementation","body":"PiperOrigin-RevId: 372026629\nChange-Id: Id05c3362aa575271bc3e06b16316c9037085fc11","created_at":"2021-05-24T23:04:02Z","closed_at":"2021-05-28T20:47:53Z","merged_at":"2021-05-28T20:47:53Z","user_id":53313357,"sentiment":{"polarity":-0.15000000000000002,"subjectivity":0.44999999999999996}}
{"_id":651693370,"title":"Fix a check fail in Fast Fourier implementation","body":"PiperOrigin-RevId: 372026629\nChange-Id: Id05c3362aa575271bc3e06b16316c9037085fc11","created_at":"2021-05-24T23:03:28Z","closed_at":"2021-05-28T20:47:43Z","merged_at":"2021-05-28T20:47:43Z","user_id":53313357,"sentiment":{"polarity":-0.15000000000000002,"subjectivity":0.44999999999999996}}
{"_id":651692771,"title":"Fix a check fail in Fast Fourier implementation","body":"PiperOrigin-RevId: 372026629\nChange-Id: Id05c3362aa575271bc3e06b16316c9037085fc11","created_at":"2021-05-24T23:02:06Z","closed_at":"2021-05-28T20:47:30Z","merged_at":"2021-05-28T20:47:30Z","user_id":53313357,"sentiment":{"polarity":-0.15000000000000002,"subjectivity":0.44999999999999996}}
{"_id":651687844,"title":"Fix a check fail","body":"PiperOrigin-RevId: 372011072\nChange-Id: I1062cfaed0aa16884e9a16312483794d188db76f","created_at":"2021-05-24T22:50:55Z","closed_at":"2021-05-24T22:53:26Z","merged_at":null,"user_id":53313357,"sentiment":{"polarity":-0.5,"subjectivity":0.29999999999999993}}
{"_id":651687173,"title":"Fix a check fail","body":"PiperOrigin-RevId: 372011072\nChange-Id: I1062cfaed0aa16884e9a16312483794d188db76f","created_at":"2021-05-24T22:49:24Z","closed_at":"2021-05-27T17:15:04Z","merged_at":"2021-05-27T17:15:04Z","user_id":53313357,"sentiment":{"polarity":-0.5,"subjectivity":0.29999999999999993}}
{"_id":651686628,"title":"Fix a check fail","body":"PiperOrigin-RevId: 372011072\nChange-Id: I1062cfaed0aa16884e9a16312483794d188db76f","created_at":"2021-05-24T22:48:11Z","closed_at":"2021-05-27T17:14:51Z","merged_at":"2021-05-27T17:14:50Z","user_id":53313357,"sentiment":{"polarity":-0.5,"subjectivity":0.29999999999999993}}
{"_id":651685675,"title":"Fix a check fail","body":"PiperOrigin-RevId: 372011072\nChange-Id: I1062cfaed0aa16884e9a16312483794d188db76f","created_at":"2021-05-24T22:46:53Z","closed_at":"2021-05-27T17:14:36Z","merged_at":"2021-05-27T17:14:36Z","user_id":53313357,"sentiment":{"polarity":-0.5,"subjectivity":0.29999999999999993}}
{"_id":651684089,"title":"Fix a check fail","body":"PiperOrigin-RevId: 372011072\nChange-Id: I1062cfaed0aa16884e9a16312483794d188db76f","created_at":"2021-05-24T22:44:13Z","closed_at":"2021-05-27T17:12:25Z","merged_at":"2021-05-27T17:12:25Z","user_id":53313357,"sentiment":{"polarity":-0.5,"subjectivity":0.29999999999999993}}
{"_id":651678317,"title":"Fix another Eigen missing validation","body":"PiperOrigin-RevId: 371833155\nChange-Id: I5a23d451132cb1624ad916ef46ea01d0e88ec82c","created_at":"2021-05-24T22:31:17Z","closed_at":"2021-05-27T17:12:07Z","merged_at":"2021-05-27T17:12:07Z","user_id":53313357,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":651678039,"title":"Fix another Eigen missing validation","body":"PiperOrigin-RevId: 371833155\nChange-Id: I5a23d451132cb1624ad916ef46ea01d0e88ec82c","created_at":"2021-05-24T22:30:34Z","closed_at":"2021-05-27T17:11:51Z","merged_at":"2021-05-27T17:11:51Z","user_id":53313357,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":651673650,"title":"Fix heap-buffer-overflow issue with `tf.raw_ops.RaggedTensorToTensor`.","body":"PiperOrigin-RevId: 371986929\nChange-Id: I79ab962a22c5867f36f7f45b780a1ac881b1dbdd","created_at":"2021-05-24T22:20:26Z","closed_at":"2021-05-27T17:11:36Z","merged_at":"2021-05-27T17:11:36Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651673192,"title":"Fix heap-buffer-overflow issue with `tf.raw_ops.RaggedTensorToTensor`.","body":"PiperOrigin-RevId: 371986929\nChange-Id: I79ab962a22c5867f36f7f45b780a1ac881b1dbdd","created_at":"2021-05-24T22:19:26Z","closed_at":"2021-05-27T17:11:23Z","merged_at":"2021-05-27T17:11:23Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651672715,"title":"Fix heap-buffer-overflow issue with `tf.raw_ops.RaggedTensorToTensor`.","body":"PiperOrigin-RevId: 371986929\nChange-Id: I79ab962a22c5867f36f7f45b780a1ac881b1dbdd","created_at":"2021-05-24T22:18:27Z","closed_at":"2021-05-27T17:11:06Z","merged_at":"2021-05-27T17:11:06Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651671888,"title":"Fix heap-buffer-overflow issue with `tf.raw_ops.RaggedTensorToTensor`.","body":"PiperOrigin-RevId: 371986929\nChange-Id: I79ab962a22c5867f36f7f45b780a1ac881b1dbdd","created_at":"2021-05-24T22:16:45Z","closed_at":"2021-05-27T17:10:48Z","merged_at":"2021-05-27T17:10:48Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651671245,"title":"Fix heap-buffer-overflow issue with `tf.raw_ops.SparseSplit`.","body":"PiperOrigin-RevId: 371242872\nChange-Id: I482bb3d12602c7c3cc9446f97fb9f584bb98e9a4","created_at":"2021-05-24T22:15:25Z","closed_at":"2021-05-27T17:10:21Z","merged_at":"2021-05-27T17:10:21Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651670750,"title":"Fix heap-buffer-overflow issue with `tf.raw_ops.SparseSplit`.","body":"PiperOrigin-RevId: 371242872\nChange-Id: I482bb3d12602c7c3cc9446f97fb9f584bb98e9a4","created_at":"2021-05-24T22:14:28Z","closed_at":"2021-05-27T17:10:06Z","merged_at":"2021-05-27T17:10:06Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651670331,"title":"Fix heap-buffer-overflow issue with `tf.raw_ops.SparseSplit`.","body":"PiperOrigin-RevId: 371242872\nChange-Id: I482bb3d12602c7c3cc9446f97fb9f584bb98e9a4","created_at":"2021-05-24T22:13:39Z","closed_at":"2021-05-27T17:09:50Z","merged_at":"2021-05-27T17:09:50Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651669419,"title":"Fix heap-buffer-overflow issue with `tf.raw_ops.SparseSplit`.","body":"PiperOrigin-RevId: 371242872\nChange-Id: I482bb3d12602c7c3cc9446f97fb9f584bb98e9a4","created_at":"2021-05-24T22:11:53Z","closed_at":"2021-05-27T17:09:35Z","merged_at":"2021-05-27T17:09:35Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651668877,"title":"Fix heap buffer overflow in tf.raw_ops.UnicodeEncode.","body":"PiperOrigin-RevId: 371717714\nChange-Id: If33443b28f158e58078f1268f6b92f2728d219e0","created_at":"2021-05-24T22:10:45Z","closed_at":"2021-05-27T17:09:07Z","merged_at":"2021-05-27T17:09:07Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651668473,"title":"Fix heap buffer overflow in tf.raw_ops.UnicodeEncode.","body":"PiperOrigin-RevId: 371717714\nChange-Id: If33443b28f158e58078f1268f6b92f2728d219e0","created_at":"2021-05-24T22:09:59Z","closed_at":"2021-05-27T17:08:51Z","merged_at":"2021-05-27T17:08:51Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651667868,"title":"Fix heap buffer overflow in tf.raw_ops.UnicodeEncode.","body":"PiperOrigin-RevId: 371717714\nChange-Id: If33443b28f158e58078f1268f6b92f2728d219e0","created_at":"2021-05-24T22:08:49Z","closed_at":"2021-05-27T17:08:35Z","merged_at":"2021-05-27T17:08:35Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651666802,"title":"Fix heap buffer overflow in tf.raw_ops.UnicodeEncode.","body":"PiperOrigin-RevId: 371717714\nChange-Id: If33443b28f158e58078f1268f6b92f2728d219e0","created_at":"2021-05-24T22:06:33Z","closed_at":"2021-05-27T17:08:13Z","merged_at":"2021-05-27T17:08:13Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651662308,"title":"Fix the CHECK failure in tf.raw_ops.QuantizeAndDequantizeV2.","body":null,"created_at":"2021-05-24T21:59:48Z","closed_at":"2021-05-27T17:07:56Z","merged_at":"2021-05-27T17:07:56Z","user_id":53313357,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":651661300,"title":"Fix the CHECK failure in tf.raw_ops.QuantizeAndDequantizeV2.","body":null,"created_at":"2021-05-24T21:57:47Z","closed_at":"2021-05-27T17:07:42Z","merged_at":"2021-05-27T17:07:42Z","user_id":53313357,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":651660772,"title":"added Returns and Raises for Reshape class","body":"Updated `Reshape` class with `Returns` and `Raises` \r\n[Here](https://colab.research.google.com/gist/jvishnuvardhan/c6d059fd1b0a26c83d809d2bef500f52/untitled989.ipynb) is a gist to show the `Value_error`.","created_at":"2021-05-24T21:56:45Z","closed_at":"2021-08-14T00:51:57Z","merged_at":null,"user_id":46058173,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651660230,"title":"Fix the CHECK failure in tf.raw_ops.QuantizeAndDequantizeV2.","body":null,"created_at":"2021-05-24T21:55:37Z","closed_at":"2021-05-27T17:07:25Z","merged_at":"2021-05-27T17:07:25Z","user_id":53313357,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":651643832,"title":"Fix the CHECK failure in tf.raw_ops.QuantizeAndDequantizeV2.","body":"PiperOrigin-RevId: 371361603\nChange-Id: Ia70e34d41adaadddf928e95e5e5c5c97d5bc60d0","created_at":"2021-05-24T21:26:58Z","closed_at":"2021-05-27T17:07:11Z","merged_at":"2021-05-27T17:07:11Z","user_id":53313357,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":651642766,"title":"Fix heap-buffer-overflow issue with `tf.raw_ops.SparseSplit`.","body":"PiperOrigin-RevId: 371242872\nChange-Id: I482bb3d12602c7c3cc9446f97fb9f584bb98e9a4","created_at":"2021-05-24T21:25:05Z","closed_at":"2021-05-27T17:06:57Z","merged_at":"2021-05-27T17:06:57Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651642418,"title":"Fix heap-buffer-overflow issue with `tf.raw_ops.SparseSplit`.","body":"PiperOrigin-RevId: 371242872\nChange-Id: I482bb3d12602c7c3cc9446f97fb9f584bb98e9a4","created_at":"2021-05-24T21:24:26Z","closed_at":"2021-05-27T17:06:44Z","merged_at":"2021-05-27T17:06:44Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651641530,"title":"Fix heap-buffer-overflow issue with `tf.raw_ops.SparseSplit`.","body":"PiperOrigin-RevId: 371242872\nChange-Id: I482bb3d12602c7c3cc9446f97fb9f584bb98e9a4","created_at":"2021-05-24T21:22:57Z","closed_at":"2021-05-27T17:06:30Z","merged_at":"2021-05-27T17:06:30Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651639903,"title":"Fix heap-buffer-overflow issue with `tf.raw_ops.SparseSplit`.","body":"PiperOrigin-RevId: 371242872\nChange-Id: I482bb3d12602c7c3cc9446f97fb9f584bb98e9a4","created_at":"2021-05-24T21:20:34Z","closed_at":"2021-05-27T17:05:57Z","merged_at":"2021-05-27T17:05:57Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651619901,"title":"Fix OOB issue with `tf.raw_ops.SparseSparseMinimum`.","body":"PiperOrigin-RevId: 371005787\nChange-Id: Ib686ccc077836e8b980b8b5a03936d36a8ecaf71","created_at":"2021-05-24T20:56:35Z","closed_at":"2021-05-27T17:04:01Z","merged_at":"2021-05-27T17:04:01Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651619287,"title":"Fix OOB issue with `tf.raw_ops.SparseSparseMinimum`.","body":"PiperOrigin-RevId: 371005787\nChange-Id: Ib686ccc077836e8b980b8b5a03936d36a8ecaf71","created_at":"2021-05-24T20:55:35Z","closed_at":"2021-05-27T17:03:46Z","merged_at":"2021-05-27T17:03:46Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651618311,"title":"Fix OOB issue with `tf.raw_ops.SparseSparseMinimum`.","body":"PiperOrigin-RevId: 371005787\nChange-Id: Ib686ccc077836e8b980b8b5a03936d36a8ecaf71","created_at":"2021-05-24T20:53:50Z","closed_at":"2021-05-27T17:03:32Z","merged_at":"2021-05-27T17:03:32Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651617698,"title":"Fix OOB issue with `tf.raw_ops.SparseSparseMinimum`.","body":"PiperOrigin-RevId: 371005787\nChange-Id: Ib686ccc077836e8b980b8b5a03936d36a8ecaf71","created_at":"2021-05-24T20:52:45Z","closed_at":"2021-05-27T17:03:17Z","merged_at":"2021-05-27T17:03:17Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651617048,"title":"Fix FPE issue with `tf.raw_ops.Reverse`.","body":"PiperOrigin-RevId: 371176973\nChange-Id: Ic6d483bfc95313ec2299c2d1c956cfe96c96626c","created_at":"2021-05-24T20:51:35Z","closed_at":"2021-05-27T17:03:01Z","merged_at":"2021-05-27T17:03:01Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651616538,"title":"Fix FPE issue with `tf.raw_ops.Reverse`.","body":"PiperOrigin-RevId: 371176973\nChange-Id: Ic6d483bfc95313ec2299c2d1c956cfe96c96626c","created_at":"2021-05-24T20:50:45Z","closed_at":"2021-05-27T17:02:42Z","merged_at":"2021-05-27T17:02:42Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651613219,"title":"Fix FPE issue with `tf.raw_ops.Reverse`.","body":"PiperOrigin-RevId: 371176973\nChange-Id: Ic6d483bfc95313ec2299c2d1c956cfe96c96626c","created_at":"2021-05-24T20:45:09Z","closed_at":"2021-05-27T17:02:29Z","merged_at":"2021-05-27T17:02:28Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651612006,"title":"Fix FPE issue with `tf.raw_ops.Reverse`.","body":"PiperOrigin-RevId: 371176973\nChange-Id: Ic6d483bfc95313ec2299c2d1c956cfe96c96626c","created_at":"2021-05-24T20:43:08Z","closed_at":"2021-05-27T17:02:14Z","merged_at":"2021-05-27T17:02:14Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651611384,"title":"Fix FPE issue in external Eigen source code issue with `tf.raw_ops.SparseMatMul`.","body":"PiperOrigin-RevId: 370992919\nChange-Id: Icfb276fef5fb40928b27c3e44608d2aca72c9fd7","created_at":"2021-05-24T20:42:04Z","closed_at":"2021-05-27T17:01:56Z","merged_at":"2021-05-27T17:01:56Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":651610375,"title":"Fix FPE issue in external Eigen source code issue with `tf.raw_ops.SparseMatMul`.","body":"PiperOrigin-RevId: 370992919\nChange-Id: Icfb276fef5fb40928b27c3e44608d2aca72c9fd7","created_at":"2021-05-24T20:40:24Z","closed_at":"2021-05-27T17:01:39Z","merged_at":"2021-05-27T17:01:39Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":651609875,"title":"Fix FPE issue in external Eigen source code issue with `tf.raw_ops.SparseMatMul`.","body":"PiperOrigin-RevId: 370992919\nChange-Id: Icfb276fef5fb40928b27c3e44608d2aca72c9fd7","created_at":"2021-05-24T20:39:35Z","closed_at":"2021-05-27T17:01:25Z","merged_at":"2021-05-27T17:01:25Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":651608965,"title":"Fix FPE issue in external Eigen source code issue with `tf.raw_ops.SparseMatMul`.","body":"PiperOrigin-RevId: 370992919\nChange-Id: Icfb276fef5fb40928b27c3e44608d2aca72c9fd7","created_at":"2021-05-24T20:38:01Z","closed_at":"2021-05-27T17:01:08Z","merged_at":"2021-05-27T17:01:08Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":651608440,"title":"Fix FPE issue with `tf.raw_ops.FusedBatchNorm`.","body":"PiperOrigin-RevId: 370948185\nChange-Id: If0c8e0320062ed6363e94ff5fe38e6a301f69ac2","created_at":"2021-05-24T20:37:08Z","closed_at":"2021-05-27T17:00:52Z","merged_at":"2021-05-27T17:00:52Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651607890,"title":"Fix FPE issue with `tf.raw_ops.FusedBatchNorm`.","body":"PiperOrigin-RevId: 370948185\nChange-Id: If0c8e0320062ed6363e94ff5fe38e6a301f69ac2","created_at":"2021-05-24T20:36:10Z","closed_at":"2021-05-27T17:00:38Z","merged_at":"2021-05-27T17:00:38Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651606934,"title":"Fix FPE issue with `tf.raw_ops.FusedBatchNorm`.","body":"PiperOrigin-RevId: 370948185\nChange-Id: If0c8e0320062ed6363e94ff5fe38e6a301f69ac2","created_at":"2021-05-24T20:34:26Z","closed_at":"2021-05-27T17:00:23Z","merged_at":"2021-05-27T17:00:23Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651604876,"title":"Fix FPE issue with `tf.raw_ops.FusedBatchNorm`.","body":"PiperOrigin-RevId: 370948185\nChange-Id: If0c8e0320062ed6363e94ff5fe38e6a301f69ac2","created_at":"2021-05-24T20:30:51Z","closed_at":"2021-05-27T17:00:08Z","merged_at":"2021-05-27T17:00:07Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651603811,"title":"Fix FPE issue with `tf.raw_ops.DenseCountSparseOutput`.","body":"PiperOrigin-RevId: 370946862\nChange-Id: I3752584ad04aaecb327ff6793a9640ac56acfe7a","created_at":"2021-05-24T20:29:16Z","closed_at":"2021-05-27T16:59:52Z","merged_at":"2021-05-27T16:59:52Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651602479,"title":"Fix FPE issue with `tf.raw_ops.DenseCountSparseOutput`.","body":"PiperOrigin-RevId: 370946862\nChange-Id: I3752584ad04aaecb327ff6793a9640ac56acfe7a","created_at":"2021-05-24T20:27:16Z","closed_at":"2021-05-27T16:59:37Z","merged_at":"2021-05-27T16:59:37Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651601929,"title":"Fix overflow CHECK issue with `tf.raw_ops.UnsortedSegmentJoin`.","body":"PiperOrigin-RevId: 370766155\nChange-Id: I33e7c6626224e1060a8a4ab51ad5d861c6d4c63e","created_at":"2021-05-24T20:26:25Z","closed_at":"2021-05-27T16:59:23Z","merged_at":"2021-05-27T16:59:23Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651600458,"title":"Fix overflow CHECK issue with `tf.raw_ops.UnsortedSegmentJoin`.","body":"PiperOrigin-RevId: 370766155\nChange-Id: I33e7c6626224e1060a8a4ab51ad5d861c6d4c63e","created_at":"2021-05-24T20:24:05Z","closed_at":"2021-05-27T16:59:09Z","merged_at":"2021-05-27T16:59:09Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651600174,"title":"Fix overflow CHECK issue with `tf.raw_ops.UnsortedSegmentJoin`.","body":"PiperOrigin-RevId: 370766155\nChange-Id: I33e7c6626224e1060a8a4ab51ad5d861c6d4c63e","created_at":"2021-05-24T20:23:38Z","closed_at":"2021-05-27T16:58:55Z","merged_at":"2021-05-27T16:58:55Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651598855,"title":"Fix overflow CHECK issue with `tf.raw_ops.UnsortedSegmentJoin`.","body":"PiperOrigin-RevId: 370766155\nChange-Id: I33e7c6626224e1060a8a4ab51ad5d861c6d4c63e","created_at":"2021-05-24T20:21:26Z","closed_at":"2021-05-27T16:58:07Z","merged_at":"2021-05-27T16:58:07Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651596492,"title":"Fix `tf.raw_ops.QuantizeAndDequantizeV3` array index failure.","body":"PiperOrigin-RevId: 370577691\nChange-Id: Ifeae64212f6bcd139435824fa2748d1329213c4c","created_at":"2021-05-24T20:17:49Z","closed_at":"2021-05-27T16:57:05Z","merged_at":"2021-05-27T16:57:05Z","user_id":53313357,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":651596127,"title":"Fix `tf.raw_ops.QuantizeAndDequantizeV3` array index failure.","body":"PiperOrigin-RevId: 370577691\nChange-Id: Ifeae64212f6bcd139435824fa2748d1329213c4c","created_at":"2021-05-24T20:17:16Z","closed_at":"2021-05-27T16:56:50Z","merged_at":"2021-05-27T16:56:50Z","user_id":53313357,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":651594999,"title":"Fix `tf.raw_ops.QuantizeAndDequantizeV3` array index failure.","body":"PiperOrigin-RevId: 370577691\nChange-Id: Ifeae64212f6bcd139435824fa2748d1329213c4c","created_at":"2021-05-24T20:15:21Z","closed_at":"2021-05-27T16:56:35Z","merged_at":"2021-05-27T16:56:35Z","user_id":53313357,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":651594614,"title":"Fix `tf.raw_ops.QuantizeAndDequantizeV3` array index failure.","body":"PiperOrigin-RevId: 370577691\nChange-Id: Ifeae64212f6bcd139435824fa2748d1329213c4c","created_at":"2021-05-24T20:14:43Z","closed_at":"2021-05-27T16:56:19Z","merged_at":"2021-05-27T16:56:19Z","user_id":53313357,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":651593891,"title":"Fix `tf.raw_ops.SparseAdd ` invalid memory access failure.","body":"PiperOrigin-RevId: 370568774\nChange-Id: I5f73b31c865f2948a1c8dfb7ebd22b3cfb6405bf","created_at":"2021-05-24T20:13:34Z","closed_at":"2021-05-27T16:56:03Z","merged_at":"2021-05-27T16:56:03Z","user_id":53313357,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":651593260,"title":"Fix `tf.raw_ops.SparseAdd ` invalid memory access failure.","body":"PiperOrigin-RevId: 370568774\nChange-Id: I5f73b31c865f2948a1c8dfb7ebd22b3cfb6405bf","created_at":"2021-05-24T20:12:34Z","closed_at":"2021-05-27T16:55:49Z","merged_at":"2021-05-27T16:55:49Z","user_id":53313357,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":651592381,"title":"Fix `tf.raw_ops.SparseAdd ` invalid memory access failure.","body":"PiperOrigin-RevId: 370568774\nChange-Id: I5f73b31c865f2948a1c8dfb7ebd22b3cfb6405bf","created_at":"2021-05-24T20:11:06Z","closed_at":"2021-05-27T16:55:22Z","merged_at":"2021-05-27T16:55:22Z","user_id":53313357,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":651590442,"title":"Fix `tf.raw_ops.SparseAdd ` invalid memory access failure.","body":"PiperOrigin-RevId: 370568774\nChange-Id: I5f73b31c865f2948a1c8dfb7ebd22b3cfb6405bf","created_at":"2021-05-24T20:07:43Z","closed_at":"2021-05-27T16:54:59Z","merged_at":"2021-05-27T16:54:59Z","user_id":53313357,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":651589638,"title":"Validate (and ensure validation sticks) inputs for `MatrixTriangularSolve`.","body":"PiperOrigin-RevId: 370282444\nChange-Id: Iaed61a0b0727cc42c830658b72eb69f785f48dc5","created_at":"2021-05-24T20:06:21Z","closed_at":"2021-05-27T16:54:43Z","merged_at":"2021-05-27T16:54:43Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651588924,"title":"Validate (and ensure validation sticks) inputs for `MatrixTriangularSolve`.","body":"PiperOrigin-RevId: 370282444\nChange-Id: Iaed61a0b0727cc42c830658b72eb69f785f48dc5","created_at":"2021-05-24T20:05:08Z","closed_at":"2021-05-27T16:54:28Z","merged_at":"2021-05-27T16:54:28Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651587879,"title":"Validate (and ensure validation sticks) inputs for `MatrixTriangularSolve`.","body":"PiperOrigin-RevId: 370282444\nChange-Id: Iaed61a0b0727cc42c830658b72eb69f785f48dc5","created_at":"2021-05-24T20:03:17Z","closed_at":"2021-05-27T16:53:33Z","merged_at":"2021-05-27T16:53:33Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651564532,"title":"Remove duplicated Env::Default to fix gcs issue on Windows","body":"This PR tries to address the issue raised in #49515 where gcs is not available through tf.io.gfile.GFile interface.\r\n\r\nThe reason was that on Windows -config=monolithic was used in bazel which includes multiple copies of `Env::Default` in different pyd files.\r\n\r\nThis PR removes all duplications to make gcs working on Windows.\r\n\r\nThis PR fixes #49515\r\n\r\n/cc @mihaimaruseac @vnvo2409 @kvignesh1420 @terrytangyuan @burgerkingeater FYI\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2021-05-24T19:17:31Z","closed_at":"2022-12-02T15:08:43Z","merged_at":null,"user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651542906,"title":"Added missing reshape folding for MEAN op to TFLite MLIR converter","body":"Added optimizing pattern for folding RESHAPE op in MEAN op when the former is following the latter with `keep_dims=false` for re-inserting reduced dimensions to TFLite MLIR converter. Apparently it is supposed to be there before, but was missing for some reason. Without the proposed fix MLIR converter may produce a very inefficient model when quantization is used, because `keep_dims=true` is an [essential condition](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/lite/kernels/reduce.cc#L316) for using optimized reduce kernel instead of reference one.","created_at":"2021-05-24T18:38:42Z","closed_at":"2021-06-09T19:47:41Z","merged_at":"2021-06-09T19:47:41Z","user_id":5624568,"sentiment":{"polarity":-0.25625,"subjectivity":0.36875}}
{"_id":651509196,"title":"DOC: Fix Capitalization","body":"- [x] Docs have been updated (for bug fixes/features)\r\n\r\ndocs update => proper capitalisation would be better. 👍\r\n\r\n### Other information:\r\nSigned-off-by: Ayushman Singh Chauhan <ascb508@gmail.com>\r\nI have read the Contribution guidelines, but it's for the learning purpose :)","created_at":"2021-05-24T17:46:24Z","closed_at":"2021-05-25T04:14:13Z","merged_at":null,"user_id":53474591,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651448912,"title":"Add note about automatic input expansion","body":"As discussed in https://github.com/tensorflow/tensorflow/issues/42046 this documents the fact that TensorFlow automatically expands inputs to at least 2D when calling functions on Keras models (this actually happens in `model.train_step`, `model.test_step`, and `model.predict_step`, but I suspect those are used less frequently than `model.fit()`, etc).\r\n\r\nThis should hopefully reduce confusion between\r\n\r\n`outputs = model(inputs)  # allows 1D inputs`\r\n\r\nand\r\n\r\n`outputs = model.predict(inputs)  # will automatically expand 1D inputs to 2D`","created_at":"2021-05-24T16:01:46Z","closed_at":"2021-07-09T00:45:08Z","merged_at":null,"user_id":2512762,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651305403,"title":"TFLM: Only disable ScopedMicroProfiler for BUILD_TYPE=release","body":"* Enable ScopedMicroProfiler for release builds with logs.\r\n* Add cortex_m_generic specific implementation of timer functions.\r\n\r\nThis is a fix for: https://github.com/tensorflow/tensorflow/issues/43958","created_at":"2021-05-24T12:50:42Z","closed_at":"2021-05-25T00:54:50Z","merged_at":"2021-05-25T00:54:50Z","user_id":5793387,"sentiment":{"polarity":0.0,"subjectivity":1.0}}
{"_id":651222203,"title":"Fix JNI memleak problem for java Tensor<String> reference invoked by tensor_jni.cc","body":"env->GetObjectArrayElement should be followed by env->DeleteLocalRef, which to release the local reference.","created_at":"2021-05-24T10:32:00Z","closed_at":"2021-06-10T14:08:35Z","merged_at":"2021-06-10T14:08:35Z","user_id":876295,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":651165803,"title":"Fix ubsan in bazelrc","body":"","created_at":"2021-05-24T09:07:22Z","closed_at":"2021-06-09T17:34:11Z","merged_at":"2021-06-09T17:34:11Z","user_id":712433,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":650806652,"title":"Replace --extra-index-url to --index-url to prevent typosquatting","body":"The tflite_runtime package is not in PyPI and its name is available. With --extra-index-url, if the version is higher, pip will infer to PyPI. This may result in typosquatting.\r\n\r\nThis is a minor fix.","created_at":"2021-05-23T15:17:14Z","closed_at":"2021-05-25T13:50:27Z","merged_at":"2021-05-25T13:50:27Z","user_id":46757266,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":650744377,"title":"R2.1","body":"test","created_at":"2021-05-23T07:51:32Z","closed_at":"2021-05-23T07:52:55Z","merged_at":null,"user_id":84658204,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":650731304,"title":"Update parse_entity error message.","body":"`tf.autograph.do_not_convert` is still in `experimental` (as of `2.6.0.dev20210522`), this PR fixes the error message so users know to use `tf.autograph.experimental.do_not_convert`.","created_at":"2021-05-23T05:37:54Z","closed_at":"2021-05-25T15:59:39Z","merged_at":"2021-05-25T15:59:39Z","user_id":12474257,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":650722236,"title":"Remove the AMDGPU due to duplicated dependency","body":"The PR #49163 has moved the \"llvm:AMDGPUCodeGen\" dependency into the \"if_rocm_is_configured\". However, in the merge commit (commit id: 013bf86), this dependency appears twice for ROCm builds. This makes the build to fail for AMD GPUs.","created_at":"2021-05-23T04:02:52Z","closed_at":"2021-06-10T23:15:37Z","merged_at":"2021-06-10T23:15:37Z","user_id":79117684,"sentiment":{"polarity":-0.125,"subjectivity":0.375}}
{"_id":650702801,"title":"Port TFL kernel Gather to TFL Micro","body":"PR5 for issue #45196. This PR aims to finish porting GATHER from TFL to TFLM.\r\n\r\nNotes:\r\n1. For input/output tensors, only data types float and int8_t are supported;\r\n2. For position tensors, only data types int32_t and are supported;\r\n3. The reference implementation in lite/kernels/internal/reference/gather.h is not used;\r\n4. The TFLM Gather kernel supports batch_dims.\r\n","created_at":"2021-05-23T00:09:25Z","closed_at":"2021-05-25T13:45:02Z","merged_at":"2021-05-25T13:45:01Z","user_id":69477250,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":650638867,"title":"Fix typo in documentation.","body":"","created_at":"2021-05-22T14:48:11Z","closed_at":"2021-07-14T00:05:55Z","merged_at":null,"user_id":845012,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":650619709,"title":"Doc for custom_gradient to compute gradients for trainable params and computing over batch","body":"Fixes #26270 .\r\n\r\nThanks to @tsbertalan for gist. I took help of that and soon will be raising PR to `tensorflow/examples` repo for adding the `custom_gradient` example for polynomial.\r\n\r\ncc @alextp , @dynamicwebpaige , @tsbertalan .","created_at":"2021-05-22T12:20:28Z","closed_at":"2021-06-10T16:37:20Z","merged_at":"2021-06-10T16:37:19Z","user_id":20843596,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":650516525,"title":"Suppress TF-32 warning print when disabled by TF's own API","body":"Suppress TF's warning message about the use of TensorFloat-32 when TensorFloat-32 is disabled by its own API,  `tf.config.experimental.enable_tensor_float_32_execution(false)`.  Note that, environment variable `NVIDIA_TF32_OVERRIDE=0` will indeed disable TF32 evaluation, but it couldn't be peeked by TF at this moment. So no effect is expected from `NVIDIA_TF32_OVERRIDE=0`.","created_at":"2021-05-21T23:23:56Z","closed_at":"2021-06-04T07:00:36Z","merged_at":"2021-06-04T07:00:36Z","user_id":25590028,"sentiment":{"polarity":0.19999999999999998,"subjectivity":0.65}}
{"_id":650498947,"title":"Revert \"Revert: PR #48758: TFLM: Remove uint8 support for CMSIS-NN kernels\"","body":"This reverts commit 6d8a184710164c7bcc41d3bd29fe4ef46836b6c9.","created_at":"2021-05-21T22:46:14Z","closed_at":"2021-06-01T17:11:06Z","merged_at":null,"user_id":2789958,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":650479836,"title":"Disable TensorFloat-32 warning print when disabled by TF's own API","body":"Suppress TF's warning message in `cuda_blas.cc` about the use of TensorFloat-32 if it's disabled by TF's own API. ","created_at":"2021-05-21T22:28:12Z","closed_at":"2021-05-21T23:05:37Z","merged_at":null,"user_id":25590028,"sentiment":{"polarity":0.19999999999999998,"subjectivity":0.65}}
{"_id":650419750,"title":"Fix divide by zero error in `fractional_pool_common.cc`.","body":"PiperOrigin-RevId: 371126221\nChange-Id: Iea4b2f363aaeb116ab460e3bc592c687484af344","created_at":"2021-05-21T21:34:15Z","closed_at":"2021-05-22T16:01:39Z","merged_at":"2021-05-22T16:01:39Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":650417635,"title":"Fix divide by zero error in `fractional_pool_common.cc`.","body":"PiperOrigin-RevId: 371126221\nChange-Id: Iea4b2f363aaeb116ab460e3bc592c687484af344","created_at":"2021-05-21T21:32:21Z","closed_at":"2021-05-22T16:01:23Z","merged_at":"2021-05-22T16:01:23Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":650392123,"title":"Fix divide by zero error in `fractional_pool_common.cc`.","body":"PiperOrigin-RevId: 371126221\nChange-Id: Iea4b2f363aaeb116ab460e3bc592c687484af344","created_at":"2021-05-21T21:11:28Z","closed_at":"2021-05-22T16:01:07Z","merged_at":"2021-05-22T16:01:07Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":650390377,"title":"Fix divide by zero error in `fractional_pool_common.cc`.","body":"PiperOrigin-RevId: 371126221\nChange-Id: Iea4b2f363aaeb116ab460e3bc592c687484af344","created_at":"2021-05-21T21:10:07Z","closed_at":"2021-05-22T16:00:52Z","merged_at":"2021-05-22T16:00:52Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":650385333,"title":"Validate work in `QuantizedAdd`, ensure at least one element.","body":"PiperOrigin-RevId: 370127996\nChange-Id: I57c6f3e01afdeada84737820a131590137463855","created_at":"2021-05-21T21:07:27Z","closed_at":"2021-05-22T16:00:34Z","merged_at":"2021-05-22T16:00:34Z","user_id":53313357,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":650381463,"title":"Validate work in `QuantizedAdd`, ensure at least one element.","body":"PiperOrigin-RevId: 370127996\nChange-Id: I57c6f3e01afdeada84737820a131590137463855","created_at":"2021-05-21T21:05:25Z","closed_at":"2021-05-22T16:00:21Z","merged_at":"2021-05-22T16:00:21Z","user_id":53313357,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":650379901,"title":"Validate work in `QuantizedAdd`, ensure at least one element.","body":"PiperOrigin-RevId: 370127996\nChange-Id: I57c6f3e01afdeada84737820a131590137463855","created_at":"2021-05-21T21:04:39Z","closed_at":"2021-05-22T16:00:06Z","merged_at":"2021-05-22T16:00:06Z","user_id":53313357,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":650378875,"title":"Validate work in `QuantizedAdd`, ensure at least one element.","body":"PiperOrigin-RevId: 370127996\nChange-Id: I57c6f3e01afdeada84737820a131590137463855","created_at":"2021-05-21T21:04:05Z","closed_at":"2021-05-22T15:59:51Z","merged_at":"2021-05-22T15:59:51Z","user_id":53313357,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":650156678,"title":"Make the community-builds link more prominent","body":"@andrew-leaver What do you think of this?","created_at":"2021-05-21T17:18:20Z","closed_at":"2021-05-25T14:05:35Z","merged_at":"2021-05-25T14:05:35Z","user_id":32465472,"sentiment":{"polarity":0.5,"subjectivity":0.75}}
{"_id":650150481,"title":"Misc TFLM cleanup","body":" * upstreaming change from https://github.com/tensorflow/tflite-micro/pull/91\r\n\r\n * Fix hifimini build by excluding known failing tests. Tested with:\r\n   ```\r\n   make -f tensorflow/lite/micro/tools/make/Makefile TARGET=xtensa OPTIMIZED_KERNEL_DIR=xtensa TARGET_ARCH=hifimini XTENSA_CORE=mini1m1m_RG build -j8\r\n   ```","created_at":"2021-05-21T17:06:53Z","closed_at":"2021-05-24T19:10:21Z","merged_at":"2021-05-24T19:10:21Z","user_id":2789958,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":650093809,"title":"Do not use mirror.tensorflow.org for TFLM flatbuffer download.","body":"Some users are reporting intermittent flakiness with the flatbuffer download from mirror.tensorflow.org\r\n","created_at":"2021-05-21T16:03:00Z","closed_at":"2021-05-21T17:05:26Z","merged_at":"2021-05-21T17:05:26Z","user_id":2789958,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":650017012,"title":"Bump tensorflow from 2.4.0 to 2.5.0 in /tensorflow/lite/micro/examples/magic_wand/train","body":"Bumps [tensorflow](https://github.com/tensorflow/tensorflow) from 2.4.0 to 2.5.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/tensorflow/tensorflow/releases\">tensorflow's releases</a>.</em></p>\n<blockquote>\n<h2>TensorFlow 2.5.0</h2>\n<h1>Release 2.5.0</h1>\n<h2>Major Features and Improvements</h2>\n<ul>\n<li>Support for Python3.9 has been added.</li>\n<li><code>tf.data</code>:\n<ul>\n<li><code>tf.data</code> service now supports strict round-robin reads, which is useful for synchronous training workloads where example sizes vary. With strict round robin reads, users can guarantee that consumers get similar-sized examples in the same step.</li>\n<li>tf.data service now supports optional compression. Previously data would always be compressed, but now you can disable compression by passing <code>compression=None</code> to <code>tf.data.experimental.service.distribute(...)</code>.</li>\n<li><code>tf.data.Dataset.batch()</code> now supports <code>num_parallel_calls</code> and <code>deterministic</code> arguments. <code>num_parallel_calls</code> is used to indicate that multiple input batches should be computed in parallel. With <code>num_parallel_calls</code> set, <code>deterministic</code> is used to indicate that outputs can be obtained in the non-deterministic order.</li>\n<li>Options returned by <code>tf.data.Dataset.options()</code> are no longer mutable.</li>\n<li>tf.data input pipelines can now be executed in debug mode, which disables any asynchrony, parallelism, or non-determinism and forces Python execution (as opposed to trace-compiled graph execution) of user-defined functions passed into transformations such as <code>map</code>. The debug mode can be enabled through <code>tf.data.experimental.enable_debug_mode()</code>.</li>\n</ul>\n</li>\n<li><code>tf.lite</code>\n<ul>\n<li>Enabled the new MLIR-based quantization backend by default\n<ul>\n<li>The new backend is used for 8 bits full integer post-training quantization</li>\n<li>The new backend removes the redundant rescales and fixes some bugs (shared weight/bias, extremely small scales, etc)</li>\n<li>Set <code>experimental_new_quantizer</code> in tf.lite.TFLiteConverter to False to disable this change</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code>tf.keras</code>\n<ul>\n<li><code>tf.keras.metrics.AUC</code> now support logit predictions.</li>\n<li>Enabled a new supported input type in <code>Model.fit</code>, <code>tf.keras.utils.experimental.DatasetCreator</code>, which takes a callable, <code>dataset_fn</code>. <code>DatasetCreator</code> is intended to work across all <code>tf.distribute</code> strategies, and is the only input type supported for Parameter Server strategy.</li>\n</ul>\n</li>\n<li><code>tf.distribute</code>\n<ul>\n<li><code>tf.distribute.experimental.ParameterServerStrategy</code> now supports training with Keras <code>Model.fit</code> when used with <code>DatasetCreator</code>.</li>\n<li>Creating <code>tf.random.Generator</code> under <code>tf.distribute.Strategy</code> scopes is now allowed (except for <code>tf.distribute.experimental.CentralStorageStrategy</code> and <code>tf.distribute.experimental.ParameterServerStrategy</code>). Different replicas will get different random-number streams.</li>\n</ul>\n</li>\n<li>TPU embedding support\n<ul>\n<li>Added <code>profile_data_directory</code> to <code>EmbeddingConfigSpec</code> in <code>_tpu_estimator_embedding.py</code>. This allows embedding lookup statistics gathered at runtime to be used in embedding layer partitioning decisions.</li>\n</ul>\n</li>\n<li>PluggableDevice\n<ul>\n<li>Third-party devices can now connect to TensorFlow as plug-ins through <a href=\"https://github.com/tensorflow/community/blob/master/rfcs/20200612-stream-executor-c-api.md\">StreamExecutor C API</a>.\nand <a href=\"https://github.com/tensorflow/community/blob/master/rfcs/20200624-pluggable-device-for-tensorflow.md\">PluggableDevice</a> interface.\n<ul>\n<li>Add custom ops and kernels through <a href=\"https://github.com/tensorflow/community/blob/master/rfcs/20190814-kernel-and-op-registration.md\">kernel and op registration C API</a>.</li>\n<li>Register custom graph optimization passes with <a href=\"https://github.com/tensorflow/community/blob/master/rfcs/20201027-modular-tensorflow-graph-c-api.md\">graph optimization C API</a>.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"https://github.com/oneapi-src/oneDNN\">oneAPI Deep Neural Network Library (oneDNN)</a> CPU performance optimizations from <a href=\"https://software.intel.com/content/www/us/en/develop/articles/intel-optimization-for-tensorflow-installation-guide.html\">Intel-optimized TensorFlow</a> are now available in the official x86-64 Linux and Windows builds.\n<ul>\n<li>They are off by default. Enable them by setting the environment variable <code>TF_ENABLE_ONEDNN_OPTS=1</code>.</li>\n<li>We do not recommend using them in GPU systems, as they have not been sufficiently tested with GPUs yet.</li>\n</ul>\n</li>\n<li>TensorFlow pip packages are now built with CUDA11.2 and cuDNN 8.1.0</li>\n</ul>\n<h2>Breaking Changes</h2>\n<ul>\n<li>The <code>TF_CPP_MIN_VLOG_LEVEL</code> environment variable has been renamed to to <code>TF_CPP_MAX_VLOG_LEVEL</code> which correctly describes its effect.</li>\n</ul>\n<h2>Bug Fixes and Other Changes</h2>\n<ul>\n<li><code>tf.keras</code>:\n<ul>\n<li>Preprocessing layers API consistency changes:\n<ul>\n<li><code>StringLookup</code> added <code>output_mode</code>, <code>sparse</code>, and <code>pad_to_max_tokens</code> arguments with same semantics as <code>TextVectorization</code>.</li>\n<li><code>IntegerLookup</code> added <code>output_mode</code>, <code>sparse</code>, and <code>pad_to_max_tokens</code> arguments with same semantics as <code>TextVectorization</code>. Renamed <code>max_values</code>, <code>oov_value</code> and <code>mask_value</code> to <code>max_tokens</code>, <code>oov_token</code> and <code>mask_token</code> to align with <code>StringLookup</code> and <code>TextVectorization</code>.</li>\n<li><code>TextVectorization</code> default for <code>pad_to_max_tokens</code> switched to False.</li>\n<li><code>CategoryEncoding</code> no longer supports <code>adapt</code>, <code>IntegerLookup</code> now supports equivalent functionality. <code>max_tokens</code> argument renamed to <code>num_tokens</code>.</li>\n<li><code>Discretization</code> added <code>num_bins</code> argument for learning bins boundaries through calling <code>adapt</code> on a dataset. Renamed <code>bins</code> argument to <code>bin_boundaries</code> for specifying bins without <code>adapt</code>.</li>\n</ul>\n</li>\n<li>Improvements to model saving/loading:\n<ul>\n<li><code>model.load_weights</code> now accepts paths to saved models.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/tensorflow/tensorflow/blob/master/RELEASE.md\">tensorflow's changelog</a>.</em></p>\n<blockquote>\n<h1>Release 2.5.0</h1>\n<!-- raw HTML omitted -->\n<h2>Breaking Changes</h2>\n<ul>\n<li>\n<!-- raw HTML omitted -->\n</li>\n<li>The <code>TF_CPP_MIN_VLOG_LEVEL</code> environment variable has been renamed to to\n<code>TF_CPP_MAX_VLOG_LEVEL</code> which correctly describes its effect.</li>\n</ul>\n<h2>Known Caveats</h2>\n<ul>\n<li><!-- raw HTML omitted --></li>\n<li><!-- raw HTML omitted --></li>\n<li><!-- raw HTML omitted --></li>\n</ul>\n<h2>Major Features and Improvements</h2>\n<ul>\n<li>\n<p><!-- raw HTML omitted --></p>\n</li>\n<li>\n<p><!-- raw HTML omitted --></p>\n</li>\n<li>\n<p>TPU embedding support</p>\n<ul>\n<li>Added <code>profile_data_directory</code> to <code>EmbeddingConfigSpec</code> in\n<code>_tpu_estimator_embedding.py</code>. This allows embedding lookup statistics\ngathered at runtime to be used in embedding layer partitioning decisions.</li>\n</ul>\n</li>\n<li>\n<p><code>tf.keras.metrics.AUC</code> now support logit predictions.</p>\n</li>\n<li>\n<p>Creating <code>tf.random.Generator</code> under <code>tf.distribute.Strategy</code> scopes is now allowed (except for <code>tf.distribute.experimental.CentralStorageStrategy</code> and <code>tf.distribute.experimental.ParameterServerStrategy</code>). Different replicas will get different random-number streams.</p>\n</li>\n<li>\n<p><code>tf.data</code>:</p>\n<ul>\n<li>tf.data service now supports strict round-robin reads, which is useful\nfor synchronous training workloads where example sizes vary. With strict\nround robin reads, users can guarantee that consumers get similar-sized\nexamples in the same step.</li>\n<li>tf.data service now supports optional compression. Previously data would\nalways be compressed, but now you can disable compression by passing\n<code>compression=None</code> to <code>tf.data.experimental.service.distribute(...)</code>.</li>\n<li><code>tf.data.Dataset.batch()</code> now supports <code>num_parallel_calls</code> and\n<code>deterministic</code> arguments. <code>num_parallel_calls</code> is used to indicate that\nmultiple input batches should be computed in parallel. With\n<code>num_parallel_calls</code> set, <code>deterministic</code> is used to indicate that\noutputs can be obtained in the non-deterministic order.</li>\n<li>Options returned by <code>tf.data.Dataset.options()</code> are no longer mutable.</li>\n<li>tf.data input pipelines can now be executed in debug mode, which\ndisables any asynchrony, parallelism, or non-determinism and forces\nPython execution (as opposed to trace-compiled graph execution) of\nuser-defined functions passed into transformations such as <code>map</code>. The\ndebug mode can be enabled through <code>tf.data.experimental.enable_debug_mode()</code>.</li>\n</ul>\n</li>\n<li>\n<p><code>tf.lite</code></p>\n<ul>\n<li>Enabled the new MLIR-based quantization backend by default\n<ul>\n<li>The new backend is used for 8 bits full integer post-training quantization</li>\n<li>The new backend removes the redundant rescales and fixes some bugs (shared weight/bias, extremely small scales, etc)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/a4dfb8d1a71385bd6d122e4f27f86dcebb96712d\"><code>a4dfb8d</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/tensorflow/tensorflow/issues/49124\">#49124</a> from tensorflow/mm-cherrypick-tf-data-segfault-fix-...</li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/2107b1dc414edb3fc78e632bca4f4936171093b2\"><code>2107b1d</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/tensorflow/tensorflow/issues/49116\">#49116</a> from tensorflow-jenkins/version-numbers-2.5.0-17609</li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/16b813906fcb46306aef29a04ddd0cbdb4e77918\"><code>16b8139</code></a> Update snapshot_dataset_op.cc</li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/86a0d86cb5da6a28b78ea7f886ec2831d23f6d6b\"><code>86a0d86</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/tensorflow/tensorflow/issues/49126\">#49126</a> from geetachavan1/cherrypicks_X9ZNY</li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/9436ae693ef66a9efb7e7e7888134173d9a0821d\"><code>9436ae6</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/tensorflow/tensorflow/issues/49128\">#49128</a> from geetachavan1/cherrypicks_D73J5</li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/6b2bf99cd9336026689579b683a709c5efcb4ae9\"><code>6b2bf99</code></a> Validate that a and b are proper sparse tensors</li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/c03ad1a46d5b3f23df67dad03185a0ee16020c96\"><code>c03ad1a</code></a> Ensure validation sticks in banded_triangular_solve_op</li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/12a6ead7ac968c402feb85ce0a8069ccbc6bf735\"><code>12a6ead</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/tensorflow/tensorflow/issues/49120\">#49120</a> from geetachavan1/cherrypicks_KJ5M9</li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/b67f5b8a0a098c34c71c679aa46480035c46886e\"><code>b67f5b8</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/tensorflow/tensorflow/issues/49118\">#49118</a> from geetachavan1/cherrypicks_BIDTR</li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/commit/a13c0ade86295bd3a8356b4b8cc980cf0c5e70e0\"><code>a13c0ad</code></a> [tf.data][cherrypick] Fix snapshot segfault when using repeat and prefecth</li>\n<li>Additional commits viewable in <a href=\"https://github.com/tensorflow/tensorflow/compare/v2.4.0...v2.5.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=tensorflow&package-manager=pip&previous-version=2.4.0&new-version=2.5.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/tensorflow/tensorflow/network/alerts).\n\n</details>","created_at":"2021-05-21T14:35:00Z","closed_at":"2021-05-24T19:11:09Z","merged_at":null,"user_id":49699333,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649618899,"title":"[MLIR][DISC] Upgrade to use the new `reifyReturnTypeShapes` interface.","body":"The new interface is more safe to be used during dialect conversion\r\n(e.g. converting from tensor world to buffer world).","created_at":"2021-05-21T03:14:36Z","closed_at":"2021-05-24T17:17:06Z","merged_at":"2021-05-24T17:17:05Z","user_id":15364516,"sentiment":{"polarity":0.13636363636363635,"subjectivity":0.45454545454545453}}
{"_id":649540423,"title":"Add missing validation in `QuantizedBatchNormWithGlobalNormalization`","body":"PiperOrigin-RevId: 370123451\nChange-Id: Id234d6dab1ec21230bb8e503dba30f899af87f33","created_at":"2021-05-20T23:19:32Z","closed_at":"2021-05-21T15:18:52Z","merged_at":"2021-05-21T15:18:52Z","user_id":53313357,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":649540131,"title":"Add missing validation in `QuantizedBatchNormWithGlobalNormalization`","body":"PiperOrigin-RevId: 370123451\nChange-Id: Id234d6dab1ec21230bb8e503dba30f899af87f33","created_at":"2021-05-20T23:18:58Z","closed_at":"2021-05-21T15:18:36Z","merged_at":"2021-05-21T15:18:36Z","user_id":53313357,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":649539716,"title":"Add missing validation in `QuantizedBatchNormWithGlobalNormalization`","body":"PiperOrigin-RevId: 370123451\nChange-Id: Id234d6dab1ec21230bb8e503dba30f899af87f33","created_at":"2021-05-20T23:18:05Z","closed_at":"2021-05-21T15:18:20Z","merged_at":"2021-05-21T15:18:20Z","user_id":53313357,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":649539151,"title":"Add missing validation in `QuantizedBatchNormWithGlobalNormalization`","body":"PiperOrigin-RevId: 370123451\nChange-Id: Id234d6dab1ec21230bb8e503dba30f899af87f33","created_at":"2021-05-20T23:16:52Z","closed_at":"2021-05-21T15:18:03Z","merged_at":"2021-05-21T15:18:03Z","user_id":53313357,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":649536715,"title":"Prevent division by 0 in `QuantizedBiasAdd`.","body":"PiperOrigin-RevId: 370117454\nChange-Id: I3804e2ac8dcc6d3afcc92e27853e2325a017ca4d","created_at":"2021-05-20T23:12:35Z","closed_at":"2021-05-21T15:17:44Z","merged_at":"2021-05-21T15:17:44Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649535997,"title":"Prevent division by 0 in `QuantizedBiasAdd`.","body":"PiperOrigin-RevId: 370117454\nChange-Id: I3804e2ac8dcc6d3afcc92e27853e2325a017ca4d","created_at":"2021-05-20T23:11:15Z","closed_at":"2021-05-21T15:17:21Z","merged_at":"2021-05-21T15:17:21Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649535147,"title":"Prevent division by 0 in `QuantizedBiasAdd`.","body":"PiperOrigin-RevId: 370117454\nChange-Id: I3804e2ac8dcc6d3afcc92e27853e2325a017ca4d","created_at":"2021-05-20T23:09:09Z","closed_at":"2021-05-21T15:17:06Z","merged_at":"2021-05-21T15:17:06Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649527762,"title":"Prevent division by 0 in `QuantizedBiasAdd`.","body":"PiperOrigin-RevId: 370117454\nChange-Id: I3804e2ac8dcc6d3afcc92e27853e2325a017ca4d","created_at":"2021-05-20T22:51:17Z","closed_at":"2021-05-21T15:16:50Z","merged_at":"2021-05-21T15:16:50Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649527316,"title":"Fix crash in `SparseTensorToCSRSparseMatrixCPUFunctor`","body":"PiperOrigin-RevId: 370110290\nChange-Id: I4451e92661a55c2180f80d38b67a9b50bf5edec5","created_at":"2021-05-20T22:50:14Z","closed_at":"2021-05-21T15:16:36Z","merged_at":"2021-05-21T15:16:35Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649526898,"title":"Fix crash in `SparseTensorToCSRSparseMatrixCPUFunctor`","body":"PiperOrigin-RevId: 370110290\nChange-Id: I4451e92661a55c2180f80d38b67a9b50bf5edec5","created_at":"2021-05-20T22:49:21Z","closed_at":"2021-05-21T15:16:21Z","merged_at":"2021-05-21T15:16:21Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649526118,"title":"Fix crash in `SparseTensorToCSRSparseMatrixCPUFunctor`","body":"PiperOrigin-RevId: 370110290\nChange-Id: I4451e92661a55c2180f80d38b67a9b50bf5edec5","created_at":"2021-05-20T22:47:26Z","closed_at":"2021-05-21T15:16:05Z","merged_at":"2021-05-21T15:16:05Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649525801,"title":"Fix crash in `SparseTensorToCSRSparseMatrixCPUFunctor`","body":"PiperOrigin-RevId: 370110290\nChange-Id: I4451e92661a55c2180f80d38b67a9b50bf5edec5","created_at":"2021-05-20T22:46:41Z","closed_at":"2021-05-21T15:15:46Z","merged_at":"2021-05-21T15:15:46Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649525386,"title":"Fix `tf.raw_ops.CTCGreedyDecoder` CHECK failure.","body":"PiperOrigin-RevId: 369960465\nChange-Id: If0b8b3264d5a47a24ac0970ed7b81ce6b4921fae","created_at":"2021-05-20T22:45:33Z","closed_at":"2021-05-21T15:15:30Z","merged_at":"2021-05-21T15:15:30Z","user_id":53313357,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":649525059,"title":"Fix `tf.raw_ops.CTCGreedyDecoder` CHECK failure.","body":"PiperOrigin-RevId: 369960465\nChange-Id: If0b8b3264d5a47a24ac0970ed7b81ce6b4921fae","created_at":"2021-05-20T22:44:50Z","closed_at":"2021-05-21T15:15:17Z","merged_at":"2021-05-21T15:15:17Z","user_id":53313357,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":649524686,"title":"Fix `tf.raw_ops.CTCGreedyDecoder` CHECK failure.","body":"PiperOrigin-RevId: 369960465\nChange-Id: If0b8b3264d5a47a24ac0970ed7b81ce6b4921fae","created_at":"2021-05-20T22:43:57Z","closed_at":"2021-05-21T15:15:03Z","merged_at":"2021-05-21T15:15:03Z","user_id":53313357,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":649523649,"title":"Fix `tf.raw_ops.CTCGreedyDecoder` CHECK failure.","body":"PiperOrigin-RevId: 369960465\nChange-Id: If0b8b3264d5a47a24ac0970ed7b81ce6b4921fae","created_at":"2021-05-20T22:41:44Z","closed_at":"2021-05-21T15:14:48Z","merged_at":"2021-05-21T15:14:48Z","user_id":53313357,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":649514803,"title":"Fix `tf.raw_ops.QuantizeAndDequantizeV4Grad` CHECK failure.","body":"PiperOrigin-RevId: 370532425\nChange-Id: I767721be266851b63d8fe55e7ac6be0af6017f6c","created_at":"2021-05-20T22:24:31Z","closed_at":"2021-05-21T15:14:32Z","merged_at":"2021-05-21T15:14:32Z","user_id":53313357,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":649513916,"title":"Enhance validation of ngram op and handle case of 0 tokens.","body":"PiperOrigin-RevId: 369940178\nChange-Id: Ia82f42c09d14efe76e7dc013505b832a42282f0b","created_at":"2021-05-20T22:22:29Z","closed_at":"2021-05-21T15:14:17Z","merged_at":"2021-05-21T15:14:17Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649513485,"title":"Enhance validation of ngram op and handle case of 0 tokens.","body":"PiperOrigin-RevId: 369940178\nChange-Id: Ia82f42c09d14efe76e7dc013505b832a42282f0b","created_at":"2021-05-20T22:21:27Z","closed_at":"2021-05-21T15:14:00Z","merged_at":"2021-05-21T15:14:00Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649512983,"title":"Enhance validation of ngram op and handle case of 0 tokens.","body":"PiperOrigin-RevId: 369940178\nChange-Id: Ia82f42c09d14efe76e7dc013505b832a42282f0b","created_at":"2021-05-20T22:20:16Z","closed_at":"2021-05-21T15:13:43Z","merged_at":"2021-05-21T15:13:42Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649512548,"title":"Enhance validation of ngram op and handle case of 0 tokens.","body":"PiperOrigin-RevId: 369940178\nChange-Id: Ia82f42c09d14efe76e7dc013505b832a42282f0b","created_at":"2021-05-20T22:19:20Z","closed_at":"2021-05-21T15:13:24Z","merged_at":"2021-05-21T15:13:23Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649483556,"title":"Fix issues in Conv2DBackpropFilter.","body":"PiperOrigin-RevId: 369772454\nChange-Id: I49b465f2ae2ce91def61b56cea8000197d5177d8","created_at":"2021-05-20T21:27:39Z","closed_at":"2021-05-21T15:13:02Z","merged_at":"2021-05-21T15:13:02Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649481838,"title":"Fix issues in Conv2DBackpropFilter.","body":"PiperOrigin-RevId: 369772454\nChange-Id: I49b465f2ae2ce91def61b56cea8000197d5177d8","created_at":"2021-05-20T21:24:30Z","closed_at":"2021-05-21T15:12:47Z","merged_at":"2021-05-21T15:12:47Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649481537,"title":"Fix issues in Conv2DBackpropFilter.","body":"PiperOrigin-RevId: 369772454\nChange-Id: I49b465f2ae2ce91def61b56cea8000197d5177d8","created_at":"2021-05-20T21:23:55Z","closed_at":"2021-05-21T15:12:31Z","merged_at":"2021-05-21T15:12:31Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649481205,"title":"Fix issues in Conv2DBackpropFilter.","body":"PiperOrigin-RevId: 369772454\nChange-Id: I49b465f2ae2ce91def61b56cea8000197d5177d8","created_at":"2021-05-20T21:23:19Z","closed_at":"2021-05-21T15:12:11Z","merged_at":"2021-05-21T15:12:11Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649480187,"title":"Validate arguments to `QuantizedReshape`.","body":"Ensure that validations from `Reshape` also terminate `QuantizedReshape` on failure.\n\nPiperOrigin-RevId: 369775421\nChange-Id: If8c5342267aceea65b7cb83a4b183304886f1ce8","created_at":"2021-05-20T21:21:21Z","closed_at":"2021-05-21T15:26:11Z","merged_at":"2021-05-21T15:26:11Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649478835,"title":"Validate arguments to `QuantizedReshape`.","body":"Ensure that validations from `Reshape` also terminate `QuantizedReshape` on failure.\n\nPiperOrigin-RevId: 369775421\nChange-Id: If8c5342267aceea65b7cb83a4b183304886f1ce8","created_at":"2021-05-20T21:19:18Z","closed_at":"2021-05-21T15:25:57Z","merged_at":"2021-05-21T15:25:57Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649478498,"title":"Validate arguments to `QuantizedReshape`.","body":"Ensure that validations from `Reshape` also terminate `QuantizedReshape` on failure.\n\nPiperOrigin-RevId: 369775421\nChange-Id: If8c5342267aceea65b7cb83a4b183304886f1ce8","created_at":"2021-05-20T21:18:40Z","closed_at":"2021-05-21T15:25:40Z","merged_at":"2021-05-21T15:25:40Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649477508,"title":"Validate arguments to `QuantizedReshape`.","body":"Ensure that validations from `Reshape` also terminate `QuantizedReshape` on failure.\n\nPiperOrigin-RevId: 369775421\nChange-Id: If8c5342267aceea65b7cb83a4b183304886f1ce8","created_at":"2021-05-20T21:17:11Z","closed_at":"2021-05-21T15:25:22Z","merged_at":"2021-05-21T15:25:22Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649476431,"title":"Cherrypick:Validate min and max arguments to .","body":null,"created_at":"2021-05-20T21:15:33Z","closed_at":"2021-05-21T15:25:07Z","merged_at":"2021-05-21T15:25:06Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649475219,"title":"Cherrypick:Validate min and max arguments to .","body":null,"created_at":"2021-05-20T21:13:53Z","closed_at":"2021-05-21T15:24:50Z","merged_at":"2021-05-21T15:24:50Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649471952,"title":"Cherrypick:Validate min and max arguments to .","body":null,"created_at":"2021-05-20T21:09:05Z","closed_at":"2021-05-21T15:24:36Z","merged_at":"2021-05-21T15:24:36Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649470649,"title":"Cherrypick:Validate min and max arguments to .","body":null,"created_at":"2021-05-20T21:07:09Z","closed_at":"2021-05-21T15:24:14Z","merged_at":"2021-05-21T15:24:14Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649457711,"title":"Fix overflow CHECK issue with `tf.raw_ops.AddManySparseToTensorsMap`.","body":"PiperOrigin-RevId: 369755048\nChange-Id: Ia1663e49ef8387d84baa2c15dccf3506adffde84","created_at":"2021-05-20T20:55:29Z","closed_at":"2021-05-21T15:23:54Z","merged_at":"2021-05-21T15:23:54Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649456466,"title":"Fix overflow CHECK issue with `tf.raw_ops.AddManySparseToTensorsMap`.","body":"PiperOrigin-RevId: 369755048\nChange-Id: Ia1663e49ef8387d84baa2c15dccf3506adffde84","created_at":"2021-05-20T20:54:33Z","closed_at":"2021-05-21T15:23:38Z","merged_at":"2021-05-21T15:23:38Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649455305,"title":"Fix overflow CHECK issue with `tf.raw_ops.AddManySparseToTensorsMap`.","body":"PiperOrigin-RevId: 369755048\nChange-Id: Ia1663e49ef8387d84baa2c15dccf3506adffde84","created_at":"2021-05-20T20:53:25Z","closed_at":"2021-05-21T15:23:22Z","merged_at":"2021-05-21T15:23:22Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649453023,"title":"Fix overflow CHECK issue with `tf.raw_ops.AddManySparseToTensorsMap`.","body":"PiperOrigin-RevId: 369755048\nChange-Id: Ia1663e49ef8387d84baa2c15dccf3506adffde84","created_at":"2021-05-20T20:51:43Z","closed_at":"2021-05-21T15:23:04Z","merged_at":"2021-05-21T15:23:04Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649451386,"title":"Validate inputs to `QuantizedMul`","body":"PiperOrigin-RevId: 369756982\nChange-Id: I00d960cc3b9316fd7a86bd37a44e341c96e17624","created_at":"2021-05-20T20:50:11Z","closed_at":"2021-05-21T15:22:49Z","merged_at":"2021-05-21T15:22:49Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649450361,"title":"Validate inputs to `QuantizedMul`","body":"PiperOrigin-RevId: 369756982\nChange-Id: I00d960cc3b9316fd7a86bd37a44e341c96e17624","created_at":"2021-05-20T20:49:23Z","closed_at":"2021-05-21T15:22:35Z","merged_at":"2021-05-21T15:22:35Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649449128,"title":"Validate inputs to `QuantizedMul`","body":"PiperOrigin-RevId: 369756982\nChange-Id: I00d960cc3b9316fd7a86bd37a44e341c96e17624","created_at":"2021-05-20T20:48:24Z","closed_at":"2021-05-21T15:22:20Z","merged_at":"2021-05-21T15:22:20Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649446943,"title":"Validate inputs to `QuantizedMul`","body":"PiperOrigin-RevId: 369756982\nChange-Id: I00d960cc3b9316fd7a86bd37a44e341c96e17624","created_at":"2021-05-20T20:46:32Z","closed_at":"2021-05-21T15:22:03Z","merged_at":"2021-05-21T15:22:03Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649445580,"title":"Fix overflow CHECK issue with `tf.raw_ops.DrawBoundingBoxes`.","body":"PiperOrigin-RevId: 369753591\nChange-Id: I3b45fc98ee0d28a3c20b7e9c995aa647c976ec40","created_at":"2021-05-20T20:45:09Z","closed_at":"2021-05-21T15:21:44Z","merged_at":"2021-05-21T15:21:44Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649444917,"title":"Fix overflow CHECK issue with `tf.raw_ops.DrawBoundingBoxes`.","body":"PiperOrigin-RevId: 369753591\nChange-Id: I3b45fc98ee0d28a3c20b7e9c995aa647c976ec40","created_at":"2021-05-20T20:44:40Z","closed_at":"2021-05-21T15:21:29Z","merged_at":"2021-05-21T15:21:28Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649442016,"title":"Fix overflow CHECK issue with `tf.raw_ops.DrawBoundingBoxes`.","body":"PiperOrigin-RevId: 369753591\nChange-Id: I3b45fc98ee0d28a3c20b7e9c995aa647c976ec40","created_at":"2021-05-20T20:42:33Z","closed_at":"2021-05-21T15:21:14Z","merged_at":"2021-05-21T15:21:14Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649421194,"title":"Fix overflow CHECK issue with `tf.raw_ops.DrawBoundingBoxes`.","body":"PiperOrigin-RevId: 369753591\nChange-Id: I3b45fc98ee0d28a3c20b7e9c995aa647c976ec40","created_at":"2021-05-20T20:26:22Z","closed_at":"2021-05-21T15:20:56Z","merged_at":"2021-05-21T15:20:56Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649415950,"title":"Fix xtensa build.","body":"https://github.com/tensorflow/tensorflow/pull/49117 was only tested for Fusion F1 and broke the Hifimini and Vision P6 builds.\r\n\r\nVerified that with this change, the following commands pass:\r\n```\r\nmake -f tensorflow/lite/micro/tools/make/Makefile TARGET=xtensa OPTIMIZED_KERNEL_DIR=xtensa TARGET_ARCH=hifimini XTENSA_CORE=mini1m1m_RG run_keyword_benchmark -j8\r\nmake -f tensorflow/lite/micro/tools/make/Makefile TARGET=xtensa OPTIMIZED_KERNEL_DIR=xtensa TARGET_ARCH=vision_p6 XTENSA_CORE=P6_200528 build -j8\r\n```\r\n","created_at":"2021-05-20T20:22:22Z","closed_at":"2021-05-20T21:21:38Z","merged_at":"2021-05-20T21:21:38Z","user_id":2789958,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649397418,"title":"Fix out of bounds read in `ragged_cross_op.cc`.","body":"PiperOrigin-RevId: 369757702\nChange-Id: Ie6e5d2c21513a8d56bf41fcf35960caf76e890f9","created_at":"2021-05-20T20:08:10Z","closed_at":"2021-05-21T15:20:24Z","merged_at":"2021-05-21T15:20:24Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649390809,"title":"Fix out of bounds read in `ragged_cross_op.cc`.","body":"PiperOrigin-RevId: 369757702\nChange-Id: Ie6e5d2c21513a8d56bf41fcf35960caf76e890f9","created_at":"2021-05-20T20:02:19Z","closed_at":"2021-05-21T15:20:05Z","merged_at":"2021-05-21T15:20:05Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649386382,"title":"Fix null CHECK issue with `tf.raw_ops.EncodePng`.","body":"PiperOrigin-RevId: 369717714\nChange-Id: I24136cd99c20b8466671f4f93b670ef6f6dd1250","created_at":"2021-05-20T19:58:21Z","closed_at":"2021-05-21T15:34:39Z","merged_at":"2021-05-21T15:34:39Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649385297,"title":"Fix null CHECK issue with `tf.raw_ops.EncodePng`.","body":"PiperOrigin-RevId: 369717714\nChange-Id: I24136cd99c20b8466671f4f93b670ef6f6dd1250","created_at":"2021-05-20T19:57:29Z","closed_at":"2021-05-21T15:34:25Z","merged_at":"2021-05-21T15:34:25Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649383989,"title":"Fix null CHECK issue with `tf.raw_ops.EncodePng`.","body":"PiperOrigin-RevId: 369717714\nChange-Id: I24136cd99c20b8466671f4f93b670ef6f6dd1250","created_at":"2021-05-20T19:55:55Z","closed_at":"2021-05-21T15:34:11Z","merged_at":"2021-05-21T15:34:11Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649382753,"title":"Fix null CHECK issue with `tf.raw_ops.EncodePng`.","body":"PiperOrigin-RevId: 369717714\nChange-Id: I24136cd99c20b8466671f4f93b670ef6f6dd1250","created_at":"2021-05-20T19:55:00Z","closed_at":"2021-05-21T15:33:52Z","merged_at":"2021-05-21T15:33:52Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649381888,"title":"Fix heap buffer overflow caused by rounding.","body":"This was hard to fix. Due to the way we compute the pixels that influence an output pixel in resized images, for certain input configuration we might have issued a read to a pixel that is outside of boundary of the original image. This is because of floating errors that affected truncation results.\n\nPiperOrigin-RevId: 369757871\nChange-Id: If89425fff930983829a2168203c11858883eebc9","created_at":"2021-05-20T19:54:01Z","closed_at":"2021-05-21T15:33:36Z","merged_at":"2021-05-21T15:33:36Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649381477,"title":"Fix heap buffer overflow caused by rounding.","body":"This was hard to fix. Due to the way we compute the pixels that influence an output pixel in resized images, for certain input configuration we might have issued a read to a pixel that is outside of boundary of the original image. This is because of floating errors that affected truncation results.\n\nPiperOrigin-RevId: 369757871\nChange-Id: If89425fff930983829a2168203c11858883eebc9","created_at":"2021-05-20T19:53:28Z","closed_at":"2021-05-21T15:33:22Z","merged_at":"2021-05-21T15:33:22Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649380638,"title":"Fix heap buffer overflow caused by rounding.","body":"This was hard to fix. Due to the way we compute the pixels that influence an output pixel in resized images, for certain input configuration we might have issued a read to a pixel that is outside of boundary of the original image. This is because of floating errors that affected truncation results.\n\nPiperOrigin-RevId: 369757871\nChange-Id: If89425fff930983829a2168203c11858883eebc9","created_at":"2021-05-20T19:52:18Z","closed_at":"2021-05-21T15:32:02Z","merged_at":"2021-05-21T15:32:02Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649379319,"title":"Fix heap buffer overflow caused by rounding.","body":"This was hard to fix. Due to the way we compute the pixels that influence an output pixel in resized images, for certain input configuration we might have issued a read to a pixel that is outside of boundary of the original image. This is because of floating errors that affected truncation results.\n\nPiperOrigin-RevId: 369757871\nChange-Id: If89425fff930983829a2168203c11858883eebc9","created_at":"2021-05-20T19:50:43Z","closed_at":"2021-05-21T15:31:23Z","merged_at":"2021-05-21T15:31:23Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649376376,"title":"Remove `OP_REQUIRES` call from helper function.","body":"Since `OP_REQUIRES` macro expands to a `return;` (among other), calling it in a helper function only ends the helper function's execution earlier, but the kernel will still run from start to end. Thus, all the expected validations are actually broken/useless as the code ploughs through the next crash anyway.\n\nPiperOrigin-RevId: 369524386\nChange-Id: I54f6cf9328445675ccc392e661b04336b229c9da","created_at":"2021-05-20T19:48:16Z","closed_at":"2021-05-21T15:31:05Z","merged_at":"2021-05-21T15:31:05Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649376081,"title":"Remove `OP_REQUIRES` call from helper function.","body":"Since `OP_REQUIRES` macro expands to a `return;` (among other), calling it in a helper function only ends the helper function's execution earlier, but the kernel will still run from start to end. Thus, all the expected validations are actually broken/useless as the code ploughs through the next crash anyway.\n\nPiperOrigin-RevId: 369524386\nChange-Id: I54f6cf9328445675ccc392e661b04336b229c9da","created_at":"2021-05-20T19:47:53Z","closed_at":"2021-05-21T15:30:49Z","merged_at":"2021-05-21T15:30:49Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649375185,"title":"Remove `OP_REQUIRES` call from helper function.","body":"Since `OP_REQUIRES` macro expands to a `return;` (among other), calling it in a helper function only ends the helper function's execution earlier, but the kernel will still run from start to end. Thus, all the expected validations are actually broken/useless as the code ploughs through the next crash anyway.\n\nPiperOrigin-RevId: 369524386\nChange-Id: I54f6cf9328445675ccc392e661b04336b229c9da","created_at":"2021-05-20T19:46:47Z","closed_at":"2021-05-21T15:30:33Z","merged_at":"2021-05-21T15:30:33Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649373100,"title":"Remove `OP_REQUIRES` call from helper function.","body":"Since `OP_REQUIRES` macro expands to a `return;` (among other), calling it in a helper function only ends the helper function's execution earlier, but the kernel will still run from start to end. Thus, all the expected validations are actually broken/useless as the code ploughs through the next crash anyway.\n\nPiperOrigin-RevId: 369524386\nChange-Id: I54f6cf9328445675ccc392e661b04336b229c9da","created_at":"2021-05-20T19:45:01Z","closed_at":"2021-05-21T15:30:17Z","merged_at":"2021-05-21T15:30:17Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649366012,"title":"Fix one division by zero","body":"PiperOrigin-RevId: 369474832\nChange-Id: I1082858ed78d9b2e4738ce30b231955973d49e1e","created_at":"2021-05-20T19:39:41Z","closed_at":"2021-05-21T15:29:57Z","merged_at":"2021-05-21T15:29:57Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649365015,"title":"Fix one division by zero","body":"PiperOrigin-RevId: 369474832\nChange-Id: I1082858ed78d9b2e4738ce30b231955973d49e1e","created_at":"2021-05-20T19:39:09Z","closed_at":"2021-05-21T15:29:41Z","merged_at":"2021-05-21T15:29:41Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649363957,"title":"Fix one division by zero","body":"PiperOrigin-RevId: 369474832\nChange-Id: I1082858ed78d9b2e4738ce30b231955973d49e1e","created_at":"2021-05-20T19:38:35Z","closed_at":"2021-05-21T15:29:27Z","merged_at":"2021-05-21T15:29:27Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649362716,"title":"Fix one division by zero","body":"PiperOrigin-RevId: 369474832\nChange-Id: I1082858ed78d9b2e4738ce30b231955973d49e1e","created_at":"2021-05-20T19:38:00Z","closed_at":"2021-05-21T15:29:11Z","merged_at":"2021-05-21T15:29:11Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649356197,"title":"Fix one FPE and remove two CHECK-fails.","body":"PiperOrigin-RevId: 369349640\nChange-Id: I1fedbfc2b5bab635c5cb51f103d7c9176f79831a","created_at":"2021-05-20T19:33:17Z","closed_at":"2021-05-21T15:28:55Z","merged_at":"2021-05-21T15:28:55Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649354553,"title":"Fix one FPE and remove two CHECK-fails.","body":"PiperOrigin-RevId: 369349640\nChange-Id: I1fedbfc2b5bab635c5cb51f103d7c9176f79831a","created_at":"2021-05-20T19:31:51Z","closed_at":"2021-05-21T15:28:39Z","merged_at":"2021-05-21T15:28:39Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649353907,"title":"Fix one FPE and remove two CHECK-fails.","body":"PiperOrigin-RevId: 369349640\nChange-Id: I1fedbfc2b5bab635c5cb51f103d7c9176f79831a","created_at":"2021-05-20T19:31:04Z","closed_at":"2021-05-21T15:28:25Z","merged_at":"2021-05-21T15:28:25Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649352615,"title":"Fix one FPE and remove two CHECK-fails.","body":"PiperOrigin-RevId: 369349640\nChange-Id: I1fedbfc2b5bab635c5cb51f103d7c9176f79831a","created_at":"2021-05-20T19:30:04Z","closed_at":"2021-05-21T15:28:09Z","merged_at":"2021-05-21T15:28:09Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649286484,"title":"Resolves coredump caused by `tf.data.experimental.save` with prefetch","body":"Repeat and prefetch in combination cause the snapshot reader Initialize function to be invoked multiple times.\r\nHowever, there is nothing to prefetch on the very last iteration. This results in Prefetch issuing a CancelThreads call while the snapshot thread is trying to initialize. See https://github.com/tensorflow/tensorflow/blob/6446dda92eaadf11d22377e2354307642d739d73/tensorflow/core/kernels/data/prefetch_dataset_op.cc#L151\r\n\r\nCurrently the dataset reference counting is done asymmetrically. The reference increment happens at the end of initialization, where as the reference decrement\r\nhappens in a destructor. When prefetch cancels the snapshot thread, it errors out of the initialization function. And stops calling the reference increment. However, the reference decrement happens regardless, as it is in the destructor which always is invoked during cleanup. This results in an attempt to decrement the null dataset pointer, and therefore a segmentation fault.\r\nThis is different from all other dataset ops, where the dataset reference increment happens in the constructor and the decrement happens in the destructor, which are symmetric.\r\n\r\nThe solution to this is to ensure that the dataset reference is always initialized to nullptr, and to check for null when decrementing the dataset reference.","created_at":"2021-05-20T18:34:29Z","closed_at":"2021-08-06T16:20:13Z","merged_at":"2021-08-06T16:20:13Z","user_id":690493,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649162520,"title":"Remove unused constants","body":"This PR removes a few unused constants to remove a few `-Wunused-variable` compile time warnings.","created_at":"2021-05-20T16:56:23Z","closed_at":"2021-05-26T01:07:27Z","merged_at":"2021-05-26T01:07:27Z","user_id":13285808,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":649113362,"title":"[MLIR] TF Graphdef to MLIR python binding: input/output options","body":"Update the Python binding from Graphdef to TF-MLIR with input/output\r\noptions - add non-trivial test cases.","created_at":"2021-05-20T16:23:28Z","closed_at":"2021-06-21T23:25:55Z","merged_at":"2021-06-21T23:25:55Z","user_id":16246821,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648912550,"title":"Added batch as formatting parameter during ModelCheckpoint callback","body":"Fixes #38668 . It is to complete the work done in two of my previous stale PRs #38669 and [#1702](https://github.com/tensorflow/addons/pull/1702).\r\n\r\ncc @mihaimaruseac , please review.","created_at":"2021-05-20T13:38:17Z","closed_at":"2021-06-17T22:18:21Z","merged_at":null,"user_id":20843596,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648228274,"title":"Prevent another division by zero.","body":"PiperOrigin-RevId: 369338598\nChange-Id: I55471d363e401fdcf8d259670ad4eef672b731e2","created_at":"2021-05-20T00:14:57Z","closed_at":"2021-05-20T15:21:29Z","merged_at":"2021-05-20T15:21:29Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648228188,"title":"Prevent another division by zero.","body":"PiperOrigin-RevId: 369338598\nChange-Id: I55471d363e401fdcf8d259670ad4eef672b731e2","created_at":"2021-05-20T00:14:49Z","closed_at":"2021-05-20T15:21:11Z","merged_at":"2021-05-20T15:21:11Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648227370,"title":"Prevent another division by zero.","body":"PiperOrigin-RevId: 369338598\nChange-Id: I55471d363e401fdcf8d259670ad4eef672b731e2","created_at":"2021-05-20T00:13:54Z","closed_at":"2021-05-20T15:20:56Z","merged_at":"2021-05-20T15:20:56Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648227233,"title":"Prevent another division by zero.","body":"PiperOrigin-RevId: 369338598\nChange-Id: I55471d363e401fdcf8d259670ad4eef672b731e2","created_at":"2021-05-20T00:13:45Z","closed_at":"2021-05-20T15:20:41Z","merged_at":"2021-05-20T15:20:41Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648224201,"title":"Fix overflow CHECK issue with `tf.raw_ops.AddManySparseToTensorsMap`.","body":"PiperOrigin-RevId: 369492969\nChange-Id: I1d70d6c0c92e3d7a25bc3b3aa2a0c0ac9688bf81","created_at":"2021-05-20T00:10:25Z","closed_at":"2021-05-20T15:20:24Z","merged_at":"2021-05-20T15:20:24Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648224154,"title":"Fix overflow CHECK issue with `tf.raw_ops.AddManySparseToTensorsMap`.","body":"PiperOrigin-RevId: 369492969\nChange-Id: I1d70d6c0c92e3d7a25bc3b3aa2a0c0ac9688bf81","created_at":"2021-05-20T00:10:23Z","closed_at":"2021-05-20T15:20:06Z","merged_at":"2021-05-20T15:20:06Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648223954,"title":"Fix overflow CHECK issue with `tf.raw_ops.AddManySparseToTensorsMap`.","body":"PiperOrigin-RevId: 369492969\nChange-Id: I1d70d6c0c92e3d7a25bc3b3aa2a0c0ac9688bf81","created_at":"2021-05-20T00:10:10Z","closed_at":"2021-05-20T15:19:45Z","merged_at":"2021-05-20T15:19:45Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648223925,"title":"Fix overflow CHECK issue with `tf.raw_ops.AddManySparseToTensorsMap`.","body":"PiperOrigin-RevId: 369492969\nChange-Id: I1d70d6c0c92e3d7a25bc3b3aa2a0c0ac9688bf81","created_at":"2021-05-20T00:10:08Z","closed_at":"2021-05-20T15:19:26Z","merged_at":"2021-05-20T15:19:26Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648217413,"title":"Eliminate a division by 0 in 3D convolutions.","body":null,"created_at":"2021-05-20T00:02:52Z","closed_at":"2021-05-24T00:27:21Z","merged_at":"2021-05-24T00:27:21Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648215736,"title":"Eliminate a division by 0 in 3D convolutions.","body":null,"created_at":"2021-05-20T00:01:11Z","closed_at":"2021-05-24T00:27:28Z","merged_at":"2021-05-24T00:27:27Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648214005,"title":"Eliminate a division by 0 in 3D convolutions.","body":null,"created_at":"2021-05-19T23:59:32Z","closed_at":"2021-05-24T00:27:38Z","merged_at":"2021-05-24T00:27:38Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648212151,"title":"Eliminate a division by 0 in 3D convolutions.","body":null,"created_at":"2021-05-19T23:57:45Z","closed_at":"2021-05-24T00:27:49Z","merged_at":"2021-05-24T00:27:48Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648187403,"title":"Validate some shape requirements for `Conv3DBackpropFilter*` and `Conv3DBackpropInput*` ops.","body":"Older versions of Eigen might otherwise crash / produce OOB read on specially crafted inputs.\n\nPiperOrigin-RevId: 369293977\nChange-Id: I58f51445a93936d7cf8e616f75de17677df36718","created_at":"2021-05-19T23:23:57Z","closed_at":"2021-05-20T15:16:22Z","merged_at":"2021-05-20T15:16:22Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648187364,"title":"Validate some shape requirements for `Conv3DBackpropFilter*` and `Conv3DBackpropInput*` ops.","body":"Older versions of Eigen might otherwise crash / produce OOB read on specially crafted inputs.\n\nPiperOrigin-RevId: 369293977\nChange-Id: I58f51445a93936d7cf8e616f75de17677df36718","created_at":"2021-05-19T23:23:54Z","closed_at":"2021-05-20T15:16:02Z","merged_at":"2021-05-20T15:16:01Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648187193,"title":"Validate some shape requirements for `Conv3DBackpropFilter*` and `Conv3DBackpropInput*` ops.","body":"Older versions of Eigen might otherwise crash / produce OOB read on specially crafted inputs.\n\nPiperOrigin-RevId: 369293977\nChange-Id: I58f51445a93936d7cf8e616f75de17677df36718","created_at":"2021-05-19T23:23:40Z","closed_at":"2021-05-20T15:15:44Z","merged_at":"2021-05-20T15:15:44Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648187168,"title":"Validate some shape requirements for `Conv3DBackpropFilter*` and `Conv3DBackpropInput*` ops.","body":"Older versions of Eigen might otherwise crash / produce OOB read on specially crafted inputs.\n\nPiperOrigin-RevId: 369293977\nChange-Id: I58f51445a93936d7cf8e616f75de17677df36718","created_at":"2021-05-19T23:23:38Z","closed_at":"2021-05-20T15:15:23Z","merged_at":"2021-05-20T15:15:23Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648183942,"title":"Fix the segfault in `tf.raw_ops.SparseCountSparseOutput`.","body":"PiperOrigin-RevId: 369264941\nChange-Id: I23a96a15b8370c01ee21ba3841e1c7dcbf55e93d","created_at":"2021-05-19T23:18:33Z","closed_at":"2021-05-20T15:15:00Z","merged_at":"2021-05-20T15:15:00Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648183848,"title":"Fix the segfault in `tf.raw_ops.SparseCountSparseOutput`.","body":"PiperOrigin-RevId: 369264941\nChange-Id: I23a96a15b8370c01ee21ba3841e1c7dcbf55e93d","created_at":"2021-05-19T23:18:23Z","closed_at":"2021-05-20T15:14:46Z","merged_at":"2021-05-20T15:14:46Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648178066,"title":"Fix `tf.raw_ops.SparseCross` failing CHECK.","body":"PiperOrigin-RevId: 368701671\nChange-Id: Id805729dd9ba0bda36e4bb309408129b55fb649d","created_at":"2021-05-19T23:06:26Z","closed_at":"2021-05-20T15:14:30Z","merged_at":"2021-05-20T15:14:30Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648177705,"title":"Fix `tf.raw_ops.SparseCross` failing CHECK.","body":"PiperOrigin-RevId: 368701671\nChange-Id: Id805729dd9ba0bda36e4bb309408129b55fb649d","created_at":"2021-05-19T23:05:36Z","closed_at":"2021-05-20T15:14:09Z","merged_at":"2021-05-20T15:14:09Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648176357,"title":"Fix `tf.raw_ops.RaggedTensorToTensor` failing CHECK in `tensor.cc`.","body":"PiperOrigin-RevId: 368300502\nChange-Id: I91255d23c4bfd3aa3c029aac773937c09daf3c64","created_at":"2021-05-19T23:02:44Z","closed_at":"2021-05-20T15:13:55Z","merged_at":"2021-05-20T15:13:55Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648175903,"title":"Fix `tf.raw_ops.RaggedTensorToTensor` failing CHECK in `tensor.cc`.","body":"PiperOrigin-RevId: 368300502\nChange-Id: I91255d23c4bfd3aa3c029aac773937c09daf3c64","created_at":"2021-05-19T23:01:46Z","closed_at":"2021-05-20T15:13:41Z","merged_at":"2021-05-20T15:13:41Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648174901,"title":"Fix `tf.raw_ops.RaggedTensorToTensor` failing CHECK in `tensor.cc`.","body":"PiperOrigin-RevId: 368300502\nChange-Id: I91255d23c4bfd3aa3c029aac773937c09daf3c64","created_at":"2021-05-19T22:59:39Z","closed_at":"2021-05-20T15:13:27Z","merged_at":"2021-05-20T15:13:27Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648174796,"title":"Fix `tf.raw_ops.RaggedTensorToTensor` failing CHECK in `tensor.cc`.","body":"PiperOrigin-RevId: 368300502\nChange-Id: I91255d23c4bfd3aa3c029aac773937c09daf3c64","created_at":"2021-05-19T22:59:27Z","closed_at":"2021-05-20T15:13:11Z","merged_at":"2021-05-20T15:13:11Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648173305,"title":"Fix `tf.raw_ops.RaggedTensorToTensor` failing CHECK.","body":"PiperOrigin-RevId: 368706628\nChange-Id: I5c9ea4833f38835ee183ca50d63251dc89c9f3bc","created_at":"2021-05-19T22:56:15Z","closed_at":"2021-05-20T15:12:52Z","merged_at":"2021-05-20T15:12:52Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648173194,"title":"Fix `tf.raw_ops.RaggedTensorToTensor` failing CHECK.","body":"PiperOrigin-RevId: 368706628\nChange-Id: I5c9ea4833f38835ee183ca50d63251dc89c9f3bc","created_at":"2021-05-19T22:56:05Z","closed_at":"2021-05-20T15:27:53Z","merged_at":"2021-05-20T15:27:53Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648172859,"title":"Fix `tf.raw_ops.RaggedTensorToTensor` failing CHECK.","body":"PiperOrigin-RevId: 368706628\nChange-Id: I5c9ea4833f38835ee183ca50d63251dc89c9f3bc","created_at":"2021-05-19T22:55:17Z","closed_at":"2021-05-20T15:27:38Z","merged_at":"2021-05-20T15:27:37Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648172540,"title":"Fix `tf.raw_ops.RaggedTensorToTensor` failing CHECK.","body":"PiperOrigin-RevId: 368706628\nChange-Id: I5c9ea4833f38835ee183ca50d63251dc89c9f3bc","created_at":"2021-05-19T22:54:38Z","closed_at":"2021-05-20T15:27:19Z","merged_at":"2021-05-20T15:27:19Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648170528,"title":"Fix  and  null pointer dereferences.","body":null,"created_at":"2021-05-19T22:50:30Z","closed_at":"2021-05-20T15:27:00Z","merged_at":"2021-05-20T15:27:00Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648170236,"title":"Fix  and  null pointer dereferences.","body":null,"created_at":"2021-05-19T22:49:58Z","closed_at":"2021-05-20T15:26:44Z","merged_at":"2021-05-20T15:26:44Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648170179,"title":"Fix  and  null pointer dereferences.","body":null,"created_at":"2021-05-19T22:49:52Z","closed_at":"2021-05-20T15:26:27Z","merged_at":"2021-05-20T15:26:27Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648157247,"title":"Fix `tf.raw_ops.GetSessionTensor` and `tf.raw_ops.DeleteSessionTensor` null pointer dereferences.","body":"PiperOrigin-RevId: 368294154\nChange-Id: Ie10f07a0a9a1c2b685e08153d48a0ca4b93f9fc9","created_at":"2021-05-19T22:27:31Z","closed_at":"2021-05-20T15:25:53Z","merged_at":"2021-05-20T15:25:53Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648114020,"title":"Fix 2 issues with `Conv3D`.","body":"We have an issue where the dimensions are not matching and this causes Eigen to crash on an assert.\n\nThen, we have an issue where we accidentally do a division by 0.\n\nPiperOrigin-RevId: 369242785\nChange-Id: Ie94067b2d41f58699af99ebb5af335ad9defd931","created_at":"2021-05-19T21:52:32Z","closed_at":"2021-05-20T15:25:36Z","merged_at":"2021-05-20T15:25:36Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648113465,"title":"Fix 2 issues with `Conv3D`.","body":"We have an issue where the dimensions are not matching and this causes Eigen to crash on an assert.\n\nThen, we have an issue where we accidentally do a division by 0.\n\nPiperOrigin-RevId: 369242785\nChange-Id: Ie94067b2d41f58699af99ebb5af335ad9defd931","created_at":"2021-05-19T21:52:05Z","closed_at":"2021-05-20T15:25:18Z","merged_at":"2021-05-20T15:25:18Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648052171,"title":"Fix `tf.raw_ops.RaggedTensorToVariant` invalid resize.","body":"PiperOrigin-RevId: 368299574\nChange-Id: I751c186325aa0bab397928845e790e60c2d90918","created_at":"2021-05-19T21:03:35Z","closed_at":"2021-05-20T15:25:01Z","merged_at":"2021-05-20T15:25:01Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648045548,"title":"Handle a special grappler case resulting in crash.","body":"It might happen that a malformed input could be used to trick Grappler into trying to optimize a node with no inputs. This, in turn, would produce a null pointer dereference and a segfault.\n\nPiperOrigin-RevId: 369242852\nChange-Id: I2e5cbe7aec243d34a6d60220ac8ac9b16f136f6b","created_at":"2021-05-19T20:57:17Z","closed_at":"2021-05-20T15:24:45Z","merged_at":"2021-05-20T15:24:45Z","user_id":53313357,"sentiment":{"polarity":0.35714285714285715,"subjectivity":0.5714285714285714}}
{"_id":648045400,"title":"Handle a special grappler case resulting in crash.","body":"It might happen that a malformed input could be used to trick Grappler into trying to optimize a node with no inputs. This, in turn, would produce a null pointer dereference and a segfault.\n\nPiperOrigin-RevId: 369242852\nChange-Id: I2e5cbe7aec243d34a6d60220ac8ac9b16f136f6b","created_at":"2021-05-19T20:57:08Z","closed_at":"2021-05-20T15:24:31Z","merged_at":"2021-05-20T15:24:31Z","user_id":53313357,"sentiment":{"polarity":0.35714285714285715,"subjectivity":0.5714285714285714}}
{"_id":648045302,"title":"Handle a special grappler case resulting in crash.","body":"It might happen that a malformed input could be used to trick Grappler into trying to optimize a node with no inputs. This, in turn, would produce a null pointer dereference and a segfault.\n\nPiperOrigin-RevId: 369242852\nChange-Id: I2e5cbe7aec243d34a6d60220ac8ac9b16f136f6b","created_at":"2021-05-19T20:57:00Z","closed_at":"2021-05-20T15:24:16Z","merged_at":"2021-05-20T15:24:16Z","user_id":53313357,"sentiment":{"polarity":0.35714285714285715,"subjectivity":0.5714285714285714}}
{"_id":648045006,"title":"Handle a special grappler case resulting in crash.","body":"It might happen that a malformed input could be used to trick Grappler into trying to optimize a node with no inputs. This, in turn, would produce a null pointer dereference and a segfault.\n\nPiperOrigin-RevId: 369242852\nChange-Id: I2e5cbe7aec243d34a6d60220ac8ac9b16f136f6b","created_at":"2021-05-19T20:56:39Z","closed_at":"2021-05-20T15:23:56Z","merged_at":"2021-05-20T15:23:56Z","user_id":53313357,"sentiment":{"polarity":0.35714285714285715,"subjectivity":0.5714285714285714}}
{"_id":648040267,"title":"Validate `MatrixDiagV{2,3}` arguments to prevent breakage.","body":"PiperOrigin-RevId: 369056033\nChange-Id: Ic2018c297d3dd6f252dc1dd3667f1ed5cb1eaa42","created_at":"2021-05-19T20:50:38Z","closed_at":"2021-05-20T15:23:34Z","merged_at":"2021-05-20T15:23:34Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648040049,"title":"Validate `MatrixDiagV{2,3}` arguments to prevent breakage.","body":"PiperOrigin-RevId: 369056033\nChange-Id: Ic2018c297d3dd6f252dc1dd3667f1ed5cb1eaa42","created_at":"2021-05-19T20:50:17Z","closed_at":"2021-05-20T15:23:19Z","merged_at":"2021-05-20T15:23:19Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648039304,"title":"Validate `MatrixDiagV{2,3}` arguments to prevent breakage.","body":"PiperOrigin-RevId: 369056033\nChange-Id: Ic2018c297d3dd6f252dc1dd3667f1ed5cb1eaa42","created_at":"2021-05-19T20:49:18Z","closed_at":"2021-05-20T15:23:03Z","merged_at":"2021-05-20T15:23:03Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648039008,"title":"Validate `MatrixDiagV{2,3}` arguments to prevent breakage.","body":"PiperOrigin-RevId: 369056033\nChange-Id: Ic2018c297d3dd6f252dc1dd3667f1ed5cb1eaa42","created_at":"2021-05-19T20:48:54Z","closed_at":"2021-05-20T15:22:45Z","merged_at":"2021-05-20T15:22:45Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648034032,"title":"Fix `tf.raw_ops.ResourceCountUpTo` null pointer dereference.","body":"PiperOrigin-RevId: 368294347\nChange-Id: I2c16fbfc9b4966c402c3d8e311f0d665a9c852d8","created_at":"2021-05-19T20:42:07Z","closed_at":"2021-05-20T15:33:10Z","merged_at":"2021-05-20T15:33:10Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648033512,"title":"Fix `tf.raw_ops.ResourceCountUpTo` null pointer dereference.","body":"PiperOrigin-RevId: 368294347\nChange-Id: I2c16fbfc9b4966c402c3d8e311f0d665a9c852d8","created_at":"2021-05-19T20:41:20Z","closed_at":"2021-05-20T15:32:31Z","merged_at":"2021-05-20T15:32:31Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648032783,"title":"Fix `tf.raw_ops.ResourceCountUpTo` null pointer dereference.","body":"PiperOrigin-RevId: 368294347\nChange-Id: I2c16fbfc9b4966c402c3d8e311f0d665a9c852d8","created_at":"2021-05-19T20:40:16Z","closed_at":"2021-05-20T15:31:20Z","merged_at":"2021-05-20T15:31:20Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648032294,"title":"Fix `tf.raw_ops.ResourceCountUpTo` null pointer dereference.","body":"PiperOrigin-RevId: 368294347\nChange-Id: I2c16fbfc9b4966c402c3d8e311f0d665a9c852d8","created_at":"2021-05-19T20:39:39Z","closed_at":"2021-05-20T15:30:43Z","merged_at":"2021-05-20T15:30:43Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648025924,"title":"Remove duplicated entry of Env::Default","body":"While checking duplicated symbols in .so/dll, noticed that\r\nboth `_xla_ops.so` and `_pywrap_tensorflow_internal.so` consists\r\nof Env::Default symbols exported.\r\n\r\nThis PR removed the duplication in `_xla_ops.so`.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2021-05-19T20:31:15Z","closed_at":"2021-06-09T23:36:01Z","merged_at":"2021-06-09T23:36:01Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648024121,"title":"Fix segfaults in `tf.raw_ops.SparseCountSparseOutput`.","body":"PiperOrigin-RevId: 360547563\nChange-Id: I781c7af4b54a63d867c6e18d43a44d64a5c4e7c9","created_at":"2021-05-19T20:28:51Z","closed_at":"2021-05-20T15:29:18Z","merged_at":"2021-05-20T15:29:18Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":648023554,"title":"Fix segfaults in `tf.raw_ops.SparseCountSparseOutput`.","body":"PiperOrigin-RevId: 360547563\nChange-Id: I781c7af4b54a63d867c6e18d43a44d64a5c4e7c9","created_at":"2021-05-19T20:28:06Z","closed_at":"2021-05-20T15:29:01Z","merged_at":"2021-05-20T15:29:01Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":647973028,"title":"Skip hdfs if -config=nohdfs is passed to bazel","body":"While trying to build tensorflow locally, noticed that hdfs is linked\r\neven with -config=nohdfs. The issue comes form an incorrect options\r\nwithin build_config.bzl.\r\n\r\nThis PR fixes the issue.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>","created_at":"2021-05-19T19:19:34Z","closed_at":"2021-06-11T00:46:58Z","merged_at":"2021-06-11T00:46:58Z","user_id":6932348,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":647925118,"title":"[TFLite] Support GPU buffer binding with C API","body":"The binding model's Input/Output with MTLBuffer/OpenGL SSBO is considerably effective for performance. But it is only available with C++ API, it will be great if we can use this feature with C API and eventually, Swift and Java.\r\n\r\nhttps://www.tensorflow.org/lite/performance/gpu_advanced#inputoutput_buffers_ios_c_api_only\r\n\r\nThis PR allows us to call `TFLGpuDelegateBindMetalBufferToTensor (Metal Delegate)` and `TfLiteGpuDelegateBindBufferToTensor (GL Delegate)` from the C API.\r\n","created_at":"2021-05-19T18:15:22Z","closed_at":"2021-07-23T23:03:57Z","merged_at":"2021-07-23T23:03:57Z","user_id":357497,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":647872936,"title":"Resolves coredump caused by `tf.data.experimental.save` with prefetch","body":"Repeat and prefetch in combination cause the snapshot reader Initialize function to be invoked multiple times.\r\nHowever, there is nothing to prefetch on the very last iteration. This results in Prefetch issuing a CancelThreads call while the snapshot thread is trying to initialize. See https://github.com/tensorflow/tensorflow/blob/6446dda92eaadf11d22377e2354307642d739d73/tensorflow/core/kernels/data/prefetch_dataset_op.cc#L151\r\n\r\nCurrently the dataset reference counting is done asymmetrically. The reference increment happens at the end of initialization, where as the reference decrement\r\nhappens in a destructor. When prefetch cancels the snapshot thread, it errors out of the initialization function. And stops calling the reference increment. However, the reference decrement happens regardless, as it is in the destructor which always is invoked during cleanup. This results in an attempt to decrement the null dataset pointer, and therefore a segmentation fault.\r\nThis is different from all other dataset ops, where the dataset reference increment happens in the constructor and the decrement happens in the destructor, which are symmetric.\r\n\r\nThe solution to this is to ensure that the dataset reference is always initialized to nullptr, and to check for null when decrementing the dataset reference.","created_at":"2021-05-19T17:04:45Z","closed_at":"2021-05-20T15:28:44Z","merged_at":"2021-05-20T15:28:43Z","user_id":690493,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":647851848,"title":"[ROCm] HipSparse csru2csr for ROCm 4.2+","body":"Adding csru2csr functionality to HipSparse wrappers, inline with cuSparse implementations.\r\nIn conjunction with https://github.com/tensorflow/tensorflow/pull/49305. \r\n@cheshire  @chsigg for review. ","created_at":"2021-05-19T16:37:55Z","closed_at":"2021-05-24T14:07:47Z","merged_at":"2021-05-24T14:07:47Z","user_id":25489675,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":647841422,"title":"Lifting variable on retrace","body":"Explore the effect on tests to fix: https://github.com/tensorflow/tensorflow/issues/27120","created_at":"2021-05-19T16:24:47Z","closed_at":"2021-06-14T12:45:30Z","merged_at":"2021-06-14T12:45:30Z","user_id":1710528,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":647816409,"title":"Fix build on AArch64","body":"Execution platform: @local_execution_config_platform//:platform\r\nexternal/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64O0PreLegalizerCombiner.cpp:45:10: fatal error: AArch64GenO0PreLegalizeGICombiner.inc: No such file or directory\r\n   45 | #include \"AArch64GenO0PreLegalizeGICombiner.inc\"\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\ncompilation terminated.\r\n\r\nCloses #49136","created_at":"2021-05-19T15:55:41Z","closed_at":"2021-05-20T18:04:54Z","merged_at":null,"user_id":185508,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":647761463,"title":"[ROCm] Update to use ROCm 4.2 (when building TF with --config=rocm)","body":"/cc @cheshire @chsigg @sanjoy","created_at":"2021-05-19T14:58:07Z","closed_at":"2021-05-24T15:20:09Z","merged_at":"2021-05-24T15:20:09Z","user_id":36858332,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":647725464,"title":"[MLIR] Add lowering of SoftsignOp and SoftsignGradOp","body":"- Adds the lowering of TF::SoftsignGradOp from TF to HLO.\r\n- Adds the lowering of TF::SoftsignGradOp from TF to HLO.\r\n- These changes are part of `-xla-legalize-tf` pass.\r\n\r\n","created_at":"2021-05-19T14:23:43Z","closed_at":"2021-05-27T19:36:28Z","merged_at":"2021-05-27T19:36:28Z","user_id":22908967,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":647610045,"title":"Fix 'Illegal ambiguous match'","body":"bazel build for pip package //tensorflow/tools/pip_package:build_pip_package  on s390x gives the following error:\r\n\r\n```\r\nIllegal ambiguous match on configurable attribute \"deps\" in //tensorflow/core/common_runtime:core_cpu_internal:\r\n//tensorflow:linux_s390x\r\n//tensorflow:no_aws_support\r\nMultiple matches are not allowed unless one is unambiguously more specialized.\r\n```\r\n\r\nThis is because the select statement [here](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/platform/default/build_config.bzl#L678-L686) matches both //tensorflow:linux_s390x and //tensorflow:no_aws_support \r\n\r\n\r\nThis pr is to to remove `clean_dep(\"//tensorflow:no_aws_support\"): []` as AWS and HDFS support is disabled by default. ","created_at":"2021-05-19T12:25:57Z","closed_at":"2021-06-22T05:16:02Z","merged_at":null,"user_id":22975678,"sentiment":{"polarity":-0.5,"subjectivity":0.5}}
{"_id":647551511,"title":"[MLIR][DISC] Integrate LLVM at llvm/llvm-project@851d02f61e945d335","body":"Upgrade to use the new `reifyReturnTypeShapes` interface, which is more\r\nsafe to be used during dialect conversion (e.g. converting from tensor\r\nworld to buffer world).","created_at":"2021-05-19T11:16:17Z","closed_at":"2021-05-21T02:15:59Z","merged_at":null,"user_id":15364516,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":647237981,"title":"Update metrics.py: Fix SparseCategoricalAccuracy.update_state() doc string","body":"Update metrics.py: Fix SparseCategoricalAccuracy.update_state() doc string\r\n\r\nTry fixing issue #49252 \r\n\r\nFor SparseCategoricalAccuracy, `y_true` should be integer labels and `y_pred` should be probabilities.\r\n\r\n\r\n```\r\n    m = tf.keras.metrics.SparseCategoricalAccuracy()\r\n\r\n    m.update_state([[2], [1]], [[0.1, 0.6, 0.3], [0.05, 0.95, 0]])  # Correct usage,  `y_true` as integer labels and `y_pred` as probabilities.\r\n    print(m.result().numpy())\r\n    # >>> 0.5\r\n\r\n    m.update_state([[2], [1]], [[1], [1]])  # Wrong usage, both as integer labels.\r\n    print(m.result().numpy())\r\n    # >>> 0.25\r\n\r\n    m.update_state([[0, 1, 0], [0, 1, 0]], [[0.1, 0.6, 0.3], [0.05, 0.95, 0]])  # Wrong usage, both as probabilities.\r\n    print(m.result().numpy())\r\n    # >>> Error\r\n```","created_at":"2021-05-19T03:23:33Z","closed_at":"2021-06-21T20:15:12Z","merged_at":null,"user_id":2201480,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":647197182,"title":"CherryPick:2.4:PR #46974: Fix crash of tf.strings.substr when pos and len have different shapes","body":null,"created_at":"2021-05-19T01:16:43Z","closed_at":"2021-05-19T15:44:26Z","merged_at":"2021-05-19T15:44:26Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.6}}
{"_id":647195195,"title":"CherryPick:2.3:PR #46974: Fix crash of tf.strings.substr when pos and len have different shapes","body":null,"created_at":"2021-05-19T01:09:54Z","closed_at":"2021-05-19T15:44:08Z","merged_at":"2021-05-19T15:44:08Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.6}}
{"_id":647191273,"title":"CherryPick:2.2:PR #46974: Fix crash of tf.strings.substr when pos and len have different shapes","body":null,"created_at":"2021-05-19T00:56:42Z","closed_at":"2021-05-19T15:43:52Z","merged_at":"2021-05-19T15:43:52Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.6}}
{"_id":647188773,"title":"CherryPick:2.1:PR #46974: Fix crash of tf.strings.substr when pos and len have different shapes","body":null,"created_at":"2021-05-19T00:49:22Z","closed_at":"2021-05-19T15:43:36Z","merged_at":"2021-05-19T15:43:36Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.6}}
{"_id":647187242,"title":"[INTEL MKL] re-submit rsqrt op bfloat16 support","body":"the reverted PR is here: \r\nhttps://github.com/tensorflow/tensorflow/pull/43167","created_at":"2021-05-19T00:45:53Z","closed_at":"2021-05-27T07:41:38Z","merged_at":"2021-05-27T07:41:38Z","user_id":29615281,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":647183351,"title":"Allowlist certain data types to avoid a seg fault.","body":"PiperOrigin-RevId: 356326671\nChange-Id: I23b65b52e93798cb5a6744632d31b0f88c6b6b31","created_at":"2021-05-19T00:34:30Z","closed_at":"2021-05-19T15:43:16Z","merged_at":"2021-05-19T15:43:16Z","user_id":53313357,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.5714285714285714}}
{"_id":647182393,"title":"Allowlist certain data types to avoid a seg fault.","body":"PiperOrigin-RevId: 356326671\nChange-Id: I23b65b52e93798cb5a6744632d31b0f88c6b6b31","created_at":"2021-05-19T00:31:24Z","closed_at":"2021-05-19T15:43:00Z","merged_at":"2021-05-19T15:43:00Z","user_id":53313357,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.5714285714285714}}
{"_id":647180853,"title":"Allowlist certain data types to avoid a seg fault.","body":"PiperOrigin-RevId: 356326671\nChange-Id: I23b65b52e93798cb5a6744632d31b0f88c6b6b31","created_at":"2021-05-19T00:26:41Z","closed_at":"2021-05-19T15:42:45Z","merged_at":"2021-05-19T15:42:45Z","user_id":53313357,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.5714285714285714}}
{"_id":647179590,"title":"Allowlist certain data types to avoid a seg fault.","body":"PiperOrigin-RevId: 356326671\nChange-Id: I23b65b52e93798cb5a6744632d31b0f88c6b6b31","created_at":"2021-05-19T00:22:55Z","closed_at":"2021-05-19T15:42:27Z","merged_at":"2021-05-19T15:42:27Z","user_id":53313357,"sentiment":{"polarity":0.21428571428571427,"subjectivity":0.5714285714285714}}
{"_id":647174933,"title":"Fix an invalid address vulnerability in `tf.raw_ops.RaggedBincount`.","body":"PiperOrigin-RevId: 368293153\nChange-Id: I4b4e493d3fd05e7dc55a55de3a041a80a4f275c3","created_at":"2021-05-19T00:09:31Z","closed_at":"2021-05-19T15:42:09Z","merged_at":"2021-05-19T15:42:09Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":647173756,"title":"Fix an invalid address vulnerability in `tf.raw_ops.RaggedBincount`.","body":"PiperOrigin-RevId: 368293153\nChange-Id: I4b4e493d3fd05e7dc55a55de3a041a80a4f275c3","created_at":"2021-05-19T00:06:11Z","closed_at":"2021-05-19T15:41:53Z","merged_at":"2021-05-19T15:41:53Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":647168127,"title":"[INTEL MKL] Use static variables for checking env variable and platform","body":"Refactor mkl_util.h by using static variable for checking\r\n\r\n(1) environment variable (TF_MKL_OPTIMIZE_PRIMITIVE_MEMUSE)\r\n\r\n(2) platform (HW has AVX512 or AVX2, or not)\r\n\r\nThe benefit is performance improvement (check once use multiple times). \r\n\r\nReference PR: https://github.com/tensorflow/tensorflow/pull/48951","created_at":"2021-05-18T23:49:56Z","closed_at":"2021-06-10T00:33:09Z","merged_at":"2021-06-10T00:33:09Z","user_id":29215195,"sentiment":{"polarity":0.5,"subjectivity":0.9}}
{"_id":647162315,"title":"Re-enable Fused BatchNorm + Add + Activation for the backprop","body":"This PR re-enables the fused (BatchNorm + Add + Activation) for the backprop. This is essentially a combination of the two previous PRs + one line change to disable the remapping when XLA is on:\r\n1. Original PR: https://github.com/tensorflow/tensorflow/pull/48063 \r\n2. Fix an issue of dual BN inputs: https://github.com/tensorflow/tensorflow/pull/48893\r\n3. Disable the remapping when XLA is on.\r\n\r\ncc. @nluehr ","created_at":"2021-05-18T23:31:49Z","closed_at":"2021-07-09T06:05:26Z","merged_at":"2021-07-09T06:05:26Z","user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":647129420,"title":"[Pluggable Device] Use default settings when device \"architecture\" field is not set.","body":"For pluggable devices (with device type GPU) in Grappler optimization pass there is currently code which expects the \"architecture\" field to be set. In pluggable interface currently there is no way to set the architecture field to provide these default values. This bypasses the check and sets some dummy values.  \r\n\r\n@penpornk , @reedwm ","created_at":"2021-05-18T22:05:25Z","closed_at":"2021-05-25T01:47:38Z","merged_at":"2021-05-25T01:47:38Z","user_id":453004,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":647083985,"title":"Cherry-pick: Add .zenodo.json for clean automated DOI numbers.","body":"PiperOrigin-RevId: 374474720\nChange-Id: I739c9fc95c03648c50c6a0fc1931308507cdf12c","created_at":"2021-05-18T20:45:01Z","closed_at":"2021-05-18T20:51:28Z","merged_at":"2021-05-18T20:51:28Z","user_id":32465472,"sentiment":{"polarity":0.3666666666666667,"subjectivity":0.7000000000000001}}
{"_id":647083581,"title":"Cherry-pick: Add .zenodo.json for clean automated DOI numbers.","body":"PiperOrigin-RevId: 374474720\nChange-Id: I739c9fc95c03648c50c6a0fc1931308507cdf12c","created_at":"2021-05-18T20:44:20Z","closed_at":"2021-05-18T20:51:11Z","merged_at":"2021-05-18T20:51:11Z","user_id":32465472,"sentiment":{"polarity":0.3666666666666667,"subjectivity":0.7000000000000001}}
{"_id":647082473,"title":"Cherry-pick: Add .zenodo.json for clean automated DOI numbers.","body":"PiperOrigin-RevId: 374474720\nChange-Id: I739c9fc95c03648c50c6a0fc1931308507cdf12c","created_at":"2021-05-18T20:43:27Z","closed_at":"2021-05-18T20:50:46Z","merged_at":"2021-05-18T20:50:46Z","user_id":32465472,"sentiment":{"polarity":0.3666666666666667,"subjectivity":0.7000000000000001}}
{"_id":647081296,"title":"Cherry-pick: Add .zenodo.json for clean automated DOI numbers.","body":"PiperOrigin-RevId: 374474720\nChange-Id: I739c9fc95c03648c50c6a0fc1931308507cdf12c","created_at":"2021-05-18T20:42:17Z","closed_at":"2021-05-18T20:50:29Z","merged_at":"2021-05-18T20:50:29Z","user_id":32465472,"sentiment":{"polarity":0.3666666666666667,"subjectivity":0.7000000000000001}}
{"_id":647080510,"title":"Cherry-pick: Add .zenodo.json for clean automated DOI numbers.","body":"PiperOrigin-RevId: 374474720\nChange-Id: I739c9fc95c03648c50c6a0fc1931308507cdf12c","created_at":"2021-05-18T20:41:06Z","closed_at":"2021-05-18T20:50:15Z","merged_at":"2021-05-18T20:50:15Z","user_id":32465472,"sentiment":{"polarity":0.3666666666666667,"subjectivity":0.7000000000000001}}
{"_id":646382668,"title":"[ROCm] Replacing csrMM with SpMM for ROCm 4.2+ ","body":"Using the generalized SpMM function for Matrix Multiplication for ROCm>=4.2, aligning with the CUDA implementation.\r\nIn conjunction with https://github.com/tensorflow/tensorflow/pull/49305","created_at":"2021-05-18T04:51:42Z","closed_at":"2021-05-26T10:27:03Z","merged_at":"2021-05-26T10:27:03Z","user_id":25489675,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":646377535,"title":"micro: port operator SPACE_TO_DEPTH from lite","body":"For micro, implement the SPACE_TO_DEPTH kernel and test, and add both to the build.\r\n\r\nThis covers PR4 and 5 in the sequence of PRs, outlined in issue #45824, to port operator SPACE_TO_DEPTH from lite to micro.","created_at":"2021-05-18T04:40:35Z","closed_at":"2021-06-01T17:07:12Z","merged_at":null,"user_id":536695,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":646256341,"title":"Upgrade Cudnn Frontend repo to v0.3 and use fallback list for ConvBiasAct ops","body":"- This PR upgrades the Cudnn Frontend repo to v0.3: https://github.com/NVIDIA/cudnn-frontend/releases/tag/v0.3\r\n- The ConvBiasAct ops are updated to support a fallback list to avoid the situation when there is no working engines found in the heuristics list.\r\n- The patch is also updated to be clearer by adding the commit info.\r\n- This PR should be able to replace this pending PR: https://github.com/tensorflow/tensorflow/pull/48906\r\n\r\ncc. @nluehr \r\n","created_at":"2021-05-17T23:35:45Z","closed_at":"2021-06-07T17:48:56Z","merged_at":"2021-06-07T17:48:56Z","user_id":4001424,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":646207516,"title":"TOSA legalization clean up and rewrite for consistency","body":"    1. use llvm::SmallVector<T> if N is not known at compile time, otherwise use llvm::SmallVector<T,N>.\r\n    2. use llvm::SmallVectorImpl<T> as utility function signature.\r\n    3. remove unnecessary ArrayRef<T>() cast and replace it with llvm::makeArrayRef() instead if needed.\r\n    4. rename get1DConstTensor() into getConstTensor()\r\n    5. getConstTensor() is not able to generate TFL::ConstOp now.\r\n    6. getConstTensor() can generates N-D constant now.","created_at":"2021-05-17T21:44:09Z","closed_at":"2021-05-20T17:32:56Z","merged_at":"2021-05-20T17:32:56Z","user_id":67395479,"sentiment":{"polarity":0.3666666666666667,"subjectivity":0.7000000000000001}}
{"_id":645871402,"title":"[ROCm] This change replaces the original assert for detecting multiple","body":"NCCL managers in favor of a warning log message.\r\n\r\nThe original assert was added to protect against a potential deadlock\r\nscenario (that is specific to ROCm) when multiple hosts are emulated\r\nusing a single host.  This can happen in this scenario because two\r\ndifferent NCCL streams can map to the same hardware queue and block\r\neach other from making forward progress.\r\n\r\nThis deadlock scenario seems to only occur in this specific scenario.\r\n\r\nHowever, the assert was preventing other scenarios involving multiple\r\nNCCL managers from executing even though they did not cause a deadlock.\r\n\r\nFor example, TF creates a single eager context (which creates a NCCL manager)\r\nprior to running a model in eager mode.  However, other eager contexts can be\r\ncreated for single use purposes which results in additional NCCL managers being\r\ncreated but not used duing the model run.  In these scenarios, deadlock is\r\nimpossible and thus the creation of multiple NCCL managers should be allowed\r\nto proceed.\r\n\r\nThe specific case which is prompting this change is that in addition to the\r\nregular eager context, an additional context is created by the MLIR constant\r\nfolding optimization to compute the constant at compile time so that it can\r\nbe used as a replacement later on the compilation process.  This additional\r\ncontext is only used once and cannot cause a deadlock.\r\n\r\nThis change enables these cases to execute successfully.\r\n\r\nIn the future, the original assert will have to be reinstated with\r\nadditional logic restricting its execution to the specific scenario(s)\r\nwhich cause the deadlock.","created_at":"2021-05-17T13:35:59Z","closed_at":"2021-07-14T18:39:09Z","merged_at":null,"user_id":70280935,"sentiment":{"polarity":0.1875,"subjectivity":0.375}}
{"_id":645850531,"title":"updated micro_speech readme.md","body":"Small fix to the README in the TFLM micro_speech example. The old `TAGS` was still used instead of `OPTIMIZED_KERNEL_DIR`.\r\n\r\nTested the command to generate the binary on macOS.","created_at":"2021-05-17T13:09:21Z","closed_at":"2021-05-20T16:44:20Z","merged_at":"2021-05-20T16:44:20Z","user_id":45004378,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":645833883,"title":"Fixing LocallyConnected2D and LocallyConnected1D layer Save Model to tf issue","body":"Fixes #48584 and #47689 .\r\n\r\n### My understanding:\r\nThe model save is failing because at the time of saving, `call()` of LocallyConnected2D will be invoked which is not passed with any inputs (None). That is why `compute_output_shape` and `local_conv_matmul` fails and thus `save` fails.\r\n\r\n### Solution that I propose:\r\nWe particularly don't require any input data at the time of saving. So, I am saving the input_shape at the time when LocallyConnected2D instance is `build()` and whenever the parameter `inputs` is `None` in `call()`, I am replacing `inputs` with the dummy tensor with shape `input_shape` which was saved in `build()`.\r\n\r\nAny suggestions on optimisation of solution are welcomed.\r\n\r\ncc @mihaimaruseac , @bhack , @ AdityaKane2001 ","created_at":"2021-05-17T12:46:55Z","closed_at":"2021-05-25T19:43:49Z","merged_at":"2021-05-25T19:43:49Z","user_id":20843596,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":645723681,"title":"[MLIR][DISC] porting dynamic shape related OPs to mhlo and lmhlo dialect","body":"We are porting our MLIR-based dynamic shape compiler to tf community (From OP def, Patttern, to Optimization pass, etc). \r\nThis is the first PR, which including some dynamic shape OPs def in mhlo and lmhlo dialect.  \r\nFor mhlo dialect, we add:\r\n- HLO_RealDynamicSliceOp\r\n- HLO_DynamicPadOp\r\n- HLO_DynamicGatherOp\r\n- HLO_DynamicConvOp \r\n \r\nFor lmhlo dialect, we add:\r\n- LHLO_RealDynamicSliceOp\r\n- LHLO_DynamicBroadcastInDimOp\r\n- LHLO_DynamicGatherOp\r\n- LHLO_DynamicPadOp\r\n- LHLO_DynamicBitcastOp\r\n- LHLO_DynamicConvOp\r\n- LHLO_DynamicIotaOp\r\n- LHLO_DynamicReshapeOp\r\n- LHLO_DotGeneralOp\r\n- LHLO_BitcastOp\r\n\r\nRest Ops to add:\r\n* We will send a separate PR containing LHLO_DynamicWhileOp and LHLO_DynamicCaseOp for control flow.\r\n* We will add a separate dedicated dialect like mhlo_ral, which including D2HOp/H2DOp/DebugPrintOp/TopKOp, etc.\r\n\r\nPrevious discussions：[RFC](https://groups.google.com/a/tensorflow.org/g/mlir/c/_X48poNcbDI/m/jCC8BWIICQAJ), [discussion_1](https://llvm.discourse.group/t/updates-on-mlir-based-dynamic-shape-compiler/2384), [Recording of meeting](https://drive.google.com/file/d/1_uEISlV5MUWdG9faKAdKlCWnPtGjRC-D/view?usp=sharing). ","created_at":"2021-05-17T10:01:11Z","closed_at":"2021-05-21T06:23:22Z","merged_at":"2021-05-21T06:23:22Z","user_id":16014148,"sentiment":{"polarity":0.0,"subjectivity":0.2833333333333333}}
{"_id":645581711,"title":"[nnapi delegate] fix a trivial redundant comment and a typo","body":"remove a redundant comment `// When using NN API ...` and a typo (?) `: -> .`","created_at":"2021-05-17T07:07:29Z","closed_at":"2021-05-18T02:13:32Z","merged_at":"2021-05-18T02:13:32Z","user_id":3395998,"sentiment":{"polarity":-0.2,"subjectivity":0.2}}
{"_id":645352981,"title":"Convert layer weights even within nested Functional models.","body":"Closes #49214","created_at":"2021-05-16T17:49:02Z","closed_at":"2021-05-24T15:35:06Z","merged_at":"2021-05-24T15:35:06Z","user_id":446124,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":645331604,"title":"Added tf_logging for deprecated 'experimental_run_v2' (Tf 1.x)","body":"To resolve PR #49187 , by providing logging messages for  deprecated 'experimental_run_v2'  in Tf 1.x\r\n\r\n","created_at":"2021-05-16T15:19:59Z","closed_at":"2021-07-16T16:33:06Z","merged_at":"2021-07-16T16:33:06Z","user_id":30946547,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":645307688,"title":"Fixed Accuracy to be able to transform dynamically","body":"Fixes #42383\r\n\r\ncc: @mihaimaruseac , @bhack , @SamuelMarks , @nikitamaia ","created_at":"2021-05-16T12:17:33Z","closed_at":"2021-05-17T17:48:57Z","merged_at":"2021-05-17T17:48:57Z","user_id":20843596,"sentiment":{"polarity":0.3,"subjectivity":0.4125}}
{"_id":645299173,"title":"merge from ctr-opt-1.15 to tensorflow master .","body":"Issue:https://github.com/tensorflow/tensorflow/issues/49212","created_at":"2021-05-16T11:02:49Z","closed_at":"2021-06-29T22:21:42Z","merged_at":"2021-06-29T22:21:42Z","user_id":33950866,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":645031840,"title":"VLOG() to Text File","body":"Redirects the output of all active `VLOG()` calls to a text file specified by the environment variable `TF_CPP_VLOG_FILENAME`. If the environment variable is not set, or if it points to a location that cannot be opened for writing, the output continues to `stderr`.\r\n\r\n\r\nAttn: @reedwm.","created_at":"2021-05-14T23:07:20Z","closed_at":"2021-05-20T12:19:38Z","merged_at":"2021-05-20T12:19:38Z","user_id":80296164,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":645001456,"title":"Add missing \"metrics_*.py\" modules to tflite_runtime bazel build script","body":"Fix for #49198 \r\n\r\n## Steps to reproduce \r\n* https://github.com/avroshk/build-tflite-runtime \r\n\r\n## Test fix \r\n* https://github.com/avroshk/build-tflite-runtime/tree/fix ","created_at":"2021-05-14T21:40:07Z","closed_at":"2021-06-03T22:19:17Z","merged_at":"2021-06-03T22:19:17Z","user_id":10255816,"sentiment":{"polarity":-0.2,"subjectivity":0.05}}
{"_id":644986740,"title":"Update python package description to include python 3.9","body":"Update python package description to include python 3.9","created_at":"2021-05-14T21:04:34Z","closed_at":"2021-05-15T23:09:25Z","merged_at":"2021-05-15T23:09:25Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":644658123,"title":"Update the reference of FTRL optimizer","body":"Updated the wording to be consistent across the documentation.","created_at":"2021-05-14T11:48:12Z","closed_at":"2021-05-20T12:12:59Z","merged_at":"2021-05-20T12:12:59Z","user_id":12493208,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":644440919,"title":"[determinism] Add non-sparse softmax/xent GPU-determinism","body":"This PR adds and tests deterministic forward and backward operation of `tf.nn.softmax_cross_entropy_with_logits` when running on a GPU.\r\n\r\nNote that there are changes and enhancements to the existing tests that may be obscured by the restructuring of the test files.\r\n\r\nThanks to @reedwm for providing support and guidance on this PR, including looking into the arithmetic equivalence of the forward and backward operation of the python-level solution.\r\n\r\nNote that a naive implementation of softmax followed by cross-entropy is not as numerically stable as the version implemented here (and in the existing Eigen-based/C-level implementation) in which the log in the cross-entropy function is moved back into the softmax, changing it into a log-softmax and changing the cross-entropy function into a dot-product.  log-softmax does not demand as large dynamic ranges as softmax.\r\n\r\nNote that the following tests do not pass on this deterministic implementation (and have been disabled):\r\n\r\n  * Backprop to logits when there is only a single class (the forward path passes). See `testSingleClass`.\r\n  * Backprop to logits when labels are broadcast (the forward path passes). See `testLabelsBroadcast`.\r\n\r\nI have not yet been able to determine the reason for this, and I don't know if it's because the existing functionality is incorrect or if the new, deterministic functionality is incorrect. For the single class case, for example, it seems to me that the correct gradients should all be zero (which is what the new, deterministic implementation provides). It seems as though the above two use cases  (single class and broadcast labels) would rarely be used; it's not obvious to me what the applications of these use cases would be, and these functionalities are also not documented. I have added TODO comments for me to look into this more deeply. @reedwm, feel free to explore.\r\n\r\nUPDATE: After further investigation, it has been revealed that the gradients only mismatch between the nondeterministic and deterministic implementations when the labels vector is not a valid probability distribution, as required (but not enforced) by the API. See [this comment](https://github.com/tensorflow/tensorflow/pull/49178#discussion_r641061999) for more information.\r\n\r\nThis PR is related to [RFC: Enabling Determinism in TensorFlow](https://github.com/tensorflow/community/blob/master/rfcs/20210119-determinism.md). For status and history of GPU-determinism for this op, see [here](https://github.com/NVIDIA/framework-determinism/blob/master/tensorflow_status.md#softmax-xent).\r\n\r\ncc @sanjoy @nluehr ","created_at":"2021-05-14T04:49:51Z","closed_at":"2021-06-04T15:36:24Z","merged_at":"2021-06-04T15:36:24Z","user_id":33532941,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":644434691,"title":"[ROCm] Hipsparse version of Sparse Add Operation","body":"Bringing hipsparseXcsrgeam to Tensorflow for sparse add operations on ROCm enabled devices. \r\n\r\nBuilds on https://github.com/tensorflow/tensorflow/pull/49108 to flesh out Hipsparse functionality for Tensorflow. ","created_at":"2021-05-14T04:26:39Z","closed_at":"2021-05-24T15:27:16Z","merged_at":"2021-05-24T15:27:16Z","user_id":25489675,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":644336080,"title":"Update Estimator version after estimator final release","body":"Update Estimator version after estimator final release","created_at":"2021-05-13T23:59:03Z","closed_at":"2021-05-14T15:53:20Z","merged_at":"2021-05-14T15:53:19Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":1.0}}
{"_id":644314540,"title":"[Crash fix] Fix cudaMallocAsync crashes.","body":"The first commit fixes #48869. The second commit fixes another follow up crashes when using TF_GPU_ALLOCATOR=cuda_malloc_async.\r\n\r\nThe 2 fixes are:\r\n- The Allocator API have the statistics optional. But the function [BaseGPUDeviceFactory::CreateGPUDevice()](https://github.com/tensorflow/tensorflow/blob/aa08697dcb98135ee39ba00ee08b5c1a28cfde61/tensorflow/core/common_runtime/gpu/gpu_device.cc#L1403) check that they are available.\r\n- Bad handling of the ptr to the compute stream. It is a ptr to the compute stream that is passed, not the compute stream itself.\r\n@sanjoy @chsigg","created_at":"2021-05-13T22:51:35Z","closed_at":"2021-06-17T04:27:02Z","merged_at":"2021-06-17T04:27:01Z","user_id":180987,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":644257148,"title":"Fixing CMake release build for Win32 target","body":"- Issue #47166 raises the concern about a common build failure when building tensorflowlite_c.dll with cmake and msvc;\r\n- The issue is not related to tensorflow source code, instead it is probably related to a compiler (MSVC) issue when handling /O2 code optimization;\r\n- The proposal is to update CMakeLists.txt so it can recognize a MSVC x86 build and update the compiler optimization flags: from /O2 to /O1;","created_at":"2021-05-13T21:10:04Z","closed_at":"2021-06-18T02:54:29Z","merged_at":"2021-06-18T02:54:29Z","user_id":19482569,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":644194403,"title":"Include limits to prevent CI failure for tflite-micro.","body":"This change is upstreaming the fix made with https://github.com/tensorflow/tflite-micro/pull/71/commits/5bd86af7fa8519c463eae03c72733aa479f00e5f\r\n","created_at":"2021-05-13T19:22:56Z","closed_at":"2021-05-14T21:35:26Z","merged_at":"2021-05-14T21:35:26Z","user_id":2789958,"sentiment":{"polarity":-0.3166666666666667,"subjectivity":0.3}}
{"_id":644093891,"title":"Resolves coredump caused by `tf.data.experimental.save` with prefetch","body":"Repeat and prefetch in combination cause the snapshot reader Initialize function to be invoked multiple times.\r\nHowever, there is nothing to prefetch on the very last iteration. This results in Prefetch issuing a CancelThreads call while the snapshot thread is trying to initialize. See https://github.com/tensorflow/tensorflow/blob/6446dda92eaadf11d22377e2354307642d739d73/tensorflow/core/kernels/data/prefetch_dataset_op.cc#L151\r\n\r\nCurrently the dataset reference counting is done asymmetrically. The reference increment happens at the end of initialization, where as the reference decrement\r\nhappens in a destructor. When prefetch cancels the snapshot thread, it errors out of the initialization function. And stops calling the reference increment. However, the reference decrement happens regardless, as it is in the destructor which always is invoked during cleanup. This results in an attempt to decrement the null dataset pointer, and therefore a segmentation fault.\r\nThis is different from all other dataset ops, where the dataset reference increment happens in the constructor and the decrement happens in the destructor, which are symmetric.\r\n\r\nThe solution to this is to ensure that the dataset reference is always initialized to nullptr, and to check for null when decrementing the dataset reference.","created_at":"2021-05-13T16:29:41Z","closed_at":"2021-05-18T01:18:29Z","merged_at":"2021-05-18T01:18:28Z","user_id":690493,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":644090825,"title":"[XLA] Move AMDGPU to not be compiled by default.","body":"It lower the number of files compiled.","created_at":"2021-05-13T16:24:18Z","closed_at":"2021-05-21T20:53:40Z","merged_at":"2021-05-21T20:53:40Z","user_id":180987,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":643718276,"title":"[Intel MKL] Parallelize UnsortedSegmentSum on CPU deivce","body":"`UnsortedSegmentSum` is a single thread op on CPU, here use the Eigen device to parallelize it. It's updated from an old PR #26427 .\r\n\r\nI resubmit this PR because the original one got an internal crash and was reverted. Because I can't get the failure case, I just went through the old code and found a potential rounding issue here: https://github.com/Intel-tensorflow/tensorflow/blob/52a6cfddef9b51b608b4a554b77a10e1522d56ec/tensorflow/core/kernels/segment_reduction_ops.cc#L419-L425\r\n\r\nThis PR uses a simple and reasonable way to balance workload like what TF usually did:\r\n```c++\r\n    // Each output row may contain different size of reduction from inputs,\r\n    // balance the workload to a task group. Each task is output row index.\r\n    const int64 kMaxTaskBlock =\r\n        std::min(num_reductions, (int64)cpu_device.numThreads());\r\n    const int64 kAverTaskSize = (N + kMaxTaskBlock - 1) / kMaxTaskBlock\r\n```\r\nOther parts are the same as the original one.\r\n\r\n\r\nPerformance improvement:\r\n* Origin\r\n```\r\nBM_UnsortedSegmentSum_4096_128_1_ 300315 2279 6983.2MB/s\r\nBM_UnsortedSegmentSum_4096_128_128_ 306408 2268 6844.3MB/s\r\n```\r\n\r\n* Optimized\r\n```\r\nBM_UnsortedSegmentSum_4096_128_1_ 302769 2268 6926.6MB/s\r\nBM_UnsortedSegmentSum_4096_128_128_ 116179 6112 18051.1MB/s\r\n```\r\n\r\nThis patch tries to parallel UnsortSegmentReduction with num_segments, so the performance has no change if num_segments is 1, otherwise it has ~3X improvement in the benchmark.","created_at":"2021-05-13T06:08:27Z","closed_at":"2021-05-13T21:54:26Z","merged_at":"2021-05-13T21:54:26Z","user_id":38638514,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":643231284,"title":"TFLM: Enable FVP target in benchmarks","body":"* Enable FVP target with and without Ethos-U for person detect benchmarks.\r\n* Use uint32 instead of int32 in TicksToMs to avoid overflow.\r\n* Add GetCurrentTicks for FVP target.\r\n* Use Vela converted model in person detect benchmarks for Ethos-U.\r\n\r\nThis is fixing: https://github.com/tensorflow/tensorflow/issues/47071","created_at":"2021-05-12T14:49:22Z","closed_at":"2021-06-01T19:04:06Z","merged_at":"2021-06-01T19:04:06Z","user_id":5793387,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":643227150,"title":"Facilitate building on Windows","body":"Updates to facilitate building on Windows systems, via for instance\r\nGit Bash.\r\n- fix: Changed use of TMPDIR to TEMPDIR in flatbuffers download.\r\n       Variable TMPDIR have special meaning in mktemp, and if set in\r\n       the environment it will be used as template for the second call\r\n       to mktemp. As the temporary directory is removed before the\r\n       second call it would fail if TMPDIR was present in the\r\n       environment.\r\n - Added download of the Windows version of GNU Arm Embedded Toolchain.\r\n - In the cortex_m target files, do not download the GNU Arm Embedded\r\n   Toolchain if a TARGET_TOOLCHAIN_ROOT is set.\r\n\r\nSigned-off-by: Jonas Ohlsson <jonas.ohlsson@arm.com>\r\nThis is fixing: https://github.com/tensorflow/tensorflow/issues/49142","created_at":"2021-05-12T14:44:30Z","closed_at":"2021-05-13T17:36:03Z","merged_at":"2021-05-13T17:36:03Z","user_id":5793387,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":643221412,"title":"Docs: Added documentation to some serialize and deserialize functions in keras","body":"Documentation/Example for:\r\n* tf.keras.optimizers.schedules.serialize\r\n* tf.keras.optimizers.schedules.deserialize\r\n* tf.keras.layers.serialize\r\n* tf.keras.layers.deserialize","created_at":"2021-05-12T14:37:43Z","closed_at":"2021-06-18T02:26:02Z","merged_at":null,"user_id":22333930,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":642901175,"title":"RFC for memory allocation updates in TFLM.","body":"Signed-off-by: Vijay Pawar <vpawar@cadence.com>","created_at":"2021-05-12T07:40:28Z","closed_at":"2021-06-01T17:11:54Z","merged_at":null,"user_id":63011375,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":642878812,"title":"RFC for memory allocation updates in TFLM","body":"RFC for memory allocation updates in TFLM","created_at":"2021-05-12T07:04:37Z","closed_at":"2021-05-20T18:41:24Z","merged_at":null,"user_id":58503018,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":642689629,"title":"Validate that a and b are proper sparse tensors","body":"PiperOrigin-RevId: 373274848\nChange-Id: I3a665ac3a29dee9fb69bdf408a939330cb93ea75","created_at":"2021-05-12T02:31:03Z","closed_at":"2021-05-12T04:29:18Z","merged_at":"2021-05-12T04:29:18Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":642688973,"title":"Ensure validation sticks in banded_triangular_solve_op","body":"PiperOrigin-RevId: 373275480\nChange-Id: Id7717cf275b2d6fdb9441fbbe166d555182d2e79","created_at":"2021-05-12T02:29:47Z","closed_at":"2021-05-12T04:29:32Z","merged_at":"2021-05-12T04:29:32Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":642580766,"title":"[tf.data][cherrypick] Fix snapshot segfault when using repeat and pre…","body":"…fecth\r\n\r\nSimilar to #49121 on `r2.4`. Needed manual cherrypick due to refactoring\r\nafter `r2.5` branch cut","created_at":"2021-05-12T01:03:54Z","closed_at":"2021-05-12T13:26:42Z","merged_at":"2021-05-12T13:26:42Z","user_id":323199,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":642517109,"title":"Transpose Elimination for TF Dialect","body":"Pull out distributed transposes from binary operators in canonicalization pass","created_at":"2021-05-12T00:43:09Z","closed_at":"2021-07-03T20:22:50Z","merged_at":null,"user_id":39188949,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":642385392,"title":"<release 2.4>-<rc2> cherry-pick request: [tf.data] Fix snapshot segfault when using repeat and prefetch.","body":"[tf.data] Fix snapshot segfault when using repeat and prefetch.\r\n\r\nFixes: https://github.com/tensorflow/tensorflow/issues/48903.\r\n\r\n`input_->MakeIterator` refs the dataset in\r\nhttps://github.com/tensorflow/tensorflow/blob/a9cf3a0e4b419630f0183b0cc4e48e0641a62721/tensorflow/core/framework/dataset.cc#L679\r\nSo we don't need to call `input_->Ref()`. Otherwise, if\r\n`SnapshotDatasetV2Op::Dataset::Iterator::Reader::Initialize` returns an error,\r\n`input_->Ref()` isn't called, but the destructor still calls `input_->Unref()`.\r\n\r\nIf `InitializeIterator` returns an error, the iterator_ needs to be reset to\r\nnullptr. Otherwise, if GetNextInternal is called a second time,\r\n`iterator_->GetNext` may dereference a null `input_impl_`.\r\n\r\n@ashahab","created_at":"2021-05-12T00:02:04Z","closed_at":"2021-05-19T15:44:56Z","merged_at":"2021-05-19T15:44:56Z","user_id":1141287,"sentiment":{"polarity":-0.75,"subjectivity":1.0}}
{"_id":642270047,"title":"Validate that a and b are proper sparse tensors","body":"PiperOrigin-RevId: 373248068\nChange-Id: I0a2041a0747901b3f00387a6a3bce9bca6b0b3b1","created_at":"2021-05-11T23:25:05Z","closed_at":"2021-05-12T01:04:59Z","merged_at":"2021-05-12T01:04:59Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.1}}
{"_id":642251865,"title":"Fix heap OOB / undefined behavior in `RaggedTensorToTensor`","body":"PiperOrigin-RevId: 373244623\nChange-Id: I2d6cbbc8c67b238a8815bf58097f7586d87c54f2","created_at":"2021-05-11T23:19:17Z","closed_at":"2021-05-12T01:04:44Z","merged_at":"2021-05-12T01:04:44Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":642243223,"title":"Support all datatypes for Xtensa softmax implementation.","body":" * This allows the micro_speech and person_detect examples to be usable with the optimized xtensa kernels.\r\n * enabled all the softmax kernel test cases for Xtensa (since we have a fallback to the reference kernels).\r\n * The keyword_benchmark specific variant is moved to its own .cc file since that allows the Xtensa linker to properly drop unsused symbols and ensures that the binary size for the keyword_benchmark is unchanged.\r\n    \r\nManually tested that the following tests pass:\r\n```\r\nmake -f tensorflow/lite/micro/tools/make/Makefile TARGET=xtensa TARGET_ARCH=fusion_f1 OPTIMIZED_KERNEL_DIR=xtensa XTENSA_CORE=F1_190305_swupgrade test_person_detection_test_int8 -j8\r\nmake -f tensorflow/lite/micro/tools/make/Makefile TARGET=xtensa TARGET_ARCH=fusion_f1 OPTIMIZED_KERNEL_DIR=xtensa XTENSA_CORE=F1_190305_swupgrade test_micro_speech_test -j8\r\nmake -f tensorflow/lite/micro/tools/make/Makefile TARGET=xtensa TARGET_ARCH=fusion_f1 OPTIMIZED_KERNEL_DIR=xtensa XTENSA_CORE=F1_190305_swupgrade test_kernel_softmax_test -j8\r\n```\r\n\r\nConfirmed that the binary size for the keyword_benchmark is unchanged (relative to tip of tree):\r\n```\r\nmake -f tensorflow/lite/micro/tools/make/Makefile TARGET=xtensa TARGET_ARCH=fusion_f1 OPTIMIZED_KERNEL_DIR=xtensa XTENSA_CORE=F1_190305_swupgrade keyword_benchmark -j8 BUILD_TYPE=release\r\nxt-size tensorflow/lite/micro/tools/make/gen/xtensa_fusion_f1_release/bin/keyword_benchmark\r\n```\r\n\r\nGives:\r\n```\r\n   text    data     bss     dec     hex filename\r\n   70368   41140   24856  136364   214ac tensorflow/lite/micro/tools/make/gen/xtensa_fusion_f1_release/bin/keyword_benchmark\r\n```\r\n\r\nRelated bug: http://b/188581097","created_at":"2021-05-11T23:16:33Z","closed_at":"2021-05-19T20:52:59Z","merged_at":"2021-05-19T20:52:59Z","user_id":2789958,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":642237567,"title":"Update version numbers for TensorFlow 2.5.0","body":"Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 5 -> 5\nPatch: 0 -> 0\n\nNo lingering old version strings \"2.5.0-rc3\" found in source directory \n\"tensorflow/\". Good.\nNo lingering old version strings \"2.5.0rc3\" found in source directory \n\"tensorflow/\". Good.\n```","created_at":"2021-05-11T23:14:46Z","closed_at":"2021-05-12T13:25:47Z","merged_at":"2021-05-12T13:25:47Z","user_id":16359713,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":641418559,"title":"Fix double \"/\" in include in test_helpers.h","body":"Fixes https://github.com/tensorflow/tensorflow/issues/49102","created_at":"2021-05-11T18:57:21Z","closed_at":"2021-05-11T20:39:41Z","merged_at":"2021-05-11T20:39:41Z","user_id":6947391,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":641385322,"title":"Remove unused MicroInterpreter::tensor() API.","body":"The implementation for this function was always allocating a persistent buffer which would mean that calling this function repeatedly would unexpectedly result in an error as a result of running out of space in the arena (basically a memory leak).\r\n\r\nAdditionally, it appears that the function was only being used to test ResetVariableTensor and that test case has also been removed with this change.\r\n\r\nhttp://b/187845286 will be used to add a unit test for ResetVaiableTensor.\r\n","created_at":"2021-05-11T18:46:10Z","closed_at":"2021-05-11T21:09:33Z","merged_at":"2021-05-11T21:09:33Z","user_id":2789958,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":641036001,"title":"[Pluggable Device] Adding more DEVICE_DEFAULT kernels.","body":"The checkin extends the device default kernels to\r\n    - int32 operations\r\n    - certain resource operations\r\n    - TensorArray and TensorList operations\r\n\r\n@penpornk ","created_at":"2021-05-11T16:37:01Z","closed_at":"2021-05-27T07:00:41Z","merged_at":"2021-05-27T07:00:41Z","user_id":453004,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":641012764,"title":"[Pluggable Device] Adding more DEVICE_DEFAULT kernels.","body":"The checkin extends the device default kernels to\r\n    - int32 operations\r\n    - certain resource operations\r\n    - TensorArray and TensorList operations","created_at":"2021-05-11T16:27:52Z","closed_at":"2021-05-11T16:28:52Z","merged_at":null,"user_id":453004,"sentiment":{"polarity":0.5,"subjectivity":0.5}}
{"_id":640858345,"title":"[ROCm] Adding complex types to existing hipsparse functionality ","body":"Added complex support for:\r\n- csrgemm\r\n- csrmm\r\n- csr2coo\r\n- coo2csr\r\n- csrmm2\r\n\r\n@cheshire for review.","created_at":"2021-05-11T15:28:38Z","closed_at":"2021-05-17T23:00:07Z","merged_at":"2021-05-17T23:00:07Z","user_id":25489675,"sentiment":{"polarity":-0.3,"subjectivity":0.4}}
{"_id":639154515,"title":"Add GPU implem of sparse segment reduction ops [resubmission]","body":"This is a resubmission of https://github.com/tensorflow/tensorflow/pull/47974 that includes an additional commit to (attempt to) workaround errors in the Windows CI build.\r\n\r\ncc @nluehr @sanjoy ","created_at":"2021-05-11T03:42:14Z","closed_at":"2021-06-10T07:12:45Z","merged_at":null,"user_id":3979096,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
{"_id":638753057,"title":"[CherryPick:2.5] Dense shape cannot be empty","body":"","created_at":"2021-05-11T00:10:10Z","closed_at":"2021-05-11T02:00:23Z","merged_at":"2021-05-11T02:00:23Z","user_id":53313357,"sentiment":{"polarity":-0.1,"subjectivity":0.5}}
{"_id":638699910,"title":"[CherryPick:2.5]Update jsoncpp to 1.9.4","body":"","created_at":"2021-05-10T23:39:01Z","closed_at":"2021-05-11T15:39:58Z","merged_at":"2021-05-11T15:39:58Z","user_id":53313357,"sentiment":{"polarity":0.0,"subjectivity":0.0}}
